{"version":3,"sources":["webpack:///../src/Introduction.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,sMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,gOAEiD,0BAAYC,WAAW,KAAvB,eAFjD,kFAIA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,WAAc,SACd,QAAU,GAHT,4FAQL,oEACF,iBAAGA,WAAW,IACR,KAAQ,mCADd,0BADE,wIAOF,iBAAGA,WAAW,IACR,KAAQ,6CADd,0BAPE,KAUA,kBACE,GAAM,6BADR,6BAGA,qQAGA,qBAAG,sBAAQA,WAAW,KAAnB,SAAH,uCAAoF,0BAAYA,WAAW,KAAvB,YAApF,gF,oMAMJJ,EAAWK,gBAAiB","file":"component---src-introduction-mdx-2095c1dca23cab4bb0a5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/react-activity-feed/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This library provides components that interact with Stream's APIs.\nIn order to use the components you need to have an account and you need to nest\nthe components that interact with feeds inside the `}<inlineCode parentName=\"p\">{`<StreamApp>`}</inlineCode>{` element which\nyou must configure with the correct API key, app ID and token.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`<StreamApp apiKey={apiKey} appId={appId} token={token}>\n  <FlatFeed />\n</StreamApp>\n`}</code></pre>\n    <p>{`You can find the API key and app ID on the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://getstream.io/dashboard/\"\n      }}>{`dashboard for your app`}</a>{`.\nThe token needs to be generated by your backend and is unique for each user of\nthe website.\nHow to generate it is explained in\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://getstream.io/docs/#frontend_setup\"\n      }}>{`the normal Stream docs`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"current-user-and-defaults\"\n    }}>{`Current user and defaults`}</h3>\n    <p>{`The token contains the user id of the user that uses your application. Because\nof this, all components will automatically use that user id as the default for\nrendering feeds, adding activities and reactions such as comments and likes.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` most top level components like the `}<inlineCode parentName=\"p\">{`FlatFeed`}</inlineCode>{`, come with common\ndefault prop values (e.g. userId, feedGroup, ...).`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}