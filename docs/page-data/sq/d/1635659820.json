{"data":{"doczDb":{"id":"ace00e2b-9c46-5e24-a19a-5ed242ca9c64","db":"{\"config\":{\"title\":\"React Activity Feed\",\"description\":\"React components to create activity and notification feeds\",\"menu\":[{\"name\":\"Introduction\"},{\"name\":\"Top Level Components\"},{\"name\":\"UI Components\"},{\"name\":\"Layout Components\"},{\"name\":\"Streami18n\"},{\"name\":\"Composition Components\"}],\"version\":\"1.2.1\",\"repository\":\"https://github.com/GetStream/react-activity-feed/\",\"native\":false,\"themeConfig\":{},\"separator\":\"-\",\"typescript\":true,\"root\":\"/Users/amin/Stream/react-activity-feed/.docz\",\"dest\":\"/docs\",\"base\":\"/react-activity-feed\",\"editBranch\":\"main\",\"ignore\":[\"PULL_REQUEST_TEMPLATE.md\",\"CHANGELOG.md\",\"README.md\"]},\"entries\":[{\"key\":\"example/README.md\",\"value\":{\"id\":\"20bfc3ff6a860483887b93bf9cf0d135\",\"filepath\":\"example/README.md\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/example/README.md\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/example/README.md\",\"hidden\":false,\"slug\":\"example-readme\",\"route\":\"/example-readme\",\"name\":\"Readme\",\"menu\":\"\",\"headings\":[{\"slug\":\"example-project\",\"depth\":1,\"value\":\"Example project\"},{\"slug\":\"how-to-run\",\"depth\":2,\"value\":\"How to run\"}]}},{\"key\":\"src/Introduction.mdx\",\"value\":{\"route\":\"/\",\"id\":\"7f9b1171d3fc3a898f76ea7ec90d672e\",\"filepath\":\"src/Introduction.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/Introduction.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/Introduction.mdx\",\"hidden\":false,\"slug\":\"src-introduction\",\"name\":\"Introduction\",\"menu\":\"\",\"headings\":[{\"slug\":\"current-user-and-defaults\",\"depth\":3,\"value\":\"Current user and defaults\"}]}},{\"key\":\"src/components/Activity.mdx\",\"value\":{\"route\":\"/components/activity\",\"menu\":\"Top Level Components\",\"id\":\"280ee5f120992079ead763642da310d2\",\"filepath\":\"src/components/Activity.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Activity.mdx\",\"hidden\":false,\"slug\":\"src-components-activity\",\"name\":\"Activity\",\"headings\":[{\"slug\":\"activity\",\"depth\":1,\"value\":\"Activity\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"activity-with-attached-image-and-hashtag\",\"depth\":2,\"value\":\"Activity with attached image and hashtag\"},{\"slug\":\"activity-with-enriched-url\",\"depth\":2,\"value\":\"Activity with enriched URL\"},{\"slug\":\"activity-with-custom-header-and-content-components\",\"depth\":2,\"value\":\"Activity with custom header and content components\"}]}},{\"key\":\"src/components/AttachedActivity.mdx\",\"value\":{\"route\":\"/components/attached-activity\",\"menu\":\"UI Components\",\"id\":\"5bc7e1f93dda935d8cecadf4632dc78b\",\"filepath\":\"src/components/AttachedActivity.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/AttachedActivity.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/AttachedActivity.mdx\",\"hidden\":false,\"slug\":\"src-components-attached-activity\",\"name\":\"Attached activity\",\"headings\":[{\"slug\":\"attachedactivity\",\"depth\":1,\"value\":\"AttachedActivity\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"without-images\",\"depth\":2,\"value\":\"Without images\"}]}},{\"key\":\"src/components/Audio.mdx\",\"value\":{\"route\":\"/components/audio\",\"menu\":\"UI Components\",\"id\":\"af42e97519b869833a171d9666366062\",\"filepath\":\"src/components/Audio.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Audio.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Audio.mdx\",\"hidden\":false,\"slug\":\"src-components-audio\",\"name\":\"Audio\",\"headings\":[{\"slug\":\"audio\",\"depth\":1,\"value\":\"Audio\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/Avatar.mdx\",\"value\":{\"route\":\"/components/avatar\",\"menu\":\"UI Components\",\"id\":\"077aeae1b002d455d727e703158327f8\",\"filepath\":\"src/components/Avatar.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Avatar.mdx\",\"hidden\":false,\"slug\":\"src-components-avatar\",\"name\":\"Avatar\",\"headings\":[{\"slug\":\"avatar\",\"depth\":1,\"value\":\"Avatar\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"without-image-source\",\"depth\":2,\"value\":\"Without Image source\"},{\"slug\":\"with-image-source\",\"depth\":2,\"value\":\"With Image source\"},{\"slug\":\"circle\",\"depth\":2,\"value\":\"Circle\"}]}},{\"key\":\"src/components/AvatarGroup.mdx\",\"value\":{\"route\":\"/components/avatar-group\",\"menu\":\"UI Components\",\"id\":\"45b30b3a5dad9f37871c5450f225b433\",\"filepath\":\"src/components/AvatarGroup.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/AvatarGroup.mdx\",\"hidden\":false,\"slug\":\"src-components-avatar-group\",\"name\":\"Avatar group\",\"headings\":[{\"slug\":\"avatargroup\",\"depth\":1,\"value\":\"AvatarGroup\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"rounded\",\"depth\":2,\"value\":\"Rounded\"}]}},{\"key\":\"src/components/Button.mdx\",\"value\":{\"route\":\"/components/button\",\"menu\":\"UI Components\",\"id\":\"94c04b4e4bd29ffbdeec8755c1a4c04f\",\"filepath\":\"src/components/Button.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Button.mdx\",\"hidden\":false,\"slug\":\"src-components-button\",\"name\":\"Button\",\"headings\":[{\"slug\":\"button\",\"depth\":1,\"value\":\"Button\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"disabled-state\",\"depth\":2,\"value\":\"Disabled state\"},{\"slug\":\"loading-state\",\"depth\":2,\"value\":\"Loading state\"}]}},{\"key\":\"src/components/Card.mdx\",\"value\":{\"route\":\"/components/card\",\"menu\":\"Composition Components\",\"id\":\"32865528793b856e164f6e0f8e9ee31b\",\"filepath\":\"src/components/Card.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Card.mdx\",\"hidden\":false,\"slug\":\"src-components-card\",\"name\":\"Card\",\"headings\":[{\"slug\":\"card\",\"depth\":1,\"value\":\"Card\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/CommentField.mdx\",\"value\":{\"route\":\"/components/comment-field\",\"menu\":\"Composition Components\",\"id\":\"afb5193bbbada60b53458f215144ee21\",\"filepath\":\"src/components/CommentField.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/CommentField.mdx\",\"hidden\":false,\"slug\":\"src-components-comment-field\",\"name\":\"Comment field\",\"headings\":[{\"slug\":\"commentfield\",\"depth\":1,\"value\":\"CommentField\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/CommentItem.mdx\",\"value\":{\"route\":\"/components/comment-item\",\"menu\":\"UI Components\",\"id\":\"4441b713f0549ed7b5a9bb44631fdd8f\",\"filepath\":\"src/components/CommentItem.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentItem.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/CommentItem.mdx\",\"hidden\":false,\"slug\":\"src-components-comment-item\",\"name\":\"Comment item\",\"headings\":[{\"slug\":\"commentitem\",\"depth\":1,\"value\":\"CommentItem\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/CommentList.mdx\",\"value\":{\"route\":\"/components/comment-list\",\"menu\":\"Composition Components\",\"id\":\"cb8f0fb660def63665135a324ed13d6b\",\"filepath\":\"src/components/CommentList.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/CommentList.mdx\",\"hidden\":false,\"slug\":\"src-components-comment-list\",\"name\":\"Comment list\",\"headings\":[{\"slug\":\"commentlist\",\"depth\":1,\"value\":\"CommentList\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"custom-commentitem\",\"depth\":2,\"value\":\"Custom CommentItem\"}]}},{\"key\":\"src/components/DataLabel.mdx\",\"value\":{\"route\":\"/components/data-label\",\"menu\":\"Composition Components\",\"id\":\"46be46b54f41e7c4162f0cae52413a2f\",\"filepath\":\"src/components/DataLabel.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/DataLabel.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/DataLabel.mdx\",\"hidden\":false,\"slug\":\"src-components-data-label\",\"name\":\"Data label\",\"headings\":[{\"slug\":\"datalabel\",\"depth\":1,\"value\":\"DataLabel\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/Dropdown.mdx\",\"value\":{\"route\":\"/components/dropdown\",\"menu\":\"Composition Components\",\"id\":\"2506f2a21909d10cc3d2fbdff59bb96d\",\"filepath\":\"src/components/Dropdown.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Dropdown.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Dropdown.mdx\",\"hidden\":false,\"slug\":\"src-components-dropdown\",\"name\":\"Dropdown\",\"headings\":[{\"slug\":\"dropdown\",\"depth\":1,\"value\":\"Dropdown\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/DropdownPanel.mdx\",\"value\":{\"route\":\"/components/dropdown-panel\",\"menu\":\"Composition Components\",\"id\":\"2eb09acbd69543b1e64070e9103f2690\",\"filepath\":\"src/components/DropdownPanel.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/DropdownPanel.mdx\",\"hidden\":false,\"slug\":\"src-components-dropdown-panel\",\"name\":\"Dropdown panel\",\"headings\":[{\"slug\":\"dropdownpanel\",\"depth\":1,\"value\":\"DropdownPanel\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/EmojiPicker.mdx\",\"value\":{\"route\":\"/components/emoji-picker\",\"menu\":\"UI Components\",\"id\":\"4e313e7ae20381b12878b621a96db66b\",\"filepath\":\"src/components/EmojiPicker.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/EmojiPicker.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/EmojiPicker.mdx\",\"hidden\":false,\"slug\":\"src-components-emoji-picker\",\"name\":\"Emoji picker\",\"headings\":[{\"slug\":\"emojipicker\",\"depth\":1,\"value\":\"EmojiPicker\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/FlatFeed.mdx\",\"value\":{\"route\":\"/components/flat-feed\",\"menu\":\"Top Level Components\",\"id\":\"62f3c7a30a222358e9aabecc380d3260\",\"filepath\":\"src/components/FlatFeed.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/FlatFeed.mdx\",\"hidden\":false,\"slug\":\"src-components-flat-feed\",\"name\":\"Flat feed\",\"headings\":[{\"slug\":\"flatfeed\",\"depth\":1,\"value\":\"FlatFeed\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-custom-activityfooter\",\"depth\":2,\"value\":\"With custom ActivityFooter\"}]}},{\"key\":\"src/components/Flex.mdx\",\"value\":{\"route\":\"/components/flex\",\"menu\":\"Composition Components\",\"id\":\"0028a85b8fad27495fd81d39db585b09\",\"filepath\":\"src/components/Flex.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Flex.mdx\",\"hidden\":false,\"slug\":\"src-components-flex\",\"name\":\"Flex\",\"headings\":[{\"slug\":\"flex\",\"depth\":1,\"value\":\"Flex\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-custom-properties\",\"depth\":2,\"value\":\"With custom properties\"}]}},{\"key\":\"src/components/FollowButton.mdx\",\"value\":{\"route\":\"/components/follow-button\",\"menu\":\"Composition Components\",\"id\":\"ba9193a018c05302bcab4ab73635c079\",\"filepath\":\"src/components/FollowButton.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/FollowButton.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/FollowButton.mdx\",\"hidden\":false,\"slug\":\"src-components-follow-button\",\"name\":\"Follow button\",\"headings\":[{\"slug\":\"followbutton\",\"depth\":1,\"value\":\"FollowButton\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"property-followed-set-to-true\",\"depth\":2,\"value\":\"Property  followed  set to  true\"}]}},{\"key\":\"src/components/Gallery.mdx\",\"value\":{\"route\":\"/components/gallery\",\"menu\":\"UI Components\",\"id\":\"b4451ac2344262d7e047c98c73a9820e\",\"filepath\":\"src/components/Gallery.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Gallery.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Gallery.mdx\",\"hidden\":false,\"slug\":\"src-components-gallery\",\"name\":\"Gallery\",\"headings\":[{\"slug\":\"gallery\",\"depth\":1,\"value\":\"Gallery\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-single-image\",\"depth\":2,\"value\":\"With single image\"},{\"slug\":\"with-two-images\",\"depth\":2,\"value\":\"With two images\"}]}},{\"key\":\"src/components/IconBadge.mdx\",\"value\":{\"route\":\"/components/icon-badge\",\"menu\":\"Composition Components\",\"id\":\"6c21c4b973960beee605626b91e1fa0e\",\"filepath\":\"src/components/IconBadge.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/IconBadge.mdx\",\"hidden\":false,\"slug\":\"src-components-icon-badge\",\"name\":\"Icon badge\",\"headings\":[{\"slug\":\"iconbadge\",\"depth\":1,\"value\":\"IconBadge\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-unseen\",\"depth\":2,\"value\":\"With Unseen\"},{\"slug\":\"with-numbers\",\"depth\":2,\"value\":\"With Numbers\"},{\"slug\":\"custom-icon\",\"depth\":2,\"value\":\"Custom Icon\"},{\"slug\":\"hidden\",\"depth\":2,\"value\":\"Hidden\"}]}},{\"key\":\"src/components/Icons.mdx\",\"value\":{\"route\":\"/components/icons\",\"menu\":\"Composition Components\",\"id\":\"7af9d85f52bf11511d306a63e8a1fc50\",\"filepath\":\"src/components/Icons.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Icons.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Icons.mdx\",\"hidden\":false,\"slug\":\"src-components-icons\",\"name\":\"Icons\",\"headings\":[{\"slug\":\"icons\",\"depth\":1,\"value\":\"Icons\"},{\"slug\":\"avataricon\",\"depth\":2,\"value\":\"AvatarIcon\"},{\"slug\":\"emojiicon\",\"depth\":2,\"value\":\"EmojiIcon\"},{\"slug\":\"reposticon-active\",\"depth\":2,\"value\":\"RepostIcon Active\"},{\"slug\":\"reposticon-inactive\",\"depth\":2,\"value\":\"RepostIcon Inactive\"},{\"slug\":\"commenticon-active\",\"depth\":2,\"value\":\"CommentIcon Active\"},{\"slug\":\"commenticon-inactive\",\"depth\":2,\"value\":\"CommentIcon Inactive\"},{\"slug\":\"thumbsupicon-active\",\"depth\":2,\"value\":\"ThumbsUpIcon Active\"},{\"slug\":\"thumbsupicon-inactive\",\"depth\":2,\"value\":\"ThumbsUpIcon Inactive\"}]}},{\"key\":\"src/components/InfiniteScroll.mdx\",\"value\":{\"route\":\"/components/infinite-scroll\",\"menu\":\"Composition Components\",\"id\":\"5a19292838cd5c0a7fcefb58df45a601\",\"filepath\":\"src/components/InfiniteScroll.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/InfiniteScroll.mdx\",\"hidden\":false,\"slug\":\"src-components-infinite-scroll\",\"name\":\"Infinite scroll\",\"headings\":[{\"slug\":\"infinitescroll\",\"depth\":1,\"value\":\"InfiniteScroll\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/LikeButton.mdx\",\"value\":{\"route\":\"/components/like-button\",\"menu\":\"UI Components\",\"id\":\"f6af2d6249eb262efedec8bc13d18704\",\"filepath\":\"src/components/LikeButton.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/LikeButton.mdx\",\"hidden\":false,\"slug\":\"src-components-like-button\",\"name\":\"Like button\",\"headings\":[{\"slug\":\"likebutton\",\"depth\":1,\"value\":\"LikeButton\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage-with-activity\",\"depth\":2,\"value\":\"Basic usage with Activity\"},{\"slug\":\"basic-usage-with-reactioncomment\",\"depth\":2,\"value\":\"Basic usage with Reaction(comment)\"}]}},{\"key\":\"src/components/Link.mdx\",\"value\":{\"route\":\"/components/link\",\"menu\":\"Composition Components\",\"id\":\"57d08361e0d1727d294a52c5e5530c6e\",\"filepath\":\"src/components/Link.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Link.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Link.mdx\",\"hidden\":false,\"slug\":\"src-components-link\",\"name\":\"Link\",\"headings\":[{\"slug\":\"link\",\"depth\":1,\"value\":\"Link\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/LoadMoreButton.mdx\",\"value\":{\"route\":\"/components/load-more-button\",\"menu\":\"UI Components\",\"id\":\"ae57932161ea05450799907e8d6c3ec3\",\"filepath\":\"src/components/LoadMoreButton.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMoreButton.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/LoadMoreButton.mdx\",\"hidden\":false,\"slug\":\"src-components-load-more-button\",\"name\":\"Load more button\",\"headings\":[{\"slug\":\"loadmorebutton\",\"depth\":1,\"value\":\"LoadMoreButton\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-custom-text\",\"depth\":2,\"value\":\"With custom text\"},{\"slug\":\"refreshing-state\",\"depth\":2,\"value\":\"Refreshing state\"}]}},{\"key\":\"src/components/LoadMorePaginator.mdx\",\"value\":{\"route\":\"/components/load-more-paginator\",\"menu\":\"UI Components\",\"id\":\"9c00320b50c4dbfa6b1244dcfa698092\",\"filepath\":\"src/components/LoadMorePaginator.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/LoadMorePaginator.mdx\",\"hidden\":false,\"slug\":\"src-components-load-more-paginator\",\"name\":\"Load more paginator\",\"headings\":[{\"slug\":\"loadmorepaginator\",\"depth\":1,\"value\":\"LoadMorePaginator\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"reverse\",\"depth\":2,\"value\":\"Reverse\"},{\"slug\":\"refreshing-state\",\"depth\":2,\"value\":\"Refreshing state\"},{\"slug\":\"last-page\",\"depth\":2,\"value\":\"Last page\"}]}},{\"key\":\"src/components/NewActivitiesNotification.mdx\",\"value\":{\"route\":\"/components/new-activities-notification\",\"menu\":\"UI Components\",\"id\":\"af326109d68ad0a47fc496245308c920\",\"filepath\":\"src/components/NewActivitiesNotification.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/NewActivitiesNotification.mdx\",\"hidden\":false,\"slug\":\"src-components-new-activities-notification\",\"name\":\"New activities notification\",\"headings\":[{\"slug\":\"newactivitiesnotification\",\"depth\":1,\"value\":\"NewActivitiesNotification\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"custom-label-function\",\"depth\":2,\"value\":\"Custom label function\"}]}},{\"key\":\"src/components/Notification.mdx\",\"value\":{\"route\":\"/components/notification\",\"menu\":\"Top Level Components\",\"id\":\"927f7e2711ee321142225f6dd9e7cbe8\",\"filepath\":\"src/components/Notification.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Notification.mdx\",\"hidden\":false,\"slug\":\"src-components-notification\",\"name\":\"Notification\",\"headings\":[{\"slug\":\"notification\",\"depth\":1,\"value\":\"Notification\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/NotificationDropdown.mdx\",\"value\":{\"route\":\"/components/notification-dropdown\",\"menu\":\"Top Level Components\",\"id\":\"573ae7494ff473d621c6cea999aea346\",\"filepath\":\"src/components/NotificationDropdown.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationDropdown.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/NotificationDropdown.mdx\",\"hidden\":false,\"slug\":\"src-components-notification-dropdown\",\"name\":\"Notification dropdown\",\"headings\":[{\"slug\":\"notificationdropdown\",\"depth\":1,\"value\":\"NotificationDropdown\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"with-custom-header-footer-icon-and-right-align\",\"depth\":2,\"value\":\"With custom Header, Footer, Icon and right align\"}]}},{\"key\":\"src/components/NotificationFeed.mdx\",\"value\":{\"route\":\"/components/notification-feed\",\"menu\":\"Top Level Components\",\"id\":\"499408a4cc27c32f96f7ae1d2b5f4d0e\",\"filepath\":\"src/components/NotificationFeed.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/NotificationFeed.mdx\",\"hidden\":false,\"slug\":\"src-components-notification-feed\",\"name\":\"Notification feed\",\"headings\":[{\"slug\":\"notificationfeed\",\"depth\":1,\"value\":\"NotificationFeed\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"customized-notification-ui\",\"depth\":2,\"value\":\"Customized Notification UI\"}]}},{\"key\":\"src/components/Panel.mdx\",\"value\":{\"route\":\"/components/panel\",\"menu\":\"Composition Components\",\"id\":\"70b27674eb3303e99331de7807eef1d6\",\"filepath\":\"src/components/Panel.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Panel.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Panel.mdx\",\"hidden\":false,\"slug\":\"src-components-panel\",\"name\":\"Panel\",\"headings\":[{\"slug\":\"panel\",\"depth\":1,\"value\":\"Panel\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"panel-rounded-default\",\"depth\":2,\"value\":\"Panel rounded (default)\"},{\"slug\":\"panel-squared\",\"depth\":2,\"value\":\"Panel squared\"}]}},{\"key\":\"src/components/ReactionIcon.mdx\",\"value\":{\"route\":\"/components/reaction-icon\",\"menu\":\"UI Components\",\"id\":\"f32be33406bdf28ebce4743606a7d849\",\"filepath\":\"src/components/ReactionIcon.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/ReactionIcon.mdx\",\"hidden\":false,\"slug\":\"src-components-reaction-icon\",\"name\":\"Reaction icon\",\"headings\":[{\"slug\":\"reactionicon\",\"depth\":1,\"value\":\"ReactionIcon\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"url-icon\",\"depth\":2,\"value\":\"URL icon\"}]}},{\"key\":\"src/components/ReactionList.mdx\",\"value\":{\"route\":\"/components/reaction-list\",\"menu\":\"Composition Components\",\"id\":\"d952d73f20752374d4f6c2c9fde2c10f\",\"filepath\":\"src/components/ReactionList.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/ReactionList.mdx\",\"hidden\":false,\"slug\":\"src-components-reaction-list\",\"name\":\"Reaction list\",\"headings\":[{\"slug\":\"reactionlist\",\"depth\":1,\"value\":\"ReactionList\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"reverse-order\",\"depth\":2,\"value\":\"Reverse order\"}]}},{\"key\":\"src/components/ReactionToggleIcon.mdx\",\"value\":{\"route\":\"/components/reaction-toggle-icon\",\"menu\":\"UI Components\",\"id\":\"3cf5031bff5d48c32947c04a08fe0eb0\",\"filepath\":\"src/components/ReactionToggleIcon.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/ReactionToggleIcon.mdx\",\"hidden\":false,\"slug\":\"src-components-reaction-toggle-icon\",\"name\":\"Reaction toggle icon\",\"headings\":[{\"slug\":\"reactiontoggleicon\",\"depth\":1,\"value\":\"ReactionToggleIcon\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/RepostButton.mdx\",\"value\":{\"route\":\"/components/repost-button\",\"menu\":\"UI Components\",\"id\":\"a00dd9ebda8ff5b306389c13e3a18b69\",\"filepath\":\"src/components/RepostButton.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/RepostButton.mdx\",\"hidden\":false,\"slug\":\"src-components-repost-button\",\"name\":\"Repost button\",\"headings\":[{\"slug\":\"repostbutton\",\"depth\":1,\"value\":\"RepostButton\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/SinglePost.mdx\",\"value\":{\"route\":\"/components/single-post\",\"menu\":\"Top Level Components\",\"id\":\"ad3a73749f2c9aa1b467ac14be6e62ca\",\"filepath\":\"src/components/SinglePost.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/SinglePost.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/SinglePost.mdx\",\"hidden\":false,\"slug\":\"src-components-single-post\",\"name\":\"Single post\",\"headings\":[{\"slug\":\"singlepost\",\"depth\":1,\"value\":\"SinglePost\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/Textarea.mdx\",\"value\":{\"route\":\"/components/textarea\",\"menu\":\"UI Components\",\"id\":\"2f3e58c6785ed658dd7312820959cbf5\",\"filepath\":\"src/components/Textarea.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Textarea.mdx\",\"hidden\":false,\"slug\":\"src-components-textarea\",\"name\":\"Textarea\",\"headings\":[{\"slug\":\"textarea\",\"depth\":1,\"value\":\"Textarea\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"customized\",\"depth\":2,\"value\":\"Customized\"}]}},{\"key\":\"src/components/TimeHeader.mdx\",\"value\":{\"route\":\"/components/time-header\",\"menu\":\"Composition Components\",\"id\":\"67d6b2106d0ebca0e16660fee0bdff75\",\"filepath\":\"src/components/TimeHeader.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/TimeHeader.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/TimeHeader.mdx\",\"hidden\":false,\"slug\":\"src-components-time-header\",\"name\":\"Time header\",\"headings\":[{\"slug\":\"timeheader\",\"depth\":1,\"value\":\"TimeHeader\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/Title.mdx\",\"value\":{\"route\":\"/components/title\",\"menu\":\"UI Components\",\"id\":\"d9ee959f4e1173ecc4257dff702fad31\",\"filepath\":\"src/components/Title.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Title.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Title.mdx\",\"hidden\":false,\"slug\":\"src-components-title\",\"name\":\"Title\",\"headings\":[{\"slug\":\"title\",\"depth\":1,\"value\":\"Title\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/UserBar.mdx\",\"value\":{\"route\":\"/components/user-bar\",\"menu\":\"UI Components\",\"id\":\"a301da2708acc49edac30f46e2c3990f\",\"filepath\":\"src/components/UserBar.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/UserBar.mdx\",\"hidden\":false,\"slug\":\"src-components-user-bar\",\"name\":\"User bar\",\"headings\":[{\"slug\":\"userbar\",\"depth\":1,\"value\":\"UserBar\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}},{\"key\":\"src/components/Video.mdx\",\"value\":{\"route\":\"/components/video\",\"menu\":\"UI Components\",\"id\":\"5a504a2a792d7a3b2ca600fce313b4a7\",\"filepath\":\"src/components/Video.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/Video.mdx\",\"hidden\":false,\"slug\":\"src-components-video\",\"name\":\"Video\",\"headings\":[{\"slug\":\"video\",\"depth\":1,\"value\":\"Video\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"},{\"slug\":\"mp4-video\",\"depth\":2,\"value\":\"MP4 video\"},{\"slug\":\"mp4-video-as-gif\",\"depth\":2,\"value\":\"MP4 video as GIF\"}]}},{\"key\":\"src/i18n/Streami18n.mdx\",\"value\":{\"route\":\"/i18n\",\"id\":\"7276f37d8c727a729f7fcbf716a9ce00\",\"filepath\":\"src/i18n/Streami18n.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/i18n/Streami18n.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/i18n/Streami18n.mdx\",\"hidden\":false,\"slug\":\"src-i18n-streami18n\",\"name\":\"Streami18n\",\"menu\":\"\",\"headings\":[{\"slug\":\"api\",\"depth\":3,\"value\":\"API\"},{\"slug\":\"docs\",\"depth\":3,\"value\":\"Docs\"},{\"slug\":\"datetime-translations\",\"depth\":2,\"value\":\"Datetime translations\"}]}},{\"key\":\"src/components/StatusUpdateForm/StatusUpdateForm.mdx\",\"value\":{\"route\":\"/components/status-update-form\",\"menu\":\"Top Level Components\",\"id\":\"c0d93fe5548b0d1a4c59cd4fc73d5469\",\"filepath\":\"src/components/StatusUpdateForm/StatusUpdateForm.mdx\",\"fullpath\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.mdx\",\"link\":\"https://github.com/GetStream/react-activity-feed/edit/main/src/components/StatusUpdateForm/StatusUpdateForm.mdx\",\"hidden\":false,\"slug\":\"src-components-status-update-form-status-update-form\",\"name\":\"Status update form\",\"headings\":[{\"slug\":\"statusupdateform\",\"depth\":1,\"value\":\"StatusUpdateForm\"},{\"slug\":\"features\",\"depth\":3,\"value\":\"Features:\"},{\"slug\":\"properties\",\"depth\":2,\"value\":\"Properties\"},{\"slug\":\"basic-usage\",\"depth\":2,\"value\":\"Basic usage\"}]}}],\"props\":[{\"key\":\"src/index.tsx\",\"value\":[{\"tags\":{},\"description\":\"Manages the connection with Stream. Any components that should talk to\\nStream should be a child of this component.\",\"displayName\":\"StreamApp\",\"methods\":[],\"props\":{\"apiKey\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"apiKey\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"appId\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"appId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"token\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"token\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsToken\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"analyticsToken\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"defaultUserData\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"defaultUserData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DefaultUT | undefined\"}},\"errorHandler\":{\"defaultValue\":{\"value\":\"(error, type, detail) => {\\n  console.warn(error, type, detail);\\n}\"},\"description\":\"\",\"name\":\"errorHandler\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ErrorHandler | undefined\"}},\"i18nInstance\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"i18nInstance\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Streami18n | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ClientOptions | undefined\"}},\"sharedFeeds\":{\"defaultValue\":{\"value\":\"[{ feedGroup: 'notification', notify: true, options: { mark_seen: true } }]\"},\"description\":\"\",\"name\":\"sharedFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"SharedFeed[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"StreamAppProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamContextValue<UT, AT, CT, RT, CRT, PT>\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Feed\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"children\":{\"defaultValue\":null,\"description\":\"Override activity delete request\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"FeedContextValue<UT, AT, CT, RT, CRT, PT>\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedManager\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"children\":{\"defaultValue\":null,\"description\":\"Override activity delete request\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsClient\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"analyticsClient\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamAnalytics<UT> | null\"}},\"client\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"client\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamClient<UT, AT, CT, RT, CRT, PT>\"}},\"errorHandler\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"errorHandler\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ErrorHandler\"}},\"user\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"user\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"StreamUser<UT, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>> | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"TranslationProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/TranslationContext.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"TranslationContextValue\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"withTranslationContext\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"Renders a feed of activities, this component is a StreamApp consumer\\nand must always be a child of the `<StreamApp>` element\",\"displayName\":\"FlatFeed\",\"methods\":[],\"props\":{\"Activity\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  Header = DefaultActivityHeader,\\n  HeaderRight,\\n  Content = DefaultActivityContent,\\n  Footer,\\n  Card = DefaultCard,\\n  activity,\\n  icon,\\n  onClickHashtag,\\n  onClickMention,\\n  onClickUser,\\n  Repost = DefaultRepost,\\n  userId,\\n  feedGroup,\\n}: ActivityProps<UT, AT, CT, RT, CRT>) => (\\n  <div className=\\\"raf-activity\\\">\\n    {smartRender<ActivityHeaderProps<UT, AT>>(Header, { HeaderRight, icon, activity, onClickUser })}\\n    {smartRender<ActivityContentProps<UT, AT, CT, RT, CRT>>(Content, {\\n      activity,\\n      Content,\\n      Card,\\n      feedGroup,\\n      Footer,\\n      Header,\\n      HeaderRight,\\n      icon,\\n      onClickHashtag,\\n      onClickMention,\\n      onClickUser,\\n      Repost,\\n      userId,\\n    })}\\n    {smartRender<ActivityFooterProps<UT, AT, CT, RT, CRT>>(Footer, { activity, feedGroup, userId })}\\n  </div>\\n)\"},\"description\":\"The component used to render an activity in the feed\\n#Activity (Component)#\",\"name\":\"Activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":{\"value\":\"(props: NewActivitiesNotificationProps) => (\\n  <NewActivitiesNotification labelPlural=\\\"activities\\\" labelSingle=\\\"activity\\\" {...props} />\\n)\"},\"description\":\"The component to use to render new activities notification\\n#Notifier (NewActivitiesNotification Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":{\"value\":\"({ text }: FeedPlaceholderProps) => {\\n  const { t } = useTranslationContext();\\n\\n  return (\\n    <div className=\\\"raf-feed-placeholder\\\">\\n      <p>{text || t('No data to display...')}</p>\\n    </div>\\n  );\\n}\"},\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"timeline\"},\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string\"}},\"notify\":{\"defaultValue\":{\"value\":false},\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"Renders a Notification feed, this component is a StreamApp consumer and must always be a child of `<StreamApp>`.\",\"displayName\":\"NotificationFeed\",\"methods\":[],\"props\":{\"Group\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  activityGroup,\\n  onMarkAsRead,\\n  onClickUser,\\n  onClickNotification,\\n}: NotificationProps<UT, AT, CT, RT, CRT>) => {\\n  const { t, tDateTimeParser } = useTranslationContext();\\n  const { activities } = activityGroup;\\n  const [latestActivity, ...restOfActivities] = activities;\\n\\n  if (typeof latestActivity.object === 'string') return null;\\n\\n  const lastObject = latestActivity.object as EnrichedActivity;\\n  const lastActor = userOrDefault(latestActivity.actor);\\n  const headerText = getHeaderText(t, activities.length, latestActivity.verb, lastActor.data.name, lastObject.verb);\\n  const handleUserClick = useOnClickUser<UT>(onClickUser);\\n  const handleNotificationClick = onClickNotification\\n    ? (e: SyntheticEvent) => {\\n        e.stopPropagation();\\n        onClickNotification(activityGroup);\\n      }\\n    : undefined;\\n\\n  return (\\n    <div\\n      onClick={handleNotificationClick}\\n      className={`raf-notification ${activityGroup.is_read ? 'raf-notification--read' : ''}`}\\n    >\\n      <Avatar\\n        onClick={handleUserClick?.(lastActor as EnrichedUser<UT>)}\\n        image={lastActor.data.profileImage}\\n        circle\\n        size={30}\\n      />\\n\\n      <div className=\\\"raf-notification__content\\\">\\n        <div className=\\\"raf-notification__header\\\">\\n          <strong>{headerText}</strong>\\n          {!activityGroup.is_read && onMarkAsRead && (\\n            <Dropdown>\\n              <div>\\n                <Link\\n                  onClick={(e) => {\\n                    e.stopPropagation();\\n                    onMarkAsRead(activityGroup);\\n                  }}\\n                >\\n                  Mark&nbsp;as&nbsp;read\\n                </Link>\\n              </div>\\n            </Dropdown>\\n          )}\\n        </div>\\n        <div>\\n          <small>{humanizeTimestamp(latestActivity.time, tDateTimeParser)}</small>\\n        </div>\\n        {latestActivity.verb !== 'follow' && (\\n          <AttachedActivity activity={latestActivity.object as EnrichedActivity<UT, AT, CT, RT, CRT>} />\\n        )}\\n      </div>\\n\\n      <div className=\\\"raf-notification__extra\\\">\\n        {activities.length > 1 && latestActivity.verb === 'follow' && (\\n          <AvatarGroup\\n            onClickUser={onClickUser}\\n            avatarSize={30}\\n            users={getUsers<UT, AT, CT, RT, CRT>(restOfActivities) as Array<EnrichedUser<UT>>}\\n          />\\n        )}\\n      </div>\\n    </div>\\n  );\\n}\"},\"description\":\"the component used to render a grouped notifications in the feed\\n#Notification (Component)#\",\"name\":\"Group\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NotificationProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":{\"value\":\"({\\n  adds = [],\\n  deletes = [],\\n  labelPlural,\\n  labelSingle,\\n  onClick,\\n  labelFunction,\\n}: NewActivitiesNotificationProps) => {\\n  const { t } = useTranslationContext();\\n\\n  const attributes: Attributes = {\\n    addCount: adds.length,\\n    deleteCount: deletes.length,\\n    count: adds.length + deletes.length,\\n    labelPlural,\\n    labelSingle,\\n  };\\n\\n  const defaultLabelFunction: LabelFunction =\\n    labelFunction ??\\n    (({ addCount, labelPlural, labelSingle }) => {\\n      if (!addCount) return null;\\n\\n      if (addCount > 1)\\n        return labelPlural\\n          ? generateText(addCount, labelPlural)\\n          : t('You have {{ notificationCount }} new notifications', {\\n              notificationCount: addCount,\\n            });\\n\\n      return labelSingle ? generateText(1, labelSingle) : t('You have 1 new notification');\\n    });\\n\\n  const label = defaultLabelFunction(attributes);\\n\\n  if (!label) return null;\\n\\n  return (\\n    <button className=\\\"raf-new-activities-notification\\\" type=\\\"button\\\" onClick={onClick}>\\n      <Link>{label}</Link>\\n    </button>\\n  );\\n}\"},\"description\":\"The component to use to render new activities notification\\n#NewActivitiesNotification (Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":{\"value\":\"({ text }: FeedPlaceholderProps) => {\\n  const { t } = useTranslationContext();\\n\\n  return (\\n    <div className=\\\"raf-feed-placeholder\\\">\\n      <p>{text || t('No data to display...')}</p>\\n    </div>\\n  );\\n}\"},\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"notification\"},\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"notify\":{\"defaultValue\":{\"value\":false},\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"Shows the detail of a single activity\",\"displayName\":\"SinglePost\",\"methods\":[],\"props\":{\"Activity\":{\"defaultValue\":null,\"description\":\"The component used to render an activity in the feed\\n#Activity (Component)#\",\"name\":\"Activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":null,\"description\":\"The component to use to render new activities notification\\n#Notifier (NewActivitiesNotification Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":null,\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":null,\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"activityId\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"activityId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/SinglePost.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"StatusUpdateForm\",\"methods\":[],\"props\":{\"activityVerb\":{\"defaultValue\":{\"value\":\"post\"},\"description\":\"The verb that should be used to post the activity, default to \\\"post\\\"\",\"name\":\"activityVerb\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doRequest\":{\"defaultValue\":null,\"description\":\"Override Post request\",\"name\":\"doRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: NewActivity<AT>) => Promise<Activity<AT>>) | undefined\"}},\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or [emoji-mart sets](https://github.com/missive/emoji-mart#datasets)\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be posted to, default to \\\"user\\\"\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"FooterItem\":{\"defaultValue\":null,\"description\":\"Add extra footer item\",\"name\":\"FooterItem\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"Header\":{\"defaultValue\":null,\"description\":\"The header to display\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"modifyActivityData\":{\"defaultValue\":null,\"description\":\"If you want to change something about the activity data that this form\\nsends to stream you can do that with this function. This function gets the\\nactivity data that the form would send normally and should return the\\nmodified activity data that should be posted instead.\\n\\nFor instance, this would add a target field to the activity:\\n\\n```javascript\\n&lt;StatusUpdateForm\\nmodifyActivityData={(data) => ({...data, target: 'Group:1'})}\\n/>\\n```\",\"name\":\"modifyActivityData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: NewActivity<AT>) => NewActivity<AT>) | undefined\"}},\"onSuccess\":{\"defaultValue\":null,\"description\":\"A callback to run after the activity is posted successfully\",\"name\":\"onSuccess\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: Activity<AT>) => void) | undefined\"}},\"trigger\":{\"defaultValue\":null,\"description\":\"An extra trigger for ReactTextareaAutocomplete, this can be used to show\\na menu when typing @xxx or #xxx, in addition to the emoji menu when typing\\n:xxx\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be posted to\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Activity\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the like button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"Card\":{\"defaultValue\":{\"value\":\"({\\n  alt,\\n  images = [],\\n  image: imageURL,\\n  handleClose,\\n  description,\\n  nolink,\\n  url,\\n  title,\\n}: CardProps) => {\\n  const sanitizedURL = useMemo(() => sanitizeURL(url), [url]);\\n  const trimmedURL = useMemo(() => trimURL(sanitizedURL), [sanitizedURL]);\\n\\n  const [{ image }] = !imageURL && images.length ? images : [{ image: imageURL }];\\n\\n  return (\\n    <a\\n      href={nolink ? undefined : sanitizedURL}\\n      target=\\\"blank\\\"\\n      rel=\\\"nofollow noreferrer noopener\\\"\\n      className={`raf-card ${image !== undefined ? 'raf-card--with-image' : ''}`}\\n    >\\n      {handleClose && image ? (\\n        <IconButton onClick={handleClose}>\\n          <CloseIcon />\\n        </IconButton>\\n      ) : null}\\n      {image !== undefined && (\\n        <div className=\\\"raf-card__image\\\">\\n          {image === null ? (\\n            <AvatarIcon preserveAspectRatio=\\\"xMinYMin slice\\\" />\\n          ) : (\\n            <img src={image} alt={alt || title || description || ''} />\\n          )}\\n        </div>\\n      )}\\n      <div className=\\\"raf-card__content\\\">\\n        <div className=\\\"raf-card__content-left\\\">\\n          <p className=\\\"raf-card__title\\\">{title}</p>\\n          <p className=\\\"raf-card__url\\\">{trimmedURL}</p>\\n          <p className=\\\"raf-card__description\\\">{description}</p>\\n        </div>\\n        {handleClose && image === undefined && (\\n          <div className=\\\"raf-card__content-right\\\">\\n            <IconButton onClick={handleClose}>\\n              <CloseIcon />\\n            </IconButton>\\n          </div>\\n        )}\\n      </div>\\n    </a>\\n  );\\n}\"},\"description\":\"Card component to display.\\n#Card (Component)#\",\"name\":\"Card\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<CardProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<CardProps, any> | FunctionComponent<...> | null | undefined\"}},\"Content\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  activity,\\n  Repost,\\n  Card = DefaultCard,\\n  ...props\\n}: ActivityContentProps<UT, AT, CT, RT, CRT>) => {\\n  const {\\n    object,\\n    text = (typeof object === 'string' ? object : '').trim(),\\n    attachments: { og, images = [], files = [] } = {},\\n    verb,\\n    image,\\n  } = activity;\\n\\n  return (\\n    <div className=\\\"raf-activity__content\\\">\\n      {text && (\\n        <div style={{ padding: '8px 16px' }}>\\n          <p>{textRenderer(text, 'raf-activity', props.onClickMention, props.onClickHashtag)}</p>\\n        </div>\\n      )}\\n\\n      {og && (\\n        <div style={{ padding: '8px 16px' }}>\\n          {og.videos ? <Video og={og} /> : og.audios ? <Audio og={og} /> : smartRender(Card, og)}\\n        </div>\\n      )}\\n\\n      {typeof image === 'string' && (\\n        <div style={{ padding: '8px 0' }}>\\n          <Gallery images={[image]} />\\n        </div>\\n      )}\\n\\n      {!!images.length && (\\n        <div style={{ padding: '8px 0' }}>\\n          <Gallery images={images} />\\n        </div>\\n      )}\\n\\n      {!!files.length && (\\n        <ol className=\\\"raf-activity__attachments\\\">\\n          {files.map(({ name, url, mimeType }, i) => (\\n            <a href={sanitizeURL(url)} download key={i}>\\n              <li className=\\\"raf-activity__file\\\">\\n                <FileIcon mimeType={mimeType} filename={name} /> {name}\\n              </li>\\n            </a>\\n          ))}\\n        </ol>\\n      )}\\n\\n      {verb === 'repost' &&\\n        typeof object === 'object' &&\\n        smartRender(Repost, {\\n          ...props,\\n          activity: object as EnrichedActivity<UT, AT, CT, RT, CRT>,\\n        })}\\n    </div>\\n  );\\n}\"},\"description\":\"Content component to display.\\n#ActivityContent (Component)#\",\"name\":\"Content\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed that the activity should be reposted to\\nwhen pressing the RepostButton, e.g. `user` when posting to your own profile\\ndefaults to 'user' feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"Footer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Footer\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityFooterProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Header\":{\"defaultValue\":{\"value\":\"<UT extends DefaultUT = DefaultUT, AT extends DefaultAT = DefaultAT>({\\n  activity,\\n  HeaderRight,\\n  icon,\\n  onClickUser,\\n}: ActivityHeaderProps<UT, AT>) => {\\n  const { tDateTimeParser } = useTranslationContext();\\n\\n  const actor = userOrDefault<UT>(activity.actor);\\n  const handleUserClick = useOnClickUser<UT>(onClickUser);\\n\\n  return (\\n    <div style={{ padding: '8px 16px' }}>\\n      <UserBar\\n        username={actor.data.name}\\n        avatar={actor.data.profileImage}\\n        onClickUser={handleUserClick?.(actor)}\\n        subtitle={HeaderRight ? humanizeTimestamp(activity.time, tDateTimeParser) : undefined}\\n        timestamp={activity.time}\\n        icon={icon}\\n        Right={HeaderRight}\\n      />\\n    </div>\\n  );\\n}\"},\"description\":\"Header component to display.\\n#ActivityHeader (Component)#\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Pick<ActivityProps<UT, AT, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>>, \\\"activity\\\" | \\\"HeaderRight\\\" | \\\"icon\\\" | \\\"onClickUser\\\">, string | ... 1 more ... | (new (props: any) => Component<...>)> | ComponentClass<...> | FunctionComponent<...> | null |...\"}},\"HeaderRight\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"HeaderRight\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClickHashtag\":{\"defaultValue\":null,\"description\":\"Handler for any routing you may do on clicks on Hashtags\",\"name\":\"onClickHashtag\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"WordClickHandler | undefined\"}},\"onClickMention\":{\"defaultValue\":null,\"description\":\"Handler for any routing you may do on clicks on Mentions\",\"name\":\"onClickMention\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"WordClickHandler | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((user: UserOrDefaultReturnType<UT>) => void) | undefined\"}},\"Repost\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  Header = DefaultActivityHeader,\\n  HeaderRight,\\n  Content = DefaultActivityContent,\\n  activity,\\n  icon,\\n  onClickHashtag,\\n  onClickMention,\\n  onClickUser,\\n}: ActivityProps<UT, AT, CT, RT, CRT>) => (\\n  <div className=\\\"raf-card raf-activity raf-activity-repost\\\">\\n    {smartRender<ActivityHeaderProps<UT, AT>>(Header, { HeaderRight, icon, activity, onClickUser })}\\n    {smartRender<ActivityContentProps<UT, AT, CT, RT, CRT>>(Content, { onClickMention, onClickHashtag, activity })}\\n  </div>\\n)\"},\"description\":\"UI component to render original activity within a repost\\n#Repost (Component)#\",\"name\":\"Repost\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to when\\npressing the RepostButton\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Notification\",\"methods\":[],\"props\":{\"activityGroup\":{\"defaultValue\":null,\"description\":\"The activity group to display in this notification\",\"name\":\"activityGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"NotificationActivityEnriched<UT, AT, CT, RT, CRT>\"}},\"onClickNotification\":{\"defaultValue\":null,\"description\":\"Callback to call when clicking on a notification\",\"name\":\"onClickNotification\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activityGroup: NotificationActivityEnriched<UT, AT, CT, RT, CRT>) => void) | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"Callback to call when clicking on a user in the notification\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OnClickUserHandler<UT> | undefined\"}},\"onMarkAsRead\":{\"defaultValue\":null,\"description\":\"Callback to mark a notification as read, if not supplied the dropdown used to mark as read will not be shown\",\"name\":\"onMarkAsRead\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((group: MarkAsGroup) => Promise<void>) | undefined\"}}}},{\"tags\":{},\"description\":\"IMPORTANT: Changing most of the props below doesn't result in the desired effect.\\nThese settings related to feed management should be changed in the `sharedFeeds` prop of the [`StreamApp`](#streamapp) component.\",\"displayName\":\"NotificationDropdown\",\"methods\":[],\"props\":{\"Icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationDropdown.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"width\":{\"defaultValue\":{\"value\":475},\"description\":\"\",\"name\":\"width\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationDropdown.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"Header\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"Footer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Footer\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"right\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"right\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Group\":{\"defaultValue\":null,\"description\":\"the component used to render a grouped notifications in the feed\\n#Notification (Component)#\",\"name\":\"Group\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NotificationProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":null,\"description\":\"The component to use to render new activities notification\\n#NewActivitiesNotification (Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":null,\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":null,\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"notification\"},\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"NewActivitiesNotification\",\"methods\":[],\"props\":{\"adds\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"adds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"any\"}},\"deletes\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"deletes\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"labelFunction\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"labelFunction\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"LabelFunction | undefined\"}},\"labelPlural\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"labelPlural\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelSingle\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"labelSingle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"InfiniteScrollPaginator\",\"methods\":[],\"props\":{\"hasNextPage\":{\"defaultValue\":null,\"description\":\"indicates if there is a next page to load\",\"name\":\"hasNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Loader\":{\"defaultValue\":null,\"description\":\"the loading indicator to use\",\"name\":\"Loader\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"loadNextPage\":{\"defaultValue\":null,\"description\":\"callback to load the next page\",\"name\":\"loadNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}},\"refreshing\":{\"defaultValue\":null,\"description\":\"indicates if there there's currently any refreshing taking place\",\"name\":\"refreshing\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"reverse\":{\"defaultValue\":null,\"description\":\"display the items in opposite order\",\"name\":\"reverse\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"threshold\":{\"defaultValue\":null,\"description\":\"offset from when to start the loadNextPage call\",\"name\":\"threshold\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"useWindow\":{\"defaultValue\":null,\"description\":\"use Window as parent scrolling container\",\"name\":\"useWindow\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"LoadMorePaginator\",\"methods\":[],\"props\":{\"children\":{\"defaultValue\":null,\"description\":\"The paginated content to display\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ReactNode\"}},\"hasNextPage\":{\"defaultValue\":null,\"description\":\"indicates if there is a next page to load\",\"name\":\"hasNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"boolean\"}},\"loadNextPage\":{\"defaultValue\":null,\"description\":\"callback to load the next page\",\"name\":\"loadNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"((event?: MouseEvent<HTMLButtonElement, MouseEvent> | undefined) => void) | undefined\"}},\"LoadMoreButton\":{\"defaultValue\":{\"value\":\"({ onClick, refreshing = false, children }: LoadMoreButtonProps) => {\\n  const { t } = useTranslationContext();\\n\\n  return (\\n    <div className=\\\"raf-load-more-button\\\">\\n      <Button onClick={onClick} buttonStyle=\\\"info\\\" disabled={refreshing} loading={refreshing}>\\n        {children ? children : t('Load more')}\\n      </Button>\\n    </div>\\n  );\\n}\"},\"description\":\"The button the user should click to click to load more\\n#LoadMoreButton (Component)#\",\"name\":\"LoadMoreButton\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMoreButtonProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"refreshing\":{\"defaultValue\":null,\"description\":\"indicates if there there's currently any refreshing taking place\",\"name\":\"refreshing\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"reverse\":{\"defaultValue\":null,\"description\":\"display the items in opposite order\",\"name\":\"reverse\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"ActivityFooter\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be reposted to\\nwhen pressing the RepostButton, e.g. `user` when posting to your own profile\\ndefaults to 'user' feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to when\\npressing the RepostButton\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the like button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"targetFeeds\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ActivityFooter.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"AttachedActivity\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AttachedActivity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"UserBar\",\"methods\":[],\"props\":{\"username\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"username\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"AfterUsername\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"AfterUsername\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"avatar\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"avatar\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"follow\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"follow\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<Element, MouseEvent>) => void) | undefined\"}},\"Right\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Right\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"subtitle\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"subtitle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"time\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"time\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"timestamp\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"timestamp\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | Date | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Card\",\"methods\":[],\"props\":{\"alt\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"alt\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"handleClose\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"handleClose\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((e: SyntheticEvent<Element, Event>) => void) | undefined\"}},\"image\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"image\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | null | undefined\"}},\"nolink\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"nolink\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"title\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"title\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"description\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"description\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"images\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"images\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OGImage[] | undefined\"}},\"url\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"url\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Gallery\",\"methods\":[],\"props\":{\"images\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"images\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Gallery.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Avatar\",\"methods\":[],\"props\":{\"alt\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"alt\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"circle\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"circle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"image\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"image\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<T, MouseEvent>) => void) | undefined\"}},\"rounded\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"rounded\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"size\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"size\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"AvatarGroup\",\"methods\":[],\"props\":{\"avatarSize\":{\"defaultValue\":{\"value\":30},\"description\":\"\",\"name\":\"avatarSize\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"limit\":{\"defaultValue\":{\"value\":5},\"description\":\"\",\"name\":\"limit\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OnClickUserHandler<UT> | undefined\"}},\"users\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"users\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"EnrichedUser<UT>[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Dropdown\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Link\",\"methods\":[],\"props\":{\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Link.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined\"}},\"to\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"to\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Link.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Video\",\"methods\":[],\"props\":{\"og\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"og\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"OGAPIResponse\"}},\"handleClose\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"handleClose\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: SyntheticEvent<Element, Event>) => void) | undefined\"}},\"urlsThatAreGifs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"urlsThatAreGifs\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Audio\",\"methods\":[],\"props\":{\"og\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"og\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Audio.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"OGAPIResponse\"}},\"handleClose\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"handleClose\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Audio.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: SyntheticEvent<Element, Event>) => void) | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"LikeButton\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received from stream that should be liked when pressing the LikeButton.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }) | undefined\"}},\"reaction\":{\"defaultValue\":null,\"description\":\"The reaction received from stream that should be liked when pressing the LikeButton.\",\"name\":\"reaction\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"EnrichedReaction<RT, CRT, UT> | undefined\"}},\"targetFeeds\":{\"defaultValue\":null,\"description\":\"onAddReaction supports targetFeeds that you can use to send a notification to the post owner like [\\\"notification:USER_ID\\\"]\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}},{\"tags\":{},\"description\":\"A repost button ready to be embedded as Activity footer\",\"displayName\":\"RepostButton\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the repost button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be reposted to,\\ne.g. `user` when posting to your own profile\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"repostData\":{\"defaultValue\":null,\"description\":\"Repost reaction custom data\",\"name\":\"repostData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, unknown> | undefined\"}},\"targetFeeds\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"onAddReaction supports targetFeeds that you can use to send a notification to the post owner like [\\\"notification:USER_ID\\\"]\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to, default to current user id\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"ReactionIcon\",\"methods\":[],\"props\":{\"counts\":{\"defaultValue\":null,\"description\":\"The reaction counts for the activity\",\"name\":\"counts\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, number> | undefined\"}},\"height\":{\"defaultValue\":null,\"description\":\"The height of the icon\",\"name\":\"height\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | Element | undefined\"}},\"kind\":{\"defaultValue\":null,\"description\":\"The kind of reaction that this toggles\",\"name\":\"kind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelPlural\":{\"defaultValue\":null,\"description\":\"The label to display if the count is more than one (e.g \\\"likes\\\")\",\"name\":\"labelPlural\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelSingle\":{\"defaultValue\":null,\"description\":\"The label to display if the count is one (e.g \\\"like\\\")\",\"name\":\"labelSingle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onPress\":{\"defaultValue\":null,\"description\":\"Function to call when pressed, usually this should call `onToggleReaction`\",\"name\":\"onPress\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}},\"width\":{\"defaultValue\":null,\"description\":\"The width of the icon\",\"name\":\"width\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"ReactionToggleIcon\",\"methods\":[],\"props\":{\"activeIcon\":{\"defaultValue\":null,\"description\":\"The icon to show when the user has done this reaction (e.g. a filled in heart)\",\"name\":\"activeIcon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string | Element | undefined\"}},\"inactiveIcon\":{\"defaultValue\":null,\"description\":\"The icon to show when the user has not done this reaction yet (e.g. an empty in heart)\",\"name\":\"inactiveIcon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string | Element | undefined\"}},\"own_reactions\":{\"defaultValue\":null,\"description\":\"The map with own reactions\",\"name\":\"own_reactions\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, EnrichedReaction<RT, CRT, UT>[]> | Record<string, CRT> | undefined\"}},\"labelPlural\":{\"defaultValue\":null,\"description\":\"The label to display if the count is more than one (e.g \\\"likes\\\")\",\"name\":\"labelPlural\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelSingle\":{\"defaultValue\":null,\"description\":\"The label to display if the count is one (e.g \\\"like\\\")\",\"name\":\"labelSingle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"width\":{\"defaultValue\":null,\"description\":\"The width of the icon\",\"name\":\"width\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"counts\":{\"defaultValue\":null,\"description\":\"The reaction counts for the activity\",\"name\":\"counts\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, number> | undefined\"}},\"kind\":{\"defaultValue\":null,\"description\":\"The kind of reaction that this toggles\",\"name\":\"kind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onPress\":{\"defaultValue\":null,\"description\":\"Function to call when pressed, usually this should call `onToggleReaction`\",\"name\":\"onPress\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}},\"height\":{\"defaultValue\":null,\"description\":\"The height of the icon\",\"name\":\"height\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"IconBadge\",\"methods\":[],\"props\":{\"hidden\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"hidden\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}},\"showNumber\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"showNumber\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"unseen\":{\"defaultValue\":{\"value\":0},\"description\":\"\",\"name\":\"unseen\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"FollowButton\",\"methods\":[],\"props\":{\"followed\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"followed\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FollowButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FollowButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentList\",\"methods\":[],\"props\":{\"activityId\":{\"defaultValue\":null,\"description\":\"The ID of the activity for which these comments are\",\"name\":\"activityId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"activityPath\":{\"defaultValue\":null,\"description\":\"Only needed for reposted activities where you want to show the comments\\nof the original activity, not of the repost\",\"name\":\"activityPath\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"CommentItem\":{\"defaultValue\":{\"value\":\"<UT extends DefaultUT = DefaultUT, RT extends UR = UR, CRT extends UR = UR>({\\n  comment: { user, created_at, data },\\n  onClickHashtag,\\n  onClickMention,\\n  onClickUser,\\n}: CommentItemProps<UT, RT, CRT>) => {\\n  const { tDateTimeParser } = useTranslationContext();\\n\\n  const handleUserClick = useOnClickUser<UT, SVGSVGElement | HTMLSpanElement>(onClickUser);\\n\\n  return (\\n    <div className=\\\"raf-comment-item\\\">\\n      <Flex a=\\\"flex-start\\\" style={{ padding: '8px 0' }}>\\n        {user?.data.profileImage && (\\n          <Avatar onClick={handleUserClick?.(user)} image={user.data.profileImage} circle size={25} />\\n        )}\\n      </Flex>\\n      <Flex d=\\\"column\\\" style={{ flex: 1, margin: '0 8px' }}>\\n        <div className=\\\"raf-comment-item__content\\\">\\n          <time dateTime={created_at} title={created_at}>\\n            <small>{humanizeTimestamp(created_at, tDateTimeParser)}</small>\\n          </time>\\n          <p>\\n            <span onClick={handleUserClick?.(user)} className=\\\"raf-comment-item__author\\\">\\n              {user?.data.name}\\n            </span>{' '}\\n            {textRenderer(data.text as string, 'raf-comment-item', onClickMention, onClickHashtag)}\\n          </p>\\n        </div>\\n      </Flex>\\n    </div>\\n  );\\n}\"},\"description\":\"The component that should render the comment\\n#CommentItem (Component)#\",\"name\":\"CommentItem\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<CommentItemProps<UT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"oldestToNewest\":{\"defaultValue\":{\"value\":false},\"description\":\"Show and load comments starting with the oldest reaction first, instead\\nof the default where comments are displayed and loaded most recent first.\",\"name\":\"oldestToNewest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"reverseOrder\":{\"defaultValue\":{\"value\":false},\"description\":\"Reverse the order the comments are displayed in.\",\"name\":\"reverseOrder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"ReactionList\",\"methods\":[],\"props\":{\"activityId\":{\"defaultValue\":null,\"description\":\"The ID of the activity for which these reactions are\",\"name\":\"activityId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"Reaction\":{\"defaultValue\":null,\"description\":\"The component that should render the reaction\",\"name\":\"Reaction\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ElementOrComponentOrLiteralType<{ reaction: EnrichedReaction<RT, CRT, UT>; key?: string | undefined; }>\"}},\"reactionKind\":{\"defaultValue\":null,\"description\":\"The reaction kind that you want to display in this list, e.g `like` or `comment`\",\"name\":\"reactionKind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"activityPath\":{\"defaultValue\":null,\"description\":\"Only needed for reposted activities where you want to show the reactions\\nof the original activity, not of the repost\",\"name\":\"activityPath\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"oldestToNewest\":{\"defaultValue\":{\"value\":false},\"description\":\"Show and load reactions starting with the oldest reaction first, instead\\nof the default where reactions are displayed and loaded most recent first.\",\"name\":\"oldestToNewest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"reverseOrder\":{\"defaultValue\":{\"value\":false},\"description\":\"Reverse the order the reactions are displayed in.\",\"name\":\"reverseOrder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentItem\",\"methods\":[],\"props\":{\"comment\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"comment\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentItem.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"EnrichedReaction<RT, CRT, UT>\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentItem.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OnClickUserHandler<UT> | undefined\"}},\"onClickHashtag\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickHashtag\",\"required\":false,\"type\":{\"name\":\"((word: string) => void) | undefined\"}},\"onClickMention\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickMention\",\"required\":false,\"type\":{\"name\":\"((word: string) => void) | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentField\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or emoji-mart sets\\nhttps://github.com/missive/emoji-mart#datasets\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"image\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"image\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"kind\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"kind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onSuccess\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onSuccess\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}},\"placeholder\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"targetFeeds\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"trigger\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Button\",\"methods\":[],\"props\":{\"buttonStyle\":{\"defaultValue\":{\"value\":\"info\"},\"description\":\"\",\"name\":\"buttonStyle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"info\\\" | \\\"primary\\\" | \\\"faded\\\" | undefined\"}},\"disabled\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"disabled\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"loading\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"loading\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined\"}},\"onKeyPress\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onKeyPress\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined\"}},\"type\":{\"defaultValue\":{\"value\":\"button\"},\"description\":\"\",\"name\":\"type\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"button\\\" | \\\"submit\\\" | \\\"reset\\\" | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"DataLabel\",\"methods\":[],\"props\":{\"data\":{\"defaultValue\":{\"value\":\"data\"},\"description\":\"\",\"name\":\"data\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DataLabel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | undefined\"}},\"label\":{\"defaultValue\":{\"value\":\"label\"},\"description\":\"\",\"name\":\"label\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DataLabel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Textarea\",\"methods\":[],\"props\":{\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or emoji-mart sets\\nhttps://github.com/missive/emoji-mart#datasets\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"innerRef\":{\"defaultValue\":null,\"description\":\"A ref that is bound to the textarea element\",\"name\":\"innerRef\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"MutableRefObject<HTMLTextAreaElement | undefined> | ((el: HTMLTextAreaElement) => void) | undefined\"}},\"maxLength\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"maxLength\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onChange\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined\"}},\"onPaste\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onPaste\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined\"}},\"placeholder\":{\"defaultValue\":{\"value\":\"Share your opinion\"},\"description\":\"\",\"name\":\"placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"rows\":{\"defaultValue\":{\"value\":3},\"description\":\"\",\"name\":\"rows\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"trigger\":{\"defaultValue\":{\"value\":\"{}\"},\"description\":\"An extra trigger for ReactTextareaAutocomplete, this can be used to show\\na menu when typing @xxx or #xxx, in addition to the emoji menu when typing :xxx\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"EmojiPicker\",\"methods\":[],\"props\":{\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or emoji-mart sets\\nhttps://github.com/missive/emoji-mart#datasets\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/EmojiPicker.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"onSelect\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onSelect\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/EmojiPicker.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((emoji: EmojiData) => void) | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Title\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":18},\"description\":\"\",\"name\":\"size\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Title.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Panel\",\"methods\":[],\"props\":{\"panelStyle\":{\"defaultValue\":{\"value\":\"rounded\"},\"description\":\"\",\"name\":\"panelStyle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Panel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"rounded\\\" | \\\"square\\\" | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PanelContent\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PanelFooter\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PanelHeading\",\"methods\":[],\"props\":{}}]},{\"key\":\"example/src/App.tsx\",\"value\":[]},{\"key\":\"example/src/index.tsx\",\"value\":[]},{\"key\":\"src/components/Activity.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Activity\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the like button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"Card\":{\"defaultValue\":{\"value\":\"({\\n  alt,\\n  images = [],\\n  image: imageURL,\\n  handleClose,\\n  description,\\n  nolink,\\n  url,\\n  title,\\n}: CardProps) => {\\n  const sanitizedURL = useMemo(() => sanitizeURL(url), [url]);\\n  const trimmedURL = useMemo(() => trimURL(sanitizedURL), [sanitizedURL]);\\n\\n  const [{ image }] = !imageURL && images.length ? images : [{ image: imageURL }];\\n\\n  return (\\n    <a\\n      href={nolink ? undefined : sanitizedURL}\\n      target=\\\"blank\\\"\\n      rel=\\\"nofollow noreferrer noopener\\\"\\n      className={`raf-card ${image !== undefined ? 'raf-card--with-image' : ''}`}\\n    >\\n      {handleClose && image ? (\\n        <IconButton onClick={handleClose}>\\n          <CloseIcon />\\n        </IconButton>\\n      ) : null}\\n      {image !== undefined && (\\n        <div className=\\\"raf-card__image\\\">\\n          {image === null ? (\\n            <AvatarIcon preserveAspectRatio=\\\"xMinYMin slice\\\" />\\n          ) : (\\n            <img src={image} alt={alt || title || description || ''} />\\n          )}\\n        </div>\\n      )}\\n      <div className=\\\"raf-card__content\\\">\\n        <div className=\\\"raf-card__content-left\\\">\\n          <p className=\\\"raf-card__title\\\">{title}</p>\\n          <p className=\\\"raf-card__url\\\">{trimmedURL}</p>\\n          <p className=\\\"raf-card__description\\\">{description}</p>\\n        </div>\\n        {handleClose && image === undefined && (\\n          <div className=\\\"raf-card__content-right\\\">\\n            <IconButton onClick={handleClose}>\\n              <CloseIcon />\\n            </IconButton>\\n          </div>\\n        )}\\n      </div>\\n    </a>\\n  );\\n}\"},\"description\":\"Card component to display.\\n#Card (Component)#\",\"name\":\"Card\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<CardProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<CardProps, any> | FunctionComponent<...> | null | undefined\"}},\"Content\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  activity,\\n  Repost,\\n  Card = DefaultCard,\\n  ...props\\n}: ActivityContentProps<UT, AT, CT, RT, CRT>) => {\\n  const {\\n    object,\\n    text = (typeof object === 'string' ? object : '').trim(),\\n    attachments: { og, images = [], files = [] } = {},\\n    verb,\\n    image,\\n  } = activity;\\n\\n  return (\\n    <div className=\\\"raf-activity__content\\\">\\n      {text && (\\n        <div style={{ padding: '8px 16px' }}>\\n          <p>{textRenderer(text, 'raf-activity', props.onClickMention, props.onClickHashtag)}</p>\\n        </div>\\n      )}\\n\\n      {og && (\\n        <div style={{ padding: '8px 16px' }}>\\n          {og.videos ? <Video og={og} /> : og.audios ? <Audio og={og} /> : smartRender(Card, og)}\\n        </div>\\n      )}\\n\\n      {typeof image === 'string' && (\\n        <div style={{ padding: '8px 0' }}>\\n          <Gallery images={[image]} />\\n        </div>\\n      )}\\n\\n      {!!images.length && (\\n        <div style={{ padding: '8px 0' }}>\\n          <Gallery images={images} />\\n        </div>\\n      )}\\n\\n      {!!files.length && (\\n        <ol className=\\\"raf-activity__attachments\\\">\\n          {files.map(({ name, url, mimeType }, i) => (\\n            <a href={sanitizeURL(url)} download key={i}>\\n              <li className=\\\"raf-activity__file\\\">\\n                <FileIcon mimeType={mimeType} filename={name} /> {name}\\n              </li>\\n            </a>\\n          ))}\\n        </ol>\\n      )}\\n\\n      {verb === 'repost' &&\\n        typeof object === 'object' &&\\n        smartRender(Repost, {\\n          ...props,\\n          activity: object as EnrichedActivity<UT, AT, CT, RT, CRT>,\\n        })}\\n    </div>\\n  );\\n}\"},\"description\":\"Content component to display.\\n#ActivityContent (Component)#\",\"name\":\"Content\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed that the activity should be reposted to\\nwhen pressing the RepostButton, e.g. `user` when posting to your own profile\\ndefaults to 'user' feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"Footer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Footer\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityFooterProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Header\":{\"defaultValue\":{\"value\":\"<UT extends DefaultUT = DefaultUT, AT extends DefaultAT = DefaultAT>({\\n  activity,\\n  HeaderRight,\\n  icon,\\n  onClickUser,\\n}: ActivityHeaderProps<UT, AT>) => {\\n  const { tDateTimeParser } = useTranslationContext();\\n\\n  const actor = userOrDefault<UT>(activity.actor);\\n  const handleUserClick = useOnClickUser<UT>(onClickUser);\\n\\n  return (\\n    <div style={{ padding: '8px 16px' }}>\\n      <UserBar\\n        username={actor.data.name}\\n        avatar={actor.data.profileImage}\\n        onClickUser={handleUserClick?.(actor)}\\n        subtitle={HeaderRight ? humanizeTimestamp(activity.time, tDateTimeParser) : undefined}\\n        timestamp={activity.time}\\n        icon={icon}\\n        Right={HeaderRight}\\n      />\\n    </div>\\n  );\\n}\"},\"description\":\"Header component to display.\\n#ActivityHeader (Component)#\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Pick<ActivityProps<UT, AT, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>>, \\\"activity\\\" | \\\"HeaderRight\\\" | \\\"icon\\\" | \\\"onClickUser\\\">, string | ... 1 more ... | (new (props: any) => Component<...>)> | ComponentClass<...> | FunctionComponent<...> | null |...\"}},\"HeaderRight\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"HeaderRight\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClickHashtag\":{\"defaultValue\":null,\"description\":\"Handler for any routing you may do on clicks on Hashtags\",\"name\":\"onClickHashtag\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"WordClickHandler | undefined\"}},\"onClickMention\":{\"defaultValue\":null,\"description\":\"Handler for any routing you may do on clicks on Mentions\",\"name\":\"onClickMention\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"WordClickHandler | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((user: UserOrDefaultReturnType<UT>) => void) | undefined\"}},\"Repost\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  Header = DefaultActivityHeader,\\n  HeaderRight,\\n  Content = DefaultActivityContent,\\n  activity,\\n  icon,\\n  onClickHashtag,\\n  onClickMention,\\n  onClickUser,\\n}: ActivityProps<UT, AT, CT, RT, CRT>) => (\\n  <div className=\\\"raf-card raf-activity raf-activity-repost\\\">\\n    {smartRender<ActivityHeaderProps<UT, AT>>(Header, { HeaderRight, icon, activity, onClickUser })}\\n    {smartRender<ActivityContentProps<UT, AT, CT, RT, CRT>>(Content, { onClickMention, onClickHashtag, activity })}\\n  </div>\\n)\"},\"description\":\"UI component to render original activity within a repost\\n#Repost (Component)#\",\"name\":\"Repost\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to when\\npressing the RepostButton\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/ActivityContent.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ActivityContent\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the like button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"Card\":{\"defaultValue\":{\"value\":\"({\\n  alt,\\n  images = [],\\n  image: imageURL,\\n  handleClose,\\n  description,\\n  nolink,\\n  url,\\n  title,\\n}: CardProps) => {\\n  const sanitizedURL = useMemo(() => sanitizeURL(url), [url]);\\n  const trimmedURL = useMemo(() => trimURL(sanitizedURL), [sanitizedURL]);\\n\\n  const [{ image }] = !imageURL && images.length ? images : [{ image: imageURL }];\\n\\n  return (\\n    <a\\n      href={nolink ? undefined : sanitizedURL}\\n      target=\\\"blank\\\"\\n      rel=\\\"nofollow noreferrer noopener\\\"\\n      className={`raf-card ${image !== undefined ? 'raf-card--with-image' : ''}`}\\n    >\\n      {handleClose && image ? (\\n        <IconButton onClick={handleClose}>\\n          <CloseIcon />\\n        </IconButton>\\n      ) : null}\\n      {image !== undefined && (\\n        <div className=\\\"raf-card__image\\\">\\n          {image === null ? (\\n            <AvatarIcon preserveAspectRatio=\\\"xMinYMin slice\\\" />\\n          ) : (\\n            <img src={image} alt={alt || title || description || ''} />\\n          )}\\n        </div>\\n      )}\\n      <div className=\\\"raf-card__content\\\">\\n        <div className=\\\"raf-card__content-left\\\">\\n          <p className=\\\"raf-card__title\\\">{title}</p>\\n          <p className=\\\"raf-card__url\\\">{trimmedURL}</p>\\n          <p className=\\\"raf-card__description\\\">{description}</p>\\n        </div>\\n        {handleClose && image === undefined && (\\n          <div className=\\\"raf-card__content-right\\\">\\n            <IconButton onClick={handleClose}>\\n              <CloseIcon />\\n            </IconButton>\\n          </div>\\n        )}\\n      </div>\\n    </a>\\n  );\\n}\"},\"description\":\"Card component to display.\\n#Card (Component)#\",\"name\":\"Card\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<CardProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<CardProps, any> | FunctionComponent<...> | null | undefined\"}},\"Content\":{\"defaultValue\":null,\"description\":\"Content component to display.\\n#ActivityContent (Component)#\",\"name\":\"Content\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed that the activity should be reposted to\\nwhen pressing the RepostButton, e.g. `user` when posting to your own profile\\ndefaults to 'user' feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"Footer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Footer\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityFooterProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Header\":{\"defaultValue\":null,\"description\":\"Header component to display.\\n#ActivityHeader (Component)#\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Pick<ActivityProps<UT, AT, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>>, \\\"activity\\\" | \\\"HeaderRight\\\" | \\\"icon\\\" | \\\"onClickUser\\\">, string | ... 1 more ... | (new (props: any) => Component<...>)> | ComponentClass<...> | FunctionComponent<...> | null |...\"}},\"HeaderRight\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"HeaderRight\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClickHashtag\":{\"defaultValue\":null,\"description\":\"Handler for any routing you may do on clicks on Hashtags\",\"name\":\"onClickHashtag\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"WordClickHandler | undefined\"}},\"onClickMention\":{\"defaultValue\":null,\"description\":\"Handler for any routing you may do on clicks on Mentions\",\"name\":\"onClickMention\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"WordClickHandler | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((user: UserOrDefaultReturnType<UT>) => void) | undefined\"}},\"Repost\":{\"defaultValue\":null,\"description\":\"UI component to render original activity within a repost\\n#Repost (Component)#\",\"name\":\"Repost\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to when\\npressing the RepostButton\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/ActivityFooter.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ActivityFooter\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the like button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be reposted to\\nwhen pressing the RepostButton, e.g. `user` when posting to your own profile\\ndefaults to 'user' feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to when\\npressing the RepostButton\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"targetFeeds\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ActivityFooter.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}}]},{\"key\":\"src/components/ActivityHeader.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ActivityHeader\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the like button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"HeaderRight\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"HeaderRight\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Activity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((user: UserOrDefaultReturnType<UT>) => void) | undefined\"}}}}]},{\"key\":\"src/components/AttachedActivity.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"AttachedActivity\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AttachedActivity.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}}}}]},{\"key\":\"src/components/Audio.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Audio\",\"methods\":[],\"props\":{\"og\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"og\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Audio.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"OGAPIResponse\"}},\"handleClose\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"handleClose\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Audio.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: SyntheticEvent<Element, Event>) => void) | undefined\"}}}}]},{\"key\":\"src/components/Avatar.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Avatar\",\"methods\":[],\"props\":{\"alt\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"alt\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"circle\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"circle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"image\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"image\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<T, MouseEvent>) => void) | undefined\"}},\"rounded\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"rounded\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"size\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"size\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Avatar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}}]},{\"key\":\"src/components/AvatarGroup.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"AvatarGroup\",\"methods\":[],\"props\":{\"avatarSize\":{\"defaultValue\":{\"value\":30},\"description\":\"\",\"name\":\"avatarSize\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"limit\":{\"defaultValue\":{\"value\":5},\"description\":\"\",\"name\":\"limit\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OnClickUserHandler<UT> | undefined\"}},\"users\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"users\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/AvatarGroup.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"EnrichedUser<UT>[] | undefined\"}}}}]},{\"key\":\"src/components/Button.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Button\",\"methods\":[],\"props\":{\"buttonStyle\":{\"defaultValue\":{\"value\":\"info\"},\"description\":\"\",\"name\":\"buttonStyle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"info\\\" | \\\"primary\\\" | \\\"faded\\\" | undefined\"}},\"disabled\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"disabled\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"loading\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"loading\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined\"}},\"onKeyPress\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onKeyPress\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined\"}},\"type\":{\"defaultValue\":{\"value\":\"button\"},\"description\":\"\",\"name\":\"type\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Button.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"button\\\" | \\\"submit\\\" | \\\"reset\\\" | undefined\"}}}}]},{\"key\":\"src/components/Card.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Card\",\"methods\":[],\"props\":{\"alt\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"alt\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"handleClose\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"handleClose\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((e: SyntheticEvent<Element, Event>) => void) | undefined\"}},\"image\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"image\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | null | undefined\"}},\"nolink\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"nolink\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Card.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"title\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"title\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"description\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"description\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"images\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"images\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OGImage[] | undefined\"}},\"url\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"url\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/client.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/CommentField.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentField\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or emoji-mart sets\\nhttps://github.com/missive/emoji-mart#datasets\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"image\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"image\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"kind\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"kind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onSuccess\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onSuccess\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}},\"placeholder\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"targetFeeds\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"trigger\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentField.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}}}}]},{\"key\":\"src/components/CommentItem.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentItem\",\"methods\":[],\"props\":{\"comment\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"comment\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentItem.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"EnrichedReaction<RT, CRT, UT>\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentItem.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OnClickUserHandler<UT> | undefined\"}},\"onClickHashtag\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickHashtag\",\"required\":false,\"type\":{\"name\":\"((word: string) => void) | undefined\"}},\"onClickMention\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickMention\",\"required\":false,\"type\":{\"name\":\"((word: string) => void) | undefined\"}}}}]},{\"key\":\"src/components/CommentList.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentList\",\"methods\":[],\"props\":{\"activityId\":{\"defaultValue\":null,\"description\":\"The ID of the activity for which these comments are\",\"name\":\"activityId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"activityPath\":{\"defaultValue\":null,\"description\":\"Only needed for reposted activities where you want to show the comments\\nof the original activity, not of the repost\",\"name\":\"activityPath\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"CommentItem\":{\"defaultValue\":{\"value\":\"<UT extends DefaultUT = DefaultUT, RT extends UR = UR, CRT extends UR = UR>({\\n  comment: { user, created_at, data },\\n  onClickHashtag,\\n  onClickMention,\\n  onClickUser,\\n}: CommentItemProps<UT, RT, CRT>) => {\\n  const { tDateTimeParser } = useTranslationContext();\\n\\n  const handleUserClick = useOnClickUser<UT, SVGSVGElement | HTMLSpanElement>(onClickUser);\\n\\n  return (\\n    <div className=\\\"raf-comment-item\\\">\\n      <Flex a=\\\"flex-start\\\" style={{ padding: '8px 0' }}>\\n        {user?.data.profileImage && (\\n          <Avatar onClick={handleUserClick?.(user)} image={user.data.profileImage} circle size={25} />\\n        )}\\n      </Flex>\\n      <Flex d=\\\"column\\\" style={{ flex: 1, margin: '0 8px' }}>\\n        <div className=\\\"raf-comment-item__content\\\">\\n          <time dateTime={created_at} title={created_at}>\\n            <small>{humanizeTimestamp(created_at, tDateTimeParser)}</small>\\n          </time>\\n          <p>\\n            <span onClick={handleUserClick?.(user)} className=\\\"raf-comment-item__author\\\">\\n              {user?.data.name}\\n            </span>{' '}\\n            {textRenderer(data.text as string, 'raf-comment-item', onClickMention, onClickHashtag)}\\n          </p>\\n        </div>\\n      </Flex>\\n    </div>\\n  );\\n}\"},\"description\":\"The component that should render the comment\\n#CommentItem (Component)#\",\"name\":\"CommentItem\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<CommentItemProps<UT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"oldestToNewest\":{\"defaultValue\":{\"value\":false},\"description\":\"Show and load comments starting with the oldest reaction first, instead\\nof the default where comments are displayed and loaded most recent first.\",\"name\":\"oldestToNewest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"reverseOrder\":{\"defaultValue\":{\"value\":false},\"description\":\"Reverse the order the comments are displayed in.\",\"name\":\"reverseOrder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/CommentList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/DataLabel.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"DataLabel\",\"methods\":[],\"props\":{\"data\":{\"defaultValue\":{\"value\":\"data\"},\"description\":\"\",\"name\":\"data\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DataLabel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | undefined\"}},\"label\":{\"defaultValue\":{\"value\":\"label\"},\"description\":\"\",\"name\":\"label\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DataLabel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/Dropdown.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Dropdown\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/components/DropdownPanel.tsx\",\"value\":[{\"tags\":{},\"description\":\"`DropdownPanel` is a more advanced component used to create a notification dropdown for instance, it comes with three parts:\\n`Header`, `Content` and `Footer`. The content has a limited height and the `overflow` is set to `scroll`.\",\"displayName\":\"DropdownPanel\",\"methods\":[],\"props\":{\"arrow\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"arrow\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Footer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Footer\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"Header\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"right\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"right\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/EmojiPicker.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"EmojiPicker\",\"methods\":[],\"props\":{\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or emoji-mart sets\\nhttps://github.com/missive/emoji-mart#datasets\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/EmojiPicker.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"onSelect\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onSelect\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/EmojiPicker.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((emoji: EmojiData) => void) | undefined\"}}}}]},{\"key\":\"src/components/FeedPlaceholder.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedPlaceholder\",\"methods\":[],\"props\":{\"text\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"text\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FeedPlaceholder.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/FlatFeed.tsx\",\"value\":[{\"tags\":{},\"description\":\"Renders a feed of activities, this component is a StreamApp consumer\\nand must always be a child of the `<StreamApp>` element\",\"displayName\":\"FlatFeed\",\"methods\":[],\"props\":{\"Activity\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  Header = DefaultActivityHeader,\\n  HeaderRight,\\n  Content = DefaultActivityContent,\\n  Footer,\\n  Card = DefaultCard,\\n  activity,\\n  icon,\\n  onClickHashtag,\\n  onClickMention,\\n  onClickUser,\\n  Repost = DefaultRepost,\\n  userId,\\n  feedGroup,\\n}: ActivityProps<UT, AT, CT, RT, CRT>) => (\\n  <div className=\\\"raf-activity\\\">\\n    {smartRender<ActivityHeaderProps<UT, AT>>(Header, { HeaderRight, icon, activity, onClickUser })}\\n    {smartRender<ActivityContentProps<UT, AT, CT, RT, CRT>>(Content, {\\n      activity,\\n      Content,\\n      Card,\\n      feedGroup,\\n      Footer,\\n      Header,\\n      HeaderRight,\\n      icon,\\n      onClickHashtag,\\n      onClickMention,\\n      onClickUser,\\n      Repost,\\n      userId,\\n    })}\\n    {smartRender<ActivityFooterProps<UT, AT, CT, RT, CRT>>(Footer, { activity, feedGroup, userId })}\\n  </div>\\n)\"},\"description\":\"The component used to render an activity in the feed\\n#Activity (Component)#\",\"name\":\"Activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":{\"value\":\"(props: NewActivitiesNotificationProps) => (\\n  <NewActivitiesNotification labelPlural=\\\"activities\\\" labelSingle=\\\"activity\\\" {...props} />\\n)\"},\"description\":\"The component to use to render new activities notification\\n#Notifier (NewActivitiesNotification Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":{\"value\":\"({ text }: FeedPlaceholderProps) => {\\n  const { t } = useTranslationContext();\\n\\n  return (\\n    <div className=\\\"raf-feed-placeholder\\\">\\n      <p>{text || t('No data to display...')}</p>\\n    </div>\\n  );\\n}\"},\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"timeline\"},\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":{\"value\":false},\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/Flex.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Flex\",\"methods\":[],\"props\":{\"a\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"a\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"end\\\" | \\\"start\\\" | (string & {}) | \\\"-moz-initial\\\" | \\\"inherit\\\" | \\\"initial\\\" | \\\"revert\\\" | \\\"unset\\\" | \\\"stretch\\\" | \\\"center\\\" | \\\"flex-end\\\" | \\\"flex-start\\\" | \\\"normal\\\" | \\\"self-end\\\" | \\\"self-start\\\" | \\\"baseline\\\" | undefined\"}},\"d\":{\"defaultValue\":{\"value\":\"row\"},\"description\":\"\",\"name\":\"d\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"-moz-initial\\\" | \\\"inherit\\\" | \\\"initial\\\" | \\\"revert\\\" | \\\"unset\\\" | \\\"column\\\" | \\\"column-reverse\\\" | \\\"row\\\" | \\\"row-reverse\\\" | undefined\"}},\"j\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"j\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"end\\\" | \\\"left\\\" | \\\"start\\\" | (string & {}) | \\\"-moz-initial\\\" | \\\"inherit\\\" | \\\"initial\\\" | \\\"revert\\\" | \\\"unset\\\" | \\\"space-around\\\" | \\\"space-between\\\" | \\\"space-evenly\\\" | \\\"stretch\\\" | ... 4 more ... | undefined\"}},\"js\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"js\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"right\\\" | \\\"end\\\" | \\\"left\\\" | \\\"start\\\" | (string & {}) | \\\"-moz-initial\\\" | \\\"inherit\\\" | \\\"initial\\\" | \\\"revert\\\" | \\\"unset\\\" | \\\"stretch\\\" | \\\"center\\\" | \\\"flex-end\\\" | \\\"flex-start\\\" | \\\"normal\\\" | ... 4 more ... | undefined\"}},\"style\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"style\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"CSSProperties | undefined\"}},\"w\":{\"defaultValue\":{\"value\":\"nowrap\"},\"description\":\"\",\"name\":\"w\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Flex.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"-moz-initial\\\" | \\\"inherit\\\" | \\\"initial\\\" | \\\"revert\\\" | \\\"unset\\\" | \\\"nowrap\\\" | \\\"wrap\\\" | \\\"wrap-reverse\\\" | undefined\"}}}}]},{\"key\":\"src/components/FollowButton.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"FollowButton\",\"methods\":[],\"props\":{\"followed\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"followed\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FollowButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FollowButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}}}}]},{\"key\":\"src/components/Gallery.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Gallery\",\"methods\":[],\"props\":{\"images\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"images\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Gallery.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}}]},{\"key\":\"src/components/IconBadge.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"IconBadge\",\"methods\":[],\"props\":{\"hidden\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"hidden\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}},\"showNumber\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"showNumber\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"unseen\":{\"defaultValue\":{\"value\":0},\"description\":\"\",\"name\":\"unseen\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/IconBadge.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}}]},{\"key\":\"src/components/Icons.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ThumbsUpIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"RepostIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"CommentIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"AvatarIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"CloseIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"EmojiIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"BellIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"BookmarkIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PlayCircleIcon\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PauseCircleIcon\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/components/InfiniteScroll.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"InfiniteScroll\",\"methods\":[],\"props\":{\"className\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"className\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"element\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"element\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"symbol\\\" | \\\"object\\\" | \\\"a\\\" | \\\"abbr\\\" | \\\"address\\\" | \\\"area\\\" | \\\"article\\\" | \\\"aside\\\" | \\\"audio\\\" | \\\"b\\\" | \\\"base\\\" | \\\"bdi\\\" | \\\"bdo\\\" | \\\"big\\\" | \\\"blockquote\\\" | \\\"body\\\" | \\\"br\\\" | \\\"button\\\" | \\\"canvas\\\" | ... 158 more ... | undefined\"}},\"hasMore\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"hasMore\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"initialLoad\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"initialLoad\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"isLoading\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isLoading\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"isReverse\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"isReverse\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"listenToScroll\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"listenToScroll\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((offset: number, reverseOffset: number, threshold: number) => void) | undefined\"}},\"loader\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"loader\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"loadMore\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"loadMore\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}},\"pageStart\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"pageStart\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"threshold\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"threshold\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"useCapture\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useCapture\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"useWindow\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"useWindow\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScroll.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/InfiniteScrollPaginator.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"InfiniteScrollPaginator\",\"methods\":[],\"props\":{\"hasNextPage\":{\"defaultValue\":null,\"description\":\"indicates if there is a next page to load\",\"name\":\"hasNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Loader\":{\"defaultValue\":null,\"description\":\"the loading indicator to use\",\"name\":\"Loader\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"loadNextPage\":{\"defaultValue\":null,\"description\":\"callback to load the next page\",\"name\":\"loadNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(() => void) | undefined\"}},\"refreshing\":{\"defaultValue\":null,\"description\":\"indicates if there there's currently any refreshing taking place\",\"name\":\"refreshing\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"reverse\":{\"defaultValue\":null,\"description\":\"display the items in opposite order\",\"name\":\"reverse\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"threshold\":{\"defaultValue\":null,\"description\":\"offset from when to start the loadNextPage call\",\"name\":\"threshold\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"useWindow\":{\"defaultValue\":null,\"description\":\"use Window as parent scrolling container\",\"name\":\"useWindow\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/InfiniteScrollPaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/LikeButton.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"LikeButton\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received from stream that should be liked when pressing the LikeButton.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"(Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }) | undefined\"}},\"reaction\":{\"defaultValue\":null,\"description\":\"The reaction received from stream that should be liked when pressing the LikeButton.\",\"name\":\"reaction\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"EnrichedReaction<RT, CRT, UT> | undefined\"}},\"targetFeeds\":{\"defaultValue\":null,\"description\":\"onAddReaction supports targetFeeds that you can use to send a notification to the post owner like [\\\"notification:USER_ID\\\"]\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LikeButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}}]},{\"key\":\"src/components/Link.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Link\",\"methods\":[],\"props\":{\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Link.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined\"}},\"to\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"to\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Link.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/LoadMoreButton.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"LoadMoreButton\",\"methods\":[],\"props\":{\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMoreButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event?: MouseEvent<HTMLButtonElement, MouseEvent> | undefined) => void) | undefined\"}},\"refreshing\":{\"defaultValue\":{\"value\":false},\"description\":\"\",\"name\":\"refreshing\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMoreButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/LoadMorePaginator.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"LoadMorePaginator\",\"methods\":[],\"props\":{\"children\":{\"defaultValue\":null,\"description\":\"The paginated content to display\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ReactNode\"}},\"hasNextPage\":{\"defaultValue\":null,\"description\":\"indicates if there is a next page to load\",\"name\":\"hasNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"boolean\"}},\"loadNextPage\":{\"defaultValue\":null,\"description\":\"callback to load the next page\",\"name\":\"loadNextPage\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"((event?: MouseEvent<HTMLButtonElement, MouseEvent> | undefined) => void) | undefined\"}},\"LoadMoreButton\":{\"defaultValue\":{\"value\":\"({ onClick, refreshing = false, children }: LoadMoreButtonProps) => {\\n  const { t } = useTranslationContext();\\n\\n  return (\\n    <div className=\\\"raf-load-more-button\\\">\\n      <Button onClick={onClick} buttonStyle=\\\"info\\\" disabled={refreshing} loading={refreshing}>\\n        {children ? children : t('Load more')}\\n      </Button>\\n    </div>\\n  );\\n}\"},\"description\":\"The button the user should click to click to load more\\n#LoadMoreButton (Component)#\",\"name\":\"LoadMoreButton\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMoreButtonProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"refreshing\":{\"defaultValue\":null,\"description\":\"indicates if there there's currently any refreshing taking place\",\"name\":\"refreshing\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"reverse\":{\"defaultValue\":null,\"description\":\"display the items in opposite order\",\"name\":\"reverse\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/LoadMorePaginator.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/NewActivitiesNotification.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"NewActivitiesNotification\",\"methods\":[],\"props\":{\"adds\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"adds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"any\"}},\"deletes\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"\",\"name\":\"deletes\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"labelFunction\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"labelFunction\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"LabelFunction | undefined\"}},\"labelPlural\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"labelPlural\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelSingle\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"labelSingle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClick\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClick\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NewActivitiesNotification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined\"}}}}]},{\"key\":\"src/components/Notification.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Notification\",\"methods\":[],\"props\":{\"activityGroup\":{\"defaultValue\":null,\"description\":\"The activity group to display in this notification\",\"name\":\"activityGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"NotificationActivityEnriched<UT, AT, CT, RT, CRT>\"}},\"onClickNotification\":{\"defaultValue\":null,\"description\":\"Callback to call when clicking on a notification\",\"name\":\"onClickNotification\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activityGroup: NotificationActivityEnriched<UT, AT, CT, RT, CRT>) => void) | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"Callback to call when clicking on a user in the notification\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"OnClickUserHandler<UT> | undefined\"}},\"onMarkAsRead\":{\"defaultValue\":null,\"description\":\"Callback to mark a notification as read, if not supplied the dropdown used to mark as read will not be shown\",\"name\":\"onMarkAsRead\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Notification.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((group: MarkAsGroup) => Promise<void>) | undefined\"}}}}]},{\"key\":\"src/components/NotificationDropdown.tsx\",\"value\":[{\"tags\":{},\"description\":\"IMPORTANT: Changing most of the props below doesn't result in the desired effect.\\nThese settings related to feed management should be changed in the `sharedFeeds` prop of the [`StreamApp`](#streamapp) component.\",\"displayName\":\"NotificationDropdown\",\"methods\":[],\"props\":{\"Icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationDropdown.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"width\":{\"defaultValue\":{\"value\":475},\"description\":\"\",\"name\":\"width\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationDropdown.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"Header\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"Footer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Footer\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"right\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"right\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/DropdownPanel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Group\":{\"defaultValue\":null,\"description\":\"the component used to render a grouped notifications in the feed\\n#Notification (Component)#\",\"name\":\"Group\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NotificationProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":null,\"description\":\"The component to use to render new activities notification\\n#NewActivitiesNotification (Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":null,\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":null,\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"notification\"},\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/NotificationFeed.tsx\",\"value\":[{\"tags\":{},\"description\":\"Renders a Notification feed, this component is a StreamApp consumer and must always be a child of `<StreamApp>`.\",\"displayName\":\"NotificationFeed\",\"methods\":[],\"props\":{\"Group\":{\"defaultValue\":{\"value\":\"<\\n  UT extends DefaultUT = DefaultUT,\\n  AT extends DefaultAT = DefaultAT,\\n  CT extends UR = UR,\\n  RT extends UR = UR,\\n  CRT extends UR = UR\\n>({\\n  activityGroup,\\n  onMarkAsRead,\\n  onClickUser,\\n  onClickNotification,\\n}: NotificationProps<UT, AT, CT, RT, CRT>) => {\\n  const { t, tDateTimeParser } = useTranslationContext();\\n  const { activities } = activityGroup;\\n  const [latestActivity, ...restOfActivities] = activities;\\n\\n  if (typeof latestActivity.object === 'string') return null;\\n\\n  const lastObject = latestActivity.object as EnrichedActivity;\\n  const lastActor = userOrDefault(latestActivity.actor);\\n  const headerText = getHeaderText(t, activities.length, latestActivity.verb, lastActor.data.name, lastObject.verb);\\n  const handleUserClick = useOnClickUser<UT>(onClickUser);\\n  const handleNotificationClick = onClickNotification\\n    ? (e: SyntheticEvent) => {\\n        e.stopPropagation();\\n        onClickNotification(activityGroup);\\n      }\\n    : undefined;\\n\\n  return (\\n    <div\\n      onClick={handleNotificationClick}\\n      className={`raf-notification ${activityGroup.is_read ? 'raf-notification--read' : ''}`}\\n    >\\n      <Avatar\\n        onClick={handleUserClick?.(lastActor as EnrichedUser<UT>)}\\n        image={lastActor.data.profileImage}\\n        circle\\n        size={30}\\n      />\\n\\n      <div className=\\\"raf-notification__content\\\">\\n        <div className=\\\"raf-notification__header\\\">\\n          <strong>{headerText}</strong>\\n          {!activityGroup.is_read && onMarkAsRead && (\\n            <Dropdown>\\n              <div>\\n                <Link\\n                  onClick={(e) => {\\n                    e.stopPropagation();\\n                    onMarkAsRead(activityGroup);\\n                  }}\\n                >\\n                  Mark&nbsp;as&nbsp;read\\n                </Link>\\n              </div>\\n            </Dropdown>\\n          )}\\n        </div>\\n        <div>\\n          <small>{humanizeTimestamp(latestActivity.time, tDateTimeParser)}</small>\\n        </div>\\n        {latestActivity.verb !== 'follow' && (\\n          <AttachedActivity activity={latestActivity.object as EnrichedActivity<UT, AT, CT, RT, CRT>} />\\n        )}\\n      </div>\\n\\n      <div className=\\\"raf-notification__extra\\\">\\n        {activities.length > 1 && latestActivity.verb === 'follow' && (\\n          <AvatarGroup\\n            onClickUser={onClickUser}\\n            avatarSize={30}\\n            users={getUsers<UT, AT, CT, RT, CRT>(restOfActivities) as Array<EnrichedUser<UT>>}\\n          />\\n        )}\\n      </div>\\n    </div>\\n  );\\n}\"},\"description\":\"the component used to render a grouped notifications in the feed\\n#Notification (Component)#\",\"name\":\"Group\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NotificationProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":{\"value\":\"({\\n  adds = [],\\n  deletes = [],\\n  labelPlural,\\n  labelSingle,\\n  onClick,\\n  labelFunction,\\n}: NewActivitiesNotificationProps) => {\\n  const { t } = useTranslationContext();\\n\\n  const attributes: Attributes = {\\n    addCount: adds.length,\\n    deleteCount: deletes.length,\\n    count: adds.length + deletes.length,\\n    labelPlural,\\n    labelSingle,\\n  };\\n\\n  const defaultLabelFunction: LabelFunction =\\n    labelFunction ??\\n    (({ addCount, labelPlural, labelSingle }) => {\\n      if (!addCount) return null;\\n\\n      if (addCount > 1)\\n        return labelPlural\\n          ? generateText(addCount, labelPlural)\\n          : t('You have {{ notificationCount }} new notifications', {\\n              notificationCount: addCount,\\n            });\\n\\n      return labelSingle ? generateText(1, labelSingle) : t('You have 1 new notification');\\n    });\\n\\n  const label = defaultLabelFunction(attributes);\\n\\n  if (!label) return null;\\n\\n  return (\\n    <button className=\\\"raf-new-activities-notification\\\" type=\\\"button\\\" onClick={onClick}>\\n      <Link>{label}</Link>\\n    </button>\\n  );\\n}\"},\"description\":\"The component to use to render new activities notification\\n#NewActivitiesNotification (Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":{\"value\":\"({ text }: FeedPlaceholderProps) => {\\n  const { t } = useTranslationContext();\\n\\n  return (\\n    <div className=\\\"raf-feed-placeholder\\\">\\n      <p>{text || t('No data to display...')}</p>\\n    </div>\\n  );\\n}\"},\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/NotificationFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"notification\"},\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":{\"value\":false},\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/Panel.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Panel\",\"methods\":[],\"props\":{\"panelStyle\":{\"defaultValue\":{\"value\":\"rounded\"},\"description\":\"\",\"name\":\"panelStyle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Panel.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"\\\"square\\\" | \\\"rounded\\\" | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PanelContent\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PanelFooter\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"PanelHeading\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/components/ReactionIcon.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ReactionIcon\",\"methods\":[],\"props\":{\"counts\":{\"defaultValue\":null,\"description\":\"The reaction counts for the activity\",\"name\":\"counts\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, number> | undefined\"}},\"height\":{\"defaultValue\":null,\"description\":\"The height of the icon\",\"name\":\"height\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | Element | undefined\"}},\"kind\":{\"defaultValue\":null,\"description\":\"The kind of reaction that this toggles\",\"name\":\"kind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelPlural\":{\"defaultValue\":null,\"description\":\"The label to display if the count is more than one (e.g \\\"likes\\\")\",\"name\":\"labelPlural\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelSingle\":{\"defaultValue\":null,\"description\":\"The label to display if the count is one (e.g \\\"like\\\")\",\"name\":\"labelSingle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onPress\":{\"defaultValue\":null,\"description\":\"Function to call when pressed, usually this should call `onToggleReaction`\",\"name\":\"onPress\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}},\"width\":{\"defaultValue\":null,\"description\":\"The width of the icon\",\"name\":\"width\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}}]},{\"key\":\"src/components/ReactionList.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ReactionList\",\"methods\":[],\"props\":{\"activityId\":{\"defaultValue\":null,\"description\":\"The ID of the activity for which these reactions are\",\"name\":\"activityId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"Reaction\":{\"defaultValue\":null,\"description\":\"The component that should render the reaction\",\"name\":\"Reaction\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ElementOrComponentOrLiteralType<{ reaction: EnrichedReaction<RT, CRT, UT>; key?: string | undefined; }>\"}},\"reactionKind\":{\"defaultValue\":null,\"description\":\"The reaction kind that you want to display in this list, e.g `like` or `comment`\",\"name\":\"reactionKind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"activityPath\":{\"defaultValue\":null,\"description\":\"Only needed for reposted activities where you want to show the reactions\\nof the original activity, not of the repost\",\"name\":\"activityPath\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"oldestToNewest\":{\"defaultValue\":{\"value\":false},\"description\":\"Show and load reactions starting with the oldest reaction first, instead\\nof the default where reactions are displayed and loaded most recent first.\",\"name\":\"oldestToNewest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"Paginator\":{\"defaultValue\":{\"value\":\"({\\n  LoadMoreButton = DefaultLoadMoreButton,\\n  children,\\n  reverse,\\n  hasNextPage,\\n  refreshing,\\n  loadNextPage,\\n}: LoadMorePaginatorProps) => (\\n  <>\\n    {!reverse && children}\\n    {hasNextPage && smartRender<LoadMoreButtonProps>(LoadMoreButton, { refreshing, onClick: loadNextPage })}\\n    {reverse && children}\\n  </>\\n)\"},\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"reverseOrder\":{\"defaultValue\":{\"value\":false},\"description\":\"Reverse the order the reactions are displayed in.\",\"name\":\"reverseOrder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionList.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}}}}]},{\"key\":\"src/components/ReactionToggleIcon.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"ReactionToggleIcon\",\"methods\":[],\"props\":{\"activeIcon\":{\"defaultValue\":null,\"description\":\"The icon to show when the user has done this reaction (e.g. a filled in heart)\",\"name\":\"activeIcon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string | Element | undefined\"}},\"inactiveIcon\":{\"defaultValue\":null,\"description\":\"The icon to show when the user has not done this reaction yet (e.g. an empty in heart)\",\"name\":\"inactiveIcon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string | Element | undefined\"}},\"own_reactions\":{\"defaultValue\":null,\"description\":\"The map with own reactions\",\"name\":\"own_reactions\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionToggleIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, EnrichedReaction<RT, CRT, UT>[]> | Record<string, CRT> | undefined\"}},\"labelPlural\":{\"defaultValue\":null,\"description\":\"The label to display if the count is more than one (e.g \\\"likes\\\")\",\"name\":\"labelPlural\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"labelSingle\":{\"defaultValue\":null,\"description\":\"The label to display if the count is one (e.g \\\"like\\\")\",\"name\":\"labelSingle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"width\":{\"defaultValue\":null,\"description\":\"The width of the icon\",\"name\":\"width\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"counts\":{\"defaultValue\":null,\"description\":\"The reaction counts for the activity\",\"name\":\"counts\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, number> | undefined\"}},\"kind\":{\"defaultValue\":null,\"description\":\"The kind of reaction that this toggles\",\"name\":\"kind\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onPress\":{\"defaultValue\":null,\"description\":\"Function to call when pressed, usually this should call `onToggleReaction`\",\"name\":\"onPress\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined\"}},\"height\":{\"defaultValue\":null,\"description\":\"The height of the icon\",\"name\":\"height\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/ReactionIcon.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}}]},{\"key\":\"src/components/RepostButton.tsx\",\"value\":[{\"tags\":{},\"description\":\"A repost button ready to be embedded as Activity footer\",\"displayName\":\"RepostButton\",\"methods\":[],\"props\":{\"activity\":{\"defaultValue\":null,\"description\":\"The activity received for stream for which to show the repost button. This is\\nused to initialize the toggle state and the counter.\",\"name\":\"activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> & { attachments?: Attachments | undefined; text?: string | undefined; } & { actor: string; object: unknown; verb: string; target?: string | undefined; to?: string[] | undefined; } & { ...; } & { ...; }\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be reposted to,\\ne.g. `user` when posting to your own profile\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"repostData\":{\"defaultValue\":null,\"description\":\"Repost reaction custom data\",\"name\":\"repostData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Record<string, unknown> | undefined\"}},\"targetFeeds\":{\"defaultValue\":{\"value\":\"[]\"},\"description\":\"onAddReaction supports targetFeeds that you can use to send a notification to the post owner like [\\\"notification:USER_ID\\\"]\",\"name\":\"targetFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be reposted to, default to current user id\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/RepostButton.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/SinglePost.tsx\",\"value\":[{\"tags\":{},\"description\":\"Shows the detail of a single activity\",\"displayName\":\"SinglePost\",\"methods\":[],\"props\":{\"Activity\":{\"defaultValue\":null,\"description\":\"The component used to render an activity in the feed\\n#Activity (Component)#\",\"name\":\"Activity\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<ActivityProps<UT, AT, CT, RT, CRT>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"LoadingIndicator\":{\"defaultValue\":null,\"description\":\"Component to show when the feed is refreshing\\n#LoadingIndicator (Component)#\",\"name\":\"LoadingIndicator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadingIndicatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Notifier\":{\"defaultValue\":null,\"description\":\"The component to use to render new activities notification\\n#Notifier (NewActivitiesNotification Component)#\",\"name\":\"Notifier\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<NewActivitiesNotificationProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Paginator\":{\"defaultValue\":null,\"description\":\"By default pagination is done with a \\\"Load more\\\" button, you can use\\n[InfiniteScrollPaginator](/components/infinite-scroll) to enable infinite scrolling\\n#LoadMorePaginator (Component)#\",\"name\":\"Paginator\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<LoadMorePaginatorProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"Placeholder\":{\"defaultValue\":null,\"description\":\"Component to show when there are no activities in the feed\\n#FeedPlaceholder (Component)#\",\"name\":\"Placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<FeedPlaceholderProps, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...> | null | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/FlatFeed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"activityId\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"activityId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/SinglePost.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}}}}]},{\"key\":\"src/components/Textarea.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Textarea\",\"methods\":[],\"props\":{\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or emoji-mart sets\\nhttps://github.com/missive/emoji-mart#datasets\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"innerRef\":{\"defaultValue\":null,\"description\":\"A ref that is bound to the textarea element\",\"name\":\"innerRef\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"MutableRefObject<HTMLTextAreaElement | undefined> | ((el: HTMLTextAreaElement) => void) | undefined\"}},\"maxLength\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"maxLength\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"onChange\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onChange\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined\"}},\"onPaste\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onPaste\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined\"}},\"placeholder\":{\"defaultValue\":{\"value\":\"Share your opinion\"},\"description\":\"\",\"name\":\"placeholder\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"rows\":{\"defaultValue\":{\"value\":3},\"description\":\"\",\"name\":\"rows\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}},\"trigger\":{\"defaultValue\":{\"value\":\"{}\"},\"description\":\"An extra trigger for ReactTextareaAutocomplete, this can be used to show\\na menu when typing @xxx or #xxx, in addition to the emoji menu when typing :xxx\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}},\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Textarea.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/TimeHeader.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"TimeHeader\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/components/Title.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Title\",\"methods\":[],\"props\":{\"size\":{\"defaultValue\":{\"value\":18},\"description\":\"\",\"name\":\"size\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Title.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"number | undefined\"}}}}]},{\"key\":\"src/components/UserBar.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"UserBar\",\"methods\":[],\"props\":{\"username\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"username\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"AfterUsername\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"AfterUsername\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"avatar\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"avatar\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"follow\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"follow\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"icon\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"icon\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"onClickUser\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"onClickUser\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: MouseEvent<Element, MouseEvent>) => void) | undefined\"}},\"Right\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Right\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | boolean | ReactElement<Record<string, unknown>, string | ((props: any) => ReactElement<any, any> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<Record<...>, any> | FunctionComponent<...> | null | undefined\"}},\"subtitle\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"subtitle\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"time\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"time\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"timestamp\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"timestamp\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/UserBar.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | number | Date | undefined\"}}}}]},{\"key\":\"src/components/Video.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Video\",\"methods\":[],\"props\":{\"og\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"og\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"OGAPIResponse\"}},\"handleClose\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"handleClose\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((event: SyntheticEvent<Element, Event>) => void) | undefined\"}},\"urlsThatAreGifs\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"urlsThatAreGifs\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/Video.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string[] | undefined\"}}}}]},{\"key\":\"src/components/docz.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"WithExampleStreamApp\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"resolveAfter\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"StatefulComponent\",\"methods\":[],\"props\":{\"initialValue\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"initialValue\",\"declarations\":[{\"fileName\":\"src/components/docz.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"unknown\"}}}}]},{\"key\":\"src/context/Feed.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"Feed\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"children\":{\"defaultValue\":null,\"description\":\"Override activity delete request\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"FeedContextValue<UT, AT, CT, RT, CRT, PT>\"}}}}]},{\"key\":\"src/context/FeedManager.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedManager\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"children\":{\"defaultValue\":null,\"description\":\"Override activity delete request\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsClient\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"analyticsClient\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamAnalytics<UT> | null\"}},\"client\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"client\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamClient<UT, AT, CT, RT, CRT, PT>\"}},\"errorHandler\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"errorHandler\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ErrorHandler\"}},\"user\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"user\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"StreamUser<UT, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>> | undefined\"}}}}]},{\"key\":\"src/context/StreamApp.tsx\",\"value\":[{\"tags\":{},\"description\":\"Manages the connection with Stream. Any components that should talk to\\nStream should be a child of this component.\",\"displayName\":\"StreamApp\",\"methods\":[],\"props\":{\"apiKey\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"apiKey\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"appId\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"appId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"token\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"token\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsToken\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"analyticsToken\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"defaultUserData\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"defaultUserData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DefaultUT | undefined\"}},\"errorHandler\":{\"defaultValue\":{\"value\":\"(error, type, detail) => {\\n  console.warn(error, type, detail);\\n}\"},\"description\":\"\",\"name\":\"errorHandler\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ErrorHandler | undefined\"}},\"i18nInstance\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"i18nInstance\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Streami18n | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ClientOptions | undefined\"}},\"sharedFeeds\":{\"defaultValue\":{\"value\":\"[{ feedGroup: 'notification', notify: true, options: { mark_seen: true } }]\"},\"description\":\"\",\"name\":\"sharedFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"SharedFeed[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"StreamAppProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamContextValue<UT, AT, CT, RT, CRT, PT>\"}}}}]},{\"key\":\"src/context/TranslationContext.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"TranslationProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/TranslationContext.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"TranslationContextValue\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"withTranslationContext\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/context/index.tsx\",\"value\":[{\"tags\":{},\"description\":\"Manages the connection with Stream. Any components that should talk to\\nStream should be a child of this component.\",\"displayName\":\"StreamApp\",\"methods\":[],\"props\":{\"apiKey\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"apiKey\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"appId\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"appId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"token\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"token\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsToken\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"analyticsToken\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"defaultUserData\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"defaultUserData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DefaultUT | undefined\"}},\"errorHandler\":{\"defaultValue\":{\"value\":\"(error, type, detail) => {\\n  console.warn(error, type, detail);\\n}\"},\"description\":\"\",\"name\":\"errorHandler\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ErrorHandler | undefined\"}},\"i18nInstance\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"i18nInstance\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Streami18n | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ClientOptions | undefined\"}},\"sharedFeeds\":{\"defaultValue\":{\"value\":\"[{ feedGroup: 'notification', notify: true, options: { mark_seen: true } }]\"},\"description\":\"\",\"name\":\"sharedFeeds\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"SharedFeed[] | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"StreamAppProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/StreamApp.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamContextValue<UT, AT, CT, RT, CRT, PT>\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"Feed\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"children\":{\"defaultValue\":null,\"description\":\"Override activity delete request\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"FeedContextValue<UT, AT, CT, RT, CRT, PT>\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"FeedManager\",\"methods\":[],\"props\":{\"feedGroup\":{\"defaultValue\":null,\"description\":\"The feed group part of the feed\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"analyticsLocation\":{\"defaultValue\":null,\"description\":\"The location that should be used for analytics when liking in the feed,\\nthis is only useful when you have analytics enabled for your app.\",\"name\":\"analyticsLocation\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"children\":{\"defaultValue\":null,\"description\":\"Override activity delete request\",\"name\":\"children\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"doActivityDeleteRequest\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"doActivityDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doChildReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction add request\",\"name\":\"doChildReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, reaction: Reaction<RT>, data?: CRT | undefined, options?: ReactionAddChildOptions | undefined) => Promise<ReactionAPIResponse<CRT>>) | undefined\"}},\"doChildReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override child reaction delete request\",\"name\":\"doChildReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doFeedRequest\":{\"defaultValue\":null,\"description\":\"The feed read handler (change only for advanced/complex use-cases)\",\"name\":\"doFeedRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((client: StreamClient<UT, AT, CT, RT, CRT, PT>, feedGroup: string, userId?: string | undefined, options?: GetFeedOptions | undefined) => Promise<FeedAPIResponse<UT, AT, CT, RT, CRT>>) | undefined\"}},\"doReactionAddRequest\":{\"defaultValue\":null,\"description\":\"Override reaction add request\",\"name\":\"doReactionAddRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((kind: string, activity: Activity<AT>, data?: RT | undefined, options?: ReactionAddOptions | undefined) => ReactionAPIResponse<RT>) | undefined\"}},\"doReactionDeleteRequest\":{\"defaultValue\":null,\"description\":\"Override reaction delete request\",\"name\":\"doReactionDeleteRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"DeleteRequestFn | undefined\"}},\"doReactionsFilterRequest\":{\"defaultValue\":null,\"description\":\"Override reactions filter request\",\"name\":\"doReactionsFilterRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((options: ReactionFilterConditions) => Promise<ReactionFilterAPIResponse<RT, CRT, AT, UT>>) | undefined\"}},\"notify\":{\"defaultValue\":null,\"description\":\"If true, feed shows the Notifier component when new activities are added\",\"name\":\"notify\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"boolean | undefined\"}},\"options\":{\"defaultValue\":null,\"description\":\"Read options for the API client (eg. limit, ranking, ...)\",\"name\":\"options\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"GetFeedOptions | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/Feed.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"analyticsClient\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"analyticsClient\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamAnalytics<UT> | null\"}},\"client\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"client\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"StreamClient<UT, AT, CT, RT, CRT, PT>\"}},\"errorHandler\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"errorHandler\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"ErrorHandler\"}},\"user\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"user\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/FeedManager.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"StreamUser<UT, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>, Record<string, unknown>> | undefined\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"TranslationProvider\",\"methods\":[],\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/context/TranslationContext.tsx\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"TranslationContextValue\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"withTranslationContext\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/i18n/Streami18n.ts\",\"value\":[]},{\"key\":\"src/utils/index.ts\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"userOrDefault\",\"methods\":[],\"props\":{\"created_at\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"created_at\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"},{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"data\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"data\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"},{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"Record<string, unknown> | { name: \\\"Unknown\\\"; profileImage: \\\"\\\"; }\"}},\"id\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"id\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"},{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/utils/index.ts\",\"name\":\"TypeLiteral\"},{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"updated_at\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"updated_at\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"},{\"fileName\":\"/Users/amin/Stream/react-activity-feed/node_modules/getstream/lib/user.d.ts\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}},\"error\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"error\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/utils/index.ts\",\"name\":\"TypeLiteral\"}],\"required\":true,\"type\":{\"name\":\"string\"}}}},{\"tags\":{},\"description\":\"\",\"displayName\":\"dataTransferItemsHaveFiles\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"dataTransferItemsToFiles\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"inputValueFromEvent\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"sanitizeURL\",\"methods\":[],\"props\":{}},{\"tags\":{\"param\":\"url\"},\"description\":\"\",\"displayName\":\"trimURL\",\"methods\":[],\"props\":{}},{\"tags\":{},\"description\":\"\",\"displayName\":\"useOnClickUser\",\"methods\":[],\"props\":{}}]},{\"key\":\"src/utils/smartRender.tsx\",\"value\":[]},{\"key\":\"src/utils/textRenderer.tsx\",\"value\":[]},{\"key\":\"src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"StatusUpdateForm\",\"methods\":[],\"props\":{\"activityVerb\":{\"defaultValue\":{\"value\":\"post\"},\"description\":\"The verb that should be used to post the activity, default to \\\"post\\\"\",\"name\":\"activityVerb\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doRequest\":{\"defaultValue\":null,\"description\":\"Override Post request\",\"name\":\"doRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: NewActivity<AT>) => Promise<Activity<AT>>) | undefined\"}},\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or [emoji-mart sets](https://github.com/missive/emoji-mart#datasets)\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be posted to, default to \\\"user\\\"\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"FooterItem\":{\"defaultValue\":null,\"description\":\"Add extra footer item\",\"name\":\"FooterItem\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"Header\":{\"defaultValue\":null,\"description\":\"The header to display\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"modifyActivityData\":{\"defaultValue\":null,\"description\":\"If you want to change something about the activity data that this form\\nsends to stream you can do that with this function. This function gets the\\nactivity data that the form would send normally and should return the\\nmodified activity data that should be posted instead.\\n\\nFor instance, this would add a target field to the activity:\\n\\n```javascript\\n&lt;StatusUpdateForm\\nmodifyActivityData={(data) => ({...data, target: 'Group:1'})}\\n/>\\n```\",\"name\":\"modifyActivityData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: NewActivity<AT>) => NewActivity<AT>) | undefined\"}},\"onSuccess\":{\"defaultValue\":null,\"description\":\"A callback to run after the activity is posted successfully\",\"name\":\"onSuccess\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: Activity<AT>) => void) | undefined\"}},\"trigger\":{\"defaultValue\":null,\"description\":\"An extra trigger for ReactTextareaAutocomplete, this can be used to show\\na menu when typing @xxx or #xxx, in addition to the emoji menu when typing\\n:xxx\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be posted to\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"src/components/StatusUpdateForm/index.tsx\",\"value\":[{\"tags\":{},\"description\":\"\",\"displayName\":\"StatusUpdateForm\",\"methods\":[],\"props\":{\"activityVerb\":{\"defaultValue\":{\"value\":\"post\"},\"description\":\"The verb that should be used to post the activity, default to \\\"post\\\"\",\"name\":\"activityVerb\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"doRequest\":{\"defaultValue\":null,\"description\":\"Override Post request\",\"name\":\"doRequest\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: NewActivity<AT>) => Promise<Activity<AT>>) | undefined\"}},\"emojiData\":{\"defaultValue\":null,\"description\":\"Override the default emoji dataset, library has a light set of emojis\\nto show more emojis use your own or [emoji-mart sets](https://github.com/missive/emoji-mart#datasets)\",\"name\":\"emojiData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"Data | undefined\"}},\"feedGroup\":{\"defaultValue\":{\"value\":\"user\"},\"description\":\"The feed group part of the feed that the activity should be posted to, default to \\\"user\\\"\",\"name\":\"feedGroup\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}},\"FooterItem\":{\"defaultValue\":null,\"description\":\"Add extra footer item\",\"name\":\"FooterItem\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"Header\":{\"defaultValue\":null,\"description\":\"The header to display\",\"name\":\"Header\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"ReactNode\"}},\"modifyActivityData\":{\"defaultValue\":null,\"description\":\"If you want to change something about the activity data that this form\\nsends to stream you can do that with this function. This function gets the\\nactivity data that the form would send normally and should return the\\nmodified activity data that should be posted instead.\\n\\nFor instance, this would add a target field to the activity:\\n\\n```javascript\\n&lt;StatusUpdateForm\\nmodifyActivityData={(data) => ({...data, target: 'Group:1'})}\\n/>\\n```\",\"name\":\"modifyActivityData\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: NewActivity<AT>) => NewActivity<AT>) | undefined\"}},\"onSuccess\":{\"defaultValue\":null,\"description\":\"A callback to run after the activity is posted successfully\",\"name\":\"onSuccess\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"((activity: Activity<AT>) => void) | undefined\"}},\"trigger\":{\"defaultValue\":null,\"description\":\"An extra trigger for ReactTextareaAutocomplete, this can be used to show\\na menu when typing @xxx or #xxx, in addition to the emoji menu when typing\\n:xxx\",\"name\":\"trigger\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"TriggerType<Record<string, unknown>> | undefined\"}},\"userId\":{\"defaultValue\":null,\"description\":\"The user_id part of the feed that the activity should be posted to\",\"name\":\"userId\",\"declarations\":[{\"fileName\":\"/Users/amin/Stream/react-activity-feed/src/components/StatusUpdateForm/StatusUpdateForm.tsx\",\"name\":\"TypeLiteral\"}],\"required\":false,\"type\":{\"name\":\"string | undefined\"}}}}]},{\"key\":\"dist/context/Feed.js\",\"value\":[{\"description\":\"\",\"displayName\":\"FeedProvider\",\"methods\":[],\"actualName\":\"FeedProvider\"},{\"description\":\"\",\"displayName\":\"Feed\",\"methods\":[],\"actualName\":\"Feed\"}]},{\"key\":\"dist/context/StreamApp.js\",\"value\":[{\"description\":\"\",\"displayName\":\"StreamAppProvider\",\"methods\":[],\"actualName\":\"StreamAppProvider\"},{\"description\":\"Manages the connection with Stream. Any components that should talk to\\nStream should be a child of this component.\",\"displayName\":\"StreamApp\",\"methods\":[],\"actualName\":\"StreamApp\"}]},{\"key\":\"dist/context/TranslationContext.js\",\"value\":[{\"description\":\"\",\"displayName\":\"TranslationProvider\",\"methods\":[],\"actualName\":\"TranslationProvider\"}]},{\"key\":\"dist/components/Activity.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Activity\",\"methods\":[],\"actualName\":\"Activity\"}]},{\"key\":\"dist/components/ActivityContent.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ActivityContent\",\"methods\":[],\"actualName\":\"ActivityContent\"}]},{\"key\":\"dist/components/ActivityFooter.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ActivityFooter\",\"methods\":[],\"actualName\":\"ActivityFooter\",\"props\":{\"feedGroup\":{\"defaultValue\":{\"value\":\"'user'\",\"computed\":false},\"required\":false}}}]},{\"key\":\"dist/components/ActivityHeader.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ActivityHeader\",\"methods\":[],\"actualName\":\"ActivityHeader\"}]},{\"key\":\"dist/components/AttachedActivity.js\",\"value\":[{\"description\":\"\",\"displayName\":\"AttachedActivity\",\"methods\":[],\"actualName\":\"AttachedActivity\"}]},{\"key\":\"dist/components/Audio.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Audio\",\"methods\":[],\"actualName\":\"Audio\"}]},{\"key\":\"dist/components/Avatar.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Avatar\",\"methods\":[],\"actualName\":\"Avatar\"}]},{\"key\":\"dist/components/AvatarGroup.js\",\"value\":[{\"description\":\"\",\"displayName\":\"AvatarGroup\",\"methods\":[],\"actualName\":\"AvatarGroup\"}]},{\"key\":\"dist/components/Button.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Button\",\"methods\":[],\"actualName\":\"Button\"}]},{\"key\":\"dist/components/Card.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Card\",\"methods\":[],\"actualName\":\"Card\"}]},{\"key\":\"dist/components/CommentField.js\",\"value\":[{\"description\":\"\",\"displayName\":\"CommentField\",\"methods\":[],\"actualName\":\"CommentField\"}]},{\"key\":\"dist/components/CommentItem.js\",\"value\":[{\"description\":\"\",\"displayName\":\"CommentItem\",\"methods\":[],\"actualName\":\"CommentItem\"}]},{\"key\":\"dist/components/CommentList.js\",\"value\":[{\"description\":\"\",\"displayName\":\"CommentList\",\"methods\":[],\"actualName\":\"CommentList\"}]},{\"key\":\"dist/components/DataLabel.js\",\"value\":[{\"description\":\"\",\"displayName\":\"DataLabel\",\"methods\":[],\"actualName\":\"DataLabel\"}]},{\"key\":\"dist/components/Dropdown.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Dropdown\",\"methods\":[],\"actualName\":\"Dropdown\"}]},{\"key\":\"dist/components/DropdownPanel.js\",\"value\":[{\"description\":\"`DropdownPanel` is a more advanced component used to create a notification dropdown for instance, it comes with three parts:\\n`Header`, `Content` and `Footer`. The content has a limited height and the `overflow` is set to `scroll`.\",\"displayName\":\"DropdownPanel\",\"methods\":[],\"actualName\":\"DropdownPanel\"}]},{\"key\":\"dist/components/EmojiPicker.js\",\"value\":[{\"description\":\"\",\"displayName\":\"EmojiPicker\",\"methods\":[],\"actualName\":\"EmojiPicker\"}]},{\"key\":\"dist/components/FeedPlaceholder.js\",\"value\":[{\"description\":\"\",\"displayName\":\"FeedPlaceholder\",\"methods\":[],\"actualName\":\"FeedPlaceholder\"}]},{\"key\":\"dist/components/FlatFeed.js\",\"value\":[{\"description\":\"Renders a feed of activities, this component is a StreamApp consumer\\nand must always be a child of the `<StreamApp>` element\",\"displayName\":\"FlatFeed\",\"methods\":[],\"actualName\":\"FlatFeed\"}]},{\"key\":\"dist/components/Flex.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Flex\",\"methods\":[],\"actualName\":\"Flex\"}]},{\"key\":\"dist/components/FollowButton.js\",\"value\":[{\"description\":\"\",\"displayName\":\"FollowButton\",\"methods\":[],\"actualName\":\"FollowButton\"}]},{\"key\":\"dist/components/Gallery.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Gallery\",\"methods\":[],\"actualName\":\"Gallery\"}]},{\"key\":\"dist/components/IconBadge.js\",\"value\":[{\"description\":\"\",\"displayName\":\"IconBadge\",\"methods\":[],\"actualName\":\"IconBadge\"}]},{\"key\":\"dist/components/Icons.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ThumbsUpIcon\",\"methods\":[],\"actualName\":\"ThumbsUpIcon\"},{\"description\":\"\",\"displayName\":\"RepostIcon\",\"methods\":[],\"actualName\":\"RepostIcon\"},{\"description\":\"\",\"displayName\":\"CommentIcon\",\"methods\":[],\"actualName\":\"CommentIcon\"},{\"description\":\"\",\"displayName\":\"AvatarIcon\",\"methods\":[],\"actualName\":\"AvatarIcon\"},{\"description\":\"\",\"displayName\":\"CloseIcon\",\"methods\":[],\"actualName\":\"CloseIcon\"},{\"description\":\"\",\"displayName\":\"EmojiIcon\",\"methods\":[],\"actualName\":\"EmojiIcon\"},{\"description\":\"\",\"displayName\":\"BellIcon\",\"methods\":[],\"actualName\":\"BellIcon\"},{\"description\":\"\",\"displayName\":\"BookmarkIcon\",\"methods\":[],\"actualName\":\"BookmarkIcon\"},{\"description\":\"\",\"displayName\":\"PlayCircleIcon\",\"methods\":[],\"actualName\":\"PlayCircleIcon\"},{\"description\":\"\",\"displayName\":\"PauseCircleIcon\",\"methods\":[],\"actualName\":\"PauseCircleIcon\"}]},{\"key\":\"dist/components/InfiniteScroll.js\",\"value\":[{\"description\":\"\",\"displayName\":\"InfiniteScroll\",\"methods\":[]}]},{\"key\":\"dist/components/InfiniteScrollPaginator.js\",\"value\":[{\"description\":\"\",\"displayName\":\"InfiniteScrollPaginator\",\"methods\":[],\"actualName\":\"InfiniteScrollPaginator\"}]},{\"key\":\"dist/components/LikeButton.js\",\"value\":[{\"description\":\"\",\"displayName\":\"LikeButton\",\"methods\":[],\"actualName\":\"LikeButton\"}]},{\"key\":\"dist/components/Link.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Link\",\"methods\":[],\"actualName\":\"Link\"}]},{\"key\":\"dist/components/LoadMoreButton.js\",\"value\":[{\"description\":\"\",\"displayName\":\"LoadMoreButton\",\"methods\":[],\"actualName\":\"LoadMoreButton\"}]},{\"key\":\"dist/components/LoadMorePaginator.js\",\"value\":[{\"description\":\"\",\"displayName\":\"LoadMorePaginator\",\"methods\":[],\"actualName\":\"LoadMorePaginator\"}]},{\"key\":\"dist/components/NewActivitiesNotification.js\",\"value\":[{\"description\":\"\",\"displayName\":\"NewActivitiesNotification\",\"methods\":[],\"actualName\":\"NewActivitiesNotification\"}]},{\"key\":\"dist/components/Notification.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Notification\",\"methods\":[],\"actualName\":\"Notification\"}]},{\"key\":\"dist/components/NotificationDropdown.js\",\"value\":[{\"description\":\"IMPORTANT: Changing most of the props below doesn't result in the desired effect.\\nThese settings related to feed management should be changed in the `sharedFeeds` prop of the [`StreamApp`](#streamapp) component.\",\"displayName\":\"NotificationDropdown\",\"methods\":[],\"actualName\":\"NotificationDropdown\"}]},{\"key\":\"dist/components/NotificationFeed.js\",\"value\":[{\"description\":\"Renders a Notification feed, this component is a StreamApp consumer and must always be a child of `<StreamApp>`.\",\"displayName\":\"NotificationFeed\",\"methods\":[],\"actualName\":\"NotificationFeed\"}]},{\"key\":\"dist/components/Panel.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Panel\",\"methods\":[],\"actualName\":\"Panel\"},{\"description\":\"\",\"displayName\":\"PanelContent\",\"methods\":[],\"actualName\":\"PanelContent\"},{\"description\":\"\",\"displayName\":\"PanelFooter\",\"methods\":[],\"actualName\":\"PanelFooter\"},{\"description\":\"\",\"displayName\":\"PanelHeading\",\"methods\":[],\"actualName\":\"PanelHeading\"}]},{\"key\":\"dist/components/ReactionIcon.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ReactionIcon\",\"methods\":[],\"actualName\":\"ReactionIcon\"}]},{\"key\":\"dist/components/ReactionList.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ReactionList\",\"methods\":[],\"actualName\":\"ReactionList\"}]},{\"key\":\"dist/components/ReactionToggleIcon.js\",\"value\":[{\"description\":\"\",\"displayName\":\"ReactionToggleIcon\",\"methods\":[],\"actualName\":\"ReactionToggleIcon\"}]},{\"key\":\"dist/components/RepostButton.js\",\"value\":[{\"description\":\"A repost button ready to be embedded as Activity footer\",\"displayName\":\"RepostButton\",\"methods\":[],\"actualName\":\"RepostButton\"}]},{\"key\":\"dist/components/SinglePost.js\",\"value\":[{\"description\":\"Shows the detail of a single activity\",\"displayName\":\"SinglePost\",\"methods\":[],\"actualName\":\"SinglePost\"}]},{\"key\":\"dist/components/Textarea.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Textarea\",\"methods\":[],\"actualName\":\"Textarea\"}]},{\"key\":\"dist/components/TimeHeader.js\",\"value\":[{\"description\":\"\",\"displayName\":\"TimeHeader\",\"methods\":[],\"actualName\":\"TimeHeader\"}]},{\"key\":\"dist/components/Title.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Title\",\"methods\":[],\"actualName\":\"Title\"}]},{\"key\":\"dist/components/UserBar.js\",\"value\":[{\"description\":\"\",\"displayName\":\"UserBar\",\"methods\":[],\"actualName\":\"UserBar\"}]},{\"key\":\"dist/components/Video.js\",\"value\":[{\"description\":\"\",\"displayName\":\"Video\",\"methods\":[],\"actualName\":\"Video\"}]},{\"key\":\"dist/components/StatusUpdateForm/StatusUpdateForm.js\",\"value\":[{\"description\":\"\",\"displayName\":\"StatusUpdateForm\",\"methods\":[],\"actualName\":\"StatusUpdateForm\"}]}]}"}}}