(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{qtKw:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return l})),t.d(n,"default",(function(){return b}));var a=t("k0FJ"),i=t("oedh"),r=(t("mXGw"),t("/FXl")),o=t("TjRS"),l=(t("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/i18n/Streami18n.mdx"}});var s={_frontmatter:l},c=o.a;function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)(c,Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Streami18n - Wrapper around ",Object(r.b)("a",{parentName:"p",href:"https://www.i18next.com/"},"i18next")," class for Stream related translations."),Object(r.b)("h3",{id:"api"},"API"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"constructor"),"(options)"),Object(r.b)("p",{parentName:"li"},"Contructor accepts following options:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"language")," (String) default: 'en'"),Object(r.b)("p",{parentName:"li"},"Language code e.g., en, tr")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"disableDateTimeTranslations")," (boolean) default: false"),Object(r.b)("p",{parentName:"li"},"Disable translations for datetimes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"debug")," (boolean) default: false"),Object(r.b)("p",{parentName:"li"},"Enable debug mode in internal i18n class")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"logger")," (function) default: () => {}"),Object(r.b)("p",{parentName:"li"},"Logger function to log warnings/errors from this class")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"dayjsLocaleConfigForLanguage")," (object) default: 'enConfig'"),Object(r.b)("p",{parentName:"li"},Object(r.b)("a",{parentName:"p",href:"https://github.com/iamkun/dayjs/tree/dev/src/locale"},"Config object")," for internal dayjs object, corresponding to language (param)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"DateTimeParser")," (function)"),Object(r.b)("p",{parentName:"li"},"Moment or Dayjs instance/function.")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"geti18Instance")),Object(r.b)("p",{parentName:"li"},"Returns an instance of ",Object(r.b)("a",{parentName:"p",href:"https://www.i18next.com/"},"i18next")," used internally.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"getAvailableLanguages")),Object(r.b)("p",{parentName:"li"},"Returns all the languages (code) registered with Streami18n")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"getTranslations")),Object(r.b)("p",{parentName:"li"},"Returns all the translations registered with Streami18n")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"getTranslators")),Object(r.b)("p",{parentName:"li"},"Returns an object containing t (i18next translator) and momentjs instance (configured with set language)"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const streami18n = new Streami18n({ language: 'nl' });\nconst { t, tDateTimeParser } = await streami18n.getTranslators();\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"registerTranslation")),Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"params")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"language | string"),Object(r.b)("li",{parentName:"ul"},"translator | object"),Object(r.b)("li",{parentName:"ul"},"customDayjsLocale | object (optional)")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},'  streami18n.registerTranslation(\n    \'mr\',\n    {\n      "Start Typing...": "टाइप करना शुरू करें ...",\n      "Type your post...": "अपनी पोस्ट लिखें ...",\n      "You have 1 new notification": "आपके पास 1 नई नोटिफिकेशन है",\n      "You have {{ notificationCount }} new notifications": "आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है",\n    },\n    {\n      months: [...],\n      monthsShort: [...],\n      calendar: {\n          sameDay: \'...\'\n      }\n    }\n  );\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"setLanguage")),Object(r.b)("p",{parentName:"li"},"Set a different language"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"streami18n.setLanguage('tr');\n")))),Object(r.b)("p",null,"Instance of this class should be provided to StreamApp component to handle translations.\nStream provides following list of in-built translations:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"English (en)"),Object(r.b)("li",{parentName:"ol"},"Dutch (nl)"),Object(r.b)("li",{parentName:"ol"},"Russian (ru)"),Object(r.b)("li",{parentName:"ol"},"Turkish (tr)"),Object(r.b)("li",{parentName:"ol"},"French (fr)"),Object(r.b)("li",{parentName:"ol"},"Italian (it)"),Object(r.b)("li",{parentName:"ol"},"Hindi (hi)")),Object(r.b)("h3",{id:"docs"},"Docs"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Text translations")),Object(r.b)("p",{parentName:"li"},"Simplest way to start using feed components in one of the in-built languages would be following:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const i18n = new Streami18n({ language: 'nl' });\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n")),Object(r.b)("p",{parentName:"li"},"If you would like to override certain keys in in-built translation.\nUI will be automatically updated in this case."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const i18n = new Streami18n({\n  language: 'nl',\n  translationsForLanguage: {\n    'Type your post...': 'Type je bericht...',\n    'You have 1 new notification': 'Je hebt 1 nieuw melding',\n    'You have {{ notificationCount }} new notifications': 'Je hebt {{ notificationCount }} nieuwe meldingen',\n    '{{ actorName }} and 1 other commented on your {{ activityVerb }}':\n      '{{ actorName }} en 1 ander reageerden op je {{ activityVerb }}',\n  },\n});\n")),Object(r.b)("p",{parentName:"li"},"If you would like to register additional languages, use registerTranslation. You can add as many languages as you want:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"i18n.registerTranslation('zh', {\n  'Type your post...': 'Type je bericht...',\n  'You have 1 new notification': 'Je hebt 1 nieuw melding',\n  'You have {{ notificationCount }} new notifications': 'Je hebt {{ notificationCount }} nieuwe meldingen',\n  '{{ actorName }} and 1 other commented on your {{ activityVerb }}':\n    '{{ actorName }} en 1 ander reageerden op je {{ activityVerb }}',\n});\n\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n")),Object(r.b)("p",{parentName:"li"},"You can use the same function to add whole new language as well."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const i18n = new Streami18n();\n\ni18n.registerTranslation('hi', {\n  'Start Typing...': 'टाइप करना शुरू करें ...',\n  'Type your post...': 'अपनी पोस्ट लिखें ...',\n  'You have 1 new notification': 'आपके पास 1 नई नोटिफिकेशन है',\n  'You have {{ notificationCount }} new notifications': 'आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है',\n});\n\n// Make sure to call setLanguage to reflect new language in UI.\ni18n.setLanguage('it');\n\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n")),Object(r.b)("p",{parentName:"li"},"We have exported all the in-built translations in our library. You can import them in your project as following:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"import {\n  enTranslations,\n  nlTranslations,\n  ruTranslations,\n  trTranslations,\n  frTranslations,\n  hiTranslations,\n  itTranslations,\n} from 'react-activity-feed';\n")),Object(r.b)("p",{parentName:"li"},"If you would like to maintain your own translation files:"),Object(r.b)("ol",{parentName:"li"},Object(r.b)("li",{parentName:"ol"},"Create a json file in your project with whatever name you prefer. Best practice would be to name it after\nthe language-translations it contains e.g, If you are creating a translation file for Korean language then ",Object(r.b)("inlineCode",{parentName:"li"},"ko.json")),Object(r.b)("li",{parentName:"ol"},"Copy the content of file ",Object(r.b)("a",{parentName:"li",href:"https://github.com/GetStream/react-activity-feed/blob/master/src/i18n/en.json"},"https://github.com/GetStream/react-activity-feed/blob/master/src/i18n/en.json")),Object(r.b)("li",{parentName:"ol"},"Change the values of the keys as translation of key."),Object(r.b)("li",{parentName:"ol"},"Use it in stream client:")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"import koTranslation from 'path/to/ko.json';\nimport deTranslation from 'path/to/de.json';\nconst i18n = new Streami18n();\ni18n.registerTranslation('ko', koTranslation);\ni18n.registerTranslation('de', deTranslation);\n// You can switch language at any point in lifetime of component, it will automatically reflect in UI.\ni18n.setLanguage('ko');\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n")))),Object(r.b)("h2",{id:"datetime-translations"},"Datetime translations"),Object(r.b)("p",null,"Stream react feeds components uses ",Object(r.b)("a",{parentName:"p",href:"https://day.js.org/en/"},"dayjs")," internally by default to format datetime stamp.\nDayjs has locale support as well - ",Object(r.b)("a",{parentName:"p",href:"https://day.js.org/docs/en/i18n/i18n"},"https://day.js.org/docs/en/i18n/i18n"),"\nDayjs is a lightweight alternative to Momentjs with the same modern API."),Object(r.b)("p",null,"Dayjs provides locale config for plenty of languages, you can check the whole list of locale configs at following url\n",Object(r.b)("a",{parentName:"p",href:"https://github.com/iamkun/dayjs/tree/dev/src/locale"},"https://github.com/iamkun/dayjs/tree/dev/src/locale")),Object(r.b)("p",null,"You can either provide the dayjs locale config while registering\nlanguage with Streami18n (either via constructor or registerTranslation()) OR you can provide your own Dayjs or Moment instance\nto Streami18n constructor, which will be then used internally (using the language locale) in components."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Via language registration")),Object(r.b)("p",null,"e.g.,"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const i18n = new Streami18n({\n language: 'nl',\n dayjsLocaleConfigForLanguage: {\n   months: [...],\n   monthsShort: [...],\n   calendar: {\n     sameDay: ...'\n   }\n }\n});\n")),Object(r.b)("p",null,"Similarly, you can add locale config for dayjs while registering translation via ",Object(r.b)("inlineCode",{parentName:"p"},"registerTranslation")," function."),Object(r.b)("p",null,"e.g.,"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},'const i18n = new Streami18n();\n\ni18n.registerTranslation(\n \'hi\',\n {\n    "Start Typing...": "टाइप करना शुरू करें ...",\n    "Type your post...": "अपनी पोस्ट लिखें ...",\n    "You have 1 new notification": "आपके पास 1 नई नोटिफिकेशन है",\n    "You have {{ notificationCount }} new notifications": "आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है",\n },\n {\n   months: [...],\n   monthsShort: [...],\n   calendar: {\n     sameDay: ...\'\n   }\n }\n);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Provide your own Moment object")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"import 'moment/locale/nl';\nimport 'moment/locale/it';\n// or if you want to include all locales\nimport 'moment/min/locales';\n\nimport Moment from moment\n\nconst i18n = new Streami18n({\n language: 'nl',\n DateTimeParser: Moment\n})\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Provide your own Dayjs object")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"import Dayjs from 'dayjs';\n\nimport 'dayjs/locale/nl';\nimport 'dayjs/locale/it';\n\nconst i18n = new Streami18n({\n  language: 'nl',\n  DateTimeParser: Dayjs,\n});\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"NOTE")," Please note here that locales in ",Object(r.b)("inlineCode",{parentName:"p"},"dayjs/locale/it")," (and all other language locale files), does not load calendar related\nconfig like 'today at', 'tomorrow at' etc. You will need to manually configure calendar locale using ",Object(r.b)("a",{parentName:"p",href:"https://day.js.org/docs/en/plugin/update-locale"},"updateLocale"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"TIPS")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"If you would like to stick with english language for datetimes in Stream compoments,\nyou can set ",Object(r.b)("inlineCode",{parentName:"li"},"disableDateTimeTranslations")," to true.")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const i18n = new Streami18n({\n  language: 'nl',\n  disableDateTimeTranslations: false,\n});\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"If you want to disable all the warnings, you can override logger option:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:"static",static:!0},"const i18n = new Streami18n({\n  language: 'nl',\n  logger: () => null,\n});\n")),Object(r.b)("p",null,"The default ",Object(r.b)("inlineCode",{parentName:"p"},"en")," locale config from dayjs is as follow:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json",metastring:"static",static:!0},'{\n  "months": [\n    "January",\n    "February",\n    "March",\n    "April",\n    "May",\n    "June",\n    "July",\n    "August",\n    "September",\n    "October",\n    "November",\n    "December"\n  ],\n  "monthsShort": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],\n  "week": {\n    "dow": 0,\n    "doy": 6\n  },\n  "weekdays": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],\n  "weekdaysMin": ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],\n  "weekdaysShort": ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],\n  "calendar": {\n    "sameDay": "[Today at] LT",\n    "nextDay": "[Tomorrow at] LT",\n    "nextWeek": "dddd [at] LT",\n    "lastDay": "[Yesterday at] LT",\n    "lastWeek": "[Last] dddd [at] LT",\n    "sameElse": "L"\n  },\n  "formats": {\n    "LTS": "h:mm:ss A",\n    "LT": "h:mm A",\n    "L": "MM/DD/YYYY",\n    "LL": "MMMM D, YYYY",\n    "LLL": "MMMM D, YYYY h:mm A",\n    "LLLL": "dddd, MMMM D, YYYY h:mm A"\n  },\n  "invalidDate": "Invalid date",\n  "ordinal": "%d.",\n  "dayOfMonthOrdinalParse": /\\\\d{1,2}(th|st|nd|rd)/,\n  "relativeTime": {\n    "future": "in %s",\n    "past": "%s ago",\n    "s": "a few seconds",\n    "ss": "%d seconds",\n    "m": "a minute",\n    "mm": "%d minutes",\n    "h": "an hour",\n    "hh": "%d hours",\n    "d": "a day",\n    "dd": "%d days",\n    "M": "a month",\n    "MM": "%d months",\n    "y": "a year",\n    "yy": "%d years"\n  },\n  "meridiemParse": /[ap]\\\\.?m?\\\\.?/i,\n  "abbr": "en"\n}\n')))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/i18n/Streami18n.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-i-18-n-streami-18-n-mdx-73d8d7839abbceda957a.js.map