{"version":3,"sources":["webpack:///../src/i18n/Streami18n.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-i-18-n-streami-18-n-mdx-73d8d7839abbceda957a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/react-activity-feed/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Streami18n - Wrapper around `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.i18next.com/\"\n      }}>{`i18next`}</a>{` class for Stream related translations.`}</p>\n    <h3 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`constructor`}</strong>{`(options)`}</p>\n        <p parentName=\"li\">{`Contructor accepts following options:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`language`}</strong>{` (String) default: 'en'`}</p>\n            <p parentName=\"li\">{`Language code e.g., en, tr`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`disableDateTimeTranslations`}</strong>{` (boolean) default: false`}</p>\n            <p parentName=\"li\">{`Disable translations for datetimes`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`debug`}</strong>{` (boolean) default: false`}</p>\n            <p parentName=\"li\">{`Enable debug mode in internal i18n class`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`logger`}</strong>{` (function) default: () => {}`}</p>\n            <p parentName=\"li\">{`Logger function to log warnings/errors from this class`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`dayjsLocaleConfigForLanguage`}</strong>{` (object) default: 'enConfig'`}</p>\n            <p parentName=\"li\"><a parentName=\"p\" {...{\n                \"href\": \"https://github.com/iamkun/dayjs/tree/dev/src/locale\"\n              }}>{`Config object`}</a>{` for internal dayjs object, corresponding to language (param)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`DateTimeParser`}</strong>{` (function)`}</p>\n            <p parentName=\"li\">{`Moment or Dayjs instance/function.`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`geti18Instance`}</strong></p>\n        <p parentName=\"li\">{`Returns an instance of `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.i18next.com/\"\n          }}>{`i18next`}</a>{` used internally.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`getAvailableLanguages`}</strong></p>\n        <p parentName=\"li\">{`Returns all the languages (code) registered with Streami18n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`getTranslations`}</strong></p>\n        <p parentName=\"li\">{`Returns all the translations registered with Streami18n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`getTranslators`}</strong></p>\n        <p parentName=\"li\">{`Returns an object containing t (i18next translator) and momentjs instance (configured with set language)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`const streami18n = new Streami18n({ language: 'nl' });\nconst { t, tDateTimeParser } = await streami18n.getTranslators();\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`registerTranslation`}</strong></p>\n        <p parentName=\"li\"><em parentName=\"p\">{`params`}</em></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`language | string`}</li>\n          <li parentName=\"ul\">{`translator | object`}</li>\n          <li parentName=\"ul\">{`customDayjsLocale | object (optional)`}</li>\n        </ul>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`  streami18n.registerTranslation(\n    'mr',\n    {\n      \"Start Typing...\": \"टाइप करना शुरू करें ...\",\n      \"Type your post...\": \"अपनी पोस्ट लिखें ...\",\n      \"You have 1 new notification\": \"आपके पास 1 नई नोटिफिकेशन है\",\n      \"You have {{ notificationCount }} new notifications\": \"आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है\",\n    },\n    {\n      months: [...],\n      monthsShort: [...],\n      calendar: {\n          sameDay: '...'\n      }\n    }\n  );\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`setLanguage`}</strong></p>\n        <p parentName=\"li\">{`Set a different language`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`streami18n.setLanguage('tr');\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`Instance of this class should be provided to StreamApp component to handle translations.\nStream provides following list of in-built translations:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`English (en)`}</li>\n      <li parentName=\"ol\">{`Dutch (nl)`}</li>\n      <li parentName=\"ol\">{`Russian (ru)`}</li>\n      <li parentName=\"ol\">{`Turkish (tr)`}</li>\n      <li parentName=\"ol\">{`French (fr)`}</li>\n      <li parentName=\"ol\">{`Italian (it)`}</li>\n      <li parentName=\"ol\">{`Hindi (hi)`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"docs\"\n    }}>{`Docs`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Text translations`}</strong></p>\n        <p parentName=\"li\">{`Simplest way to start using feed components in one of the in-built languages would be following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`const i18n = new Streami18n({ language: 'nl' });\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n`}</code></pre>\n        <p parentName=\"li\">{`If you would like to override certain keys in in-built translation.\nUI will be automatically updated in this case.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`const i18n = new Streami18n({\n  language: 'nl',\n  translationsForLanguage: {\n    'Type your post...': 'Type je bericht...',\n    'You have 1 new notification': 'Je hebt 1 nieuw melding',\n    'You have {{ notificationCount }} new notifications': 'Je hebt {{ notificationCount }} nieuwe meldingen',\n    '{{ actorName }} and 1 other commented on your {{ activityVerb }}':\n      '{{ actorName }} en 1 ander reageerden op je {{ activityVerb }}',\n  },\n});\n`}</code></pre>\n        <p parentName=\"li\">{`If you would like to register additional languages, use registerTranslation. You can add as many languages as you want:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`i18n.registerTranslation('zh', {\n  'Type your post...': 'Type je bericht...',\n  'You have 1 new notification': 'Je hebt 1 nieuw melding',\n  'You have {{ notificationCount }} new notifications': 'Je hebt {{ notificationCount }} nieuwe meldingen',\n  '{{ actorName }} and 1 other commented on your {{ activityVerb }}':\n    '{{ actorName }} en 1 ander reageerden op je {{ activityVerb }}',\n});\n\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n`}</code></pre>\n        <p parentName=\"li\">{`You can use the same function to add whole new language as well.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`const i18n = new Streami18n();\n\ni18n.registerTranslation('hi', {\n  'Start Typing...': 'टाइप करना शुरू करें ...',\n  'Type your post...': 'अपनी पोस्ट लिखें ...',\n  'You have 1 new notification': 'आपके पास 1 नई नोटिफिकेशन है',\n  'You have {{ notificationCount }} new notifications': 'आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है',\n});\n\n// Make sure to call setLanguage to reflect new language in UI.\ni18n.setLanguage('it');\n\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n`}</code></pre>\n        <p parentName=\"li\">{`We have exported all the in-built translations in our library. You can import them in your project as following:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`import {\n  enTranslations,\n  nlTranslations,\n  ruTranslations,\n  trTranslations,\n  frTranslations,\n  hiTranslations,\n  itTranslations,\n} from 'react-activity-feed';\n`}</code></pre>\n        <p parentName=\"li\">{`If you would like to maintain your own translation files:`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Create a json file in your project with whatever name you prefer. Best practice would be to name it after\nthe language-translations it contains e.g, If you are creating a translation file for Korean language then `}<inlineCode parentName=\"li\">{`ko.json`}</inlineCode></li>\n          <li parentName=\"ol\">{`Copy the content of file `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/GetStream/react-activity-feed/blob/master/src/i18n/en.json\"\n            }}>{`https://github.com/GetStream/react-activity-feed/blob/master/src/i18n/en.json`}</a></li>\n          <li parentName=\"ol\">{`Change the values of the keys as translation of key.`}</li>\n          <li parentName=\"ol\">{`Use it in stream client:`}</li>\n        </ol>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"static\",\n            \"static\": true\n          }}>{`import koTranslation from 'path/to/ko.json';\nimport deTranslation from 'path/to/de.json';\nconst i18n = new Streami18n();\ni18n.registerTranslation('ko', koTranslation);\ni18n.registerTranslation('de', deTranslation);\n// You can switch language at any point in lifetime of component, it will automatically reflect in UI.\ni18n.setLanguage('ko');\n<StreamApp apiKey={apiKey} appId={appId} token={token} i18nInstance={i18n}>\n  ...\n</StreamApp>;\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"datetime-translations\"\n    }}>{`Datetime translations`}</h2>\n    <p>{`Stream react feeds components uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://day.js.org/en/\"\n      }}>{`dayjs`}</a>{` internally by default to format datetime stamp.\nDayjs has locale support as well - `}<a parentName=\"p\" {...{\n        \"href\": \"https://day.js.org/docs/en/i18n/i18n\"\n      }}>{`https://day.js.org/docs/en/i18n/i18n`}</a>{`\nDayjs is a lightweight alternative to Momentjs with the same modern API.`}</p>\n    <p>{`Dayjs provides locale config for plenty of languages, you can check the whole list of locale configs at following url\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/iamkun/dayjs/tree/dev/src/locale\"\n      }}>{`https://github.com/iamkun/dayjs/tree/dev/src/locale`}</a></p>\n    <p>{`You can either provide the dayjs locale config while registering\nlanguage with Streami18n (either via constructor or registerTranslation()) OR you can provide your own Dayjs or Moment instance\nto Streami18n constructor, which will be then used internally (using the language locale) in components.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Via language registration`}</li>\n    </ol>\n    <p>{`e.g.,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`const i18n = new Streami18n({\n language: 'nl',\n dayjsLocaleConfigForLanguage: {\n   months: [...],\n   monthsShort: [...],\n   calendar: {\n     sameDay: ...'\n   }\n }\n});\n`}</code></pre>\n    <p>{`Similarly, you can add locale config for dayjs while registering translation via `}<inlineCode parentName=\"p\">{`registerTranslation`}</inlineCode>{` function.`}</p>\n    <p>{`e.g.,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`const i18n = new Streami18n();\n\ni18n.registerTranslation(\n 'hi',\n {\n    \"Start Typing...\": \"टाइप करना शुरू करें ...\",\n    \"Type your post...\": \"अपनी पोस्ट लिखें ...\",\n    \"You have 1 new notification\": \"आपके पास 1 नई नोटिफिकेशन है\",\n    \"You have {{ notificationCount }} new notifications\": \"आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है\",\n },\n {\n   months: [...],\n   monthsShort: [...],\n   calendar: {\n     sameDay: ...'\n   }\n }\n);\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Provide your own Moment object`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`import 'moment/locale/nl';\nimport 'moment/locale/it';\n// or if you want to include all locales\nimport 'moment/min/locales';\n\nimport Moment from moment\n\nconst i18n = new Streami18n({\n language: 'nl',\n DateTimeParser: Moment\n})\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Provide your own Dayjs object`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`import Dayjs from 'dayjs';\n\nimport 'dayjs/locale/nl';\nimport 'dayjs/locale/it';\n\nconst i18n = new Streami18n({\n  language: 'nl',\n  DateTimeParser: Dayjs,\n});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{` Please note here that locales in `}<inlineCode parentName=\"p\">{`dayjs/locale/it`}</inlineCode>{` (and all other language locale files), does not load calendar related\nconfig like 'today at', 'tomorrow at' etc. You will need to manually configure calendar locale using `}<a parentName=\"p\" {...{\n        \"href\": \"https://day.js.org/docs/en/plugin/update-locale\"\n      }}>{`updateLocale`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`TIPS`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`If you would like to stick with english language for datetimes in Stream compoments,\nyou can set `}<inlineCode parentName=\"li\">{`disableDateTimeTranslations`}</inlineCode>{` to true.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`const i18n = new Streami18n({\n  language: 'nl',\n  disableDateTimeTranslations: false,\n});\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`If you want to disable all the warnings, you can override logger option:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`const i18n = new Streami18n({\n  language: 'nl',\n  logger: () => null,\n});\n`}</code></pre>\n    <p>{`The default `}<inlineCode parentName=\"p\">{`en`}</inlineCode>{` locale config from dayjs is as follow:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`{\n  \"months\": [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  \"monthsShort\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  \"week\": {\n    \"dow\": 0,\n    \"doy\": 6\n  },\n  \"weekdays\": [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  \"weekdaysMin\": [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  \"weekdaysShort\": [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  \"calendar\": {\n    \"sameDay\": \"[Today at] LT\",\n    \"nextDay\": \"[Tomorrow at] LT\",\n    \"nextWeek\": \"dddd [at] LT\",\n    \"lastDay\": \"[Yesterday at] LT\",\n    \"lastWeek\": \"[Last] dddd [at] LT\",\n    \"sameElse\": \"L\"\n  },\n  \"formats\": {\n    \"LTS\": \"h:mm:ss A\",\n    \"LT\": \"h:mm A\",\n    \"L\": \"MM/DD/YYYY\",\n    \"LL\": \"MMMM D, YYYY\",\n    \"LLL\": \"MMMM D, YYYY h:mm A\",\n    \"LLLL\": \"dddd, MMMM D, YYYY h:mm A\"\n  },\n  \"invalidDate\": \"Invalid date\",\n  \"ordinal\": \"%d.\",\n  \"dayOfMonthOrdinalParse\": /\\\\\\\\d{1,2}(th|st|nd|rd)/,\n  \"relativeTime\": {\n    \"future\": \"in %s\",\n    \"past\": \"%s ago\",\n    \"s\": \"a few seconds\",\n    \"ss\": \"%d seconds\",\n    \"m\": \"a minute\",\n    \"mm\": \"%d minutes\",\n    \"h\": \"an hour\",\n    \"hh\": \"%d hours\",\n    \"d\": \"a day\",\n    \"dd\": \"%d days\",\n    \"M\": \"a month\",\n    \"MM\": \"%d months\",\n    \"y\": \"a year\",\n    \"yy\": \"%d years\"\n  },\n  \"meridiemParse\": /[ap]\\\\\\\\.?m?\\\\\\\\.?/i,\n  \"abbr\": \"en\"\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}