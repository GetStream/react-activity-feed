(function (exports, React, _reactDom) {
  'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
  var _reactDom__default = /*#__PURE__*/_interopDefaultLegacy(_reactDom);

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function () {
      var self = this,
          args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }

  function _defineProperty$5(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _arrayWithHoles$3(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit$3(arr, i) {
    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;

    var _s, _e;

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _arrayLikeToArray$5(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }

  function _unsupportedIterableToArray$5(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray$5(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen);
  }

  function _nonIterableRest$3() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function _slicedToArray$3(arr, i) {
    return _arrayWithHoles$3(arr) || _iterableToArrayLimit$3(arr, i) || _unsupportedIterableToArray$5(arr, i) || _nonIterableRest$3();
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getDefaultExportFromCjs (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function getAugmentedNamespace(n) {
  	if (n.__esModule) return n;
  	var a = Object.defineProperty({}, '__esModule', {value: true});
  	Object.keys(n).forEach(function (k) {
  		var d = Object.getOwnPropertyDescriptor(n, k);
  		Object.defineProperty(a, k, d.get ? d : {
  			enumerable: true,
  			get: function () {
  				return n[k];
  			}
  		});
  	});
  	return a;
  }

  function createCommonjsModule(fn) {
    var module = { exports: {} };
  	return fn(module, module.exports), module.exports;
  }

  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var runtime_1 = createCommonjsModule(function (module) {
  var runtime = (function (exports) {

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined$1; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function define(obj, key, value) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
      return obj[key];
    }
    try {
      // IE 8 has a broken Object.defineProperty that only works on DOM objects.
      define({}, "");
    } catch (err) {
      define = function(obj, key, value) {
        return obj[key] = value;
      };
    }

    function wrap(innerFn, outerFn, self, tryLocsList) {
      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);

      // The ._invoke method unifies the implementations of the .next,
      // .throw, and .return methods.
      generator._invoke = makeInvokeMethod(innerFn, self, context);

      return generator;
    }
    exports.wrap = wrap;

    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
      try {
        return { type: "normal", arg: fn.call(obj, arg) };
      } catch (err) {
        return { type: "throw", arg: err };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";

    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};

    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}

    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype &&
        NativeIteratorPrototype !== Op &&
        hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      // This environment has a native %IteratorPrototype%; use it instead
      // of the polyfill.
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype =
      Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunction.displayName = define(
      GeneratorFunctionPrototype,
      toStringTagSymbol,
      "GeneratorFunction"
    );

    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function(method) {
        define(prototype, method, function(arg) {
          return this._invoke(method, arg);
        });
      });
    }

    exports.isGeneratorFunction = function(genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor
        ? ctor === GeneratorFunction ||
          // For the native GeneratorFunction constructor, the best we can
          // do is to check its .name property.
          (ctor.displayName || ctor.name) === "GeneratorFunction"
        : false;
    };

    exports.mark = function(genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;
        define(genFun, toStringTagSymbol, "GeneratorFunction");
      }
      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    exports.awrap = function(arg) {
      return { __await: arg };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);
        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;
          if (value &&
              typeof value === "object" &&
              hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function(value) {
              invoke("next", value, resolve, reject);
            }, function(err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function(unwrapped) {
            // When a yielded Promise is resolved, its final value becomes
            // the .value of the Promise<{value,done}> result for the
            // current iteration.
            result.value = unwrapped;
            resolve(result);
          }, function(error) {
            // If a rejected Promise was yielded, throw the rejection back
            // into the async generator function so it can be handled there.
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function(resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise =
          // If enqueue has been called before, then we want to wait until
          // all previous Promises have been resolved before calling invoke,
          // so that results are always delivered in the correct order. If
          // enqueue has not been called before, then it is important to
          // call invoke immediately, without waiting on a callback to fire,
          // so that the async generator function has the opportunity to do
          // any necessary setup in a predictable way. This predictability
          // is why the Promise constructor synchronously invokes its
          // executor callback, and why async functions synchronously
          // execute code before the first await. Since we implement simple
          // async functions in terms of async generators, it is especially
          // important to get this right, even though it requires care.
          previousPromise ? previousPromise.then(
            callInvokeWithMethodAndArg,
            // Avoid propagating failures to Promises returned by later
            // invocations of the iterator.
            callInvokeWithMethodAndArg
          ) : callInvokeWithMethodAndArg();
      }

      // Define the unified helper method that is used to implement .next,
      // .throw, and .return (see defineIteratorMethods).
      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);
    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };
    exports.AsyncIterator = AsyncIterator;

    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === void 0) PromiseImpl = Promise;

      var iter = new AsyncIterator(
        wrap(innerFn, outerFn, self, tryLocsList),
        PromiseImpl
      );

      return exports.isGeneratorFunction(outerFn)
        ? iter // If outerFn is a generator, return the full iterator.
        : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
          });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;

      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          // Be forgiving, per 25.3.3.3.3 of the spec:
          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            // Setting context._sent for legacy support of Babel's
            // function.sent implementation.
            context.sent = context._sent = context.arg;

          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);

          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;

          var record = tryCatch(innerFn, self, context);
          if (record.type === "normal") {
            // If an exception is thrown from innerFn, we leave state ===
            // GenStateExecuting and loop back for another invocation.
            state = context.done
              ? GenStateCompleted
              : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };

          } else if (record.type === "throw") {
            state = GenStateCompleted;
            // Dispatch the exception by looping back around to the
            // context.dispatchException(context.arg) call above.
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];
      if (method === undefined$1) {
        // A .throw or .return when the delegate iterator has no .throw
        // method always terminates the yield* loop.
        context.delegate = null;

        if (context.method === "throw") {
          // Note: ["return"] must be used for ES3 parsing compatibility.
          if (delegate.iterator["return"]) {
            // If the delegate iterator has a return method, give it a
            // chance to clean up.
            context.method = "return";
            context.arg = undefined$1;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              // If maybeInvokeDelegate(context) changed context.method from
              // "return" to "throw", let that override the TypeError below.
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError(
            "The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (! info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        // Assign the result of the finished delegate to the temporary
        // variable specified by delegate.resultName (see delegateYield).
        context[delegate.resultName] = info.value;

        // Resume execution at the desired location (see delegateYield).
        context.next = delegate.nextLoc;

        // If context.method was "throw" but the delegate handled the
        // exception, let the outer generator proceed normally. If
        // context.method was "next", forget context.arg since it has been
        // "consumed" by the delegate iterator. If context.method was
        // "return", allow the original .return call to continue in the
        // outer generator.
        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined$1;
        }

      } else {
        // Re-yield the result returned by the delegate method.
        return info;
      }

      // The delegate iterator is finished, so forget it and continue with
      // the outer generator.
      context.delegate = null;
      return ContinueSentinel;
    }

    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);

    define(Gp, toStringTagSymbol, "Generator");

    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    Gp[iteratorSymbol] = function() {
      return this;
    };

    Gp.toString = function() {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = { tryLoc: locs[0] };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      // The root entry object (effectively a try statement without a catch
      // or a finally block) gives us a place to store values thrown from
      // locations where there is no enclosing try statement.
      this.tryEntries = [{ tryLoc: "root" }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function(object) {
      var keys = [];
      for (var key in object) {
        keys.push(key);
      }
      keys.reverse();

      // Rather than returning an object with a next method, we keep
      // things simple and return the next function itself.
      return function next() {
        while (keys.length) {
          var key = keys.pop();
          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        // To avoid creating an additional object, we just hang the .value
        // and .done properties off the next function object itself. This
        // also ensures that the minifier will not anonymize the function.
        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1, next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined$1;
            next.done = true;

            return next;
          };

          return next.next = next;
        }
      }

      // Return an iterator with no values.
      return { next: doneResult };
    }
    exports.values = values;

    function doneResult() {
      return { value: undefined$1, done: true };
    }

    Context.prototype = {
      constructor: Context,

      reset: function(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        // Resetting context._sent for legacy support of Babel's
        // function.sent implementation.
        this.sent = this._sent = undefined$1;
        this.done = false;
        this.delegate = null;

        this.method = "next";
        this.arg = undefined$1;

        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            // Not sure about the optimal order of these conditions:
            if (name.charAt(0) === "t" &&
                hasOwn.call(this, name) &&
                !isNaN(+name.slice(1))) {
              this[name] = undefined$1;
            }
          }
        }
      },

      stop: function() {
        this.done = true;

        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;
        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },

      dispatchException: function(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;
        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            // If the dispatched exception was caught by a catch block,
            // then let that catch block handle the exception normally.
            context.method = "next";
            context.arg = undefined$1;
          }

          return !! caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            // Exception thrown outside of any try block that could handle
            // it, so set the completion value of the entire function to
            // throw the exception.
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }

            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }

            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }

            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },

      abrupt: function(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev &&
              hasOwn.call(entry, "finallyLoc") &&
              this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry &&
            (type === "break" ||
             type === "continue") &&
            finallyEntry.tryLoc <= arg &&
            arg <= finallyEntry.finallyLoc) {
          // Ignore the finally entry if control is not jumping to a
          // location outside the try/catch block.
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },

      complete: function(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" ||
            record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },

      finish: function(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },

      "catch": function(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }

        // The context.catch method must only be called with a location
        // argument that corresponds to a known catch block.
        throw new Error("illegal catch attempt");
      },

      delegateYield: function(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          // Deliberately forget the last sent value so that we don't
          // accidentally pass it on to the delegate.
          this.arg = undefined$1;
        }

        return ContinueSentinel;
      }
    };

    // Regardless of whether this script is executing as a CommonJS module
    // or not, return the runtime object so that we can declare the variable
    // regeneratorRuntime in the outer scope, which allows this module to be
    // injected easily by `bin/regenerator --include-runtime script.js`.
    return exports;

  }(
    // If this script is executing as a CommonJS module, use module.exports
    // as the regeneratorRuntime namespace. Otherwise create a new empty
    // object. Either way, the resulting object will be used to initialize
    // the regeneratorRuntime variable at the top of this file.
    module.exports 
  ));

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    // This module should not be running in strict mode, so the above
    // assignment should always work unless something is misconfigured. Just
    // in case runtime.js accidentally runs in strict mode, we can escape
    // strict mode using a global Function call. This could conceivably fail
    // if a Content Security Policy forbids using Function, but in that case
    // the proper solution is to fix the accidental strict mode problem. If
    // you've misconfigured your bundler to force strict mode and applied a
    // CSP to forbid Function, and you're not willing to fix either of those
    // problems, please detail your unique predicament in a GitHub issue.
    Function("r", "regeneratorRuntime = r")(runtime);
  }
  });

  var regenerator$1 = runtime_1;

  var _nodeResolve_empty = {};

  var _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': _nodeResolve_empty
  });

  var errors$3 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.InvalidInputData = exports.APIError = exports.MisconfiguredClient = exports.MissingUserId = void 0;
  var canCapture = typeof Error.captureStackTrace === 'function';
  var canStack = !!new Error().stack;
  // workaround for ES5 compilation to preserve the Error class
  var ErrorAbstract = function (message) {
      Error.call(this, message);
      this.message = message;
      this.name = this.constructor.name;
      if (canCapture)
          Error.captureStackTrace(this);
      else if (canStack)
          this.stack = new Error().stack;
      else
          this.stack = '';
  };
  ErrorAbstract.prototype = Object.create(Error.prototype);
  var MissingUserId = /** @class */ (function (_super) {
      __extends(MissingUserId, _super);
      function MissingUserId() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      return MissingUserId;
  }(ErrorAbstract));
  exports.MissingUserId = MissingUserId;
  var MisconfiguredClient = /** @class */ (function (_super) {
      __extends(MisconfiguredClient, _super);
      function MisconfiguredClient() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      return MisconfiguredClient;
  }(ErrorAbstract));
  exports.MisconfiguredClient = MisconfiguredClient;
  var APIError = /** @class */ (function (_super) {
      __extends(APIError, _super);
      function APIError(msg, response) {
          var _this = _super.call(this, msg) || this;
          _this.response = response;
          return _this;
      }
      return APIError;
  }(ErrorAbstract));
  exports.APIError = APIError;
  var InvalidInputData = /** @class */ (function (_super) {
      __extends(InvalidInputData, _super);
      function InvalidInputData(msg, errorInfo) {
          return _super.call(this, msg + ": \n\t" + errorInfo.join('\n\t')) || this;
      }
      return InvalidInputData;
  }(ErrorAbstract));
  exports.InvalidInputData = InvalidInputData;
  });

  var specs = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.validateImpression = exports.validateEngagement = void 0;
  function isForeginIdType(content) {
      return typeof content === 'object';
  }
  var validateFeatures = function (features) {
      if (!features)
          return '';
      if (!Array.isArray(features))
          return 'features should be array';
      for (var i = 0; i < features.length; i += 1) {
          if (!features[i].group || typeof features[i].group !== 'string')
              return 'feature.group should be string';
          if (!features[i].value || typeof features[i].value !== 'string')
              return 'feature.value should be string';
      }
      return '';
  };
  exports.validateEngagement = function (engagement) {
      if (!engagement)
          return ['engagement should be an object'];
      var errors = [];
      if (!engagement.label && typeof engagement.label !== 'string')
          errors.push('label should be string');
      if (!engagement.content || (typeof engagement.content !== 'string' && typeof engagement.content !== 'object'))
          errors.push('content should be string or object');
      if (isForeginIdType(engagement.content) && !engagement.content.foreign_id)
          errors.push('content.foreign_id should be string');
      if (engagement.position !== undefined && typeof engagement.position !== 'number')
          errors.push('position should be number');
      if (engagement.score !== undefined && typeof engagement.score !== 'number')
          errors.push('score should be number');
      if (engagement.boost !== undefined && typeof engagement.boost !== 'number')
          errors.push('boost should be number');
      if (engagement.feed_id !== undefined && typeof engagement.feed_id !== 'string')
          errors.push('feed_id should be string)');
      if (engagement.location !== undefined && typeof engagement.location !== 'string')
          errors.push('location should be string');
      var featureErr = validateFeatures(engagement.features);
      if (featureErr)
          errors.push(featureErr);
      return errors.length ? errors : false;
  };
  exports.validateImpression = function (impression) {
      if (!impression)
          return ['impression should be an object'];
      var errors = [];
      if (!Array.isArray(impression.content_list) || !impression.content_list.length)
          errors.push('content should be array of strings or objects');
      if (Array.isArray(impression.content_list))
          impression.content_list.forEach(function (content, i) {
              if (isForeginIdType(content) && !content.foreign_id)
                  errors.push("content_list[" + i + "].foreign_id should be string");
          });
      if (impression.feed_id !== undefined && typeof impression.feed_id !== 'string')
          errors.push('feed_id should be string');
      if (impression.location !== undefined && typeof impression.location !== 'string')
          errors.push('location should be string');
      var featureErr = validateFeatures(impression.features);
      if (featureErr)
          errors.push(featureErr);
      return errors.length ? errors : false;
  };
  });

  var name$2 = "stream-analytics";
  var version$3 = "3.4.2";
  var description$1 = "Analytics JS client for GetStream.io.";
  var main$1 = "./lib/stream-analytics.js";
  var module$1 = "./lib/stream-analytics.js";
  var types$1 = "./lib/stream-analytics.d.ts";
  var scripts$1 = {
  	test: "yarn test-node && yarn test-browser",
  	"test-node": "mocha tests --exit",
  	"test-browser": "karma start karma.config.js",
  	lint: "yarn run prettier && yarn run eslint",
  	eslint: "eslint '**/*.{js,ts}' --max-warnings 0",
  	prettier: "prettier --config ./.prettierrc --list-different \"**/*.{js,ts,md,html,json}\"",
  	"prettier-fix": "prettier --config ./.prettierrc --write \"**/*.{js,ts,md,html,json}\"",
  	build: "tsc && webpack && webpack --minify",
  	preversion: "yarn run build && yarn test",
  	version: "git add -A dist",
  	postversion: "git push && git push --tags"
  };
  var repository$1 = {
  	type: "git",
  	url: "git://github.com/GetStream/stream-analytics-js.git"
  };
  var keywords$1 = [
  	"npm",
  	"stream-analytics",
  	"getstream.io",
  	"stream.io"
  ];
  var author$1 = "Tommaso Barbugli <tommaso@getstream.io>";
  var license$1 = "MIT";
  var bugs = {
  	url: "https://github.com/GetStream/stream-analytics-js/issues"
  };
  var homepage$1 = "https://github.com/GetStream/stream-analytics-js";
  var engines$1 = {
  	node: "10 || 12 || >=14"
  };
  var browser$3 = {
  	"cross-fetch": false
  };
  var dependencies$1 = {
  	"cross-fetch": "^3.0.6"
  };
  var devDependencies$1 = {
  	"@types/node": "^14.11.2",
  	"@typescript-eslint/eslint-plugin": "^4.3.0",
  	"@typescript-eslint/parser": "^4.3.0",
  	chai: "^4.2.0",
  	dotenv: "^8.2.0",
  	eslint: "^7.10.0",
  	"eslint-config-airbnb-base": "^14.2.0",
  	"eslint-config-prettier": "^6.12.0",
  	"eslint-plugin-import": "^2.22.1",
  	"eslint-plugin-prettier": "^3.1.4",
  	"eslint-plugin-typescript-sort-keys": "^1.5.0",
  	karma: "^5.2.3",
  	"karma-chrome-launcher": "^3.1.0",
  	"karma-mocha": "^2.0.1",
  	"karma-mocha-reporter": "~2.2.5",
  	"karma-sauce-launcher": "^4.1.5",
  	"karma-sourcemap-loader": "~0.3.8",
  	"karma-webpack": "^4.0.2",
  	mocha: "^8.1.3",
  	prettier: "^2.1.2",
  	"ts-loader": "^8.0.4",
  	typescript: "^4.0.3",
  	webpack: "^4.44.2",
  	"webpack-cli": "^3.3.12"
  };
  var files$2 = [
  	"src",
  	"dist",
  	"lib"
  ];
  var pkg$1 = {
  	name: name$2,
  	version: version$3,
  	description: description$1,
  	main: main$1,
  	module: module$1,
  	types: types$1,
  	scripts: scripts$1,
  	repository: repository$1,
  	keywords: keywords$1,
  	author: author$1,
  	license: license$1,
  	bugs: bugs,
  	homepage: homepage$1,
  	engines: engines$1,
  	browser: browser$3,
  	dependencies: dependencies$1,
  	devDependencies: devDependencies$1,
  	files: files$2
  };

  var _batch_operations = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);

  var __assign$2 = (commonjsGlobal && commonjsGlobal.__assign) || function () {
      __assign$2 = Object.assign || function(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                  t[p] = s[p];
          }
          return t;
      };
      return __assign$2.apply(this, arguments);
  };
  var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
  }) : (function(o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
  }));
  var __setModuleDefault = (commonjsGlobal && commonjsGlobal.__setModuleDefault) || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
  }) : function(o, v) {
      o["default"] = v;
  });
  var __importStar = (commonjsGlobal && commonjsGlobal.__importStar) || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
  };
  var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
      return (mod && mod.__esModule) ? mod : { "default": mod };
  };
  var cross_fetch_1 = __importDefault(_batch_operations);
  var errors$2 = __importStar(errors$3);

  // use native fetch in browser mode to reduce bundle size
  // webpack skip bundling the cross-fetch
  var request = typeof cross_fetch_1.default === 'function' ? cross_fetch_1.default : window.fetch;
   // eslint-disable-line @typescript-eslint/no-var-requires
  var StreamAnalytics = /** @class */ (function () {
      function StreamAnalytics(config) {
          if (!config || !config.apiKey || !config.token) {
              throw new errors$2.MisconfiguredClient('the client must be initialized with apiKey and token');
          }
          this.userData = null;
          this.apiKey = config.apiKey;
          this.token = config.token;
          this.baseUrl = config.baseUrl || 'https://analytics.stream-io-api.com/analytics/v1.0/';
          this.node = typeof window === 'undefined';
      }
      StreamAnalytics.prototype.setUser = function (data) {
          this.userData = data;
      };
      StreamAnalytics.prototype.userAgent = function () {
          return "stream-javascript-analytics-client-" + (this.node ? 'node' : 'browser') + "-" + (pkg$1.version );
      };
      StreamAnalytics.prototype._throwMissingUserData = function (event) {
          if (this.userData || event.user_data)
              return;
          throw new errors$2.MissingUserId('user_data should be in each event or set the default with StreamAnalytics.setUser()');
      };
      StreamAnalytics.prototype._validateAndNormalizeUserData = function (resource, eventList) {
          var _this = this;
          return eventList.map(function (event, i) {
              var err = resource === 'impression'
                  ? specs.validateImpression(event)
                  : specs.validateEngagement(event);
              if (err)
                  throw new errors$2.InvalidInputData('invalid event data', i ? err.map(function (e) { return i + ": " + e; }) : err);
              _this._throwMissingUserData(event);
              return __assign$2(__assign$2({}, event), { user_data: event.user_data || _this.userData });
          });
      };
      StreamAnalytics.prototype._sendEvent = function (resource, eventList) {
          var events = this._validateAndNormalizeUserData(resource, eventList);
          return request(this.baseUrl + resource + "/?api_key=" + this.apiKey, {
              method: 'POST',
              body: JSON.stringify(resource === 'impression' ? events : { content_list: events }),
              headers: {
                  'Content-Type': 'application/json',
                  'X-Stream-Client': this.userAgent(),
                  'stream-auth-type': 'jwt',
                  Authorization: this.token,
              },
          }).then(function (response) {
              if (response.ok)
                  return response.json();
              return response.json().then(function (data) {
                  if (data.detail)
                      throw new errors$2.APIError(response.statusText + ": " + data.detail, response);
                  throw new errors$2.APIError(response.statusText, response);
              });
          });
      };
      StreamAnalytics.prototype.trackImpression = function (eventData) {
          return this.trackImpressions([eventData]);
      };
      StreamAnalytics.prototype.trackImpressions = function (eventDataList) {
          return this._sendEvent('impression', eventDataList);
      };
      StreamAnalytics.prototype.trackEngagement = function (eventData) {
          return this.trackEngagements([eventData]);
      };
      StreamAnalytics.prototype.trackEngagements = function (eventDataList) {
          return this._sendEvent('engagement', eventDataList);
      };
      return StreamAnalytics;
  }());
  StreamAnalytics.errors = errors$2;
  var streamAnalytics = StreamAnalytics;

  var global$1 = (typeof global !== "undefined" ? global :
              typeof self !== "undefined" ? self :
              typeof window !== "undefined" ? window : {});

  // shim for using process in browser
  // based off https://github.com/defunctzombie/node-process/blob/master/browser.js

  function defaultSetTimout() {
      throw new Error('setTimeout has not been defined');
  }
  function defaultClearTimeout () {
      throw new Error('clearTimeout has not been defined');
  }
  var cachedSetTimeout = defaultSetTimout;
  var cachedClearTimeout = defaultClearTimeout;
  if (typeof global$1.setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
  }
  if (typeof global$1.clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
  }

  function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
      }
      // if setTimeout wasn't available but was latter defined
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
      }
      try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
      } catch(e){
          try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
          } catch(e){
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
          }
      }


  }
  function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
      }
      // if clearTimeout wasn't available but was latter defined
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
      }
      try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
      } catch (e){
          try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
          } catch (e){
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
          }
      }



  }
  var queue$1 = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;

  function cleanUpNextTick() {
      if (!draining || !currentQueue) {
          return;
      }
      draining = false;
      if (currentQueue.length) {
          queue$1 = currentQueue.concat(queue$1);
      } else {
          queueIndex = -1;
      }
      if (queue$1.length) {
          drainQueue();
      }
  }

  function drainQueue() {
      if (draining) {
          return;
      }
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;

      var len = queue$1.length;
      while(len) {
          currentQueue = queue$1;
          queue$1 = [];
          while (++queueIndex < len) {
              if (currentQueue) {
                  currentQueue[queueIndex].run();
              }
          }
          queueIndex = -1;
          len = queue$1.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
  }
  function nextTick(fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
          }
      }
      queue$1.push(new Item$1(fun, args));
      if (queue$1.length === 1 && !draining) {
          runTimeout(drainQueue);
      }
  }
  // v8 likes predictible objects
  function Item$1(fun, array) {
      this.fun = fun;
      this.array = array;
  }
  Item$1.prototype.run = function () {
      this.fun.apply(null, this.array);
  };
  var title = 'browser';
  var platform = 'browser';
  var browser$2 = true;
  var env = {};
  var argv = [];
  var version$2 = ''; // empty string to avoid regexp issues
  var versions = {};
  var release = {};
  var config = {};

  function noop$3() {}

  var on = noop$3;
  var addListener = noop$3;
  var once = noop$3;
  var off = noop$3;
  var removeListener = noop$3;
  var removeAllListeners = noop$3;
  var emit = noop$3;

  function binding(name) {
      throw new Error('process.binding is not supported');
  }

  function cwd () { return '/' }
  function chdir (dir) {
      throw new Error('process.chdir is not supported');
  }function umask() { return 0; }

  // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
  var performance = global$1.performance || {};
  var performanceNow =
    performance.now        ||
    performance.mozNow     ||
    performance.msNow      ||
    performance.oNow       ||
    performance.webkitNow  ||
    function(){ return (new Date()).getTime() };

  // generate timestamp or delta
  // see http://nodejs.org/api/process.html#process_process_hrtime
  function hrtime(previousTimestamp){
    var clocktime = performanceNow.call(performance)*1e-3;
    var seconds = Math.floor(clocktime);
    var nanoseconds = Math.floor((clocktime%1)*1e9);
    if (previousTimestamp) {
      seconds = seconds - previousTimestamp[0];
      nanoseconds = nanoseconds - previousTimestamp[1];
      if (nanoseconds<0) {
        seconds--;
        nanoseconds += 1e9;
      }
    }
    return [seconds,nanoseconds]
  }

  var startTime = new Date();
  function uptime() {
    var currentTime = new Date();
    var dif = currentTime - startTime;
    return dif / 1000;
  }

  var process = {
    nextTick: nextTick,
    title: title,
    browser: browser$2,
    env: env,
    argv: argv,
    version: version$2,
    versions: versions,
    on: on,
    addListener: addListener,
    once: once,
    off: off,
    removeListener: removeListener,
    removeAllListeners: removeAllListeners,
    emit: emit,
    binding: binding,
    cwd: cwd,
    chdir: chdir,
    umask: umask,
    hrtime: hrtime,
    platform: platform,
    release: release,
    config: config,
    uptime: uptime
  };

  var _typeof_1$1 = createCommonjsModule(function (module) {
  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };

      module.exports["default"] = module.exports, module.exports.__esModule = true;
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };

      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var interopRequireWildcard$1 = createCommonjsModule(function (module) {
  var _typeof = _typeof_1$1["default"];

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var interopRequireDefault$1 = createCommonjsModule(function (module) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var regenerator = runtime_1;

  var arrayWithHoles = createCommonjsModule(function (module) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var iterableToArrayLimit = createCommonjsModule(function (module) {
  function _iterableToArrayLimit(arr, i) {
    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;

    var _s, _e;

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var arrayLikeToArray = createCommonjsModule(function (module) {
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }

  module.exports = _arrayLikeToArray;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var unsupportedIterableToArray = createCommonjsModule(function (module) {
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
  }

  module.exports = _unsupportedIterableToArray;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var nonIterableRest = createCommonjsModule(function (module) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  module.exports = _nonIterableRest;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var slicedToArray = createCommonjsModule(function (module) {
  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var objectWithoutPropertiesLoose = createCommonjsModule(function (module) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var objectWithoutProperties = createCommonjsModule(function (module) {
  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var asyncToGenerator = createCommonjsModule(function (module) {
  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function () {
      var self = this,
          args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }

  module.exports = _asyncToGenerator;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var classCallCheck$1 = createCommonjsModule(function (module) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var createClass$1 = createCommonjsModule(function (module) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var defineProperty$2 = createCommonjsModule(function (module) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var bind = function bind(fn, thisArg) {
    return function wrap() {
      var args = new Array(arguments.length);
      for (var i = 0; i < args.length; i++) {
        args[i] = arguments[i];
      }
      return fn.apply(thisArg, args);
    };
  };

  /*global toString:true*/

  // utils is a library of generic helper functions non-specific to axios

  var toString$2 = Object.prototype.toString;

  /**
   * Determine if a value is an Array
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Array, otherwise false
   */
  function isArray$2(val) {
    return toString$2.call(val) === '[object Array]';
  }

  /**
   * Determine if a value is undefined
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if the value is undefined, otherwise false
   */
  function isUndefined(val) {
    return typeof val === 'undefined';
  }

  /**
   * Determine if a value is a Buffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Buffer, otherwise false
   */
  function isBuffer(val) {
    return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
      && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
  }

  /**
   * Determine if a value is an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an ArrayBuffer, otherwise false
   */
  function isArrayBuffer(val) {
    return toString$2.call(val) === '[object ArrayBuffer]';
  }

  /**
   * Determine if a value is a FormData
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an FormData, otherwise false
   */
  function isFormData(val) {
    return (typeof FormData !== 'undefined') && (val instanceof FormData);
  }

  /**
   * Determine if a value is a view on an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
   */
  function isArrayBufferView(val) {
    var result;
    if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
      result = ArrayBuffer.isView(val);
    } else {
      result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
    }
    return result;
  }

  /**
   * Determine if a value is a String
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a String, otherwise false
   */
  function isString$1(val) {
    return typeof val === 'string';
  }

  /**
   * Determine if a value is a Number
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Number, otherwise false
   */
  function isNumber(val) {
    return typeof val === 'number';
  }

  /**
   * Determine if a value is an Object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Object, otherwise false
   */
  function isObject$1(val) {
    return val !== null && typeof val === 'object';
  }

  /**
   * Determine if a value is a plain Object
   *
   * @param {Object} val The value to test
   * @return {boolean} True if value is a plain Object, otherwise false
   */
  function isPlainObject$1(val) {
    if (toString$2.call(val) !== '[object Object]') {
      return false;
    }

    var prototype = Object.getPrototypeOf(val);
    return prototype === null || prototype === Object.prototype;
  }

  /**
   * Determine if a value is a Date
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Date, otherwise false
   */
  function isDate(val) {
    return toString$2.call(val) === '[object Date]';
  }

  /**
   * Determine if a value is a File
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a File, otherwise false
   */
  function isFile(val) {
    return toString$2.call(val) === '[object File]';
  }

  /**
   * Determine if a value is a Blob
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Blob, otherwise false
   */
  function isBlob(val) {
    return toString$2.call(val) === '[object Blob]';
  }

  /**
   * Determine if a value is a Function
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Function, otherwise false
   */
  function isFunction$1(val) {
    return toString$2.call(val) === '[object Function]';
  }

  /**
   * Determine if a value is a Stream
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Stream, otherwise false
   */
  function isStream(val) {
    return isObject$1(val) && isFunction$1(val.pipe);
  }

  /**
   * Determine if a value is a URLSearchParams object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a URLSearchParams object, otherwise false
   */
  function isURLSearchParams(val) {
    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
  }

  /**
   * Trim excess whitespace off the beginning and end of a string
   *
   * @param {String} str The String to trim
   * @returns {String} The String freed of excess whitespace
   */
  function trim(str) {
    return str.replace(/^\s*/, '').replace(/\s*$/, '');
  }

  /**
   * Determine if we're running in a standard browser environment
   *
   * This allows axios to run in a web worker, and react-native.
   * Both environments support XMLHttpRequest, but not fully standard globals.
   *
   * web workers:
   *  typeof window -> undefined
   *  typeof document -> undefined
   *
   * react-native:
   *  navigator.product -> 'ReactNative'
   * nativescript
   *  navigator.product -> 'NativeScript' or 'NS'
   */
  function isStandardBrowserEnv() {
    if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                             navigator.product === 'NativeScript' ||
                                             navigator.product === 'NS')) {
      return false;
    }
    return (
      typeof window !== 'undefined' &&
      typeof document !== 'undefined'
    );
  }

  /**
   * Iterate over an Array or an Object invoking a function for each item.
   *
   * If `obj` is an Array callback will be called passing
   * the value, index, and complete array for each item.
   *
   * If 'obj' is an Object callback will be called passing
   * the value, key, and complete object for each property.
   *
   * @param {Object|Array} obj The object to iterate
   * @param {Function} fn The callback to invoke for each item
   */
  function forEach$1(obj, fn) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') {
      return;
    }

    // Force an array if not already something iterable
    if (typeof obj !== 'object') {
      /*eslint no-param-reassign:0*/
      obj = [obj];
    }

    if (isArray$2(obj)) {
      // Iterate over array values
      for (var i = 0, l = obj.length; i < l; i++) {
        fn.call(null, obj[i], i, obj);
      }
    } else {
      // Iterate over object keys
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          fn.call(null, obj[key], key, obj);
        }
      }
    }
  }

  /**
   * Accepts varargs expecting each argument to be an object, then
   * immutably merges the properties of each object and returns result.
   *
   * When multiple objects contain the same key the later object in
   * the arguments list will take precedence.
   *
   * Example:
   *
   * ```js
   * var result = merge({foo: 123}, {foo: 456});
   * console.log(result.foo); // outputs 456
   * ```
   *
   * @param {Object} obj1 Object to merge
   * @returns {Object} Result of all merge properties
   */
  function merge$2(/* obj1, obj2, obj3, ... */) {
    var result = {};
    function assignValue(val, key) {
      if (isPlainObject$1(result[key]) && isPlainObject$1(val)) {
        result[key] = merge$2(result[key], val);
      } else if (isPlainObject$1(val)) {
        result[key] = merge$2({}, val);
      } else if (isArray$2(val)) {
        result[key] = val.slice();
      } else {
        result[key] = val;
      }
    }

    for (var i = 0, l = arguments.length; i < l; i++) {
      forEach$1(arguments[i], assignValue);
    }
    return result;
  }

  /**
   * Extends object a by mutably adding to it the properties of object b.
   *
   * @param {Object} a The object to be extended
   * @param {Object} b The object to copy properties from
   * @param {Object} thisArg The object to bind function to
   * @return {Object} The resulting value of object a
   */
  function extend(a, b, thisArg) {
    forEach$1(b, function assignValue(val, key) {
      if (thisArg && typeof val === 'function') {
        a[key] = bind(val, thisArg);
      } else {
        a[key] = val;
      }
    });
    return a;
  }

  /**
   * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
   *
   * @param {string} content with BOM
   * @return {string} content value without BOM
   */
  function stripBOM(content) {
    if (content.charCodeAt(0) === 0xFEFF) {
      content = content.slice(1);
    }
    return content;
  }

  var utils$2 = {
    isArray: isArray$2,
    isArrayBuffer: isArrayBuffer,
    isBuffer: isBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString$1,
    isNumber: isNumber,
    isObject: isObject$1,
    isPlainObject: isPlainObject$1,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isFunction: isFunction$1,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isStandardBrowserEnv: isStandardBrowserEnv,
    forEach: forEach$1,
    merge: merge$2,
    extend: extend,
    trim: trim,
    stripBOM: stripBOM
  };

  function encode$1(val) {
    return encodeURIComponent(val).
      replace(/%3A/gi, ':').
      replace(/%24/g, '$').
      replace(/%2C/gi, ',').
      replace(/%20/g, '+').
      replace(/%5B/gi, '[').
      replace(/%5D/gi, ']');
  }

  /**
   * Build a URL by appending params to the end
   *
   * @param {string} url The base of the url (e.g., http://www.google.com)
   * @param {object} [params] The params to be appended
   * @returns {string} The formatted url
   */
  var buildURL = function buildURL(url, params, paramsSerializer) {
    /*eslint no-param-reassign:0*/
    if (!params) {
      return url;
    }

    var serializedParams;
    if (paramsSerializer) {
      serializedParams = paramsSerializer(params);
    } else if (utils$2.isURLSearchParams(params)) {
      serializedParams = params.toString();
    } else {
      var parts = [];

      utils$2.forEach(params, function serialize(val, key) {
        if (val === null || typeof val === 'undefined') {
          return;
        }

        if (utils$2.isArray(val)) {
          key = key + '[]';
        } else {
          val = [val];
        }

        utils$2.forEach(val, function parseValue(v) {
          if (utils$2.isDate(v)) {
            v = v.toISOString();
          } else if (utils$2.isObject(v)) {
            v = JSON.stringify(v);
          }
          parts.push(encode$1(key) + '=' + encode$1(v));
        });
      });

      serializedParams = parts.join('&');
    }

    if (serializedParams) {
      var hashmarkIndex = url.indexOf('#');
      if (hashmarkIndex !== -1) {
        url = url.slice(0, hashmarkIndex);
      }

      url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
    }

    return url;
  };

  function InterceptorManager() {
    this.handlers = [];
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  InterceptorManager.prototype.use = function use(fulfilled, rejected) {
    this.handlers.push({
      fulfilled: fulfilled,
      rejected: rejected
    });
    return this.handlers.length - 1;
  };

  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   */
  InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  };

  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   */
  InterceptorManager.prototype.forEach = function forEach(fn) {
    utils$2.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  };

  var InterceptorManager_1 = InterceptorManager;

  /**
   * Transform the data for a request or a response
   *
   * @param {Object|String} data The data to be transformed
   * @param {Array} headers The headers for the request or response
   * @param {Array|Function} fns A single function or Array of functions
   * @returns {*} The resulting transformed data
   */
  var transformData = function transformData(data, headers, fns) {
    /*eslint no-param-reassign:0*/
    utils$2.forEach(fns, function transform(fn) {
      data = fn(data, headers);
    });

    return data;
  };

  var isCancel = function isCancel(value) {
    return !!(value && value.__CANCEL__);
  };

  var normalizeHeaderName = function normalizeHeaderName(headers, normalizedName) {
    utils$2.forEach(headers, function processHeader(value, name) {
      if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
        headers[normalizedName] = value;
        delete headers[name];
      }
    });
  };

  /**
   * Update an Error with the specified config, error code, and response.
   *
   * @param {Error} error The error to update.
   * @param {Object} config The config.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   * @param {Object} [request] The request.
   * @param {Object} [response] The response.
   * @returns {Error} The error.
   */
  var enhanceError = function enhanceError(error, config, code, request, response) {
    error.config = config;
    if (code) {
      error.code = code;
    }

    error.request = request;
    error.response = response;
    error.isAxiosError = true;

    error.toJSON = function toJSON() {
      return {
        // Standard
        message: this.message,
        name: this.name,
        // Microsoft
        description: this.description,
        number: this.number,
        // Mozilla
        fileName: this.fileName,
        lineNumber: this.lineNumber,
        columnNumber: this.columnNumber,
        stack: this.stack,
        // Axios
        config: this.config,
        code: this.code
      };
    };
    return error;
  };

  /**
   * Create an Error with the specified message, config, error code, request and response.
   *
   * @param {string} message The error message.
   * @param {Object} config The config.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   * @param {Object} [request] The request.
   * @param {Object} [response] The response.
   * @returns {Error} The created error.
   */
  var createError = function createError(message, config, code, request, response) {
    var error = new Error(message);
    return enhanceError(error, config, code, request, response);
  };

  /**
   * Resolve or reject a Promise based on response status.
   *
   * @param {Function} resolve A function that resolves the promise.
   * @param {Function} reject A function that rejects the promise.
   * @param {object} response The response.
   */
  var settle$1 = function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus;
    if (!response.status || !validateStatus || validateStatus(response.status)) {
      resolve(response);
    } else {
      reject(createError(
        'Request failed with status code ' + response.status,
        response.config,
        null,
        response.request,
        response
      ));
    }
  };

  var cookies = (
    utils$2.isStandardBrowserEnv() ?

    // Standard browser envs support document.cookie
      (function standardBrowserEnv() {
        return {
          write: function write(name, value, expires, path, domain, secure) {
            var cookie = [];
            cookie.push(name + '=' + encodeURIComponent(value));

            if (utils$2.isNumber(expires)) {
              cookie.push('expires=' + new Date(expires).toGMTString());
            }

            if (utils$2.isString(path)) {
              cookie.push('path=' + path);
            }

            if (utils$2.isString(domain)) {
              cookie.push('domain=' + domain);
            }

            if (secure === true) {
              cookie.push('secure');
            }

            document.cookie = cookie.join('; ');
          },

          read: function read(name) {
            var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
            return (match ? decodeURIComponent(match[3]) : null);
          },

          remove: function remove(name) {
            this.write(name, '', Date.now() - 86400000);
          }
        };
      })() :

    // Non standard browser env (web workers, react-native) lack needed support.
      (function nonStandardBrowserEnv() {
        return {
          write: function write() {},
          read: function read() { return null; },
          remove: function remove() {}
        };
      })()
  );

  /**
   * Determines whether the specified URL is absolute
   *
   * @param {string} url The URL to test
   * @returns {boolean} True if the specified URL is absolute, otherwise false
   */
  var isAbsoluteURL = function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
  };

  /**
   * Creates a new URL by combining the specified URLs
   *
   * @param {string} baseURL The base URL
   * @param {string} relativeURL The relative URL
   * @returns {string} The combined URL
   */
  var combineURLs = function combineURLs(baseURL, relativeURL) {
    return relativeURL
      ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
      : baseURL;
  };

  /**
   * Creates a new URL by combining the baseURL with the requestedURL,
   * only when the requestedURL is not already an absolute URL.
   * If the requestURL is absolute, this function returns the requestedURL untouched.
   *
   * @param {string} baseURL The base URL
   * @param {string} requestedURL Absolute or relative URL to combine
   * @returns {string} The combined full path
   */
  var buildFullPath = function buildFullPath(baseURL, requestedURL) {
    if (baseURL && !isAbsoluteURL(requestedURL)) {
      return combineURLs(baseURL, requestedURL);
    }
    return requestedURL;
  };

  // Headers whose duplicates are ignored by node
  // c.f. https://nodejs.org/api/http.html#http_message_headers
  var ignoreDuplicateOf = [
    'age', 'authorization', 'content-length', 'content-type', 'etag',
    'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
    'last-modified', 'location', 'max-forwards', 'proxy-authorization',
    'referer', 'retry-after', 'user-agent'
  ];

  /**
   * Parse headers into an object
   *
   * ```
   * Date: Wed, 27 Aug 2014 08:58:49 GMT
   * Content-Type: application/json
   * Connection: keep-alive
   * Transfer-Encoding: chunked
   * ```
   *
   * @param {String} headers Headers needing to be parsed
   * @returns {Object} Headers parsed into an object
   */
  var parseHeaders = function parseHeaders(headers) {
    var parsed = {};
    var key;
    var val;
    var i;

    if (!headers) { return parsed; }

    utils$2.forEach(headers.split('\n'), function parser(line) {
      i = line.indexOf(':');
      key = utils$2.trim(line.substr(0, i)).toLowerCase();
      val = utils$2.trim(line.substr(i + 1));

      if (key) {
        if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
          return;
        }
        if (key === 'set-cookie') {
          parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
        } else {
          parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
        }
      }
    });

    return parsed;
  };

  var isURLSameOrigin = (
    utils$2.isStandardBrowserEnv() ?

    // Standard browser envs have full support of the APIs needed to test
    // whether the request URL is of the same origin as current location.
      (function standardBrowserEnv() {
        var msie = /(msie|trident)/i.test(navigator.userAgent);
        var urlParsingNode = document.createElement('a');
        var originURL;

        /**
      * Parse a URL to discover it's components
      *
      * @param {String} url The URL to be parsed
      * @returns {Object}
      */
        function resolveURL(url) {
          var href = url;

          if (msie) {
          // IE needs attribute set twice to normalize properties
            urlParsingNode.setAttribute('href', href);
            href = urlParsingNode.href;
          }

          urlParsingNode.setAttribute('href', href);

          // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
          return {
            href: urlParsingNode.href,
            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
            host: urlParsingNode.host,
            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
            hostname: urlParsingNode.hostname,
            port: urlParsingNode.port,
            pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
              urlParsingNode.pathname :
              '/' + urlParsingNode.pathname
          };
        }

        originURL = resolveURL(window.location.href);

        /**
      * Determine if a URL shares the same origin as the current location
      *
      * @param {String} requestURL The URL to test
      * @returns {boolean} True if URL shares the same origin, otherwise false
      */
        return function isURLSameOrigin(requestURL) {
          var parsed = (utils$2.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
          return (parsed.protocol === originURL.protocol &&
              parsed.host === originURL.host);
        };
      })() :

    // Non standard browser envs (web workers, react-native) lack needed support.
      (function nonStandardBrowserEnv() {
        return function isURLSameOrigin() {
          return true;
        };
      })()
  );

  var xhr$1 = function xhrAdapter(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      var requestData = config.data;
      var requestHeaders = config.headers;

      if (utils$2.isFormData(requestData)) {
        delete requestHeaders['Content-Type']; // Let the browser set it
      }

      var request = new XMLHttpRequest();

      // HTTP basic authentication
      if (config.auth) {
        var username = config.auth.username || '';
        var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
        requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
      }

      var fullPath = buildFullPath(config.baseURL, config.url);
      request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

      // Set the request timeout in MS
      request.timeout = config.timeout;

      // Listen for ready state
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }

        // Prepare the response
        var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
        var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
        var response = {
          data: responseData,
          status: request.status,
          statusText: request.statusText,
          headers: responseHeaders,
          config: config,
          request: request
        };

        settle$1(resolve, reject, response);

        // Clean up request
        request = null;
      };

      // Handle browser request cancellation (as opposed to a manual cancellation)
      request.onabort = function handleAbort() {
        if (!request) {
          return;
        }

        reject(createError('Request aborted', config, 'ECONNABORTED', request));

        // Clean up request
        request = null;
      };

      // Handle low level network errors
      request.onerror = function handleError() {
        // Real errors are hidden from us by the browser
        // onerror should only fire if it's a network error
        reject(createError('Network Error', config, null, request));

        // Clean up request
        request = null;
      };

      // Handle timeout
      request.ontimeout = function handleTimeout() {
        var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
        if (config.timeoutErrorMessage) {
          timeoutErrorMessage = config.timeoutErrorMessage;
        }
        reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
          request));

        // Clean up request
        request = null;
      };

      // Add xsrf header
      // This is only done if running in a standard browser environment.
      // Specifically not if we're in a web worker, or react-native.
      if (utils$2.isStandardBrowserEnv()) {
        // Add xsrf header
        var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

        if (xsrfValue) {
          requestHeaders[config.xsrfHeaderName] = xsrfValue;
        }
      }

      // Add headers to the request
      if ('setRequestHeader' in request) {
        utils$2.forEach(requestHeaders, function setRequestHeader(val, key) {
          if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
            // Remove Content-Type if data is undefined
            delete requestHeaders[key];
          } else {
            // Otherwise add header to the request
            request.setRequestHeader(key, val);
          }
        });
      }

      // Add withCredentials to request if needed
      if (!utils$2.isUndefined(config.withCredentials)) {
        request.withCredentials = !!config.withCredentials;
      }

      // Add responseType to request if needed
      if (config.responseType) {
        try {
          request.responseType = config.responseType;
        } catch (e) {
          // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
          // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
          if (config.responseType !== 'json') {
            throw e;
          }
        }
      }

      // Handle progress if needed
      if (typeof config.onDownloadProgress === 'function') {
        request.addEventListener('progress', config.onDownloadProgress);
      }

      // Not all browsers support upload events
      if (typeof config.onUploadProgress === 'function' && request.upload) {
        request.upload.addEventListener('progress', config.onUploadProgress);
      }

      if (config.cancelToken) {
        // Handle cancellation
        config.cancelToken.promise.then(function onCanceled(cancel) {
          if (!request) {
            return;
          }

          request.abort();
          reject(cancel);
          // Clean up request
          request = null;
        });
      }

      if (!requestData) {
        requestData = null;
      }

      // Send the request
      request.send(requestData);
    });
  };

  var DEFAULT_CONTENT_TYPE = {
    'Content-Type': 'application/x-www-form-urlencoded'
  };

  function setContentTypeIfUnset(headers, value) {
    if (!utils$2.isUndefined(headers) && utils$2.isUndefined(headers['Content-Type'])) {
      headers['Content-Type'] = value;
    }
  }

  function getDefaultAdapter() {
    var adapter;
    if (typeof XMLHttpRequest !== 'undefined') {
      // For browsers use XHR adapter
      adapter = xhr$1;
    } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
      // For node use HTTP adapter
      adapter = xhr$1;
    }
    return adapter;
  }

  var defaults$1 = {
    adapter: getDefaultAdapter(),

    transformRequest: [function transformRequest(data, headers) {
      normalizeHeaderName(headers, 'Accept');
      normalizeHeaderName(headers, 'Content-Type');
      if (utils$2.isFormData(data) ||
        utils$2.isArrayBuffer(data) ||
        utils$2.isBuffer(data) ||
        utils$2.isStream(data) ||
        utils$2.isFile(data) ||
        utils$2.isBlob(data)
      ) {
        return data;
      }
      if (utils$2.isArrayBufferView(data)) {
        return data.buffer;
      }
      if (utils$2.isURLSearchParams(data)) {
        setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
        return data.toString();
      }
      if (utils$2.isObject(data)) {
        setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
        return JSON.stringify(data);
      }
      return data;
    }],

    transformResponse: [function transformResponse(data) {
      /*eslint no-param-reassign:0*/
      if (typeof data === 'string') {
        try {
          data = JSON.parse(data);
        } catch (e) { /* Ignore */ }
      }
      return data;
    }],

    /**
     * A timeout in milliseconds to abort a request. If set to 0 (default) a
     * timeout is not created.
     */
    timeout: 0,

    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',

    maxContentLength: -1,
    maxBodyLength: -1,

    validateStatus: function validateStatus(status) {
      return status >= 200 && status < 300;
    }
  };

  defaults$1.headers = {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  };

  utils$2.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
    defaults$1.headers[method] = {};
  });

  utils$2.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    defaults$1.headers[method] = utils$2.merge(DEFAULT_CONTENT_TYPE);
  });

  var defaults_1$1 = defaults$1;

  /**
   * Throws a `Cancel` if cancellation has been requested.
   */
  function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
      config.cancelToken.throwIfRequested();
    }
  }

  /**
   * Dispatch a request to the server using the configured adapter.
   *
   * @param {object} config The config that is to be used for the request
   * @returns {Promise} The Promise to be fulfilled
   */
  var dispatchRequest = function dispatchRequest(config) {
    throwIfCancellationRequested(config);

    // Ensure headers exist
    config.headers = config.headers || {};

    // Transform request data
    config.data = transformData(
      config.data,
      config.headers,
      config.transformRequest
    );

    // Flatten headers
    config.headers = utils$2.merge(
      config.headers.common || {},
      config.headers[config.method] || {},
      config.headers
    );

    utils$2.forEach(
      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
      function cleanHeaderConfig(method) {
        delete config.headers[method];
      }
    );

    var adapter = config.adapter || defaults_1$1.adapter;

    return adapter(config).then(function onAdapterResolution(response) {
      throwIfCancellationRequested(config);

      // Transform response data
      response.data = transformData(
        response.data,
        response.headers,
        config.transformResponse
      );

      return response;
    }, function onAdapterRejection(reason) {
      if (!isCancel(reason)) {
        throwIfCancellationRequested(config);

        // Transform response data
        if (reason && reason.response) {
          reason.response.data = transformData(
            reason.response.data,
            reason.response.headers,
            config.transformResponse
          );
        }
      }

      return Promise.reject(reason);
    });
  };

  /**
   * Config-specific merge-function which creates a new config-object
   * by merging two configuration objects together.
   *
   * @param {Object} config1
   * @param {Object} config2
   * @returns {Object} New object resulting from merging config2 to config1
   */
  var mergeConfig = function mergeConfig(config1, config2) {
    // eslint-disable-next-line no-param-reassign
    config2 = config2 || {};
    var config = {};

    var valueFromConfig2Keys = ['url', 'method', 'data'];
    var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
    var defaultToConfig2Keys = [
      'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
      'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
      'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
      'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
      'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
    ];
    var directMergeKeys = ['validateStatus'];

    function getMergedValue(target, source) {
      if (utils$2.isPlainObject(target) && utils$2.isPlainObject(source)) {
        return utils$2.merge(target, source);
      } else if (utils$2.isPlainObject(source)) {
        return utils$2.merge({}, source);
      } else if (utils$2.isArray(source)) {
        return source.slice();
      }
      return source;
    }

    function mergeDeepProperties(prop) {
      if (!utils$2.isUndefined(config2[prop])) {
        config[prop] = getMergedValue(config1[prop], config2[prop]);
      } else if (!utils$2.isUndefined(config1[prop])) {
        config[prop] = getMergedValue(undefined, config1[prop]);
      }
    }

    utils$2.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
      if (!utils$2.isUndefined(config2[prop])) {
        config[prop] = getMergedValue(undefined, config2[prop]);
      }
    });

    utils$2.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

    utils$2.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
      if (!utils$2.isUndefined(config2[prop])) {
        config[prop] = getMergedValue(undefined, config2[prop]);
      } else if (!utils$2.isUndefined(config1[prop])) {
        config[prop] = getMergedValue(undefined, config1[prop]);
      }
    });

    utils$2.forEach(directMergeKeys, function merge(prop) {
      if (prop in config2) {
        config[prop] = getMergedValue(config1[prop], config2[prop]);
      } else if (prop in config1) {
        config[prop] = getMergedValue(undefined, config1[prop]);
      }
    });

    var axiosKeys = valueFromConfig2Keys
      .concat(mergeDeepPropertiesKeys)
      .concat(defaultToConfig2Keys)
      .concat(directMergeKeys);

    var otherKeys = Object
      .keys(config1)
      .concat(Object.keys(config2))
      .filter(function filterAxiosKeys(key) {
        return axiosKeys.indexOf(key) === -1;
      });

    utils$2.forEach(otherKeys, mergeDeepProperties);

    return config;
  };

  /**
   * Create a new instance of Axios
   *
   * @param {Object} instanceConfig The default config for the instance
   */
  function Axios(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new InterceptorManager_1(),
      response: new InterceptorManager_1()
    };
  }

  /**
   * Dispatch a request
   *
   * @param {Object} config The config specific for this request (merged with this.defaults)
   */
  Axios.prototype.request = function request(config) {
    /*eslint no-param-reassign:0*/
    // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof config === 'string') {
      config = arguments[1] || {};
      config.url = arguments[0];
    } else {
      config = config || {};
    }

    config = mergeConfig(this.defaults, config);

    // Set config.method
    if (config.method) {
      config.method = config.method.toLowerCase();
    } else if (this.defaults.method) {
      config.method = this.defaults.method.toLowerCase();
    } else {
      config.method = 'get';
    }

    // Hook up interceptors middleware
    var chain = [dispatchRequest, undefined];
    var promise = Promise.resolve(config);

    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      chain.unshift(interceptor.fulfilled, interceptor.rejected);
    });

    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      chain.push(interceptor.fulfilled, interceptor.rejected);
    });

    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  };

  Axios.prototype.getUri = function getUri(config) {
    config = mergeConfig(this.defaults, config);
    return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
  };

  // Provide aliases for supported request methods
  utils$2.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function(url, config) {
      return this.request(mergeConfig(config || {}, {
        method: method,
        url: url,
        data: (config || {}).data
      }));
    };
  });

  utils$2.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method: method,
        url: url,
        data: data
      }));
    };
  });

  var Axios_1 = Axios;

  /**
   * A `Cancel` is an object that is thrown when an operation is canceled.
   *
   * @class
   * @param {string=} message The message.
   */
  function Cancel(message) {
    this.message = message;
  }

  Cancel.prototype.toString = function toString() {
    return 'Cancel' + (this.message ? ': ' + this.message : '');
  };

  Cancel.prototype.__CANCEL__ = true;

  var Cancel_1 = Cancel;

  /**
   * A `CancelToken` is an object that can be used to request cancellation of an operation.
   *
   * @class
   * @param {Function} executor The executor function.
   */
  function CancelToken(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }

    var resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });

    var token = this;
    executor(function cancel(message) {
      if (token.reason) {
        // Cancellation has already been requested
        return;
      }

      token.reason = new Cancel_1(message);
      resolvePromise(token.reason);
    });
  }

  /**
   * Throws a `Cancel` if cancellation has been requested.
   */
  CancelToken.prototype.throwIfRequested = function throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  };

  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  CancelToken.source = function source() {
    var cancel;
    var token = new CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token: token,
      cancel: cancel
    };
  };

  var CancelToken_1 = CancelToken;

  /**
   * Syntactic sugar for invoking a function and expanding an array for arguments.
   *
   * Common use case would be to use `Function.prototype.apply`.
   *
   *  ```js
   *  function f(x, y, z) {}
   *  var args = [1, 2, 3];
   *  f.apply(null, args);
   *  ```
   *
   * With `spread` this example can be re-written.
   *
   *  ```js
   *  spread(function(x, y, z) {})([1, 2, 3]);
   *  ```
   *
   * @param {Function} callback
   * @returns {Function}
   */
  var spread = function spread(callback) {
    return function wrap(arr) {
      return callback.apply(null, arr);
    };
  };

  /**
   * Determines whether the payload is an error thrown by Axios
   *
   * @param {*} payload The value to test
   * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
   */
  var isAxiosError = function isAxiosError(payload) {
    return (typeof payload === 'object') && (payload.isAxiosError === true);
  };

  /**
   * Create an instance of Axios
   *
   * @param {Object} defaultConfig The default config for the instance
   * @return {Axios} A new instance of Axios
   */
  function createInstance(defaultConfig) {
    var context = new Axios_1(defaultConfig);
    var instance = bind(Axios_1.prototype.request, context);

    // Copy axios.prototype to instance
    utils$2.extend(instance, Axios_1.prototype, context);

    // Copy context to instance
    utils$2.extend(instance, context);

    return instance;
  }

  // Create the default instance to be exported
  var axios$1 = createInstance(defaults_1$1);

  // Expose Axios class to allow class inheritance
  axios$1.Axios = Axios_1;

  // Factory for creating new instances
  axios$1.create = function create(instanceConfig) {
    return createInstance(mergeConfig(axios$1.defaults, instanceConfig));
  };

  // Expose Cancel & CancelToken
  axios$1.Cancel = Cancel_1;
  axios$1.CancelToken = CancelToken_1;
  axios$1.isCancel = isCancel;

  // Expose all/spread
  axios$1.all = function all(promises) {
    return Promise.all(promises);
  };
  axios$1.spread = spread;

  // Expose isAxiosError
  axios$1.isAxiosError = isAxiosError;

  var axios_1 = axios$1;

  // Allow use of default import syntax in TypeScript
  var _default$2 = axios$1;
  axios_1.default = _default$2;

  var axios = axios_1;

  var constants = {
    VERSION:          '1.4.0',

    BAYEUX_VERSION:   '1.0',
    ID_LENGTH:        160,
    JSONP_CALLBACK:   'jsonpcallback',
    CONNECTION_TYPES: ['long-polling', 'cross-origin-long-polling', 'callback-polling', 'websocket', 'eventsource', 'in-process'],

    MANDATORY_CONNECTION_TYPES: ['long-polling', 'callback-polling', 'in-process']
  };

  // http://assanka.net/content/tech/2009/09/02/json2-js-vs-prototype/

  var to_json = function(object) {
    return JSON.stringify(object, function(key, value) {
      return (this[key] instanceof Array) ? this[key] : value;
    });
  };

  var Logging = {
    LOG_LEVELS: {
      fatal:  4,
      error:  3,
      warn:   2,
      info:   1,
      debug:  0
    },

    writeLog: function(messageArgs, level) {
      var logger = Logging.logger || (Logging.wrapper || Logging).logger;
      if (!logger) return;

      var args   = Array.prototype.slice.apply(messageArgs),
          banner = '[Faye',
          klass  = this.className,

          message = args.shift().replace(/\?/g, function() {
            try {
              return to_json(args.shift());
            } catch (error) {
              return '[Object]';
            }
          });

      if (klass) banner += '.' + klass;
      banner += '] ';

      if (typeof logger[level] === 'function')
        logger[level](banner + message);
      else if (typeof logger === 'function')
        logger(banner + message);
    }
  };

  for (var key in Logging.LOG_LEVELS)
    (function(level) {
      Logging[level] = function() {
        this.writeLog(arguments, level);
      };
    })(key);

  var logging = Logging;

  // Use the fastest means possible to execute a task in its own turn, with
  // priority over other events including IO, animation, reflow, and redraw
  // events in browsers.
  //
  // An exception thrown by a task will permanently interrupt the processing of
  // subsequent tasks. The higher level `asap` function ensures that if an
  // exception is thrown by a task, that the task queue will continue flushing as
  // soon as possible, but if you use `rawAsap` directly, you are responsible to
  // either ensure that no exceptions are thrown from your task, or to manually
  // call `rawAsap.requestFlush` if an exception is thrown.
  var browserRaw = rawAsap;
  function rawAsap(task) {
      if (!queue.length) {
          requestFlush();
      }
      // Equivalent to push, but avoids a function call.
      queue[queue.length] = task;
  }

  var queue = [];
  // `requestFlush` is an implementation-specific method that attempts to kick
  // off a `flush` event as quickly as possible. `flush` will attempt to exhaust
  // the event queue before yielding to the browser's own event loop.
  var requestFlush;
  // The position of the next task to execute in the task queue. This is
  // preserved between calls to `flush` so that it can be resumed if
  // a task throws an exception.
  var index = 0;
  // If a task schedules additional tasks recursively, the task queue can grow
  // unbounded. To prevent memory exhaustion, the task queue will periodically
  // truncate already-completed tasks.
  var capacity = 1024;

  // The flush function processes all tasks that have been scheduled with
  // `rawAsap` unless and until one of those tasks throws an exception.
  // If a task throws an exception, `flush` ensures that its state will remain
  // consistent and will resume where it left off when called again.
  // However, `flush` does not make any arrangements to be called again if an
  // exception is thrown.
  function flush() {
      while (index < queue.length) {
          var currentIndex = index;
          // Advance the index before calling the task. This ensures that we will
          // begin flushing on the next task the task throws an error.
          index = index + 1;
          queue[currentIndex].call();
          // Prevent leaking memory for long chains of recursive calls to `asap`.
          // If we call `asap` within tasks scheduled by `asap`, the queue will
          // grow, but to avoid an O(n) walk for every task we execute, we don't
          // shift tasks off the queue after they have been executed.
          // Instead, we periodically shift 1024 tasks off the queue.
          if (index > capacity) {
              // Manually shift all values starting at the index back to the
              // beginning of the queue.
              for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
                  queue[scan] = queue[scan + index];
              }
              queue.length -= index;
              index = 0;
          }
      }
      queue.length = 0;
      index = 0;
  }

  // `requestFlush` is implemented using a strategy based on data collected from
  // every available SauceLabs Selenium web driver worker at time of writing.
  // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

  // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
  // have WebKitMutationObserver but not un-prefixed MutationObserver.
  // Must use `global` or `self` instead of `window` to work in both frames and web
  // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

  /* globals self */
  var scope = typeof commonjsGlobal !== "undefined" ? commonjsGlobal : self;
  var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;

  // MutationObservers are desirable because they have high priority and work
  // reliably everywhere they are implemented.
  // They are implemented in all modern browsers.
  //
  // - Android 4-4.3
  // - Chrome 26-34
  // - Firefox 14-29
  // - Internet Explorer 11
  // - iPad Safari 6-7.1
  // - iPhone Safari 7-7.1
  // - Safari 6-7
  if (typeof BrowserMutationObserver === "function") {
      requestFlush = makeRequestCallFromMutationObserver(flush);

  // MessageChannels are desirable because they give direct access to the HTML
  // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
  // 11-12, and in web workers in many engines.
  // Although message channels yield to any queued rendering and IO tasks, they
  // would be better than imposing the 4ms delay of timers.
  // However, they do not work reliably in Internet Explorer or Safari.

  // Internet Explorer 10 is the only browser that has setImmediate but does
  // not have MutationObservers.
  // Although setImmediate yields to the browser's renderer, it would be
  // preferrable to falling back to setTimeout since it does not have
  // the minimum 4ms penalty.
  // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
  // Desktop to a lesser extent) that renders both setImmediate and
  // MessageChannel useless for the purposes of ASAP.
  // https://github.com/kriskowal/q/issues/396

  // Timers are implemented universally.
  // We fall back to timers in workers in most engines, and in foreground
  // contexts in the following browsers.
  // However, note that even this simple case requires nuances to operate in a
  // broad spectrum of browsers.
  //
  // - Firefox 3-13
  // - Internet Explorer 6-9
  // - iPad Safari 4.3
  // - Lynx 2.8.7
  } else {
      requestFlush = makeRequestCallFromTimer(flush);
  }

  // `requestFlush` requests that the high priority event queue be flushed as
  // soon as possible.
  // This is useful to prevent an error thrown in a task from stalling the event
  // queue if the exception handled by Node.js’s
  // `process.on("uncaughtException")` or by a domain.
  rawAsap.requestFlush = requestFlush;

  // To request a high priority event, we induce a mutation observer by toggling
  // the text of a text node between "1" and "-1".
  function makeRequestCallFromMutationObserver(callback) {
      var toggle = 1;
      var observer = new BrowserMutationObserver(callback);
      var node = document.createTextNode("");
      observer.observe(node, {characterData: true});
      return function requestCall() {
          toggle = -toggle;
          node.data = toggle;
      };
  }

  // The message channel technique was discovered by Malte Ubl and was the
  // original foundation for this library.
  // http://www.nonblocking.io/2011/06/windownexttick.html

  // Safari 6.0.5 (at least) intermittently fails to create message ports on a
  // page's first load. Thankfully, this version of Safari supports
  // MutationObservers, so we don't need to fall back in that case.

  // function makeRequestCallFromMessageChannel(callback) {
  //     var channel = new MessageChannel();
  //     channel.port1.onmessage = callback;
  //     return function requestCall() {
  //         channel.port2.postMessage(0);
  //     };
  // }

  // For reasons explained above, we are also unable to use `setImmediate`
  // under any circumstances.
  // Even if we were, there is another bug in Internet Explorer 10.
  // It is not sufficient to assign `setImmediate` to `requestFlush` because
  // `setImmediate` must be called *by name* and therefore must be wrapped in a
  // closure.
  // Never forget.

  // function makeRequestCallFromSetImmediate(callback) {
  //     return function requestCall() {
  //         setImmediate(callback);
  //     };
  // }

  // Safari 6.0 has a problem where timers will get lost while the user is
  // scrolling. This problem does not impact ASAP because Safari 6.0 supports
  // mutation observers, so that implementation is used instead.
  // However, if we ever elect to use timers in Safari, the prevalent work-around
  // is to add a scroll event listener that calls for a flush.

  // `setTimeout` does not call the passed callback if the delay is less than
  // approximately 7 in web workers in Firefox 8 through 18, and sometimes not
  // even then.

  function makeRequestCallFromTimer(callback) {
      return function requestCall() {
          // We dispatch a timeout with a specified delay of 0 for engines that
          // can reliably accommodate that request. This will usually be snapped
          // to a 4 milisecond delay, but once we're flushing, there's no delay
          // between events.
          var timeoutHandle = setTimeout(handleTimer, 0);
          // However, since this timer gets frequently dropped in Firefox
          // workers, we enlist an interval handle that will try to fire
          // an event 20 times per second until it succeeds.
          var intervalHandle = setInterval(handleTimer, 50);

          function handleTimer() {
              // Whichever timer succeeds will cancel both timers and
              // execute the callback.
              clearTimeout(timeoutHandle);
              clearInterval(intervalHandle);
              callback();
          }
      };
  }

  // This is for `asap.js` only.
  // Its name will be periodically randomized to break any code that depends on
  // its existence.
  rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

  // rawAsap provides everything we need except exception management.

  // RawTasks are recycled to reduce GC churn.
  var freeTasks = [];
  // We queue errors to ensure they are thrown in right order (FIFO).
  // Array-as-queue is good enough here, since we are just dealing with exceptions.
  var pendingErrors = [];
  var requestErrorThrow = browserRaw.makeRequestCallFromTimer(throwFirstError);

  function throwFirstError() {
      if (pendingErrors.length) {
          throw pendingErrors.shift();
      }
  }

  /**
   * Calls a task as soon as possible after returning, in its own event, with priority
   * over other events like animation, reflow, and repaint. An error thrown from an
   * event will not interrupt, nor even substantially slow down the processing of
   * other events, but will be rather postponed to a lower priority event.
   * @param {{call}} task A callable object, typically a function that takes no
   * arguments.
   */
  var browserAsap = asap;
  function asap(task) {
      var rawTask;
      if (freeTasks.length) {
          rawTask = freeTasks.pop();
      } else {
          rawTask = new RawTask();
      }
      rawTask.task = task;
      browserRaw(rawTask);
  }

  // We wrap tasks with recyclable task objects.  A task object implements
  // `call`, just like a function.
  function RawTask() {
      this.task = null;
  }

  // The sole purpose of wrapping the task is to catch the exception and recycle
  // the task object after its single use.
  RawTask.prototype.call = function () {
      try {
          this.task.call();
      } catch (error) {
          if (asap.onerror) {
              // This hook exists purely for testing purposes.
              // Its name will be periodically randomized to break any code that
              // depends on its existence.
              asap.onerror(error);
          } else {
              // In a web browser, exceptions are not fatal. However, to avoid
              // slowing down the queue of pending tasks, we rethrow the error in a
              // lower priority turn.
              pendingErrors.push(error);
              requestErrorThrow();
          }
      } finally {
          this.task = null;
          freeTasks[freeTasks.length] = this;
      }
  };

  var forEach = Array.prototype.forEach,
      hasOwn  = Object.prototype.hasOwnProperty;

  var assign = function(target) {
    forEach.call(arguments, function(source, i) {
      if (i === 0) return;

      for (var key in source) {
        if (hasOwn.call(source, key)) target[key] = source[key];
      }
    });

    return target;
  };

  var _class$1 = function(parent, methods) {
    if (typeof parent !== 'function') {
      methods = parent;
      parent  = Object;
    }

    var klass = function() {
      if (!this.initialize) return this;
      return this.initialize.apply(this, arguments) || this;
    };

    var bridge = function() {};
    bridge.prototype = parent.prototype;

    klass.prototype = new bridge();
    assign(klass.prototype, methods);

    return klass;
  };

  var PENDING   = -1,
      FULFILLED =  0,
      REJECTED  =  1;

  var Promise$2 = function(task) {
    this._state = PENDING;
    this._value = null;
    this._defer = [];

    execute(this, task);
  };

  Promise$2.prototype.then = function(onFulfilled, onRejected) {
    var promise = new Promise$2();

    var deferred = {
      promise:     promise,
      onFulfilled: onFulfilled,
      onRejected:  onRejected
    };

    if (this._state === PENDING)
      this._defer.push(deferred);
    else
      propagate(this, deferred);

    return promise;
  };

  Promise$2.prototype['catch'] = function(onRejected) {
    return this.then(null, onRejected);
  };

  var execute = function(promise, task) {
    if (typeof task !== 'function') return;

    var calls = 0;

    var resolvePromise = function(value) {
      if (calls++ === 0) resolve$1(promise, value);
    };

    var rejectPromise = function(reason) {
      if (calls++ === 0) reject(promise, reason);
    };

    try {
      task(resolvePromise, rejectPromise);
    } catch (error) {
      rejectPromise(error);
    }
  };

  var propagate = function(promise, deferred) {
    var state   = promise._state,
        value   = promise._value,
        next    = deferred.promise,
        handler = [deferred.onFulfilled, deferred.onRejected][state],
        pass    = [resolve$1, reject][state];

    if (typeof handler !== 'function')
      return pass(next, value);

    browserAsap(function() {
      try {
        resolve$1(next, handler(value));
      } catch (error) {
        reject(next, error);
      }
    });
  };

  var resolve$1 = function(promise, value) {
    if (promise === value)
      return reject(promise, new TypeError('Recursive promise chain detected'));

    var then;

    try {
      then = getThen(value);
    } catch (error) {
      return reject(promise, error);
    }

    if (!then) return fulfill(promise, value);

    execute(promise, function(resolvePromise, rejectPromise) {
      then.call(value, resolvePromise, rejectPromise);
    });
  };

  var getThen = function(value) {
    var type = typeof value,
        then = (type === 'object' || type === 'function') && value && value.then;

    return (typeof then === 'function')
           ? then
           : null;
  };

  var fulfill = function(promise, value) {
    settle(promise, FULFILLED, value);
  };

  var reject = function(promise, reason) {
    settle(promise, REJECTED, reason);
  };

  var settle = function(promise, state, value) {
    var defer = promise._defer, i = 0;

    promise._state = state;
    promise._value = value;
    promise._defer = null;

    if (defer.length === 0) return;
    while (i < defer.length) propagate(promise, defer[i++]);
  };

  Promise$2.resolve = function(value) {
    try {
      if (getThen(value)) return value;
    } catch (error) {
      return Promise$2.reject(error);
    }

    return new Promise$2(function(resolve, reject) { resolve(value); });
  };

  Promise$2.reject = function(reason) {
    return new Promise$2(function(resolve, reject) { reject(reason); });
  };

  Promise$2.all = function(promises) {
    return new Promise$2(function(resolve, reject) {
      var list = [], n = promises.length, i;

      if (n === 0) return resolve(list);

      var push = function(promise, i) {
        Promise$2.resolve(promise).then(function(value) {
          list[i] = value;
          if (--n === 0) resolve(list);
        }, reject);
      };

      for (i = 0; i < n; i++) push(promises[i], i);
    });
  };

  Promise$2.race = function(promises) {
    return new Promise$2(function(resolve, reject) {
      for (var i = 0, n = promises.length; i < n; i++)
        Promise$2.resolve(promises[i]).then(resolve, reject);
    });
  };

  Promise$2.deferred = function() {
    var tuple = {};

    tuple.promise = new Promise$2(function(resolve, reject) {
      tuple.resolve = resolve;
      tuple.reject  = reject;
    });
    return tuple;
  };

  var promise = Promise$2;

  var array = {
    commonElement: function(lista, listb) {
      for (var i = 0, n = lista.length; i < n; i++) {
        if (this.indexOf(listb, lista[i]) !== -1)
          return lista[i];
      }
      return null;
    },

    indexOf: function(list, needle) {
      if (list.indexOf) return list.indexOf(needle);

      for (var i = 0, n = list.length; i < n; i++) {
        if (list[i] === needle) return i;
      }
      return -1;
    },

    map: function(object, callback, context) {
      if (object.map) return object.map(callback, context);
      var result = [];

      if (object instanceof Array) {
        for (var i = 0, n = object.length; i < n; i++) {
          result.push(callback.call(context || null, object[i], i));
        }
      } else {
        for (var key in object) {
          if (!object.hasOwnProperty(key)) continue;
          result.push(callback.call(context || null, key, object[key]));
        }
      }
      return result;
    },

    filter: function(array, callback, context) {
      if (array.filter) return array.filter(callback, context);
      var result = [];
      for (var i = 0, n = array.length; i < n; i++) {
        if (callback.call(context || null, array[i], i))
          result.push(array[i]);
      }
      return result;
    },

    asyncEach: function(list, iterator, callback, context) {
      var n       = list.length,
          i       = -1,
          calls   = 0,
          looping = false;

      var iterate = function() {
        calls -= 1;
        i += 1;
        if (i === n) return callback && callback.call(context);
        iterator(list[i], resume);
      };

      var loop = function() {
        if (looping) return;
        looping = true;
        while (calls > 0) iterate();
        looping = false;
      };

      var resume = function() {
        calls += 1;
        loop();
      };
      resume();
    }
  };

  var Event = {
    _registry: [],

    on: function(element, eventName, callback, context) {
      var wrapped = function() { callback.call(context); };

      if (element.addEventListener)
        element.addEventListener(eventName, wrapped, false);
      else
        element.attachEvent('on' + eventName, wrapped);

      this._registry.push({
        _element:   element,
        _type:      eventName,
        _callback:  callback,
        _context:     context,
        _handler:   wrapped
      });
    },

    detach: function(element, eventName, callback, context) {
      var i = this._registry.length, register;
      while (i--) {
        register = this._registry[i];

        if ((element    && element    !== register._element)  ||
            (eventName  && eventName  !== register._type)     ||
            (callback   && callback   !== register._callback) ||
            (context    && context    !== register._context))
          continue;

        if (register._element.removeEventListener)
          register._element.removeEventListener(register._type, register._handler, false);
        else
          register._element.detachEvent('on' + register._type, register._handler);

        this._registry.splice(i,1);
        register = null;
      }
    }
  };

  if (commonjsGlobal.onunload !== undefined)
    Event.on(commonjsGlobal, 'unload', Event.detach, Event);

  var event = {
    Event: Event
  };

  var validate_options = function(options, validKeys) {
    for (var key in options) {
      if (array.indexOf(validKeys, key) < 0)
        throw new Error('Unrecognized option: ' + key);
    }
  };

  var deferrable = {
    then: function(callback, errback) {
      var self = this;
      if (!this._promise)
        this._promise = new promise(function(resolve, reject) {
          self._resolve = resolve;
          self._reject  = reject;
        });

      if (arguments.length === 0)
        return this._promise;
      else
        return this._promise.then(callback, errback);
    },

    callback: function(callback, context) {
      return this.then(function(value) { callback.call(context, value); });
    },

    errback: function(callback, context) {
      return this.then(null, function(reason) { callback.call(context, reason); });
    },

    timeout: function(seconds, message) {
      this.then();
      var self = this;
      this._timer = commonjsGlobal.setTimeout(function() {
        self._reject(message);
      }, seconds * 1000);
    },

    setDeferredStatus: function(status, value) {
      if (this._timer) commonjsGlobal.clearTimeout(this._timer);

      this.then();

      if (status === 'succeeded')
        this._resolve(value);
      else if (status === 'failed')
        this._reject(value);
      else
        delete this._promise;
    }
  };

  /*
  Copyright Joyent, Inc. and other Node contributors. All rights reserved.
  Permission is hereby granted, free of charge, to any person obtaining a copy of
  this software and associated documentation files (the "Software"), to deal in
  the Software without restriction, including without limitation the rights to
  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  of the Software, and to permit persons to whom the Software is furnished to do
  so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  */
  var isArray$1 = typeof Array.isArray === 'function'
      ? Array.isArray
      : function (xs) {
          return Object.prototype.toString.call(xs) === '[object Array]'
      }
  ;
  function indexOf (xs, x) {
      if (xs.indexOf) return xs.indexOf(x);
      for (var i = 0; i < xs.length; i++) {
          if (x === xs[i]) return i;
      }
      return -1;
  }

  function EventEmitter$1() {}
  var event_emitter = EventEmitter$1;

  EventEmitter$1.prototype.emit = function(type) {
    // If there is no 'error' event listener then throw.
    if (type === 'error') {
      if (!this._events || !this._events.error ||
          (isArray$1(this._events.error) && !this._events.error.length))
      {
        if (arguments[1] instanceof Error) {
          throw arguments[1]; // Unhandled 'error' event
        } else {
          throw new Error("Uncaught, unspecified 'error' event.");
        }
      }
    }

    if (!this._events) return false;
    var handler = this._events[type];
    if (!handler) return false;

    if (typeof handler == 'function') {
      switch (arguments.length) {
        // fast cases
        case 1:
          handler.call(this);
          break;
        case 2:
          handler.call(this, arguments[1]);
          break;
        case 3:
          handler.call(this, arguments[1], arguments[2]);
          break;
        // slower
        default:
          var args = Array.prototype.slice.call(arguments, 1);
          handler.apply(this, args);
      }
      return true;

    } else if (isArray$1(handler)) {
      var args = Array.prototype.slice.call(arguments, 1);

      var listeners = handler.slice();
      for (var i = 0, l = listeners.length; i < l; i++) {
        listeners[i].apply(this, args);
      }
      return true;

    } else {
      return false;
    }
  };

  // EventEmitter is defined in src/node_events.cc
  // EventEmitter.prototype.emit() is also defined there.
  EventEmitter$1.prototype.addListener = function(type, listener) {
    if ('function' !== typeof listener) {
      throw new Error('addListener only takes instances of Function');
    }

    if (!this._events) this._events = {};

    // To avoid recursion in the case that type == "newListeners"! Before
    // adding it to the listeners, first emit "newListeners".
    this.emit('newListener', type, listener);

    if (!this._events[type]) {
      // Optimize the case of one listener. Don't need the extra array object.
      this._events[type] = listener;
    } else if (isArray$1(this._events[type])) {
      // If we've already got an array, just append.
      this._events[type].push(listener);
    } else {
      // Adding the second element, need to change to array.
      this._events[type] = [this._events[type], listener];
    }

    return this;
  };

  EventEmitter$1.prototype.on = EventEmitter$1.prototype.addListener;

  EventEmitter$1.prototype.once = function(type, listener) {
    var self = this;
    self.on(type, function g() {
      self.removeListener(type, g);
      listener.apply(this, arguments);
    });

    return this;
  };

  EventEmitter$1.prototype.removeListener = function(type, listener) {
    if ('function' !== typeof listener) {
      throw new Error('removeListener only takes instances of Function');
    }

    // does not use listeners(), so no side effect of creating _events[type]
    if (!this._events || !this._events[type]) return this;

    var list = this._events[type];

    if (isArray$1(list)) {
      var i = indexOf(list, listener);
      if (i < 0) return this;
      list.splice(i, 1);
      if (list.length == 0)
        delete this._events[type];
    } else if (this._events[type] === listener) {
      delete this._events[type];
    }

    return this;
  };

  EventEmitter$1.prototype.removeAllListeners = function(type) {
    if (arguments.length === 0) {
      this._events = {};
      return this;
    }

    // does not use listeners(), so no side effect of creating _events[type]
    if (type && this._events && this._events[type]) this._events[type] = null;
    return this;
  };

  EventEmitter$1.prototype.listeners = function(type) {
    if (!this._events) this._events = {};
    if (!this._events[type]) this._events[type] = [];
    if (!isArray$1(this._events[type])) {
      this._events[type] = [this._events[type]];
    }
    return this._events[type];
  };

  var Publisher = {
    countListeners: function(eventType) {
      return this.listeners(eventType).length;
    },

    bind: function(eventType, listener, context) {
      var slice   = Array.prototype.slice,
          handler = function() { listener.apply(context, slice.call(arguments)); };

      this._listeners = this._listeners || [];
      this._listeners.push([eventType, listener, context, handler]);
      return this.on(eventType, handler);
    },

    unbind: function(eventType, listener, context) {
      this._listeners = this._listeners || [];
      var n = this._listeners.length, tuple;

      while (n--) {
        tuple = this._listeners[n];
        if (tuple[0] !== eventType) continue;
        if (listener && (tuple[1] !== listener || tuple[2] !== context)) continue;
        this._listeners.splice(n, 1);
        this.removeListener(eventType, tuple[3]);
      }
    }
  };

  assign(Publisher, event_emitter.prototype);
  Publisher.trigger = Publisher.emit;

  var publisher = Publisher;

  var grammar = {
    CHANNEL_NAME:     /^\/(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)))+(\/(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)))+)*$/,
    CHANNEL_PATTERN:  /^(\/(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)))+)*\/\*{1,2}$/,
    ERROR:            /^([0-9][0-9][0-9]:(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*(,(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*)*:(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*|[0-9][0-9][0-9]::(((([a-z]|[A-Z])|[0-9])|(\-|\_|\!|\~|\(|\)|\$|\@)| |\/|\*|\.))*)$/,
    VERSION:          /^([0-9])+(\.(([a-z]|[A-Z])|[0-9])(((([a-z]|[A-Z])|[0-9])|\-|\_))*)*$/
  };

  var Channel = _class$1({
    initialize: function(name) {
      this.id = this.name = name;
    },

    push: function(message) {
      this.trigger('message', message);
    },

    isUnused: function() {
      return this.countListeners('message') === 0;
    }
  });

  assign(Channel.prototype, publisher);

  assign(Channel, {
    HANDSHAKE:    '/meta/handshake',
    CONNECT:      '/meta/connect',
    SUBSCRIBE:    '/meta/subscribe',
    UNSUBSCRIBE:  '/meta/unsubscribe',
    DISCONNECT:   '/meta/disconnect',

    META:         'meta',
    SERVICE:      'service',

    expand: function(name) {
      var segments = this.parse(name),
          channels = ['/**', name];

      var copy = segments.slice();
      copy[copy.length - 1] = '*';
      channels.push(this.unparse(copy));

      for (var i = 1, n = segments.length; i < n; i++) {
        copy = segments.slice(0, i);
        copy.push('**');
        channels.push(this.unparse(copy));
      }

      return channels;
    },

    isValid: function(name) {
      return grammar.CHANNEL_NAME.test(name) ||
             grammar.CHANNEL_PATTERN.test(name);
    },

    parse: function(name) {
      if (!this.isValid(name)) return null;
      return name.split('/').slice(1);
    },

    unparse: function(segments) {
      return '/' + segments.join('/');
    },

    isMeta: function(name) {
      var segments = this.parse(name);
      return segments ? (segments[0] === this.META) : null;
    },

    isService: function(name) {
      var segments = this.parse(name);
      return segments ? (segments[0] === this.SERVICE) : null;
    },

    isSubscribable: function(name) {
      if (!this.isValid(name)) return null;
      return !this.isMeta(name) && !this.isService(name);
    },

    Set: _class$1({
      initialize: function() {
        this._channels = {};
      },

      getKeys: function() {
        var keys = [];
        for (var key in this._channels) keys.push(key);
        return keys;
      },

      remove: function(name) {
        delete this._channels[name];
      },

      hasSubscription: function(name) {
        return this._channels.hasOwnProperty(name);
      },

      subscribe: function(names, subscription) {
        var name;
        for (var i = 0, n = names.length; i < n; i++) {
          name = names[i];
          var channel = this._channels[name] = this._channels[name] || new Channel(name);
          channel.bind('message', subscription);
        }
      },

      unsubscribe: function(name, subscription) {
        var channel = this._channels[name];
        if (!channel) return false;
        channel.unbind('message', subscription);

        if (channel.isUnused()) {
          this.remove(name);
          return true;
        } else {
          return false;
        }
      },

      distributeMessage: function(message) {
        var channels = Channel.expand(message.channel);

        for (var i = 0, n = channels.length; i < n; i++) {
          var channel = this._channels[channels[i]];
          if (channel) channel.trigger('message', message);
        }
      }
    })
  });

  var channel = Channel;

  var uri = {
    isURI: function(uri) {
      return uri && uri.protocol && uri.host && uri.path;
    },

    isSameOrigin: function(uri) {
      return uri.protocol === location.protocol &&
             uri.hostname === location.hostname &&
             uri.port     === location.port;
    },

    parse: function(url) {
      if (typeof url !== 'string') return url;
      var uri = {}, parts, query, pairs, i, n, data;

      var consume = function(name, pattern) {
        url = url.replace(pattern, function(match) {
          uri[name] = match;
          return '';
        });
        uri[name] = uri[name] || '';
      };

      consume('protocol', /^[a-z]+\:/i);
      consume('host',     /^\/\/[^\/\?#]+/);

      if (!/^\//.test(url) && !uri.host)
        url = location.pathname.replace(/[^\/]*$/, '') + url;

      consume('pathname', /^[^\?#]*/);
      consume('search',   /^\?[^#]*/);
      consume('hash',     /^#.*/);

      uri.protocol = uri.protocol || location.protocol;

      if (uri.host) {
        uri.host = uri.host.substr(2);

        if (/@/.test(uri.host)) {
          uri.auth = uri.host.split('@')[0];
          uri.host = uri.host.split('@')[1];
        }
        parts        = uri.host.match(/^\[([^\]]+)\]|^[^:]+/);
        uri.hostname = parts[1] || parts[0];
        uri.port     = (uri.host.match(/:(\d+)$/) || [])[1] || '';
      } else {
        uri.host     = location.host;
        uri.hostname = location.hostname;
        uri.port     = location.port;
      }

      uri.pathname = uri.pathname || '/';
      uri.path = uri.pathname + uri.search;

      query = uri.search.replace(/^\?/, '');
      pairs = query ? query.split('&') : [];
      data  = {};

      for (i = 0, n = pairs.length; i < n; i++) {
        parts = pairs[i].split('=');
        data[decodeURIComponent(parts[0] || '')] = decodeURIComponent(parts[1] || '');
      }

      uri.query = data;

      uri.href = this.stringify(uri);
      return uri;
    },

    stringify: function(uri) {
      var auth   = uri.auth ? uri.auth + '@' : '',
          string = uri.protocol + '//' + auth + uri.host;

      string += uri.pathname + this.queryString(uri.query) + (uri.hash || '');

      return string;
    },

    queryString: function(query) {
      var pairs = [];
      for (var key in query) {
        if (!query.hasOwnProperty(key)) continue;
        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(query[key]));
      }
      if (pairs.length === 0) return '';
      return '?' + pairs.join('&');
    }
  };

  var browser_cookies = {};

  var timeouts = {
    addTimeout: function(name, delay, callback, context) {
      this._timeouts = this._timeouts || {};
      if (this._timeouts.hasOwnProperty(name)) return;
      var self = this;
      this._timeouts[name] = commonjsGlobal.setTimeout(function() {
        delete self._timeouts[name];
        callback.call(context);
      }, 1000 * delay);
    },

    removeTimeout: function(name) {
      this._timeouts = this._timeouts || {};
      var timeout = this._timeouts[name];
      if (!timeout) return;
      commonjsGlobal.clearTimeout(timeout);
      delete this._timeouts[name];
    },

    removeAllTimeouts: function() {
      this._timeouts = this._timeouts || {};
      for (var name in this._timeouts) this.removeTimeout(name);
    }
  };

  var Cookie   = browser_cookies.Cookie;

  var Transport = assign(_class$1({ className: 'Transport',
    DEFAULT_PORTS: { 'http:': 80, 'https:': 443, 'ws:': 80, 'wss:': 443 },
    MAX_DELAY:     0,

    batching:  true,

    initialize: function(dispatcher, endpoint) {
      this._dispatcher = dispatcher;
      this.endpoint    = endpoint;
      this._outbox     = [];
      this._proxy      = assign({}, this._dispatcher.proxy);

      if (!this._proxy.origin)
        this._proxy.origin = this._findProxy();
    },

    close: function() {},

    encode: function(messages) {
      return '';
    },

    sendMessage: function(message) {
      this.debug('Client ? sending message to ?: ?',
                 this._dispatcher.clientId, this.endpoint.href, message);

      if (!this.batching) return promise.resolve(this.request([message]));

      this._outbox.push(message);
      this._flushLargeBatch();

      if (message.channel === channel.HANDSHAKE)
        return this._publish(0.01);

      if (message.channel === channel.CONNECT)
        this._connectMessage = message;

      return this._publish(this.MAX_DELAY);
    },

    _makePromise: function() {
      var self = this;

      this._requestPromise = this._requestPromise || new promise(function(resolve) {
        self._resolvePromise = resolve;
      });
    },

    _publish: function(delay) {
      this._makePromise();

      this.addTimeout('publish', delay, function() {
        this._flush();
        delete this._requestPromise;
      }, this);

      return this._requestPromise;
    },

    _flush: function() {
      this.removeTimeout('publish');

      if (this._outbox.length > 1 && this._connectMessage)
        this._connectMessage.advice = { timeout: 0 };

      this._resolvePromise(this.request(this._outbox));

      this._connectMessage = null;
      this._outbox = [];
    },

    _flushLargeBatch: function() {
      var string = this.encode(this._outbox);
      if (string.length < this._dispatcher.maxRequestSize) return;
      var last = this._outbox.pop();

      this._makePromise();
      this._flush();

      if (last) this._outbox.push(last);
    },

    _receive: function(replies) {
      if (!replies) return;
      replies = [].concat(replies);

      this.debug('Client ? received from ? via ?: ?',
                 this._dispatcher.clientId, this.endpoint.href, this.connectionType, replies);

      for (var i = 0, n = replies.length; i < n; i++)
        this._dispatcher.handleResponse(replies[i]);
    },

    _handleError: function(messages, immediate) {
      messages = [].concat(messages);

      this.debug('Client ? failed to send to ? via ?: ?',
                 this._dispatcher.clientId, this.endpoint.href, this.connectionType, messages);

      for (var i = 0, n = messages.length; i < n; i++)
        this._dispatcher.handleError(messages[i]);
    },

    _getCookies: function() {
      var cookies = this._dispatcher.cookies,
          url     = this.endpoint.href;

      if (!cookies) return '';

      return array.map(cookies.getCookiesSync(url), function(cookie) {
        return cookie.cookieString();
      }).join('; ');
    },

    _storeCookies: function(setCookie) {
      var cookies = this._dispatcher.cookies,
          url     = this.endpoint.href,
          cookie;

      if (!setCookie || !cookies) return;
      setCookie = [].concat(setCookie);

      for (var i = 0, n = setCookie.length; i < n; i++) {
        cookie = Cookie.parse(setCookie[i]);
        cookies.setCookieSync(cookie, url);
      }
    },

    _findProxy: function() {
      if (typeof process === 'undefined') return undefined;

      var protocol = this.endpoint.protocol;
      if (!protocol) return undefined;

      var name   = protocol.replace(/:$/, '').toLowerCase() + '_proxy',
          upcase = name.toUpperCase(),
          env    = process.env,
          keys, proxy;

      if (name === 'http_proxy' && env.REQUEST_METHOD) {
        keys = Object.keys(env).filter(function(k) { return /^http_proxy$/i.test(k) });
        if (keys.length === 1) {
          if (keys[0] === name && env[upcase] === undefined)
            proxy = env[name];
        } else if (keys.length > 1) {
          proxy = env[name];
        }
        proxy = proxy || env['CGI_' + upcase];
      } else {
        proxy = env[name] || env[upcase];
        if (proxy && !env[name])
          console.warn('The environment variable ' + upcase +
                       ' is discouraged. Use ' + name + '.');
      }
      return proxy;
    }

  }), {
    get: function(dispatcher, allowed, disabled, callback, context) {
      var endpoint = dispatcher.endpoint;

      array.asyncEach(this._transports, function(pair, resume) {
        var connType     = pair[0], klass = pair[1],
            connEndpoint = dispatcher.endpointFor(connType);

        if (array.indexOf(disabled, connType) >= 0)
          return resume();

        if (array.indexOf(allowed, connType) < 0) {
          klass.isUsable(dispatcher, connEndpoint, function() {});
          return resume();
        }

        klass.isUsable(dispatcher, connEndpoint, function(isUsable) {
          if (!isUsable) return resume();
          var transport = klass.hasOwnProperty('create') ? klass.create(dispatcher, connEndpoint) : new klass(dispatcher, connEndpoint);
          callback.call(context, transport);
        });
      }, function() {
        throw new Error('Could not find a usable connection type for ' + endpoint.href);
      });
    },

    register: function(type, klass) {
      this._transports.push([type, klass]);
      klass.prototype.connectionType = type;
    },

    getConnectionTypes: function() {
      return array.map(this._transports, function(t) { return t[0] });
    },

    disable: function(feature) {
      if (feature !== 'autodisconnect') return;

      for (var i = 0; i < this._transports.length; i++)
        this._transports[i][1]._unloaded = false;
    },

    _transports: []
  });

  assign(Transport.prototype, logging);
  assign(Transport.prototype, timeouts);

  var transport = Transport;

  var set$2 = _class$1({
    initialize: function() {
      this._index = {};
    },

    add: function(item) {
      var key = (item.id !== undefined) ? item.id : item;
      if (this._index.hasOwnProperty(key)) return false;
      this._index[key] = item;
      return true;
    },

    forEach: function(block, context) {
      for (var key in this._index) {
        if (this._index.hasOwnProperty(key))
          block.call(context, this._index[key]);
      }
    },

    isEmpty: function() {
      for (var key in this._index) {
        if (this._index.hasOwnProperty(key)) return false;
      }
      return true;
    },

    member: function(item) {
      for (var key in this._index) {
        if (this._index[key] === item) return true;
      }
      return false;
    },

    remove: function(item) {
      var key = (item.id !== undefined) ? item.id : item;
      var removed = this._index[key];
      delete this._index[key];
      return removed;
    },

    toArray: function() {
      var array = [];
      this.forEach(function(item) { array.push(item); });
      return array;
    }
  });

  var copyObject = function(object) {
    var clone, i, key;
    if (object instanceof Array) {
      clone = [];
      i = object.length;
      while (i--) clone[i] = copyObject(object[i]);
      return clone;
    } else if (typeof object === 'object') {
      clone = (object === null) ? null : {};
      for (key in object) clone[key] = copyObject(object[key]);
      return clone;
    } else {
      return object;
    }
  };

  var copy_object = copyObject;

  var WS = commonjsGlobal.MozWebSocket || commonjsGlobal.WebSocket;

  var browser_websocket = {
    create: function(url, protocols, options) {
      if (typeof WS !== 'function') return null;
      return new WS(url);
    }
  };

  var WebSocket = assign(_class$1(transport, {
    UNCONNECTED:  1,
    CONNECTING:   2,
    CONNECTED:    3,

    batching:     false,

    isUsable: function(callback, context) {
      this.callback(function() { callback.call(context, true); });
      this.errback(function() { callback.call(context, false); });
      this.connect();
    },

    request: function(messages) {
      this._pending = this._pending || new set$2();
      for (var i = 0, n = messages.length; i < n; i++) this._pending.add(messages[i]);

      var self = this;

      var promise$1 = new promise(function(resolve, reject) {
        self.callback(function(socket) {
          if (!socket || socket.readyState !== 1) return;
          socket.send(to_json(messages));
          resolve(socket);
        });

        self.connect();
      });

      return {
        abort: function() { promise$1.then(function(ws) { ws.close(); }); }
      };
    },

    connect: function() {
      if (WebSocket._unloaded) return;

      this._state = this._state || this.UNCONNECTED;
      if (this._state !== this.UNCONNECTED) return;
      this._state = this.CONNECTING;

      var socket = this._createSocket();
      if (!socket) return this.setDeferredStatus('failed');

      var self = this;

      socket.onopen = function() {
        if (socket.headers) self._storeCookies(socket.headers['set-cookie']);
        self._socket = socket;
        self._state = self.CONNECTED;
        self._everConnected = true;
        self.setDeferredStatus('succeeded', socket);
      };

      var closed = false;
      socket.onclose = socket.onerror = function() {
        if (closed) return;
        closed = true;

        var wasConnected = (self._state === self.CONNECTED);
        socket.onopen = socket.onclose = socket.onerror = socket.onmessage = null;

        delete self._socket;
        self._state = self.UNCONNECTED;

        var pending = self._pending ? self._pending.toArray() : [];
        delete self._pending;

        if (wasConnected || self._everConnected) {
          self.setDeferredStatus('unknown');
          self._handleError(pending, wasConnected);
        } else {
          self.setDeferredStatus('failed');
        }
      };

      socket.onmessage = function(event) {
        var replies;
        try { replies = JSON.parse(event.data); } catch (error) {}

        if (!replies) return;

        replies = [].concat(replies);

        for (var i = 0, n = replies.length; i < n; i++) {
          if (replies[i].successful === undefined) continue;
          self._pending.remove(replies[i]);
        }
        self._receive(replies);
      };
    },

    close: function() {
      if (!this._socket) return;
      this._socket.close();
    },

    _createSocket: function() {
      var url        = WebSocket.getSocketUrl(this.endpoint),
          headers    = this._dispatcher.headers,
          extensions = this._dispatcher.wsExtensions,
          cookie     = this._getCookies(),
          tls        = this._dispatcher.tls,
          options    = { extensions: extensions, headers: headers, proxy: this._proxy, tls: tls };

      if (cookie !== '') options.headers['Cookie'] = cookie;

      try {
        return browser_websocket.create(url, [], options);
      } catch (e) {
        // catch CSP error to allow transport to fallback to next connType
      }
    }

  }), {
    PROTOCOLS: {
      'http:':  'ws:',
      'https:': 'wss:'
    },

    create: function(dispatcher, endpoint) {
      var sockets = dispatcher.transports.websocket = dispatcher.transports.websocket || {};
      sockets[endpoint.href] = sockets[endpoint.href] || new this(dispatcher, endpoint);
      return sockets[endpoint.href];
    },

    getSocketUrl: function(endpoint) {
      endpoint = copy_object(endpoint);
      endpoint.protocol = this.PROTOCOLS[endpoint.protocol];
      return uri.stringify(endpoint);
    },

    isUsable: function(dispatcher, endpoint, callback, context) {
      this.create(dispatcher, endpoint).isUsable(callback, context);
    }
  });

  assign(WebSocket.prototype, deferrable);

  if (event.Event && commonjsGlobal.onbeforeunload !== undefined) {
    event.Event.on(commonjsGlobal, 'beforeunload', function() {
      if (WebSocket._unloaded === undefined)
        WebSocket._unloaded = true;
    });
  }

  var web_socket = WebSocket;

  var XHR = assign(_class$1(transport, {
    encode: function(messages) {
      return to_json(messages);
    },

    request: function(messages) {
      var href = this.endpoint.href,
          self = this,
          xhr;

      // Prefer XMLHttpRequest over ActiveXObject if they both exist
      if (commonjsGlobal.XMLHttpRequest) {
        xhr = new XMLHttpRequest();
      } else if (commonjsGlobal.ActiveXObject) {
        xhr = new ActiveXObject('Microsoft.XMLHTTP');
      } else {
        return this._handleError(messages);
      }

      xhr.open('POST', href, true);
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.setRequestHeader('Pragma', 'no-cache');
      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

      var headers = this._dispatcher.headers;
      for (var key in headers) {
        if (!headers.hasOwnProperty(key)) continue;
        xhr.setRequestHeader(key, headers[key]);
      }

      var abort = function() { xhr.abort(); };
      if (commonjsGlobal.onbeforeunload !== undefined)
        event.Event.on(commonjsGlobal, 'beforeunload', abort);

      xhr.onreadystatechange = function() {
        if (!xhr || xhr.readyState !== 4) return;

        var replies    = null,
            status     = xhr.status,
            text       = xhr.responseText,
            successful = (status >= 200 && status < 300) || status === 304 || status === 1223;

        if (commonjsGlobal.onbeforeunload !== undefined)
          event.Event.detach(commonjsGlobal, 'beforeunload', abort);

        xhr.onreadystatechange = function() {};
        xhr = null;

        if (!successful) return self._handleError(messages);

        try {
          replies = JSON.parse(text);
        } catch (error) {}

        if (replies)
          self._receive(replies);
        else
          self._handleError(messages);
      };

      xhr.send(this.encode(messages));
      return xhr;
    }
  }), {
    isUsable: function(dispatcher, endpoint, callback, context) {
      var usable = (navigator.product === 'ReactNative')
                || uri.isSameOrigin(endpoint);

      callback.call(context, usable);
    }
  });

  var xhr = XHR;

  var EventSource = assign(_class$1(transport, {
    initialize: function(dispatcher, endpoint) {
      transport.prototype.initialize.call(this, dispatcher, endpoint);
      if (!commonjsGlobal.EventSource) return this.setDeferredStatus('failed');

      this._xhr = new xhr(dispatcher, endpoint);

      endpoint = copy_object(endpoint);
      endpoint.pathname += '/' + dispatcher.clientId;

      var socket = new commonjsGlobal.EventSource(uri.stringify(endpoint)),
          self   = this;

      socket.onopen = function() {
        self._everConnected = true;
        self.setDeferredStatus('succeeded');
      };

      socket.onerror = function() {
        if (self._everConnected) {
          self._handleError([]);
        } else {
          self.setDeferredStatus('failed');
          socket.close();
        }
      };

      socket.onmessage = function(event) {
        var replies;
        try { replies = JSON.parse(event.data); } catch (error) {}

        if (replies)
          self._receive(replies);
        else
          self._handleError([]);
      };

      this._socket = socket;
    },

    close: function() {
      if (!this._socket) return;
      this._socket.onopen = this._socket.onerror = this._socket.onmessage = null;
      this._socket.close();
      delete this._socket;
    },

    isUsable: function(callback, context) {
      this.callback(function() { callback.call(context, true); });
      this.errback(function() { callback.call(context, false); });
    },

    encode: function(messages) {
      return this._xhr.encode(messages);
    },

    request: function(messages) {
      return this._xhr.request(messages);
    }

  }), {
    isUsable: function(dispatcher, endpoint, callback, context) {
      var id = dispatcher.clientId;
      if (!id) return callback.call(context, false);

      xhr.isUsable(dispatcher, endpoint, function(usable) {
        if (!usable) return callback.call(context, false);
        this.create(dispatcher, endpoint).isUsable(callback, context);
      }, this);
    },

    create: function(dispatcher, endpoint) {
      var sockets = dispatcher.transports.eventsource = dispatcher.transports.eventsource || {},
          id      = dispatcher.clientId;

      var url = copy_object(endpoint);
      url.pathname += '/' + (id || '');
      url = uri.stringify(url);

      sockets[url] = sockets[url] || new this(dispatcher, endpoint);
      return sockets[url];
    }
  });

  assign(EventSource.prototype, deferrable);

  var event_source = EventSource;

  var CORS = assign(_class$1(transport, {
    encode: function(messages) {
      return 'message=' + encodeURIComponent(to_json(messages));
    },

    request: function(messages) {
      var xhrClass = commonjsGlobal.XDomainRequest ? XDomainRequest : XMLHttpRequest,
          xhr      = new xhrClass(),
          id       = ++CORS._id,
          headers  = this._dispatcher.headers,
          self     = this,
          key;

      xhr.open('POST', this.endpoint.href, true);
      xhr.withCredentials = true;

      if (xhr.setRequestHeader) {
        xhr.setRequestHeader('Pragma', 'no-cache');
        for (key in headers) {
          if (!headers.hasOwnProperty(key)) continue;
          xhr.setRequestHeader(key, headers[key]);
        }
      }

      var cleanUp = function() {
        if (!xhr) return false;
        CORS._pending.remove(id);
        xhr.onload = xhr.onerror = xhr.ontimeout = xhr.onprogress = null;
        xhr = null;
      };

      xhr.onload = function() {
        var replies;
        try { replies = JSON.parse(xhr.responseText); } catch (error) {}

        cleanUp();

        if (replies)
          self._receive(replies);
        else
          self._handleError(messages);
      };

      xhr.onerror = xhr.ontimeout = function() {
        cleanUp();
        self._handleError(messages);
      };

      xhr.onprogress = function() {};

      if (xhrClass === commonjsGlobal.XDomainRequest)
        CORS._pending.add({ id: id, xhr: xhr });

      xhr.send(this.encode(messages));
      return xhr;
    }
  }), {
    _id:      0,
    _pending: new set$2(),

    isUsable: function(dispatcher, endpoint, callback, context) {
      if (uri.isSameOrigin(endpoint))
        return callback.call(context, false);

      if (commonjsGlobal.XDomainRequest)
        return callback.call(context, endpoint.protocol === location.protocol);

      if (commonjsGlobal.XMLHttpRequest) {
        var xhr = new XMLHttpRequest();
        return callback.call(context, xhr.withCredentials !== undefined);
      }
      return callback.call(context, false);
    }
  });

  var cors = CORS;

  var JSONP = assign(_class$1(transport, {
   encode: function(messages) {
      var url = copy_object(this.endpoint);
      url.query.message = to_json(messages);
      url.query.jsonp   = '__jsonp' + JSONP._cbCount + '__';
      return uri.stringify(url);
    },

    request: function(messages) {
      var head         = document.getElementsByTagName('head')[0],
          script       = document.createElement('script'),
          callbackName = JSONP.getCallbackName(),
          endpoint     = copy_object(this.endpoint),
          self         = this;

      endpoint.query.message = to_json(messages);
      endpoint.query.jsonp   = callbackName;

      var cleanup = function() {
        if (!commonjsGlobal[callbackName]) return false;
        commonjsGlobal[callbackName] = undefined;
        try { delete commonjsGlobal[callbackName]; } catch (error) {}
        script.parentNode.removeChild(script);
      };

      commonjsGlobal[callbackName] = function(replies) {
        cleanup();
        self._receive(replies);
      };

      script.type = 'text/javascript';
      script.src  = uri.stringify(endpoint);
      head.appendChild(script);

      script.onerror = function() {
        cleanup();
        self._handleError(messages);
      };

      return { abort: cleanup };
    }
  }), {
    _cbCount: 0,

    getCallbackName: function() {
      this._cbCount += 1;
      return '__jsonp' + this._cbCount + '__';
    },

    isUsable: function(dispatcher, endpoint, callback, context) {
      callback.call(context, true);
    }
  });

  var jsonp = JSONP;

  transport.register('websocket', web_socket);
  transport.register('eventsource', event_source);
  transport.register('long-polling', xhr);
  transport.register('cross-origin-long-polling', cors);
  transport.register('callback-polling', jsonp);

  var browser_transports = transport;

  var Scheduler = function(message, options) {
    this.message  = message;
    this.options  = options;
    this.attempts = 0;
  };

  assign(Scheduler.prototype, {
    getTimeout: function() {
      return this.options.timeout;
    },

    getInterval: function() {
      return this.options.interval;
    },

    isDeliverable: function() {
      var attempts = this.options.attempts,
          made     = this.attempts,
          deadline = this.options.deadline,
          now      = new Date().getTime();

      if (attempts !== undefined && made >= attempts)
        return false;

      if (deadline !== undefined && now > deadline)
        return false;

      return true;
    },

    send: function() {
      this.attempts += 1;
    },

    succeed: function() {},

    fail: function() {},

    abort: function() {}
  });

  var scheduler = Scheduler;

  var Dispatcher = _class$1({ className: 'Dispatcher',
    MAX_REQUEST_SIZE: 2048,
    DEFAULT_RETRY:    5,

    UP:   1,
    DOWN: 2,

    initialize: function(client, endpoint, options) {
      this._client     = client;
      this.endpoint    = uri.parse(endpoint);
      this._alternates = options.endpoints || {};

      this.cookies      = browser_cookies.CookieJar ;
      this._disabled    = [];
      this._envelopes   = {};
      this.headers      = {};
      this.retry        = options.retry || this.DEFAULT_RETRY;
      this._scheduler   = options.scheduler || scheduler;
      this._state       = 0;
      this.transports   = {};
      this.wsExtensions = [];

      this.proxy = options.proxy || {};
      if (typeof this._proxy === 'string') this._proxy = { origin: this._proxy };

      var exts = options.websocketExtensions;
      if (exts) {
        exts = [].concat(exts);
        for (var i = 0, n = exts.length; i < n; i++)
          this.addWebsocketExtension(exts[i]);
      }

      this.tls = options.tls || {};
      this.tls.ca = this.tls.ca || options.ca;

      for (var type in this._alternates)
        this._alternates[type] = uri.parse(this._alternates[type]);

      this.maxRequestSize = this.MAX_REQUEST_SIZE;
    },

    endpointFor: function(connectionType) {
      return this._alternates[connectionType] || this.endpoint;
    },

    addWebsocketExtension: function(extension) {
      this.wsExtensions.push(extension);
    },

    disable: function(feature) {
      this._disabled.push(feature);
      browser_transports.disable(feature);
    },

    setHeader: function(name, value) {
      this.headers[name] = value;
    },

    close: function() {
      var transport = this._transport;
      delete this._transport;
      if (transport) transport.close();
    },

    getConnectionTypes: function() {
      return browser_transports.getConnectionTypes();
    },

    selectTransport: function(transportTypes) {
      browser_transports.get(this, transportTypes, this._disabled, function(transport) {
        this.debug('Selected ? transport for ?', transport.connectionType, transport.endpoint.href);

        if (transport === this._transport) return;
        if (this._transport) this._transport.close();

        this._transport = transport;
        this.connectionType = transport.connectionType;
      }, this);
    },

    sendMessage: function(message, timeout, options) {
      options = options || {};

      var id       = message.id,
          attempts = options.attempts,
          deadline = options.deadline && new Date().getTime() + (options.deadline * 1000),
          envelope = this._envelopes[id],
          scheduler;

      if (!envelope) {
        scheduler = new this._scheduler(message, { timeout: timeout, interval: this.retry, attempts: attempts, deadline: deadline });
        envelope  = this._envelopes[id] = { message: message, scheduler: scheduler };
      }

      this._sendEnvelope(envelope);
    },

    _sendEnvelope: function(envelope) {
      if (!this._transport) return;
      if (envelope.request || envelope.timer) return;

      var message   = envelope.message,
          scheduler = envelope.scheduler,
          self      = this;

      if (!scheduler.isDeliverable()) {
        scheduler.abort();
        delete this._envelopes[message.id];
        return;
      }

      envelope.timer = commonjsGlobal.setTimeout(function() {
        self.handleError(message);
      }, scheduler.getTimeout() * 1000);

      scheduler.send();
      envelope.request = this._transport.sendMessage(message);
    },

    handleResponse: function(reply) {
      var envelope = this._envelopes[reply.id];

      if (reply.successful !== undefined && envelope) {
        envelope.scheduler.succeed();
        delete this._envelopes[reply.id];
        commonjsGlobal.clearTimeout(envelope.timer);
      }

      this.trigger('message', reply);

      if (this._state === this.UP) return;
      this._state = this.UP;
      this._client.trigger('transport:up');
    },

    handleError: function(message, immediate) {
      var envelope = this._envelopes[message.id],
          request  = envelope && envelope.request,
          self     = this;

      if (!request) return;

      request.then(function(req) {
        if (req && req.abort) req.abort();
      });

      var scheduler = envelope.scheduler;
      scheduler.fail();

      commonjsGlobal.clearTimeout(envelope.timer);
      envelope.request = envelope.timer = null;

      if (immediate) {
        this._sendEnvelope(envelope);
      } else {
        envelope.timer = commonjsGlobal.setTimeout(function() {
          envelope.timer = null;
          self._sendEnvelope(envelope);
        }, scheduler.getInterval() * 1000);
      }

      if (this._state === this.DOWN) return;
      this._state = this.DOWN;
      this._client.trigger('transport:down');
    }
  });

  Dispatcher.create = function(client, endpoint, options) {
    return new Dispatcher(client, endpoint, options);
  };

  assign(Dispatcher.prototype, publisher);
  assign(Dispatcher.prototype, logging);

  var dispatcher = Dispatcher;

  var Error$1 = _class$1({
    initialize: function(code, params, message) {
      this.code    = code;
      this.params  = Array.prototype.slice.call(params);
      this.message = message;
    },

    toString: function() {
      return this.code + ':' +
             this.params.join(',') + ':' +
             this.message;
    }
  });

  Error$1.parse = function(message) {
    message = message || '';
    if (!grammar.ERROR.test(message)) return new Error$1(null, [], message);

    var parts   = message.split(':'),
        code    = parseInt(parts[0]),
        params  = parts[1].split(','),
        message = parts[2];

    return new Error$1(code, params, message);
  };

  // http://code.google.com/p/cometd/wiki/BayeuxCodes
  var errors$1 = {
    versionMismatch:  [300, 'Version mismatch'],
    conntypeMismatch: [301, 'Connection types not supported'],
    extMismatch:      [302, 'Extension mismatch'],
    badRequest:       [400, 'Bad request'],
    clientUnknown:    [401, 'Unknown client'],
    parameterMissing: [402, 'Missing required parameter'],
    channelForbidden: [403, 'Forbidden channel'],
    channelUnknown:   [404, 'Unknown channel'],
    channelInvalid:   [405, 'Invalid channel'],
    extUnknown:       [406, 'Unknown extension'],
    publishFailed:    [407, 'Failed to publish'],
    serverError:      [500, 'Internal server error']
  };

  for (var name$1 in errors$1)
    (function(name) {
      Error$1[name] = function() {
        return new Error$1(errors$1[name][0], arguments, errors$1[name][1]).toString();
      };
    })(name$1);

  var error = Error$1;

  var Extensible = {
    addExtension: function(extension) {
      this._extensions = this._extensions || [];
      this._extensions.push(extension);
      if (extension.added) extension.added(this);
    },

    removeExtension: function(extension) {
      if (!this._extensions) return;
      var i = this._extensions.length;
      while (i--) {
        if (this._extensions[i] !== extension) continue;
        this._extensions.splice(i,1);
        if (extension.removed) extension.removed(this);
      }
    },

    pipeThroughExtensions: function(stage, message, request, callback, context) {
      this.debug('Passing through ? extensions: ?', stage, message);

      if (!this._extensions) return callback.call(context, message);
      var extensions = this._extensions.slice();

      var pipe = function(message) {
        if (!message) return callback.call(context, message);

        var extension = extensions.shift();
        if (!extension) return callback.call(context, message);

        var fn = extension[stage];
        if (!fn) return pipe(message);

        if (fn.length >= 3) extension[stage](message, request, pipe);
        else                extension[stage](message, pipe);
      };
      pipe(message);
    }
  };

  assign(Extensible, logging);

  var extensible = Extensible;

  var publication = _class$1(deferrable);

  var Subscription = _class$1({
    initialize: function(client, channels, callback, context) {
      this._client    = client;
      this._channels  = channels;
      this._callback  = callback;
      this._context   = context;
      this._cancelled = false;
    },

    withChannel: function(callback, context) {
      this._withChannel = [callback, context];
      return this;
    },

    apply: function(context, args) {
      var message = args[0];

      if (this._callback)
        this._callback.call(this._context, message.data);

      if (this._withChannel)
        this._withChannel[0].call(this._withChannel[1], message.channel, message.data);
    },

    cancel: function() {
      if (this._cancelled) return;
      this._client.unsubscribe(this._channels, this);
      this._cancelled = true;
    },

    unsubscribe: function() {
      this.cancel();
    }
  });

  assign(Subscription.prototype, deferrable);

  var subscription = Subscription;

  var Client = _class$1({ className: 'Client',
    UNCONNECTED:  1,
    CONNECTING:   2,
    CONNECTED:    3,
    DISCONNECTED: 4,

    HANDSHAKE: 'handshake',
    RETRY:     'retry',
    NONE:      'none',

    CONNECTION_TIMEOUT: 60,

    DEFAULT_ENDPOINT: '/bayeux',
    INTERVAL:         0,

    initialize: function(endpoint, options) {
      this.info('New client created for ?', endpoint);
      options = options || {};

      validate_options(options, ['interval', 'timeout', 'endpoints', 'proxy', 'retry', 'scheduler', 'websocketExtensions', 'tls', 'ca']);

      this._channels   = new channel.Set();
      this._dispatcher = dispatcher.create(this, endpoint || this.DEFAULT_ENDPOINT, options);

      this._messageId = 0;
      this._state     = this.UNCONNECTED;

      this._responseCallbacks = {};

      this._advice = {
        reconnect: this.RETRY,
        interval:  1000 * (options.interval || this.INTERVAL),
        timeout:   1000 * (options.timeout  || this.CONNECTION_TIMEOUT)
      };
      this._dispatcher.timeout = this._advice.timeout / 1000;

      this._dispatcher.bind('message', this._receiveMessage, this);

      if (event.Event && commonjsGlobal.onbeforeunload !== undefined)
        event.Event.on(commonjsGlobal, 'beforeunload', function() {
          if (array.indexOf(this._dispatcher._disabled, 'autodisconnect') < 0)
            this.disconnect();
        }, this);
    },

    addWebsocketExtension: function(extension) {
      return this._dispatcher.addWebsocketExtension(extension);
    },

    disable: function(feature) {
      return this._dispatcher.disable(feature);
    },

    setHeader: function(name, value) {
      return this._dispatcher.setHeader(name, value);
    },

    // Request
    // MUST include:  * channel
    //                * version
    //                * supportedConnectionTypes
    // MAY include:   * minimumVersion
    //                * ext
    //                * id
    //
    // Success Response                             Failed Response
    // MUST include:  * channel                     MUST include:  * channel
    //                * version                                    * successful
    //                * supportedConnectionTypes                   * error
    //                * clientId                    MAY include:   * supportedConnectionTypes
    //                * successful                                 * advice
    // MAY include:   * minimumVersion                             * version
    //                * advice                                     * minimumVersion
    //                * ext                                        * ext
    //                * id                                         * id
    //                * authSuccessful
    handshake: function(callback, context) {
      if (this._advice.reconnect === this.NONE) return;
      if (this._state !== this.UNCONNECTED) return;

      this._state = this.CONNECTING;
      var self = this;

      this.info('Initiating handshake with ?', this._dispatcher.endpoint.href);
      this._dispatcher.selectTransport(constants.MANDATORY_CONNECTION_TYPES);

      this._sendMessage({
        channel:                  channel.HANDSHAKE,
        version:                  constants.BAYEUX_VERSION,
        supportedConnectionTypes: this._dispatcher.getConnectionTypes()

      }, {}, function(response) {

        if (response.successful) {
          this._state = this.CONNECTED;
          this._dispatcher.clientId  = response.clientId;

          this._dispatcher.selectTransport(response.supportedConnectionTypes);

          this.info('Handshake successful: ?', this._dispatcher.clientId);

          this.subscribe(this._channels.getKeys(), true);
          if (callback) browserAsap(function() { callback.call(context); });

        } else {
          this.info('Handshake unsuccessful');
          commonjsGlobal.setTimeout(function() { self.handshake(callback, context); }, this._dispatcher.retry * 1000);
          this._state = this.UNCONNECTED;
        }
      }, this);
    },

    // Request                              Response
    // MUST include:  * channel             MUST include:  * channel
    //                * clientId                           * successful
    //                * connectionType                     * clientId
    // MAY include:   * ext                 MAY include:   * error
    //                * id                                 * advice
    //                                                     * ext
    //                                                     * id
    //                                                     * timestamp
    connect: function(callback, context) {
      if (this._advice.reconnect === this.NONE) return;
      if (this._state === this.DISCONNECTED) return;

      if (this._state === this.UNCONNECTED)
        return this.handshake(function() { this.connect(callback, context); }, this);

      this.callback(callback, context);
      if (this._state !== this.CONNECTED) return;

      this.info('Calling deferred actions for ?', this._dispatcher.clientId);
      this.setDeferredStatus('succeeded');
      this.setDeferredStatus('unknown');

      if (this._connectRequest) return;
      this._connectRequest = true;

      this.info('Initiating connection for ?', this._dispatcher.clientId);

      this._sendMessage({
        channel:        channel.CONNECT,
        clientId:       this._dispatcher.clientId,
        connectionType: this._dispatcher.connectionType

      }, {}, this._cycleConnection, this);
    },

    // Request                              Response
    // MUST include:  * channel             MUST include:  * channel
    //                * clientId                           * successful
    // MAY include:   * ext                                * clientId
    //                * id                  MAY include:   * error
    //                                                     * ext
    //                                                     * id
    disconnect: function() {
      if (this._state !== this.CONNECTED) return;
      this._state = this.DISCONNECTED;

      this.info('Disconnecting ?', this._dispatcher.clientId);
      var promise = new publication();

      this._sendMessage({
        channel:  channel.DISCONNECT,
        clientId: this._dispatcher.clientId

      }, {}, function(response) {
        if (response.successful) {
          this._dispatcher.close();
          promise.setDeferredStatus('succeeded');
        } else {
          promise.setDeferredStatus('failed', error.parse(response.error));
        }
      }, this);

      this.info('Clearing channel listeners for ?', this._dispatcher.clientId);
      this._channels = new channel.Set();

      return promise;
    },

    // Request                              Response
    // MUST include:  * channel             MUST include:  * channel
    //                * clientId                           * successful
    //                * subscription                       * clientId
    // MAY include:   * ext                                * subscription
    //                * id                  MAY include:   * error
    //                                                     * advice
    //                                                     * ext
    //                                                     * id
    //                                                     * timestamp
    subscribe: function(channel$1, callback, context) {
      if (channel$1 instanceof Array)
        return array.map(channel$1, function(c) {
          return this.subscribe(c, callback, context);
        }, this);

      var subscription$1 = new subscription(this, channel$1, callback, context),
          force        = (callback === true),
          hasSubscribe = this._channels.hasSubscription(channel$1);

      if (hasSubscribe && !force) {
        this._channels.subscribe([channel$1], subscription$1);
        subscription$1.setDeferredStatus('succeeded');
        return subscription$1;
      }

      this.connect(function() {
        this.info('Client ? attempting to subscribe to ?', this._dispatcher.clientId, channel$1);
        if (!force) this._channels.subscribe([channel$1], subscription$1);

        this._sendMessage({
          channel:      channel.SUBSCRIBE,
          clientId:     this._dispatcher.clientId,
          subscription: channel$1

        }, {}, function(response) {
          if (!response.successful) {
            subscription$1.setDeferredStatus('failed', error.parse(response.error));
            return this._channels.unsubscribe(channel$1, subscription$1);
          }

          var channels = [].concat(response.subscription);
          this.info('Subscription acknowledged for ? to ?', this._dispatcher.clientId, channels);
          subscription$1.setDeferredStatus('succeeded');
        }, this);
      }, this);

      return subscription$1;
    },

    // Request                              Response
    // MUST include:  * channel             MUST include:  * channel
    //                * clientId                           * successful
    //                * subscription                       * clientId
    // MAY include:   * ext                                * subscription
    //                * id                  MAY include:   * error
    //                                                     * advice
    //                                                     * ext
    //                                                     * id
    //                                                     * timestamp
    unsubscribe: function(channel$1, subscription) {
      if (channel$1 instanceof Array)
        return array.map(channel$1, function(c) {
          return this.unsubscribe(c, subscription);
        }, this);

      var dead = this._channels.unsubscribe(channel$1, subscription);
      if (!dead) return;

      this.connect(function() {
        this.info('Client ? attempting to unsubscribe from ?', this._dispatcher.clientId, channel$1);

        this._sendMessage({
          channel:      channel.UNSUBSCRIBE,
          clientId:     this._dispatcher.clientId,
          subscription: channel$1

        }, {}, function(response) {
          if (!response.successful) return;

          var channels = [].concat(response.subscription);
          this.info('Unsubscription acknowledged for ? from ?', this._dispatcher.clientId, channels);
        }, this);
      }, this);
    },

    // Request                              Response
    // MUST include:  * channel             MUST include:  * channel
    //                * data                               * successful
    // MAY include:   * clientId            MAY include:   * id
    //                * id                                 * error
    //                * ext                                * ext
    publish: function(channel, data, options) {
      validate_options(options || {}, ['attempts', 'deadline']);
      var publication$1 = new publication();

      this.connect(function() {
        this.info('Client ? queueing published message to ?: ?', this._dispatcher.clientId, channel, data);

        this._sendMessage({
          channel:  channel,
          data:     data,
          clientId: this._dispatcher.clientId

        }, options, function(response) {
          if (response.successful)
            publication$1.setDeferredStatus('succeeded');
          else
            publication$1.setDeferredStatus('failed', error.parse(response.error));
        }, this);
      }, this);

      return publication$1;
    },

    _sendMessage: function(message, options, callback, context) {
      message.id = this._generateMessageId();

      var timeout = this._advice.timeout
                  ? 1.2 * this._advice.timeout / 1000
                  : 1.2 * this._dispatcher.retry;

      this.pipeThroughExtensions('outgoing', message, null, function(message) {
        if (!message) return;
        if (callback) this._responseCallbacks[message.id] = [callback, context];
        this._dispatcher.sendMessage(message, timeout, options || {});
      }, this);
    },

    _generateMessageId: function() {
      this._messageId += 1;
      if (this._messageId >= Math.pow(2,32)) this._messageId = 0;
      return this._messageId.toString(36);
    },

    _receiveMessage: function(message) {
      var id = message.id, callback;

      if (message.successful !== undefined) {
        callback = this._responseCallbacks[id];
        delete this._responseCallbacks[id];
      }

      this.pipeThroughExtensions('incoming', message, null, function(message) {
        if (!message) return;
        if (message.advice) this._handleAdvice(message.advice);
        this._deliverMessage(message);
        if (callback) callback[0].call(callback[1], message);
      }, this);
    },

    _handleAdvice: function(advice) {
      assign(this._advice, advice);
      this._dispatcher.timeout = this._advice.timeout / 1000;

      if (this._advice.reconnect === this.HANDSHAKE && this._state !== this.DISCONNECTED) {
        this._state = this.UNCONNECTED;
        this._dispatcher.clientId = null;
        this._cycleConnection();
      }
    },

    _deliverMessage: function(message) {
      if (!message.channel || message.data === undefined) return;
      this.info('Client ? calling listeners for ? with ?', this._dispatcher.clientId, message.channel, message.data);
      this._channels.distributeMessage(message);
    },

    _cycleConnection: function() {
      if (this._connectRequest) {
        this._connectRequest = null;
        this.info('Closed connection for ?', this._dispatcher.clientId);
      }
      var self = this;
      commonjsGlobal.setTimeout(function() { self.connect(); }, this._advice.interval);
    }
  });

  assign(Client.prototype, deferrable);
  assign(Client.prototype, publisher);
  assign(Client.prototype, logging);
  assign(Client.prototype, extensible);

  var client$1 = Client;

  var Faye = {
    VERSION:    constants.VERSION,

    Client:     client$1,
    Scheduler:  scheduler
  };

  logging.wrapper = Faye;

  var faye_browser = Faye;

  function e$1(e){this.message=e;}e$1.prototype=new Error,e$1.prototype.name="InvalidCharacterError";var r$1="undefined"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,"");if(t.length%4==1)throw new e$1("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,o,a=0,i=0,c="";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(o);return c};function t$1(e){var t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw "Illegal base64url string!"}try{return function(e){return decodeURIComponent(r$1(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t})))}(t)}catch(e){return r$1(t)}}function n$1(e){this.message=e;}function o(e,r){if("string"!=typeof e)throw new n$1("Invalid token specified");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t$1(e.split(".")[o]))}catch(e){throw new n$1("Invalid token specified: "+e.message)}}n$1.prototype=new Error,n$1.prototype.name="InvalidTokenError";

  var jwtDecode_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': o,
    InvalidTokenError: n$1
  });

  var personalization = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Personalization = void 0;

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  /**
   * Manage api calls for personalization
   * The collection object contains convenience functions such as  get, post, delete
   * @class Personalization
   */
  var Personalization = /*#__PURE__*/function () {
    /**
     * Initialize the Personalization class
     * @link https://getstream.io/activity-feeds/docs/node/personalization_introduction/?language=js
     * @method constructor
     * @memberof Personalization.prototype
     * @param {StreamClient} client - The stream client
     */
    function Personalization(client) {
      (0, _classCallCheck2.default)(this, Personalization);
      (0, _defineProperty2.default)(this, "client", void 0);
      this.client = client;
    }
    /**
     * Get personalized activities for this feed
     *
     * @method get
     * @memberof Personalization.prototype
     * @param {string} resource - personalized resource endpoint i.e "follow_recommendations"
     * @param {object} options  Additional options
     * @return {Promise<PersonalizationAPIResponse<PersonalizationType>>} Promise object. Personalized feed
     * @example client.personalization.get('follow_recommendations', {foo: 'bar', baz: 'qux'})
     */


    (0, _createClass2.default)(Personalization, [{
      key: "get",
      value: function get(resource) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        return this.client.get({
          url: "".concat(resource, "/"),
          serviceName: 'personalization',
          qs: options,
          token: options.token || this.client.getPersonalizationToken()
        });
      }
      /**
       * Post data to personalization endpoint
       *
       * @method post
       * @memberof Personalization.prototype
       * @param {string} resource - personalized resource endpoint i.e "follow_recommendations"
       * @param {object} options - Additional options
       * @param {object} data - Data to send in the payload
       * @return {Promise<PersonalizationAPIResponse<PersonalizationType>>} Promise object. Data that was posted if successful, or an error.
       * @example client.personalization.post('follow_recommendations', {foo: 'bar', baz: 'qux'})
       */

    }, {
      key: "post",
      value: function post(resource) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        return this.client.post({
          url: "".concat(resource, "/"),
          serviceName: 'personalization',
          qs: options,
          body: data,
          token: this.client.getPersonalizationToken()
        });
      }
      /**
       * Delete metadata or activities
       *
       * @method delete
       * @memberof Personalization.prototype
       * @param {object} resource - personalized resource endpoint i.e "follow_recommendations"
       * @param {object} options - Additional options
       * @return {Promise<PersonalizationAPIResponse<PersonalizationType>>} Promise object. Data that was deleted if successful, or an error.
       * @example client.personalization.delete('follow_recommendations', {foo: 'bar', baz: 'qux'})
       */

    }, {
      key: "delete",
      value: function _delete(resource) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        return this.client.delete({
          url: "".concat(resource, "/"),
          serviceName: 'personalization',
          qs: options,
          token: this.client.getPersonalizationToken()
        });
      }
    }]);
    return Personalization;
  }();

  exports.Personalization = Personalization;
  });

  var assertThisInitialized$1 = createCommonjsModule(function (module) {
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var setPrototypeOf$1 = createCommonjsModule(function (module) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var inherits$2 = createCommonjsModule(function (module) {
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf$1(subClass, superClass);
  }

  module.exports = _inherits;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var possibleConstructorReturn$1 = createCommonjsModule(function (module) {
  var _typeof = _typeof_1$1["default"];



  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized$1(self);
  }

  module.exports = _possibleConstructorReturn;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var getPrototypeOf$1 = createCommonjsModule(function (module) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var isNativeFunction = createCommonjsModule(function (module) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var isNativeReflectConstruct = createCommonjsModule(function (module) {
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  module.exports = _isNativeReflectConstruct;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var construct = createCommonjsModule(function (module) {
  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
      module.exports["default"] = module.exports, module.exports.__esModule = true;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf$1(instance, Class.prototype);
        return instance;
      };

      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var wrapNativeSuper = createCommonjsModule(function (module) {
  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf$1(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf$1(Wrapper, Class);
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var errors = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamApiError = exports.MissingSchemaError = exports.SiteError = exports.FeedError = void 0;

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _assertThisInitialized2 = interopRequireDefault$1(assertThisInitialized$1);

  var _inherits2 = interopRequireDefault$1(inherits$2);

  var _possibleConstructorReturn2 = interopRequireDefault$1(possibleConstructorReturn$1);

  var _getPrototypeOf2 = interopRequireDefault$1(getPrototypeOf$1);

  var _wrapNativeSuper2 = interopRequireDefault$1(wrapNativeSuper);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var canCapture = typeof Error.captureStackTrace === 'function';
  var canStack = !!new Error().stack;
  /**
   * Abstract error object
   * @class ErrorAbstract
   * @access private
   * @param  {string}      [msg]         Error message
   */

  var ErrorAbstract = /*#__PURE__*/function (_Error) {
    (0, _inherits2.default)(ErrorAbstract, _Error);

    var _super = _createSuper(ErrorAbstract);

    function ErrorAbstract(msg) {
      var _this;

      (0, _classCallCheck2.default)(this, ErrorAbstract);
      _this = _super.call(this, msg);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "message", void 0);
      _this.message = msg;

      if (canCapture) {
        Error.captureStackTrace((0, _assertThisInitialized2.default)(_this), ErrorAbstract.constructor);
      } else if (canStack) {
        _this.stack = new Error().stack;
      } else {
        _this.stack = '';
      }

      return _this;
    }

    return ErrorAbstract;
  }( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
  /**
   * FeedError
   * @class FeedError
   * @access private
   * @extends ErrorAbstract
   * @memberof Stream.errors
   * @param {String} [msg] - An error message that will probably end up in a log.
   */


  var FeedError = /*#__PURE__*/function (_ErrorAbstract) {
    (0, _inherits2.default)(FeedError, _ErrorAbstract);

    var _super2 = _createSuper(FeedError);

    function FeedError() {
      (0, _classCallCheck2.default)(this, FeedError);
      return _super2.apply(this, arguments);
    }

    return FeedError;
  }(ErrorAbstract);
  /**
   * SiteError
   * @class SiteError
   * @access private
   * @extends ErrorAbstract
   * @memberof Stream.errors
   * @param  {string}  [msg]  An error message that will probably end up in a log.
   */


  exports.FeedError = FeedError;

  var SiteError = /*#__PURE__*/function (_ErrorAbstract2) {
    (0, _inherits2.default)(SiteError, _ErrorAbstract2);

    var _super3 = _createSuper(SiteError);

    function SiteError() {
      (0, _classCallCheck2.default)(this, SiteError);
      return _super3.apply(this, arguments);
    }

    return SiteError;
  }(ErrorAbstract);
  /**
   * MissingSchemaError
   * @method MissingSchemaError
   * @access private
   * @extends ErrorAbstract
   * @memberof Stream.errors
   * @param  {string} msg
   */


  exports.SiteError = SiteError;

  var MissingSchemaError = /*#__PURE__*/function (_ErrorAbstract3) {
    (0, _inherits2.default)(MissingSchemaError, _ErrorAbstract3);

    var _super4 = _createSuper(MissingSchemaError);

    function MissingSchemaError() {
      (0, _classCallCheck2.default)(this, MissingSchemaError);
      return _super4.apply(this, arguments);
    }

    return MissingSchemaError;
  }(ErrorAbstract);
  /**
   * StreamApiError
   * @method StreamApiError
   * @access private
   * @extends ErrorAbstract
   * @memberof Stream.errors
   * @param  {string} msg
   * @param  {object} data
   * @param  {object} response
   */


  exports.MissingSchemaError = MissingSchemaError;

  var StreamApiError = /*#__PURE__*/function (_ErrorAbstract4) {
    (0, _inherits2.default)(StreamApiError, _ErrorAbstract4);

    var _super5 = _createSuper(StreamApiError);

    function StreamApiError(msg, data, response) {
      var _this2;

      (0, _classCallCheck2.default)(this, StreamApiError);
      _this2 = _super5.call(this, msg);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), "error", void 0);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), "response", void 0);
      _this2.error = data;
      _this2.response = response;
      return _this2;
    }

    return StreamApiError;
  }(ErrorAbstract);

  exports.StreamApiError = StreamApiError;
  });

  var collections = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Collections = exports.CollectionEntry = void 0;

  var _regenerator = interopRequireDefault$1(regenerator);

  var _asyncToGenerator2 = interopRequireDefault$1(asyncToGenerator);

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);



  var CollectionEntry = /*#__PURE__*/function () {
    // eslint-disable-line no-use-before-define
    function CollectionEntry( // eslint-disable-next-line no-use-before-define
    store, collection, id, data) {
      (0, _classCallCheck2.default)(this, CollectionEntry);
      (0, _defineProperty2.default)(this, "id", void 0);
      (0, _defineProperty2.default)(this, "collection", void 0);
      (0, _defineProperty2.default)(this, "store", void 0);
      (0, _defineProperty2.default)(this, "data", void 0);
      (0, _defineProperty2.default)(this, "full", void 0);
      this.collection = collection;
      this.store = store;
      this.id = id;
      this.data = data;
    }

    (0, _createClass2.default)(CollectionEntry, [{
      key: "ref",
      value: function ref() {
        return "SO:".concat(this.collection, ":").concat(this.id);
      }
      /**
       * get item from collection and sync data
       * @method get
       * @memberof CollectionEntry.prototype
       * @return {Promise<CollectionEntry<CollectionType>>}
       * @example collection.get("0c7db91c-67f9-11e8-bcd9-fe00a9219401")
       */

    }, {
      key: "get",
      value: function () {
        var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
          var response;
          return _regenerator.default.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return this.store.get(this.collection, this.id);

                case 2:
                  response = _context.sent;
                  this.data = response.data;
                  this.full = response;
                  return _context.abrupt("return", response);

                case 6:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function get() {
          return _get.apply(this, arguments);
        }

        return get;
      }()
      /**
       * Add item to collection
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#adding-collections
       * @method add
       * @memberof CollectionEntry.prototype
       * @return {Promise<CollectionEntry<CollectionType>>}
       * @example collection.add("cheese101", {"name": "cheese burger","toppings": "cheese"})
       */

    }, {
      key: "add",
      value: function () {
        var _add = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
          var response;
          return _regenerator.default.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return this.store.add(this.collection, this.id, this.data);

                case 2:
                  response = _context2.sent;
                  this.data = response.data;
                  this.full = response;
                  return _context2.abrupt("return", response);

                case 6:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, this);
        }));

        function add() {
          return _add.apply(this, arguments);
        }

        return add;
      }()
      /**
       * Update item in the object storage
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#updating-collections
       * @method update
       * @memberof CollectionEntry.prototype
       * @return {Promise<CollectionEntry<CollectionType>>}
       * @example store.update("0c7db91c-67f9-11e8-bcd9-fe00a9219401", {"name": "cheese burger","toppings": "cheese"})
       * @example store.update("cheese101", {"name": "cheese burger","toppings": "cheese"})
       */

    }, {
      key: "update",
      value: function () {
        var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
          var response;
          return _regenerator.default.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return this.store.update(this.collection, this.id, this.data);

                case 2:
                  response = _context3.sent;
                  this.data = response.data;
                  this.full = response;
                  return _context3.abrupt("return", response);

                case 6:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3, this);
        }));

        function update() {
          return _update.apply(this, arguments);
        }

        return update;
      }()
      /**
       * Delete item from collection
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#removing-collections
       * @method delete
       * @memberof CollectionEntry.prototype
       * @return {Promise<APIResponse>}
       * @example collection.delete("cheese101")
       */

    }, {
      key: "delete",
      value: function () {
        var _delete2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {
          var response;
          return _regenerator.default.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  _context4.next = 2;
                  return this.store.delete(this.collection, this.id);

                case 2:
                  response = _context4.sent;
                  this.data = null;
                  this.full = null;
                  return _context4.abrupt("return", response);

                case 6:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, this);
        }));

        function _delete() {
          return _delete2.apply(this, arguments);
        }

        return _delete;
      }()
    }]);
    return CollectionEntry;
  }();

  exports.CollectionEntry = CollectionEntry;

  var Collections = /*#__PURE__*/function () {
    /**
     * Initialize a feed object
     * @method constructor
     * @memberof Collections.prototype
     * @param {StreamCloudClient} client Stream client this collection is constructed from
     * @param {string} token JWT token
     */
    function Collections(client, token) {
      (0, _classCallCheck2.default)(this, Collections);
      (0, _defineProperty2.default)(this, "client", void 0);
      (0, _defineProperty2.default)(this, "token", void 0);
      (0, _defineProperty2.default)(this, "buildURL", function (collection, itemId) {
        var url = "collections/".concat(collection, "/");
        return itemId === undefined ? url : "".concat(url).concat(itemId, "/");
      });
      this.client = client;
      this.token = token;
    }

    (0, _createClass2.default)(Collections, [{
      key: "entry",
      value: function entry(collection, itemId, itemData) {
        return new CollectionEntry(this, collection, itemId, itemData);
      }
      /**
       * get item from collection
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#retrieving-collections
       * @method get
       * @memberof Collections.prototype
       * @param  {string}   collection  collection name
       * @param  {string}   itemId  id for this entry
       * @return {Promise<CollectionEntry<CollectionType>>}
       * @example collection.get("food", "0c7db91c-67f9-11e8-bcd9-fe00a9219401")
       */

    }, {
      key: "get",
      value: function () {
        var _get2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(collection, itemId) {
          var response, entry;
          return _regenerator.default.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return this.client.get({
                    url: this.buildURL(collection, itemId),
                    token: this.token
                  });

                case 2:
                  response = _context5.sent;
                  entry = this.entry(response.collection, response.id, response.data);
                  entry.full = response;
                  return _context5.abrupt("return", entry);

                case 6:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5, this);
        }));

        function get(_x, _x2) {
          return _get2.apply(this, arguments);
        }

        return get;
      }()
      /**
       * Add item to collection
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#adding-collections
       * @method add
       * @memberof Collections.prototype
       * @param  {string}   collection  collection name
       * @param  {string | null}    itemId  entry id, if null a random id will be assigned to the item
       * @param  {CollectionType}   itemData  ObjectStore data
       * @return {Promise<CollectionEntry<CollectionType>>}
       * @example collection.add("food", "cheese101", {"name": "cheese burger","toppings": "cheese"})
       */

    }, {
      key: "add",
      value: function () {
        var _add2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(collection, itemId, itemData) {
          var response, entry;
          return _regenerator.default.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  _context6.next = 2;
                  return this.client.post({
                    url: this.buildURL(collection),
                    body: {
                      id: itemId === null ? undefined : itemId,
                      data: itemData
                    },
                    token: this.token
                  });

                case 2:
                  response = _context6.sent;
                  entry = this.entry(response.collection, response.id, response.data);
                  entry.full = response;
                  return _context6.abrupt("return", entry);

                case 6:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6, this);
        }));

        function add(_x3, _x4, _x5) {
          return _add2.apply(this, arguments);
        }

        return add;
      }()
      /**
       * Update entry in the collection
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#updating-collections
       * @method update
       * @memberof Collections.prototype
       * @param  {string}   collection  collection name
       * @param  {string}   entryId  Collection object id
       * @param  {CollectionType}   data  ObjectStore data
       * @return {Promise<CollectionEntry<CollectionType>>}
       * @example store.update("0c7db91c-67f9-11e8-bcd9-fe00a9219401", {"name": "cheese burger","toppings": "cheese"})
       * @example store.update("food", "cheese101", {"name": "cheese burger","toppings": "cheese"})
       */

    }, {
      key: "update",
      value: function () {
        var _update2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7(collection, entryId, data) {
          var response, entry;
          return _regenerator.default.wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  _context7.next = 2;
                  return this.client.put({
                    url: this.buildURL(collection, entryId),
                    body: {
                      data: data
                    },
                    token: this.token
                  });

                case 2:
                  response = _context7.sent;
                  entry = this.entry(response.collection, response.id, response.data);
                  entry.full = response;
                  return _context7.abrupt("return", entry);

                case 6:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7, this);
        }));

        function update(_x6, _x7, _x8) {
          return _update2.apply(this, arguments);
        }

        return update;
      }()
      /**
       * Delete entry from collection
       * @link https://getstream.io/activity-feeds/docs/node/collections_introduction/?language=js#removing-collections
       * @method delete
       * @memberof Collections.prototype
       * @param  {string}   collection  collection name
       * @param  {string}   entryId  Collection entry id
       * @return {Promise<APIResponse>} Promise object
       * @example collection.delete("food", "cheese101")
       */

    }, {
      key: "delete",
      value: function _delete(collection, entryId) {
        return this.client.delete({
          url: this.buildURL(collection, entryId),
          token: this.token
        });
      }
      /**
       * Upsert one or more items within a collection.
       * @link https://getstream.io/activity-feeds/docs/node/collections_batch/?language=js#upsert
       * @method upsert
       * @memberof Collections.prototype
       * @param  {string}   collection  collection name
       * @param {NewCollectionEntry<CollectionType> | NewCollectionEntry<CollectionType>[]} data - A single json object or an array of objects
       * @return {Promise<UpsertCollectionAPIResponse<CollectionType>>}
       */

    }, {
      key: "upsert",
      value: function upsert(collection, data) {
        if (!this.client.usingApiSecret) {
          throw new errors.SiteError('This method can only be used server-side using your API Secret');
        }

        if (!Array.isArray(data)) data = [data];
        return this.client.post({
          url: 'collections/',
          serviceName: 'api',
          body: {
            data: (0, _defineProperty2.default)({}, collection, data)
          },
          token: this.client.getCollectionsToken()
        });
      }
      /**
       * Select all objects with ids from the collection.
       * @link https://getstream.io/activity-feeds/docs/node/collections_batch/?language=js#select
       * @method select
       * @memberof Collections.prototype
       * @param {string} collection  collection name
       * @param {string | string[]} ids - A single object id or an array of ids
       * @return {Promise<SelectCollectionAPIResponse<CollectionType>>}
       */

    }, {
      key: "select",
      value: function select(collection, ids) {
        if (!this.client.usingApiSecret) {
          throw new errors.SiteError('This method can only be used server-side using your API Secret');
        }

        if (!Array.isArray(ids)) ids = [ids];
        return this.client.get({
          url: 'collections/',
          serviceName: 'api',
          qs: {
            foreign_ids: ids.map(function (id) {
              return "".concat(collection, ":").concat(id);
            }).join(',')
          },
          token: this.client.getCollectionsToken()
        });
      }
      /**
       * Remove all objects by id from the collection.
       * @link https://getstream.io/activity-feeds/docs/node/collections_batch/?language=js#delete_many
       * @method delete
       * @memberof Collections.prototype
       * @param {string} collection  collection name
       * @param {string | string[]} ids - A single object id or an array of ids
       * @return {Promise<APIResponse>}
       */

    }, {
      key: "deleteMany",
      value: function deleteMany(collection, ids) {
        if (!this.client.usingApiSecret) {
          throw new errors.SiteError('This method can only be used server-side using your API Secret');
        }

        if (!Array.isArray(ids)) ids = [ids];
        var params = {
          collection_name: collection,
          ids: ids.map(function (id) {
            return id.toString();
          }).join(',')
        };
        return this.client.delete({
          url: 'collections/',
          serviceName: 'api',
          qs: params,
          token: this.client.getCollectionsToken()
        });
      }
    }]);
    return Collections;
  }();

  exports.Collections = Collections;
  });

  var files$1 = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamFileStore = void 0;

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  var StreamFileStore = /*#__PURE__*/function () {
    function StreamFileStore(client, token) {
      (0, _classCallCheck2.default)(this, StreamFileStore);
      (0, _defineProperty2.default)(this, "client", void 0);
      (0, _defineProperty2.default)(this, "token", void 0);
      this.client = client;
      this.token = token;
    } // React Native does not auto-detect MIME type, you need to pass that via contentType
    // param. If you don't then Android will refuse to perform the upload

    /**
     * upload a File instance or a readable stream of data
     * @link https://getstream.io/activity-feeds/docs/node/files_introduction/?language=js#upload
     * @param {File|Buffer|NodeJS.ReadStream|string} uri - File object or stream or URI
     * @param {string} [name] - file name
     * @param {string} [contentType] - mime-type
     * @param {function} [onUploadProgress] - browser only, Function that is called with upload progress
     * @return {Promise<FileUploadAPIResponse>}
     */


    (0, _createClass2.default)(StreamFileStore, [{
      key: "upload",
      value: function upload(uri, name, contentType, onUploadProgress) {
        return this.client.upload('files/', uri, name, contentType, onUploadProgress);
      }
      /**
       * delete an uploaded file
       * @link https://getstream.io/activity-feeds/docs/node/files_introduction/?language=js#delete
       * @param {string} uri
       */

    }, {
      key: "delete",
      value: function _delete(uri) {
        return this.client.delete({
          url: "files/",
          qs: {
            url: uri
          },
          token: this.token
        });
      }
      /**
       * Explicitly refresh CDN urls for uploaded files on the Stream CDN (only needed for files on the Stream CDN).
       * Note that Stream CDN is not enabled by default, if in doubt please contact us.
       * @param  {string} uri full uploaded file url that needs to be refreshed
       * @return {Promise<RefreshUrlAPIResponse>}
       */

    }, {
      key: "refreshUrl",
      value: function refreshUrl(uri) {
        return this.client.post({
          url: 'files/refresh/',
          body: {
            url: uri
          },
          token: this.token
        });
      }
    }]);
    return StreamFileStore;
  }();

  exports.StreamFileStore = StreamFileStore;
  });

  var _extends_1$1 = createCommonjsModule(function (module) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var images = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamImageStore = void 0;

  var _extends2 = interopRequireDefault$1(_extends_1$1);

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  var StreamImageStore = /*#__PURE__*/function () {
    function StreamImageStore(client, token) {
      (0, _classCallCheck2.default)(this, StreamImageStore);
      (0, _defineProperty2.default)(this, "client", void 0);
      (0, _defineProperty2.default)(this, "token", void 0);
      this.client = client;
      this.token = token;
    } // React Native does not auto-detect MIME type, you need to pass that via contentType
    // param. If you don't then Android will refuse to perform the upload

    /**
     * upload an Image File instance or a readable stream of data
     * @link https://getstream.io/activity-feeds/docs/node/files_introduction/?language=js#upload
     * @param {File|Buffer|NodeJS.ReadStream|string} uri - File object or stream or URI
     * @param {string} [name] - file name
     * @param {string} [contentType] - mime-type
     * @param {function} [onUploadProgress] - browser only, Function that is called with upload progress
     * @return {Promise<FileUploadAPIResponse>}
     */


    (0, _createClass2.default)(StreamImageStore, [{
      key: "upload",
      value: function upload(uri, name, contentType, onUploadProgress) {
        return this.client.upload('images/', uri, name, contentType, onUploadProgress);
      }
      /**
       * delete an uploaded image
       * @link https://getstream.io/activity-feeds/docs/node/files_introduction/?language=js#delete
       * @param {string} uri
       */

    }, {
      key: "delete",
      value: function _delete(uri) {
        return this.client.delete({
          url: "images/",
          qs: {
            url: uri
          },
          token: this.token
        });
      }
      /**
       * Explicitly refresh CDN urls for uploaded images on the Stream CDN (only needed for files on the Stream CDN).
       * Note that Stream CDN is not enabled by default, if in doubt please contact us.
       * @param  {string} uri full uploaded image url that needs to be refreshed
       * @return {Promise<RefreshUrlAPIResponse>}
       */

    }, {
      key: "refreshUrl",
      value: function refreshUrl(uri) {
        return this.client.post({
          url: 'images/refresh/',
          body: {
            url: uri
          },
          token: this.token
        });
      }
      /**
       * Generate a diffrent variant of the uploaded image
       * @link https://getstream.io/activity-feeds/docs/node/files_introduction/?language=js#image_processing
       * @param {string} uri
       * @param {ImageProcessOptions} options
       */

    }, {
      key: "process",
      value: function process(uri, options) {
        var params = (0, _extends2.default)(options, {
          url: uri
        });

        if (Array.isArray(params.crop)) {
          params.crop = params.crop.join(',');
        }

        return this.client.get({
          url: "images/",
          qs: params,
          token: this.token
        });
      }
      /**
       * Generate a thumbnail for a given image
       * @link https://getstream.io/activity-feeds/docs/node/files_introduction/?language=js#image_processing
       * @param {string} uri
       * @param {number|string} w
       * @param {number|string} h
       * @param {Object} [options]
       */

    }, {
      key: "thumbnail",
      value: function thumbnail(uri, w, h) {
        var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
          crop: 'center',
          resize: 'clip'
        },
            crop = _ref.crop,
            resize = _ref.resize;

        return this.process(uri, {
          w: w,
          h: h,
          crop: crop,
          resize: resize
        });
      }
    }]);
    return StreamImageStore;
  }();

  exports.StreamImageStore = StreamImageStore;
  });

  var reaction = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamReaction = void 0;

  var _objectWithoutProperties2 = interopRequireDefault$1(objectWithoutProperties);

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);



  var StreamReaction = /*#__PURE__*/function () {
    /**
     * Initialize a reaction object
     * @link https://getstream.io/activity-feeds/docs/node/reactions_introduction/?language=js
     * @method constructor
     * @memberof StreamReaction.prototype
     * @param {StreamClient} client Stream client this feed is constructed from
     * @param {string} token JWT token
     * @example new StreamReaction(client, "eyJhbGciOiJIUzI1...")
     */
    function StreamReaction(client, token) {
      (0, _classCallCheck2.default)(this, StreamReaction);
      (0, _defineProperty2.default)(this, "client", void 0);
      (0, _defineProperty2.default)(this, "token", void 0);
      (0, _defineProperty2.default)(this, "buildURL", function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return "".concat(['reaction'].concat(args).join('/'), "/");
      });
      (0, _defineProperty2.default)(this, "_convertTargetFeeds", function () {
        var targetFeeds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        return targetFeeds.map(function (elem) {
          return typeof elem === 'string' ? elem : elem.id;
        });
      });
      this.client = client;
      this.token = token;
    }

    (0, _createClass2.default)(StreamReaction, [{
      key: "add",
      value:
      /**
       * add reaction
       * @link https://getstream.io/activity-feeds/docs/node/reactions_introduction/?language=js#adding-reactions
       * @method add
       * @memberof StreamReaction.prototype
       * @param  {string}   kind  kind of reaction
       * @param  {string}   activity Activity or an ActivityID
       * @param  {ReactionType}   data  data related to reaction
       * @param  {ReactionAddOptions} [options]
       * @param  {string} [options.id] id associated with reaction
       * @param  {string[]} [options.targetFeeds] an array of feeds to which to send an activity with the reaction
       * @param  {string} [options.userId] useful for adding reaction with server token
       * @param  {object} [options.targetFeedsExtraData] extra data related to target feeds
       * @return {Promise<ReactionAPIResponse<ReactionType>>}
       * @example reactions.add("like", "0c7db91c-67f9-11e8-bcd9-fe00a9219401")
       * @example reactions.add("comment", "0c7db91c-67f9-11e8-bcd9-fe00a9219401", {"text": "love it!"},)
       */
      function add(kind, activity, data) {
        var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
            id = _ref.id,
            _ref$targetFeeds = _ref.targetFeeds,
            targetFeeds = _ref$targetFeeds === void 0 ? [] : _ref$targetFeeds,
            userId = _ref.userId,
            targetFeedsExtraData = _ref.targetFeedsExtraData;

        var body = {
          id: id,
          activity_id: activity instanceof Object ? activity.id : activity,
          kind: kind,
          data: data || {},
          target_feeds: this._convertTargetFeeds(targetFeeds),
          user_id: userId
        };

        if (targetFeedsExtraData != null) {
          body.target_feeds_extra_data = targetFeedsExtraData;
        }

        return this.client.post({
          url: this.buildURL(),
          body: body,
          token: this.token
        });
      }
      /**
       * add child reaction
       * @link https://getstream.io/activity-feeds/docs/node/reactions_add_child/?language=js
       * @method addChild
       * @memberof StreamReaction.prototype
       * @param  {string}   kind  kind of reaction
       * @param  {string}   reaction Reaction or a ReactionID
       * @param  {ChildReactionType}   data  data related to reaction
       * @param  {ReactionAddChildOptions} [options]
       * @param  {string[]} [options.targetFeeds] an array of feeds to which to send an activity with the reaction
       * @param  {string} [options.userId] useful for adding reaction with server token
       * @param  {object} [options.targetFeedsExtraData] extra data related to target feeds
       * @return {Promise<ReactionAPIResponse<ChildReactionType>>}
       * @example reactions.add("like", "0c7db91c-67f9-11e8-bcd9-fe00a9219401")
       * @example reactions.add("comment", "0c7db91c-67f9-11e8-bcd9-fe00a9219401", {"text": "love it!"},)
       */

    }, {
      key: "addChild",
      value: function addChild(kind, reaction, data) {
        var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
            _ref2$targetFeeds = _ref2.targetFeeds,
            targetFeeds = _ref2$targetFeeds === void 0 ? [] : _ref2$targetFeeds,
            userId = _ref2.userId,
            targetFeedsExtraData = _ref2.targetFeedsExtraData;

        var body = {
          parent: reaction instanceof Object ? reaction.id : reaction,
          kind: kind,
          data: data || {},
          target_feeds: this._convertTargetFeeds(targetFeeds),
          user_id: userId
        };

        if (targetFeedsExtraData != null) {
          body.target_feeds_extra_data = targetFeedsExtraData;
        }

        return this.client.post({
          url: this.buildURL(),
          body: body,
          token: this.token
        });
      }
      /**
       * get reaction
       * @link https://getstream.io/activity-feeds/docs/node/reactions_introduction/?language=js#retrieving-reactions
       * @method get
       * @memberof StreamReaction.prototype
       * @param  {string}   id Reaction Id
       * @return {Promise<EnrichedReactionAPIResponse<ReactionType, ChildReactionType, UserType>>}
       * @example reactions.get("67b3e3b5-b201-4697-96ac-482eb14f88ec")
       */

    }, {
      key: "get",
      value: function get(id) {
        return this.client.get({
          url: this.buildURL(id),
          token: this.token
        });
      }
      /**
       * retrieve reactions by activity_id, user_id or reaction_id (to paginate children reactions), pagination can be done using id_lt, id_lte, id_gt and id_gte parameters
       * id_lt and id_lte return reactions order by creation descending starting from the reaction with the ID provided, when id_lte is used
       * the reaction with ID equal to the value provided is included.
       * id_gt and id_gte return reactions order by creation ascending (oldest to newest) starting from the reaction with the ID provided, when id_gte is used
       * the reaction with ID equal to the value provided is included.
       * results are limited to 25 at most and are ordered newest to oldest by default.
       * @link https://getstream.io/activity-feeds/docs/node/reactions_introduction/?language=js#retrieving-reactions
       * @method filter
       * @memberof StreamReaction.prototype
       * @param  {ReactionFilterConditions} conditions Reaction Id {activity_id|user_id|reaction_id:string, kind:string, limit:integer}
       * @return {Promise<ReactionFilterAPIResponse<ReactionType, ChildReactionType, ActivityType, UserType>>}
       * @example reactions.filter({activity_id: "0c7db91c-67f9-11e8-bcd9-fe00a9219401", kind:"like"})
       * @example reactions.filter({user_id: "john", kinds:"like"})
       */

    }, {
      key: "filter",
      value: function filter(conditions) {
        var userId = conditions.user_id,
            activityId = conditions.activity_id,
            reactionId = conditions.reaction_id,
            qs = (0, _objectWithoutProperties2.default)(conditions, ["user_id", "activity_id", "reaction_id"]);

        if (!qs.limit) {
          qs.limit = 10;
        }

        if ((userId ? 1 : 0) + (activityId ? 1 : 0) + (reactionId ? 1 : 0) !== 1) {
          throw new errors.SiteError('Must provide exactly one value for one of these params: user_id, activity_id, reaction_id');
        }

        var lookupType = userId && 'user_id' || activityId && 'activity_id' || reactionId && 'reaction_id';
        var value = userId || activityId || reactionId;
        var url = conditions.kind ? this.buildURL(lookupType, value, conditions.kind) : this.buildURL(lookupType, value);
        return this.client.get({
          url: url,
          qs: qs,
          token: this.token
        });
      }
      /**
       * update reaction
       * @link https://getstream.io/activity-feeds/docs/node/reactions_introduction/?language=js#updating-reactions
       * @method update
       * @memberof StreamReaction.prototype
       * @param  {string}   id Reaction Id
       * @param  {ReactionType | ChildReactionType}   data  Data associated to reaction or childReaction
       * @param  {ReactionUpdateOptions} [options]
       * @param  {string[]} [options.targetFeeds] Optional feeds to post the activity to. If you sent this before and don't set it here it will be removed.
       * @param  {object} [options.targetFeedsExtraData] extra data related to target feeds
       * @return {Promise<ReactionAPIResponse<ReactionType | ChildReactionType>>}
       * @example reactions.update("67b3e3b5-b201-4697-96ac-482eb14f88ec", "0c7db91c-67f9-11e8-bcd9-fe00a9219401", "like")
       * @example reactions.update("67b3e3b5-b201-4697-96ac-482eb14f88ec", "0c7db91c-67f9-11e8-bcd9-fe00a9219401", "comment", {"text": "love it!"},)
       */

    }, {
      key: "update",
      value: function update(id, data) {
        var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
            _ref3$targetFeeds = _ref3.targetFeeds,
            targetFeeds = _ref3$targetFeeds === void 0 ? [] : _ref3$targetFeeds,
            targetFeedsExtraData = _ref3.targetFeedsExtraData;

        var body = {
          data: data,
          target_feeds: this._convertTargetFeeds(targetFeeds)
        };

        if (targetFeedsExtraData != null) {
          body.target_feeds_extra_data = targetFeedsExtraData;
        }

        return this.client.put({
          url: this.buildURL(id),
          body: body,
          token: this.token
        });
      }
      /**
       * delete reaction
       * @link https://getstream.io/activity-feeds/docs/node/reactions_introduction/?language=js#removing-reactions
       * @method delete
       * @memberof StreamReaction.prototype
       * @param  {string}   id Reaction Id
       * @return {Promise<APIResponse>}
       * @example reactions.delete("67b3e3b5-b201-4697-96ac-482eb14f88ec")
       */

    }, {
      key: "delete",
      value: function _delete(id) {
        return this.client.delete({
          url: this.buildURL(id),
          token: this.token
        });
      }
    }]);
    return StreamReaction;
  }();

  exports.StreamReaction = StreamReaction;
  });

  var user = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamUser = void 0;

  var _regenerator = interopRequireDefault$1(regenerator);

  var _asyncToGenerator2 = interopRequireDefault$1(asyncToGenerator);

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var StreamUser = /*#__PURE__*/function () {
    /**
     * Initialize a user session object
     * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js
     * @method constructor
     * @memberof StreamUser.prototype
     * @param {StreamClient} client Stream client this collection is constructed from
     * @param {string} userId The ID of the user
     * @param {string} userAuthToken JWT token
     * @example new StreamUser(client, "123", "eyJhbGciOiJIUzI1...")
     */
    function StreamUser(client, userId, userAuthToken) {
      (0, _classCallCheck2.default)(this, StreamUser);
      (0, _defineProperty2.default)(this, "client", void 0);
      (0, _defineProperty2.default)(this, "token", void 0);
      (0, _defineProperty2.default)(this, "id", void 0);
      (0, _defineProperty2.default)(this, "data", void 0);
      (0, _defineProperty2.default)(this, "full", void 0);
      (0, _defineProperty2.default)(this, "url", void 0);
      this.client = client;
      this.id = userId;
      this.data = undefined;
      this.full = undefined;
      this.token = userAuthToken;
      this.url = "user/".concat(this.id, "/");
    }
    /**
     * Create a stream user ref
     * @return {string}
     */


    (0, _createClass2.default)(StreamUser, [{
      key: "ref",
      value: function ref() {
        return "SU:".concat(this.id);
      }
      /**
       * Delete the user
       * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js#removing-users
       * @return {Promise<APIResponse>}
       */

    }, {
      key: "delete",
      value: function _delete() {
        return this.client.delete({
          url: this.url,
          token: this.token
        });
      }
      /**
       * Get the user data
       * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js#retrieving-users
       * @param {boolean} [options.with_follow_counts]
       * @return {Promise<StreamUser>}
       */

    }, {
      key: "get",
      value: function () {
        var _get = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(options) {
          var response;
          return _regenerator.default.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return this.client.get({
                    url: this.url,
                    token: this.token,
                    qs: options
                  });

                case 2:
                  response = _context.sent;
                  this.full = _objectSpread({}, response);
                  delete this.full.duration;
                  this.data = this.full.data;
                  return _context.abrupt("return", this);

                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function get(_x) {
          return _get.apply(this, arguments);
        }

        return get;
      }()
      /**
       * Create a new user in stream
       * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js#adding-users
       * @param {object} data user date stored in stream
       * @param {boolean} [options.get_or_create] if user already exists return it
       * @return {Promise<StreamUser>}
       */

    }, {
      key: "create",
      value: function () {
        var _create = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(data, options) {
          var response;
          return _regenerator.default.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return this.client.post({
                    url: 'user/',
                    body: {
                      id: this.id,
                      data: data || this.data || {}
                    },
                    qs: options,
                    token: this.token
                  });

                case 2:
                  response = _context2.sent;
                  this.full = _objectSpread({}, response);
                  delete this.full.duration;
                  this.data = this.full.data;
                  return _context2.abrupt("return", this);

                case 7:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, this);
        }));

        function create(_x2, _x3) {
          return _create.apply(this, arguments);
        }

        return create;
      }()
      /**
       * Update the user
       * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js#updating-users
       * @param {object} data user date stored in stream
       * @return {Promise<StreamUser>}
       */

    }, {
      key: "update",
      value: function () {
        var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(data) {
          var response;
          return _regenerator.default.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return this.client.put({
                    url: this.url,
                    body: {
                      data: data || this.data || {}
                    },
                    token: this.token
                  });

                case 2:
                  response = _context3.sent;
                  this.full = _objectSpread({}, response);
                  delete this.full.duration;
                  this.data = this.full.data;
                  return _context3.abrupt("return", this);

                case 7:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3, this);
        }));

        function update(_x4) {
          return _update.apply(this, arguments);
        }

        return update;
      }()
      /**
       * Get or Create a new user in stream
       * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js#adding-users
       * @param {object} data user date stored in stream
       * @return {Promise<StreamUser>}
       */

    }, {
      key: "getOrCreate",
      value: function getOrCreate(data) {
        return this.create(data, {
          get_or_create: true
        });
      }
      /**
       * Get the user profile, it includes the follow counts by default
       * @link https://getstream.io/activity-feeds/docs/node/users_introduction/?language=js#retrieving-users
       * @return {Promise<StreamUser>}
       */

    }, {
      key: "profile",
      value: function profile() {
        return this.get({
          with_follow_counts: true
        });
      }
    }]);
    return StreamUser;
  }();

  exports.StreamUser = StreamUser;
  });

  var JWTScopeToken_1 = JWTScopeToken;
  var JWTUserSessionToken_1 = JWTUserSessionToken;

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  var _jsonwebtoken = interopRequireDefault$1(_batch_operations);

  function ownKeys$d(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$g(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$d(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$d(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  // for a claim in jwt
  function joinClaimValue(items) {
    var values = Array.isArray(items) ? items : [items];
    var claims = [];

    for (var i = 0; i < values.length; i += 1) {
      var s = values[i].trim();
      if (s === '*') return s;
      claims.push(s);
    }

    return claims.join(',');
  }
  /**
   * Creates the JWT token for feedId, resource and action using the apiSecret
   * @method JWTScopeToken
   * @memberof signing
   * @private
   * @param {string} apiSecret - API Secret key
   * @param {string | string[]} resource - JWT payload resource
   * @param {string | string[]} action - JWT payload action
   * @param {object} [options] - Optional additional options
   * @param {string | string[]} [options.feedId] - JWT payload feed identifier
   * @param {string} [options.userId] - JWT payload user identifier
   * @param {boolean} [options.expireTokens] - JWT noTimestamp
   * @return {string} JWT Token
   */


  function JWTScopeToken(apiSecret, resource, action) {
    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var noTimestamp = options.expireTokens ? !options.expireTokens : true;
    var payload = {
      resource: joinClaimValue(resource),
      action: joinClaimValue(action)
    };
    if (options.feedId) payload.feed_id = joinClaimValue(options.feedId);
    if (options.userId) payload.user_id = options.userId;
    return _jsonwebtoken.default.sign(payload, apiSecret, {
      algorithm: 'HS256',
      noTimestamp: noTimestamp
    });
  }
  /**
   * Creates the JWT token that can be used for a UserSession
   * @method JWTUserSessionToken
   * @memberof signing
   * @private
   * @param {string} apiSecret - API Secret key
   * @param {string} userId - The user_id key in the JWT payload
   * @param {object} [extraData] - Extra that should be part of the JWT token
   * @param {object} [jwtOptions] - Options that can be past to jwt.sign
   * @return {string} JWT Token
   */


  function JWTUserSessionToken(apiSecret, userId) {
    var extraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var jwtOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    if (typeof userId !== 'string') {
      throw new TypeError('userId should be a string');
    }

    var payload = _objectSpread$g({
      user_id: userId
    }, extraData);

    var opts = _objectSpread$g({
      algorithm: 'HS256',
      noTimestamp: true
    }, jwtOptions);

    return _jsonwebtoken.default.sign(payload, apiSecret, opts);
  }

  var signing = /*#__PURE__*/Object.defineProperty({
  	JWTScopeToken: JWTScopeToken_1,
  	JWTUserSessionToken: JWTUserSessionToken_1
  }, '__esModule', {value: true});

  /* eslint-env browser */
  var browser$1 = typeof self == 'object' ? self.FormData : window.FormData;

  var utils$1 = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _slicedToArray2 = interopRequireDefault$1(slicedToArray);

  var _typeof2 = interopRequireDefault$1(_typeof_1$1);

  var _formData = interopRequireDefault$1(browser$1);



  var validFeedSlugRe = /^[\w]+$/;
  var validUserIdRe = /^[\w-]+$/;
  /*
   * Validate that the feedSlug matches \w
   */

  function validateFeedSlug(feedSlug) {
    if (!validFeedSlugRe.test(feedSlug)) {
      throw new errors.FeedError("Invalid feedSlug, please use letters, numbers or _: ".concat(feedSlug));
    }

    return feedSlug;
  }
  /*
   * Validate the userId matches \w
   */


  function validateUserId(userId) {
    if (!validUserIdRe.test(userId)) {
      throw new errors.FeedError("Invalid userId, please use letters, numbers, - or _: ".concat(userId));
    }

    return userId;
  }

  function rfc3986(str) {
    return str.replace(/[!'()*]/g, function (c) {
      return "%".concat(c.charCodeAt(0).toString(16).toUpperCase());
    });
  }

  function isReadableStream(obj) {
    return obj !== null && (0, _typeof2.default)(obj) === 'object' && (obj.readable || typeof obj._read === 'function');
  }

  function isBuffer(obj) {
    return obj != null && obj.constructor != null && // @ts-expect-error
    typeof obj.constructor.isBuffer === 'function' && // @ts-expect-error
    obj.constructor.isBuffer(obj);
  }

  function isFileWebAPI(uri) {
    return typeof window !== 'undefined' && 'File' in window && uri instanceof File;
  }
  /*
   * Validate that the feedId matches the spec user:1
   */


  function validateFeedId(feedId) {
    var parts = feedId.split(':');

    if (parts.length !== 2) {
      throw new errors.FeedError("Invalid feedId, expected something like user:1 got ".concat(feedId));
    }

    var _parts = (0, _slicedToArray2.default)(parts, 2),
        feedSlug = _parts[0],
        userId = _parts[1];

    validateFeedSlug(feedSlug);
    validateUserId(userId);
    return feedId;
  }

  function addFileToFormData(uri, name, contentType) {
    var data = new _formData.default();

    if (isReadableStream(uri) || isBuffer(uri) || isFileWebAPI(uri)) {
      if (name) data.append('file', uri, name);else data.append('file', uri);
    } else {
      data.append('file', {
        uri: uri,
        name: name || uri.split('/').reverse()[0],
        type: contentType || undefined,
        contentType: contentType || undefined
      });
    }

    return data;
  } // TODO: refactor and add proper types


  function replaceStreamObjects(obj) {
    // @ts-expect-error
    if (Array.isArray(obj)) return obj.map(function (v) {
      return replaceStreamObjects(v);
    }); // @ts-expect-error

    if (Object.prototype.toString.call(obj) !== '[object Object]') return obj; // @ts-expect-error

    if (typeof obj.ref === 'function') return obj.ref();
    var cloned = {};
    Object.keys(obj).forEach(function (k) {
      // @ts-expect-error
      cloned[k] = replaceStreamObjects(obj[k]);
    }); // @ts-expect-error

    return cloned;
  }

  var _default = {
    validateFeedId: validateFeedId,
    validateFeedSlug: validateFeedSlug,
    validateUserId: validateUserId,
    rfc3986: rfc3986,
    isReadableStream: isReadableStream,
    addFileToFormData: addFileToFormData,
    replaceStreamObjects: replaceStreamObjects
  };
  exports.default = _default;
  });

  var feed = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamFeed = void 0;

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);





  var _utils = interopRequireDefault$1(utils$1);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  /**
   * Manage api calls for specific feeds
   * The feed object contains convenience functions such add activity, remove activity etc
   * @class StreamFeed
   */
  var StreamFeed = /*#__PURE__*/function () {
    /**
     * Initialize a feed object
     * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js
     * @method constructor
     * @memberof StreamFeed.prototype
     * @param {StreamClient} client - The stream client this feed is constructed from
     * @param {string} feedSlug - The feed slug
     * @param {string} userId - The user id
     * @param {string} [token] - The authentication token
     */
    function StreamFeed(client, feedSlug, userId, token) {
      (0, _classCallCheck2.default)(this, StreamFeed);
      (0, _defineProperty2.default)(this, "client", void 0);
      (0, _defineProperty2.default)(this, "token", void 0);
      (0, _defineProperty2.default)(this, "id", void 0);
      (0, _defineProperty2.default)(this, "slug", void 0);
      (0, _defineProperty2.default)(this, "userId", void 0);
      (0, _defineProperty2.default)(this, "feedUrl", void 0);
      (0, _defineProperty2.default)(this, "feedTogether", void 0);
      (0, _defineProperty2.default)(this, "notificationChannel", void 0);

      if (!feedSlug || !userId) {
        throw new errors.FeedError('Please provide a feed slug and user id, ie client.feed("user", "1")');
      }

      if (feedSlug.indexOf(':') !== -1) {
        throw new errors.FeedError('Please initialize the feed using client.feed("user", "1") not client.feed("user:1")');
      }

      _utils.default.validateFeedSlug(feedSlug);

      _utils.default.validateUserId(userId); // raise an error if there is no token


      if (!token) {
        throw new errors.FeedError('Missing token, in client side mode please provide a feed secret');
      }

      this.client = client;
      this.slug = feedSlug;
      this.userId = userId;
      this.id = "".concat(this.slug, ":").concat(this.userId);
      this.token = token;
      this.feedUrl = this.id.replace(':', '/');
      this.feedTogether = this.id.replace(':', ''); // faye setup

      this.notificationChannel = "site-".concat(this.client.appId, "-feed-").concat(this.feedTogether);
    }
    /**
     * Adds the given activity to the feed
     * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js#adding-activities-basic
     * @method addActivity
     * @memberof StreamFeed.prototype
     * @param {NewActivity<ActivityType>} activity - The activity to add
     * @return {Promise<Activity<ActivityType>>}
     */


    (0, _createClass2.default)(StreamFeed, [{
      key: "addActivity",
      value: function addActivity(activity) {
        activity = _utils.default.replaceStreamObjects(activity);

        if (!activity.actor && this.client.currentUser) {
          activity.actor = this.client.currentUser.ref();
        }

        return this.client.post({
          url: "feed/".concat(this.feedUrl, "/"),
          body: activity,
          token: this.token
        });
      }
      /**
       * Removes the activity by activityId or foreignId
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js#removing-activities
       * @method removeActivity
       * @memberof StreamFeed.prototype
       * @param  {string} activityOrActivityId Identifier of activity to remove
       * @return {Promise<APIResponse & { removed: string }>}
       * @example feed.removeActivity(activityId);
       * @example feed.removeActivity({'foreign_id': foreignId});
       */

    }, {
      key: "removeActivity",
      value: function removeActivity(activityOrActivityId) {
        var foreign_id = activityOrActivityId.foreignId || activityOrActivityId.foreign_id;
        return this.client.delete({
          url: "feed/".concat(this.feedUrl, "/").concat(foreign_id || activityOrActivityId, "/"),
          qs: foreign_id ? {
            foreign_id: '1'
          } : {},
          token: this.token
        });
      }
      /**
       * Adds the given activities to the feed
       * @link https://getstream.io/activity-feeds/docs/node/add_many_activities/?language=js#batch-add-activities
       * @method addActivities
       * @memberof StreamFeed.prototype
       * @param  {NewActivity<ActivityType>[]}   activities Array of activities to add
       * @return {Promise<Activity<ActivityType>[]>}
       */

    }, {
      key: "addActivities",
      value: function addActivities(activities) {
        return this.client.post({
          url: "feed/".concat(this.feedUrl, "/"),
          body: {
            activities: _utils.default.replaceStreamObjects(activities)
          },
          token: this.token
        });
      }
      /**
       * Follows the given target feed
       * @link https://getstream.io/activity-feeds/docs/node/following/?language=js
       * @method follow
       * @memberof StreamFeed.prototype
       * @param  {string}   targetSlug   Slug of the target feed
       * @param  {string}   targetUserId User identifier of the target feed
       * @param  {object}   [options]      Additional options
       * @param  {number}   [options.limit] Limit the amount of activities copied over on follow
       * @return {Promise<APIResponse>}
       * @example feed.follow('user', '1');
       * @example feed.follow('user', '1');
       * @example feed.follow('user', '1', options);
       */

    }, {
      key: "follow",
      value: function follow(targetSlug, targetUserId) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        if (targetUserId instanceof user.StreamUser) {
          targetUserId = targetUserId.id;
        }

        _utils.default.validateFeedSlug(targetSlug);

        _utils.default.validateUserId(targetUserId);

        var body = {
          target: "".concat(targetSlug, ":").concat(targetUserId)
        };
        if (typeof options.limit === 'number') body.activity_copy_limit = options.limit;
        return this.client.post({
          url: "feed/".concat(this.feedUrl, "/following/"),
          body: body,
          token: this.token
        });
      }
      /**
       * Unfollow the given feed
       * @link https://getstream.io/activity-feeds/docs/node/following/?language=js#unfollowing-feeds
       * @method unfollow
       * @memberof StreamFeed.prototype
       * @param  {string}   targetSlug   Slug of the target feed
       * @param  {string}   targetUserId User identifier of the target feed
       * @param  {object} [options]
       * @param  {boolean} [options.keepHistory] when provided the activities from target
       *                                                 feed will not be kept in the feed
       * @return {Promise<APIResponse>}
       * @example feed.unfollow('user', '2');
       */

    }, {
      key: "unfollow",
      value: function unfollow(targetSlug, targetUserId) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var qs = {};
        if (typeof options.keepHistory === 'boolean' && options.keepHistory) qs.keep_history = '1';

        _utils.default.validateFeedSlug(targetSlug);

        _utils.default.validateUserId(targetUserId);

        var targetFeedId = "".concat(targetSlug, ":").concat(targetUserId);
        return this.client.delete({
          url: "feed/".concat(this.feedUrl, "/following/").concat(targetFeedId, "/"),
          qs: qs,
          token: this.token
        });
      }
      /**
       * List which feeds this feed is following
       * @link https://getstream.io/activity-feeds/docs/node/following/?language=js#reading-followed-feeds
       * @method following
       * @memberof StreamFeed.prototype
       * @param  {GetFollowOptions}   [options]  Additional options
       * @param  {string[]}   options.filter array of feed id to filter on
       * @param  {number}   options.limit pagination
       * @param  {number}   options.offset pagination
       * @return {Promise<GetFollowAPIResponse>}
       * @example feed.following({limit:10, filter: ['user:1', 'user:2']});
       */

    }, {
      key: "following",
      value: function following() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var extraOptions = {};
        if (options.filter) extraOptions.filter = options.filter.join(',');
        return this.client.get({
          url: "feed/".concat(this.feedUrl, "/following/"),
          qs: _objectSpread(_objectSpread({}, options), extraOptions),
          token: this.token
        });
      }
      /**
       * List the followers of this feed
       * @link https://getstream.io/activity-feeds/docs/node/following/?language=js#reading-feed-followers
       * @method followers
       * @memberof StreamFeed.prototype
       * @param  {GetFollowOptions}   [options]  Additional options
       * @param  {string[]}   options.filter array of feed id to filter on
       * @param  {number}   options.limit pagination
       * @param  {number}   options.offset pagination
       * @return {Promise<GetFollowAPIResponse>}
       * @example feed.followers({limit:10, filter: ['user:1', 'user:2']});
       */

    }, {
      key: "followers",
      value: function followers() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var extraOptions = {};
        if (options.filter) extraOptions.filter = options.filter.join(',');
        return this.client.get({
          url: "feed/".concat(this.feedUrl, "/followers/"),
          qs: _objectSpread(_objectSpread({}, options), extraOptions),
          token: this.token
        });
      }
      /**
       *  Retrieve the number of follower and following feed stats of the current feed.
       *  For each count, feed slugs can be provided to filter counts accordingly.
       * @link https://getstream.io/activity-feeds/docs/node/following/?language=js#reading-follow-stats
       * @method followStats
       * @param  {object}   [options]
       * @param  {string[]} [options.followerSlugs] find counts only on these slugs
       * @param  {string[]} [options.followingSlugs] find counts only on these slugs
       * @return {Promise<FollowStatsAPIResponse>}
       * @example feed.followStats();
       * @example feed.followStats({ followerSlugs:['user', 'news'], followingSlugs:['timeline'] });
       */

    }, {
      key: "followStats",
      value: function followStats() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var qs = {
          followers: this.id,
          following: this.id
        };
        if (options.followerSlugs && options.followerSlugs.length) qs.followers_slugs = options.followerSlugs.join(',');
        if (options.followingSlugs && options.followingSlugs.length) qs.following_slugs = options.followingSlugs.join(',');
        return this.client.get({
          url: 'stats/follow/',
          qs: qs,
          token: this.client.getOrCreateToken() || this.token
        });
      }
      /**
       * Reads the feed
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js#retrieving-activities
       * @method get
       * @memberof StreamFeed.prototype
       * @param {GetFeedOptions} options  Additional options
       * @return {Promise<FeedAPIResponse>}
       * @example feed.get({limit: 10, id_lte: 'activity-id'})
       * @example feed.get({limit: 10, mark_seen: true})
       */

    }, {
      key: "get",
      value: function get() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var extraOptions = {};

        if (options.mark_read && options.mark_read.join) {
          extraOptions.mark_read = options.mark_read.join(',');
        }

        if (options.mark_seen && options.mark_seen.join) {
          extraOptions.mark_seen = options.mark_seen.join(',');
        }

        this.client.replaceReactionOptions(options);
        var path = this.client.shouldUseEnrichEndpoint(options) ? 'enrich/feed/' : 'feed/';
        return this.client.get({
          url: "".concat(path).concat(this.feedUrl, "/"),
          qs: _objectSpread(_objectSpread({}, options), extraOptions),
          token: this.token
        });
      }
      /**
       * Retrieves one activity from a feed and adds enrichment
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js#retrieving-activities
       * @method getActivityDetail
       * @memberof StreamFeed.prototype
       * @param  {string}   activityId Identifier of activity to retrieve
       * @param  {EnrichOptions}   options  Additional options
       * @return {Promise<FeedAPIResponse>}
       * @example feed.getActivityDetail(activityId)
       * @example feed.getActivityDetail(activityId, {withRecentReactions: true})
       * @example feed.getActivityDetail(activityId, {withReactionCounts: true})
       * @example feed.getActivityDetail(activityId, {withOwnReactions: true, withReactionCounts: true})
       */

    }, {
      key: "getActivityDetail",
      value: function getActivityDetail(activityId, options) {
        return this.get(_objectSpread({
          id_lte: activityId,
          id_gte: activityId,
          limit: 1
        }, options || {}));
      }
      /**
       * Returns the current faye client object
       * @method getFayeClient
       * @memberof StreamFeed.prototype
       * @access private
       * @return {Faye.Client} Faye client
       */

    }, {
      key: "getFayeClient",
      value: function getFayeClient() {
        return this.client.getFayeClient();
      }
      /**
       * Subscribes to any changes in the feed, return a promise
       * @link https://getstream.io/activity-feeds/docs/node/web_and_mobile/?language=js#subscribe-to-realtime-updates-via-api-client
       * @method subscribe
       * @memberof StreamFeed.prototype
       * @param  {function} Faye.Callback<RealTimeMessage<UserType, ActivityType, CollectionType, ReactionType>> Callback to call on completion
       * @return {Promise<Faye.Subscription>}
       * @example
       * feed.subscribe(callback).then(function(){
       * 		console.log('we are now listening to changes');
       * });
       */

    }, {
      key: "subscribe",
      value: function subscribe(callback) {
        if (!this.client.appId) {
          throw new errors.SiteError('Missing app id, which is needed to subscribe, use var client = stream.connect(key, secret, appId);');
        }

        var subscription = this.getFayeClient().subscribe("/".concat(this.notificationChannel), callback);
        this.client.subscriptions["/".concat(this.notificationChannel)] = {
          token: this.token,
          userId: this.notificationChannel,
          fayeSubscription: subscription
        };
        return subscription;
      }
      /**
       * Cancel updates created via feed.subscribe()
       * @link https://getstream.io/activity-feeds/docs/node/web_and_mobile/?language=js#subscribe-to-realtime-updates-via-api-client
       * @return void
       */

    }, {
      key: "unsubscribe",
      value: function unsubscribe() {
        var streamSubscription = this.client.subscriptions["/".concat(this.notificationChannel)];

        if (streamSubscription) {
          delete this.client.subscriptions["/".concat(this.notificationChannel)];
          streamSubscription.fayeSubscription.cancel();
        }
      }
      /**
       * Updates an activity's "to" fields
       * @link https://getstream.io/activity-feeds/docs/node/targeting/?language=js
       * @param {string} foreignId The foreign_id of the activity to update
       * @param {string} time The time of the activity to update
       * @param {string[]} newTargets Set the new "to" targets for the activity - will remove old targets
       * @param {string[]} addedTargets Add these new targets to the activity
       * @param {string[]} removedTargets Remove these targets from the activity
       */

    }, {
      key: "updateActivityToTargets",
      value: function updateActivityToTargets(foreignId, time, newTargets, addedTargets, removedTargets) {
        if (!foreignId) throw new Error('Missing `foreign_id` parameter!');
        if (!time) throw new Error('Missing `time` parameter!');

        if (!newTargets && !addedTargets && !removedTargets) {
          throw new Error('Requires you to provide at least one parameter for `newTargets`, `addedTargets`, or `removedTargets` - example: `updateActivityToTargets("foreignID:1234", new Date(), [newTargets...], [addedTargets...], [removedTargets...])`');
        }

        if (newTargets) {
          if (addedTargets || removedTargets) {
            throw new Error("Can't include add_targets or removedTargets if you're also including newTargets");
          }
        }

        if (addedTargets && removedTargets) {
          // brute force - iterate through added, check to see if removed contains that element
          addedTargets.forEach(function (addedTarget) {
            if (removedTargets.includes(addedTarget)) {
              throw new Error("Can't have the same feed ID in addedTargets and removedTargets.");
            }
          });
        }

        var body = {
          foreign_id: foreignId,
          time: time
        };
        if (newTargets) body.new_targets = newTargets;
        if (addedTargets) body.added_targets = addedTargets;
        if (removedTargets) body.removed_targets = removedTargets;
        return this.client.post({
          url: "feed_targets/".concat(this.feedUrl, "/activity_to_targets/"),
          token: this.token,
          body: body
        });
      }
    }]);
    return StreamFeed;
  }();

  exports.StreamFeed = StreamFeed;
  });

  var author = {
  	name: "Thierry Schellenbach",
  	company: "Stream.io Inc"
  };
  var name = "getstream";
  var description = "The official low-level GetStream.io client for Node.js and the browser.";
  var main = "./lib/index.js";
  var module = "./lib/index.js";
  var types = "./lib/index.d.ts";
  var homepage = "https://getstream.io/docs/?language=js";
  var email = "support@getstream.io";
  var license = "BSD-3-Clause";
  var version$1 = "7.2.11";
  var scripts = {
  	transpile: "babel src --out-dir lib --extensions '.ts'",
  	types: "tsc --emitDeclarationOnly",
  	build: "rm -rf lib && yarn run transpile && yarn run types",
  	dist: "webpack && webpack --env minify",
  	eslint: "eslint '**/*.{js,ts}' --max-warnings 0",
  	prettier: "prettier --list-different '**/*.{js,ts}'",
  	lint: "yarn run prettier && yarn run eslint",
  	"lint-fix": "prettier --write '**/*.{js,ts}' && eslint --fix '**/*.{js,ts}'",
  	test: "yarn run test-unit-node",
  	"test-types": "tsc --esModuleInterop true --noEmit true test/typescript/*.ts",
  	"test-unit-node": "mocha --require ./babel-register.js test/unit/common test/unit/node",
  	"test-integration-node": "mocha --require ./babel-register.js test/integration/common test/integration/node --exit",
  	"test-cloud": "mocha --require ./babel-register.js test/integration/cloud --timeout 40000",
  	"test-cloud-local": "LOCAL=true mocha --require ./babel-register.js test/integration/cloud --timeout 40000 --ignore 'test/integration/cloud/{personalized_feed,files,images}.js'",
  	"test-browser": "karma start karma.config.js",
  	prepare: "yarn run build",
  	preversion: "yarn run test-unit-node",
  	version: "yarn run dist && yarn run build && git add dist",
  	postversion: "git push && git push --tags && npm publish"
  };
  var husky = {
  	hooks: {
  		"pre-commit": "yarn run lint"
  	}
  };
  var browser = {
  	crypto: false,
  	jsonwebtoken: false,
  	"./lib/batch_operations.js": false,
  	"./lib/redirect_url.js": false,
  	qs: false,
  	url: false,
  	http: false,
  	https: false
  };
  var devDependencies = {
  	"@babel/cli": "^7.13.10",
  	"@babel/core": "^7.13.10",
  	"@babel/node": "^7.13.10",
  	"@babel/plugin-proposal-class-properties": "^7.13.0",
  	"@babel/plugin-proposal-object-rest-spread": "^7.13.8",
  	"@babel/plugin-transform-object-assign": "^7.12.13",
  	"@babel/plugin-transform-runtime": "^7.13.10",
  	"@babel/preset-env": "^7.13.10",
  	"@babel/preset-typescript": "^7.13.0",
  	"@babel/register": "^7.13.8",
  	"@typescript-eslint/eslint-plugin": "^4.17.0",
  	"@typescript-eslint/parser": "^4.17.0",
  	"babel-eslint": "^10.1.0",
  	"babel-loader": "^8.2.2",
  	chai: "^4.3.3",
  	dotenv: "^8.2.0",
  	eslint: "^7.21.0",
  	"eslint-config-airbnb-base": "^14.2.1",
  	"eslint-config-prettier": "^8.1.0",
  	"eslint-plugin-chai-friendly": "^0.6.0",
  	"eslint-plugin-import": "^2.22.1",
  	"eslint-plugin-prettier": "^3.3.1",
  	"eslint-plugin-sonarjs": "^0.7.0",
  	"eslint-plugin-typescript-sort-keys": "^1.5.0",
  	"expect.js": "^0.3.1",
  	husky: "^4.3.8",
  	"json-loader": "~0.5.7",
  	karma: "^6.1.2",
  	"karma-chrome-launcher": "^3.1.0",
  	"karma-mocha": "^2.0.1",
  	"karma-mocha-reporter": "~2.2.5",
  	"karma-sauce-launcher": "^4.3.5",
  	"karma-sourcemap-loader": "~0.3.8",
  	"karma-webpack": "^5.0.0",
  	mocha: "^8.3.1",
  	"null-loader": "^4.0.1",
  	nyc: "^15.1.0",
  	prettier: "^2.2.1",
  	request: "^2.88.2",
  	testdouble: "^3.16.1",
  	typescript: "^4.2.3",
  	webpack: "^5.24.4",
  	"webpack-cli": "^4.5.0"
  };
  var dependencies = {
  	"@babel/runtime": "^7.13.10",
  	"@types/jsonwebtoken": "^8.5.0",
  	"@types/jwt-decode": "^2.2.1",
  	"@types/qs": "^6.9.6",
  	axios: "^0.21.1",
  	faye: "^1.4.0",
  	"form-data": "^4.0.0",
  	jsonwebtoken: "^8.5.1",
  	"jwt-decode": "^3.1.2",
  	qs: "^6.9.6"
  };
  var peerDependencies = {
  	"@types/node": ">=10"
  };
  var repository = {
  	type: "git",
  	url: "git://github.com/GetStream/stream-js.git"
  };
  var files = [
  	"src",
  	"dist",
  	"types",
  	"lib"
  ];
  var engines = {
  	node: "10 || 12 || >=14"
  };
  var keywords = [
  	"stream",
  	"get",
  	"get-stream",
  	"chat",
  	"notification",
  	"feed",
  	"stream.io",
  	"getstream"
  ];
  var pkg = {
  	author: author,
  	name: name,
  	description: description,
  	main: main,
  	module: module,
  	types: types,
  	homepage: homepage,
  	email: email,
  	license: license,
  	version: version$1,
  	scripts: scripts,
  	husky: husky,
  	browser: browser,
  	"react-native": {
  	crypto: false,
  	jsonwebtoken: false,
  	"./lib/batch_operations.js": false,
  	"./lib/redirect_url.js": false,
  	qs: false,
  	url: false
  },
  	devDependencies: devDependencies,
  	dependencies: dependencies,
  	peerDependencies: peerDependencies,
  	repository: repository,
  	files: files,
  	engines: engines,
  	keywords: keywords
  };

  var require$$11 = /*@__PURE__*/getAugmentedNamespace(jwtDecode_esm);

  var client = createCommonjsModule(function (module, exports) {





  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StreamClient = void 0;

  var _regenerator = interopRequireDefault$1(regenerator);

  var _slicedToArray2 = interopRequireDefault$1(slicedToArray);

  var _objectWithoutProperties2 = interopRequireDefault$1(objectWithoutProperties);

  var _asyncToGenerator2 = interopRequireDefault$1(asyncToGenerator);

  var _classCallCheck2 = interopRequireDefault$1(classCallCheck$1);

  var _createClass2 = interopRequireDefault$1(createClass$1);

  var _defineProperty2 = interopRequireDefault$1(defineProperty$2);

  var axios$1 = interopRequireWildcard$1(axios);

  var Faye = interopRequireWildcard$1(faye_browser);

  var http = interopRequireWildcard$1(_batch_operations);

  var https = interopRequireWildcard$1(_batch_operations);

  var _jwtDecode = interopRequireDefault$1(require$$11);

















  var _utils = interopRequireDefault$1(utils$1);

  var _batch_operations$1 = interopRequireDefault$1(_batch_operations);

  var _redirect_url = interopRequireDefault$1(_batch_operations);



  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  // TODO: no import since typescript json loader shifts the final output structure
  // eslint-disable-next-line @typescript-eslint/no-var-requires


  /**
   * Client to connect to Stream api
   * @class StreamClient
   */
  var StreamClient = /*#__PURE__*/function () {
    // eslint-disable-next-line no-shadow

    /**
     * Initialize a client
     * @link https://getstream.io/activity-feeds/docs/node/#setup
     * @method initialize
     * @memberof StreamClient.prototype
     * @param {string} apiKey - the api key
     * @param {string} [apiSecret] - the api secret
     * @param {string} [appId] - id of the app
     * @param {ClientOptions} [options] - additional options
     * @param {string} [options.location] - which data center to use
     * @param {boolean} [options.expireTokens=false] - whether to use a JWT timestamp field (i.e. iat)
     * @param {string} [options.version] - advanced usage, custom api version
     * @param {boolean} [options.keepAlive] - axios keepAlive, default to true
     * @param {number} [options.timeout] - axios timeout in Ms, default to 10s
     * @example <caption>initialize is not directly called by via stream.connect, ie:</caption>
     * stream.connect(apiKey, apiSecret)
     * @example <caption>secret is optional and only used in server side mode</caption>
     * stream.connect(apiKey, null, appId);
     */
    function StreamClient(apiKey, apiSecretOrToken, appId) {
      var _this = this,
          _process$env,
          _process$env2;

      var _options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      (0, _classCallCheck2.default)(this, StreamClient);
      (0, _defineProperty2.default)(this, "baseUrl", void 0);
      (0, _defineProperty2.default)(this, "baseAnalyticsUrl", void 0);
      (0, _defineProperty2.default)(this, "apiKey", void 0);
      (0, _defineProperty2.default)(this, "appId", void 0);
      (0, _defineProperty2.default)(this, "usingApiSecret", void 0);
      (0, _defineProperty2.default)(this, "apiSecret", void 0);
      (0, _defineProperty2.default)(this, "userToken", void 0);
      (0, _defineProperty2.default)(this, "enrichByDefault", void 0);
      (0, _defineProperty2.default)(this, "options", void 0);
      (0, _defineProperty2.default)(this, "userId", void 0);
      (0, _defineProperty2.default)(this, "authPayload", void 0);
      (0, _defineProperty2.default)(this, "version", void 0);
      (0, _defineProperty2.default)(this, "fayeUrl", void 0);
      (0, _defineProperty2.default)(this, "group", void 0);
      (0, _defineProperty2.default)(this, "expireTokens", void 0);
      (0, _defineProperty2.default)(this, "location", void 0);
      (0, _defineProperty2.default)(this, "fayeClient", void 0);
      (0, _defineProperty2.default)(this, "browser", void 0);
      (0, _defineProperty2.default)(this, "node", void 0);
      (0, _defineProperty2.default)(this, "nodeOptions", void 0);
      (0, _defineProperty2.default)(this, "request", void 0);
      (0, _defineProperty2.default)(this, "subscriptions", void 0);
      (0, _defineProperty2.default)(this, "handlers", void 0);
      (0, _defineProperty2.default)(this, "currentUser", void 0);
      (0, _defineProperty2.default)(this, "personalization", void 0);
      (0, _defineProperty2.default)(this, "collections", void 0);
      (0, _defineProperty2.default)(this, "files", void 0);
      (0, _defineProperty2.default)(this, "images", void 0);
      (0, _defineProperty2.default)(this, "reactions", void 0);
      (0, _defineProperty2.default)(this, "_personalizationToken", void 0);
      (0, _defineProperty2.default)(this, "_collectionsToken", void 0);
      (0, _defineProperty2.default)(this, "_getOrCreateToken", void 0);
      (0, _defineProperty2.default)(this, "addToMany", void 0);
      (0, _defineProperty2.default)(this, "followMany", void 0);
      (0, _defineProperty2.default)(this, "unfollowMany", void 0);
      (0, _defineProperty2.default)(this, "createRedirectUrl", void 0);
      (0, _defineProperty2.default)(this, "replaceReactionOptions", function (options) {
        // Shortcut options for reaction enrichment
        if (options !== null && options !== void 0 && options.reactions) {
          if (options.reactions.own != null) {
            options.withOwnReactions = options.reactions.own;
          }

          if (options.reactions.recent != null) {
            options.withRecentReactions = options.reactions.recent;
          }

          if (options.reactions.counts != null) {
            options.withReactionCounts = options.reactions.counts;
          }

          if (options.reactions.own_children != null) {
            options.withOwnChildren = options.reactions.own_children;
          }

          delete options.reactions;
        }
      });
      (0, _defineProperty2.default)(this, "handleResponse", function (response) {
        if (/^2/.test("".concat(response.status))) {
          _this.send('response', null, response, response.data);

          return response.data;
        }

        throw new errors.StreamApiError("".concat(JSON.stringify(response.data), " with HTTP status code ").concat(response.status), response.data, response);
      });
      (0, _defineProperty2.default)(this, "doAxiosRequest", /*#__PURE__*/function () {
        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(method, options) {
          var response;
          return _regenerator.default.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _this.send('request', method, options);

                  _context.prev = 1;
                  _context.next = 4;
                  return _this.request(_this.enrichKwargs(_objectSpread({
                    method: method
                  }, options)));

                case 4:
                  response = _context.sent;
                  return _context.abrupt("return", _this.handleResponse(response));

                case 8:
                  _context.prev = 8;
                  _context.t0 = _context["catch"](1);

                  if (!_context.t0.response) {
                    _context.next = 12;
                    break;
                  }

                  return _context.abrupt("return", _this.handleResponse(_context.t0.response));

                case 12:
                  throw new errors.SiteError(_context.t0.message);

                case 13:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, null, [[1, 8]]);
        }));

        return function (_x, _x2) {
          return _ref.apply(this, arguments);
        };
      }());
      this.baseUrl = 'https://api.stream-io-api.com/api/';
      this.baseAnalyticsUrl = 'https://analytics.stream-io-api.com/analytics/';
      this.apiKey = apiKey;
      this.usingApiSecret = apiSecretOrToken != null && !apiSecretOrToken.includes(".");
      this.apiSecret = this.usingApiSecret ? apiSecretOrToken : null;
      this.userToken = this.usingApiSecret ? null : apiSecretOrToken;
      this.enrichByDefault = !this.usingApiSecret;

      if (this.userToken != null) {
        var jwtBody = (0, _jwtDecode.default)(this.userToken);

        if (!jwtBody.user_id) {
          throw new TypeError('user_id is missing in user token');
        }

        this.userId = jwtBody.user_id;
        this.currentUser = this.user(this.userId);
      }

      this.appId = appId;
      this.options = _options;
      this.version = this.options.version || 'v1.0';
      this.fayeUrl = this.options.fayeUrl || 'https://faye-us-east.stream-io-api.com/faye';
      this.fayeClient = null; // track a source name for the api calls, ie get started or databrowser

      this.group = this.options.group || 'unspecified'; // track subscriptions made on feeds created by this client

      this.subscriptions = {};
      this.expireTokens = this.options.expireTokens ? this.options.expireTokens : false; // which data center to use

      this.location = this.options.location;
      this.baseUrl = this.getBaseUrl();
      if (typeof process !== 'undefined' && (_process$env = process.env) !== null && _process$env !== void 0 && _process$env.LOCAL_FAYE) this.fayeUrl = 'http://localhost:9999/faye/';
      if (typeof process !== 'undefined' && (_process$env2 = process.env) !== null && _process$env2 !== void 0 && _process$env2.STREAM_ANALYTICS_BASE_URL) this.baseAnalyticsUrl = process.env.STREAM_ANALYTICS_BASE_URL;
      this.handlers = {};
      this.browser = typeof this.options.browser !== 'undefined' ? this.options.browser : typeof window !== 'undefined';
      this.node = !this.browser;

      if (this.node) {
        var keepAlive = this.options.keepAlive === undefined ? true : this.options.keepAlive;
        this.nodeOptions = {
          httpAgent: new http.Agent({
            keepAlive: keepAlive,
            keepAliveMsecs: 3000
          }),
          httpsAgent: new https.Agent({
            keepAlive: keepAlive,
            keepAliveMsecs: 3000
          })
        };
      }

      this.request = axios$1.default.create(_objectSpread({
        timeout: this.options.timeout || 10 * 1000,
        // 10 seconds
        withCredentials: false
      }, this.nodeOptions || {}));
      this.personalization = new personalization.Personalization(this);

      if (this.browser && this.usingApiSecret) {
        throw new errors.FeedError('You are publicly sharing your App Secret. Do not expose the App Secret in browsers, "native" mobile apps, or other non-trusted environments.');
      }

      this.collections = new collections.Collections(this, this.getOrCreateToken());
      this.files = new files$1.StreamFileStore(this, this.getOrCreateToken());
      this.images = new images.StreamImageStore(this, this.getOrCreateToken());
      this.reactions = new reaction.StreamReaction(this, this.getOrCreateToken()); // If we are in a node environment and batchOperations/createRedirectUrl is available add the methods to the prototype of StreamClient

      if (_batch_operations$1.default && !!_redirect_url.default) {
        this.addToMany = _batch_operations$1.default.addToMany;
        this.followMany = _batch_operations$1.default.followMany;
        this.unfollowMany = _batch_operations$1.default.unfollowMany;
        this.createRedirectUrl = _redirect_url.default;
      }
    }

    (0, _createClass2.default)(StreamClient, [{
      key: "_throwMissingApiSecret",
      value: function _throwMissingApiSecret() {
        if (!this.usingApiSecret) {
          throw new errors.SiteError('This method can only be used server-side using your API Secret, use client = stream.connect(key, secret);');
        }
      }
    }, {
      key: "getPersonalizationToken",
      value: function getPersonalizationToken() {
        if (this._personalizationToken) return this._personalizationToken;

        this._throwMissingApiSecret();

        this._personalizationToken = (0, signing.JWTScopeToken)(this.apiSecret, 'personalization', '*', {
          userId: '*',
          feedId: '*',
          expireTokens: this.expireTokens
        });
        return this._personalizationToken;
      }
    }, {
      key: "getCollectionsToken",
      value: function getCollectionsToken() {
        if (this._collectionsToken) return this._collectionsToken;

        this._throwMissingApiSecret();

        this._collectionsToken = (0, signing.JWTScopeToken)(this.apiSecret, 'collections', '*', {
          feedId: '*',
          expireTokens: this.expireTokens
        });
        return this._collectionsToken;
      }
    }, {
      key: "getAnalyticsToken",
      value: function getAnalyticsToken() {
        this._throwMissingApiSecret();

        return (0, signing.JWTScopeToken)(this.apiSecret, 'analytics', '*', {
          userId: '*',
          expireTokens: this.expireTokens
        });
      }
    }, {
      key: "getBaseUrl",
      value: function getBaseUrl(serviceName) {
        var _process$env3, _process$env4;

        if (!serviceName) serviceName = 'api';
        if (this.options.urlOverride && this.options.urlOverride[serviceName]) return this.options.urlOverride[serviceName];
        var urlEnvironmentKey = serviceName === 'api' ? 'STREAM_BASE_URL' : "STREAM_".concat(serviceName.toUpperCase(), "_URL");
        if (typeof process !== 'undefined' && (_process$env3 = process.env) !== null && _process$env3 !== void 0 && _process$env3[urlEnvironmentKey]) return process.env[urlEnvironmentKey];
        if (typeof process !== 'undefined' && (_process$env4 = process.env) !== null && _process$env4 !== void 0 && _process$env4.LOCAL || this.options.local) return "http://localhost:8000/".concat(serviceName, "/");

        if (this.location) {
          var protocol = this.options.protocol || 'https';
          return "".concat(protocol, "://").concat(this.location, "-").concat(serviceName, ".stream-io-api.com/").concat(serviceName, "/");
        }

        if (serviceName !== 'api') return "https://".concat(serviceName, ".stream-io-api.com/").concat(serviceName, "/");
        return this.baseUrl;
      }
      /**
       * Support for global event callbacks
       * This is useful for generic error and loading handling
       * @method on
       * @memberof StreamClient.prototype
       * @param {string} event - Name of the event
       * @param {function} callback - Function that is called when the event fires
       * @example
       * client.on('request', callback);
       * client.on('response', callback);
       */

    }, {
      key: "on",
      value: function on(event, callback) {
        this.handlers[event] = callback;
      }
      /**
       * Remove one or more event handlers
       * @method off
       * @memberof StreamClient.prototype
       * @param {string} [key] - Name of the handler
       * @example
       * client.off() removes all handlers
       * client.off(name) removes the specified handler
       */

    }, {
      key: "off",
      value: function off(key) {
        if (key === undefined) {
          this.handlers = {};
        } else {
          delete this.handlers[key];
        }
      }
      /**
       * Call the given handler with the arguments
       * @method send
       * @memberof StreamClient.prototype
       * @access private
       */

    }, {
      key: "send",
      value: function send(key) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        if (this.handlers[key]) this.handlers[key].apply(this, args);
      }
      /**
       * Get the current user agent
       * @method userAgent
       * @memberof StreamClient.prototype
       * @return {string} current user agent
       */

    }, {
      key: "userAgent",
      value: function userAgent() {
        return "stream-javascript-client-".concat(this.node ? 'node' : 'browser', "-").concat(pkg.version);
      }
      /**
       * Returns a token that allows only read operations
       *
       * @method getReadOnlyToken
       * @memberof StreamClient.prototype
       * @param {string} feedSlug - The feed slug to get a read only token for
       * @param {string} userId - The user identifier
       * @return {string} token
       * @example client.getReadOnlyToken('user', '1');
       */

    }, {
      key: "getReadOnlyToken",
      value: function getReadOnlyToken(feedSlug, userId) {
        _utils.default.validateFeedSlug(feedSlug);

        _utils.default.validateUserId(userId);

        return (0, signing.JWTScopeToken)(this.apiSecret, '*', 'read', {
          feedId: "".concat(feedSlug).concat(userId),
          expireTokens: this.expireTokens
        });
      }
      /**
       * Returns a token that allows read and write operations
       *
       * @method getReadWriteToken
       * @memberof StreamClient.prototype
       * @param {string} feedSlug - The feed slug to get a read only token for
       * @param {string} userId - The user identifier
       * @return {string} token
       * @example client.getReadWriteToken('user', '1');
       */

    }, {
      key: "getReadWriteToken",
      value: function getReadWriteToken(feedSlug, userId) {
        _utils.default.validateFeedSlug(feedSlug);

        _utils.default.validateUserId(userId);

        return (0, signing.JWTScopeToken)(this.apiSecret, '*', '*', {
          feedId: "".concat(feedSlug).concat(userId),
          expireTokens: this.expireTokens
        });
      }
      /**
       * Returns a feed object for the given feed id and token
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js
       * @method feed
       * @memberof StreamClient.prototype
       * @param {string} feedSlug - The feed slug
       * @param {string} [userId] - The user identifier
       * @param {string} [token] - The token
       * @return {StreamFeed}
       * @example  client.feed('user', '1');
       */

    }, {
      key: "feed",
      value: function feed$1(feedSlug, userId, token) {
        if (userId instanceof user.StreamUser) userId = userId.id;

        if (token === undefined) {
          if (this.usingApiSecret) {
            token = (0, signing.JWTScopeToken)(this.apiSecret, '*', '*', {
              feedId: "".concat(feedSlug).concat(userId)
            });
          } else {
            token = this.userToken;
          }
        }

        return new feed.StreamFeed(this, feedSlug, userId || this.userId, token);
      }
      /**
       * Combines the base url with version and the relative url
       * @method enrichUrl
       * @memberof StreamClient.prototype
       * @private
       * @param {string} relativeUrl
       * @param {string} [serviceName]
       * @return {string}
       */

    }, {
      key: "enrichUrl",
      value: function enrichUrl(relativeUrl, serviceName) {
        return "".concat(this.getBaseUrl(serviceName)).concat(this.version, "/").concat(relativeUrl);
      }
    }, {
      key: "shouldUseEnrichEndpoint",
      value: function shouldUseEnrichEndpoint() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        if (options.enrich !== undefined) {
          var result = options.enrich;
          delete options.enrich;
          return result;
        }

        return this.enrichByDefault || options.ownReactions != null || options.withRecentReactions != null || options.withReactionCounts != null || options.withOwnChildren != null;
      }
      /**
       * Adds the API key and the token
       * @method enrichKwargs
       * @private
       * @memberof StreamClient.prototype
       * @param {AxiosConfig} kwargs
       * @return {axios.AxiosRequestConfig}
       */

    }, {
      key: "enrichKwargs",
      value: function enrichKwargs(_ref2) {
        var method = _ref2.method,
            token = _ref2.token,
            kwargs = (0, _objectWithoutProperties2.default)(_ref2, ["method", "token"]);
        return _objectSpread({
          method: method,
          url: this.enrichUrl(kwargs.url, kwargs.serviceName),
          data: kwargs.body,
          params: _objectSpread({
            api_key: this.apiKey,
            location: this.group
          }, kwargs.qs || {}),
          headers: _objectSpread({
            'X-Stream-Client': this.userAgent(),
            'stream-auth-type': 'jwt',
            Authorization: token
          }, kwargs.headers || {})
        }, kwargs.axiosOptions || {});
      }
      /**
       * Get the authorization middleware to use Faye with getstream.io
       * @method getFayeAuthorization
       * @memberof StreamClient.prototype
       * @private
       * @return {Faye.Middleware} Faye authorization middleware
       */

    }, {
      key: "getFayeAuthorization",
      value: function getFayeAuthorization() {
        var _this2 = this;

        return {
          incoming: function incoming(message, callback) {
            return callback(message);
          },
          outgoing: function outgoing(message, callback) {
            if (message.subscription && _this2.subscriptions[message.subscription]) {
              var subscription = _this2.subscriptions[message.subscription];
              message.ext = {
                user_id: subscription.userId,
                api_key: _this2.apiKey,
                signature: subscription.token
              };
            }

            callback(message);
          }
        };
      }
      /**
       * Returns this client's current Faye client
       * @method getFayeClient
       * @memberof StreamClient.prototype
       * @private
       * @param {number} timeout
       * @return {Faye.Client} Faye client
       */

    }, {
      key: "getFayeClient",
      value: function getFayeClient() {
        var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;

        if (this.fayeClient === null) {
          this.fayeClient = new Faye.Client(this.fayeUrl, {
            timeout: timeout
          });
          var authExtension = this.getFayeAuthorization();
          this.fayeClient.addExtension(authExtension);
        }

        return this.fayeClient;
      }
    }, {
      key: "upload",
      value: function upload(url, uri, name, contentType, onUploadProgress) {
        var fd = _utils.default.addFileToFormData(uri, name, contentType);

        return this.doAxiosRequest('POST', {
          url: url,
          body: fd,
          headers: fd.getHeaders ? fd.getHeaders() : {},
          // node vs browser
          token: this.getOrCreateToken(),
          axiosOptions: {
            timeout: 0,
            maxContentLength: Infinity,
            maxBodyLength: Infinity,
            onUploadProgress: onUploadProgress
          }
        });
      }
      /**
       * Shorthand function for get request
       * @method get
       * @memberof StreamClient.prototype
       * @private
       * @param  {AxiosConfig}    kwargs
       * @return {Promise}   Promise object
       */

    }, {
      key: "get",
      value: function get(kwargs) {
        return this.doAxiosRequest('GET', kwargs);
      }
      /**
       * Shorthand function for post request
       * @method post
       * @memberof StreamClient.prototype
       * @private
       * @param  {AxiosConfig}    kwargs
       * @return {Promise}   Promise object
       */

    }, {
      key: "post",
      value: function post(kwargs) {
        return this.doAxiosRequest('POST', kwargs);
      }
      /**
       * Shorthand function for delete request
       * @method delete
       * @memberof StreamClient.prototype
       * @private
       * @param  {AxiosConfig}    kwargs
       * @return {Promise}   Promise object
       */

    }, {
      key: "delete",
      value: function _delete(kwargs) {
        return this.doAxiosRequest('DELETE', kwargs);
      }
      /**
       * Shorthand function for put request
       * @method put
       * @memberof StreamClient.prototype
       * @private
       * @param  {AxiosConfig}    kwargs
       * @return {Promise}   Promise object
       */

    }, {
      key: "put",
      value: function put(kwargs) {
        return this.doAxiosRequest('PUT', kwargs);
      }
      /**
       * create a user token
       * @link https://getstream.io/activity-feeds/docs/node/feeds_getting_started/?language=js#generate-user-token-server-side
       * @param {string} userId
       * @param {object} extraData
       * @return {string}
       */

    }, {
      key: "createUserToken",
      value: function createUserToken(userId) {
        var extraData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        this._throwMissingApiSecret();

        return (0, signing.JWTUserSessionToken)(this.apiSecret, userId, extraData, {
          noTimestamp: !this.expireTokens
        });
      }
      /**
       * Updates all supplied activities on the stream
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js#updating-activities
       * @param  {UpdateActivity<ActivityType>[]} activities list of activities to update
       * @return {Promise<APIResponse>}
       */

    }, {
      key: "updateActivities",
      value: function updateActivities(activities) {
        this._throwMissingApiSecret();

        if (!(activities instanceof Array)) {
          throw new TypeError('The activities argument should be an Array');
        }

        var token = (0, signing.JWTScopeToken)(this.apiSecret, 'activities', '*', {
          feedId: '*',
          expireTokens: this.expireTokens
        });
        return this.post({
          url: 'activities/',
          body: {
            activities: activities
          },
          token: token
        });
      }
      /**
       * Updates one activity on the stream
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js#updating-activities
       * @param  {UpdateActivity<ActivityType>} activity The activity to update
       * @return {Promise<APIResponse>}
       */

    }, {
      key: "updateActivity",
      value: function updateActivity(activity) {
        this._throwMissingApiSecret();

        return this.updateActivities([activity]);
      }
      /**
       * Retrieve activities by ID or foreign_id and time
       * @link https://getstream.io/activity-feeds/docs/node/add_many_activities/?language=js#batch-get-activities-by-id
       * @param  {object} params object containing either the list of activity IDs as {ids: ['...', ...]} or foreign_ids and time as {foreignIDTimes: [{foreign_id: ..., time: ...}, ...]}
       * @return {Promise<GetActivitiesAPIResponse>}
       */

    }, {
      key: "getActivities",
      value: function getActivities(_ref3) {
        var ids = _ref3.ids,
            foreignIDTimes = _ref3.foreignIDTimes,
            params = (0, _objectWithoutProperties2.default)(_ref3, ["ids", "foreignIDTimes"]);
        var extraParams = {};

        if (ids) {
          if (!(ids instanceof Array)) {
            throw new TypeError('The ids argument should be an Array');
          }

          extraParams.ids = ids.join(',');
        } else if (foreignIDTimes) {
          if (!(foreignIDTimes instanceof Array)) {
            throw new TypeError('The foreignIDTimes argument should be an Array');
          }

          var foreignIDs = [];
          var timestamps = [];
          foreignIDTimes.forEach(function (fidTime) {
            if (!(fidTime instanceof Object)) {
              throw new TypeError('foreignIDTimes elements should be Objects');
            }

            foreignIDs.push(fidTime.foreign_id || fidTime.foreignID);
            timestamps.push(fidTime.time);
          });
          extraParams.foreign_ids = foreignIDs.join(',');
          extraParams.timestamps = timestamps.join(',');
        } else {
          throw new TypeError('Missing ids or foreignIDTimes params');
        }

        var token = this.userToken;

        if (this.usingApiSecret) {
          token = (0, signing.JWTScopeToken)(this.apiSecret, 'activities', '*', {
            feedId: '*',
            expireTokens: this.expireTokens
          });
        }

        this.replaceReactionOptions(params);
        var path = this.shouldUseEnrichEndpoint(params) ? 'enrich/activities/' : 'activities/';
        return this.get({
          url: path,
          qs: _objectSpread(_objectSpread({}, params), extraParams),
          token: token
        });
      }
    }, {
      key: "getOrCreateToken",
      value: function getOrCreateToken() {
        if (!this._getOrCreateToken) {
          this._getOrCreateToken = this.usingApiSecret ? (0, signing.JWTScopeToken)(this.apiSecret, '*', '*', {
            feedId: '*'
          }) : this.userToken;
        }

        return this._getOrCreateToken;
      }
    }, {
      key: "user",
      value: function user$1(userId) {
        return new user.StreamUser(this, userId, this.getOrCreateToken());
      }
    }, {
      key: "setUser",
      value: function () {
        var _setUser = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(data) {
          var body, user;
          return _regenerator.default.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  if (!this.usingApiSecret) {
                    _context2.next = 2;
                    break;
                  }

                  throw new errors.SiteError('This method can only be used client-side using a user token');

                case 2:
                  body = _objectSpread({}, data);
                  delete body.id;
                  _context2.next = 6;
                  return this.currentUser.getOrCreate(body);

                case 6:
                  user = _context2.sent;
                  this.currentUser = user;
                  return _context2.abrupt("return", user);

                case 9:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, this);
        }));

        function setUser(_x3) {
          return _setUser.apply(this, arguments);
        }

        return setUser;
      }()
    }, {
      key: "og",
      value: function og(url) {
        return this.get({
          url: 'og/',
          qs: {
            url: url
          },
          token: this.getOrCreateToken()
        });
      }
    }, {
      key: "personalizedFeed",
      value: function personalizedFeed() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        return this.get({
          url: 'enrich/personalization/feed/',
          qs: options,
          token: this.getOrCreateToken()
        });
      }
      /**
       * Update a single activity with partial operations.
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js&q=partial+#activity-partial-update
       * @param {ActivityPartialChanges<ActivityType>} data object containing either the ID or the foreign_id and time of the activity and the operations to issue as set:{...} and unset:[...].
       * @return {Promise<Activity<ActivityType>>}
       * @example
       * client.activityPartialUpdate({
       *   id: "54a60c1e-4ee3-494b-a1e3-50c06acb5ed4",
       *   set: {
       *     "product.price": 19.99,
       *     "shares": {
       *       "facebook": "...",
       *       "twitter": "...",
       *     }
       *   },
       *   unset: [
       *     "daily_likes",
       *     "popularity"
       *   ]
       * })
       * @example
       * client.activityPartialUpdate({
       *   foreign_id: "product:123",
       *   time: "2016-11-10T13:20:00.000000",
       *   set: {
       *     ...
       *   },
       *   unset: [
       *     ...
       *   ]
       * })
       */

    }, {
      key: "activityPartialUpdate",
      value: function () {
        var _activityPartialUpdate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(data) {
          var _yield$this$activitie, activities, response, _activities, activity;

          return _regenerator.default.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return this.activitiesPartialUpdate([data]);

                case 2:
                  _yield$this$activitie = _context3.sent;
                  activities = _yield$this$activitie.activities;
                  response = (0, _objectWithoutProperties2.default)(_yield$this$activitie, ["activities"]);
                  _activities = (0, _slicedToArray2.default)(activities, 1), activity = _activities[0];
                  return _context3.abrupt("return", _objectSpread(_objectSpread({}, activity), response));

                case 7:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3, this);
        }));

        function activityPartialUpdate(_x4) {
          return _activityPartialUpdate.apply(this, arguments);
        }

        return activityPartialUpdate;
      }()
      /**
       * Update multiple activities with partial operations.
       * @link https://getstream.io/activity-feeds/docs/node/adding_activities/?language=js&q=partial+#activity-partial-update
       * @param {ActivityPartialChanges<ActivityType>[]} changes array containing the changesets to be applied. Every changeset contains the activity identifier which is either the ID or the pair of of foreign ID and time of the activity. The operations to issue can be set:{...} and unset:[...].
       * @return {Promise<{ activities: Activity<ActivityType>[] }>}
       * @example
       * client.activitiesPartialUpdate([
       *   {
       *     id: "4b39fda2-d6e2-42c9-9abf-5301ef071b12",
       *     set: {
       *       "product.price.eur": 12.99,
       *       "colors": {
       *         "blue": "#0000ff",
       *         "green": "#00ff00",
       *       },
       *     },
       *     unset: [ "popularity", "size.x2" ],
       *   },
       *   {
       *     id: "8d2dcad8-1e34-11e9-8b10-9cb6d0925edd",
       *     set: {
       *       "product.price.eur": 17.99,
       *       "colors": {
       *         "red": "#ff0000",
       *         "green": "#00ff00",
       *       },
       *     },
       *     unset: [ "rating" ],
       *   },
       * ])
       * @example
       * client.activitiesPartialUpdate([
       *   {
       *     foreign_id: "product:123",
       *     time: "2016-11-10T13:20:00.000000",
       *     set: {
       *       ...
       *     },
       *     unset: [
       *       ...
       *     ]
       *   },
       *   {
       *     foreign_id: "product:321",
       *     time: "2016-11-10T13:20:00.000000",
       *     set: {
       *       ...
       *     },
       *     unset: [
       *       ...
       *     ]
       *   },
       * ])
       */

    }, {
      key: "activitiesPartialUpdate",
      value: function activitiesPartialUpdate(changes) {
        if (!(changes instanceof Array)) {
          throw new TypeError('changes should be an Array');
        }

        changes.forEach(function (item) {
          if (!(item instanceof Object)) {
            throw new TypeError("changeset should be and Object");
          }

          if (item.foreignID) {
            item.foreign_id = item.foreignID;
          }

          if (item.id === undefined && (item.foreign_id === undefined || item.time === undefined)) {
            throw new TypeError('missing id or foreign_id and time');
          }

          if (item.set && !(item.set instanceof Object)) {
            throw new TypeError('set field should be an Object');
          }

          if (item.unset && !(item.unset instanceof Array)) {
            throw new TypeError('unset field should be an Array');
          }
        });
        var token = this.userToken;

        if (this.usingApiSecret) {
          token = (0, signing.JWTScopeToken)(this.apiSecret, 'activities', '*', {
            feedId: '*',
            expireTokens: this.expireTokens
          });
        }

        return this.post({
          url: 'activity/',
          body: {
            changes: changes
          },
          token: token
        });
      }
    }]);
    return StreamClient;
  }();

  exports.StreamClient = StreamClient;
  });

  var connect_2 = connect;



  /**
   * Create StreamClient
   * @link https://getstream.io/activity-feeds/docs/node/feeds_getting_started/?language=js#setup
   * @method connect
   * @param  {string} apiKey    API key
   * @param  {string} [apiSecret] API secret (only use this on the server)
   * @param  {string} [appId]     Application identifier
   * @param {ClientOptions} [options] - additional options
   * @param {string} [options.location] - which data center to use
   * @param {boolean} [options.expireTokens=false] - whether to use a JWT timestamp field (i.e. iat)
   * @param {string} [options.version] - advanced usage, custom api version
   * @param {boolean} [options.keepAlive] - axios keepAlive, default to true
   * @param {number} [options.timeout] - axios timeout in Ms, default to 10s
   * @return {StreamClient}     StreamClient
   * @example <caption>Basic usage</caption>
   * stream.connect(apiKey, apiSecret);
   * @example <caption>or if you want to be able to subscribe and listen</caption>
   * stream.connect(apiKey, apiSecret, appId);
   * @example <caption>or on Heroku</caption>
   * stream.connect(streamURL);
   * @example <caption>where streamURL looks like</caption>
   * "https://thierry:pass@gestream.io/?app=1"
   */
  function connect(apiKey, apiSecret, appId, options) {
    var _process$env;

    if (typeof process !== 'undefined' && (_process$env = process.env) !== null && _process$env !== void 0 && _process$env.STREAM_URL && !apiKey) {
      var parts = /https:\/\/(\w+):(\w+)@([\w-]*).*\?app_id=(\d+)/.exec(process.env.STREAM_URL) || [];
      apiKey = parts[1];
      apiSecret = parts[2];
      var location = parts[3];
      appId = parts[4];

      if (options === undefined) {
        options = {};
      }

      if (location !== 'getstream' && location !== 'stream-io-api') {
        options.location = location;
      }
    }

    return new client.StreamClient(apiKey, apiSecret, appId, options);
  }

  var connect_1 = /*#__PURE__*/Object.defineProperty({
  	connect: connect_2
  }, '__esModule', {value: true});

  var lib$1 = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });



  Object.keys(connect_1).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === connect_1[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return connect_1[key];
      }
    });
  });



  Object.keys(client).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === client[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return client[key];
      }
    });
  });



  Object.keys(collections).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === collections[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return collections[key];
      }
    });
  });



  Object.keys(feed).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === feed[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return feed[key];
      }
    });
  });



  Object.keys(files$1).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === files$1[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return files$1[key];
      }
    });
  });



  Object.keys(images).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === images[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return images[key];
      }
    });
  });



  Object.keys(personalization).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === personalization[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return personalization[key];
      }
    });
  });



  Object.keys(reaction).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === reaction[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return reaction[key];
      }
    });
  });



  Object.keys(user).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === user[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return user[key];
      }
    });
  });



  Object.keys(_batch_operations).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === _batch_operations[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _batch_operations[key];
      }
    });
  });



  Object.keys(errors).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === errors[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return errors[key];
      }
    });
  });



  Object.keys(signing).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (key in exports && exports[key] === signing[key]) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return signing[key];
      }
    });
  });
  });

  function _arrayWithoutHoles$3(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray$5(arr);
  }

  function _iterableToArray$3(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }

  function _nonIterableSpread$3() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function _toConsumableArray$3(arr) {
    return _arrayWithoutHoles$3(arr) || _iterableToArray$3(arr) || _unsupportedIterableToArray$5(arr) || _nonIterableSpread$3();
  }

  function _classCallCheck$3(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties$3(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass$3(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties$3(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties$3(Constructor, staticProps);
    return Constructor;
  }

  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  // Used for setting prototype methods that IE8 chokes on.
  var DELETE = 'delete';

  // Constants describing the size of trie nodes.
  var SHIFT = 5; // Resulted in best performance after ______?
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  // A consistent shared value representing "not set" which equals nothing other
  // than itself, and nothing that could be provided externally.
  var NOT_SET = {};

  // Boolean references, Rough equivalent of `bool &`.
  function MakeRef() {
    return { value: false };
  }

  function SetRef(ref) {
    if (ref) {
      ref.value = true;
    }
  }

  // A function which returns a value representing an "owner" for transient writes
  // to tries. The return value will only ever equal itself, and will not equal
  // the return of any subsequent call of this function.
  function OwnerID() {}

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    // This implements "is array index" which the ECMAString spec defines as:
    //
    //     A String property name P is an array index if and only if
    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
    //     to 2^32−1.
    //
    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (
      ((begin === 0 && !isNeg(begin)) ||
        (size !== undefined && begin <= -size)) &&
      (end === undefined || (size !== undefined && end >= size))
    );
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    // Sanitize indices using this shorthand for ToInt32(argument)
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
    return index === undefined
      ? defaultIndex
      : isNeg(index)
        ? size === Infinity
          ? size
          : Math.max(0, size + index) | 0
        : size === undefined || size === index
          ? index
          : Math.min(size, index) | 0;
  }

  function isNeg(value) {
    // Account for -0 which is negative, but not less than 0.
    return value < 0 || (value === 0 && 1 / value === -Infinity);
  }

  // Note: value is unchanged to not break immutable-devtools.
  var IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';

  function isCollection(maybeCollection) {
    return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);
  }

  var IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';

  function isKeyed(maybeKeyed) {
    return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);
  }

  var IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';

  function isIndexed(maybeIndexed) {
    return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  var Collection = function Collection(value) {
    return isCollection(value) ? value : Seq(value);
  };

  var KeyedCollection = /*@__PURE__*/(function (Collection) {
    function KeyedCollection(value) {
      return isKeyed(value) ? value : KeyedSeq(value);
    }

    if ( Collection ) KeyedCollection.__proto__ = Collection;
    KeyedCollection.prototype = Object.create( Collection && Collection.prototype );
    KeyedCollection.prototype.constructor = KeyedCollection;

    return KeyedCollection;
  }(Collection));

  var IndexedCollection = /*@__PURE__*/(function (Collection) {
    function IndexedCollection(value) {
      return isIndexed(value) ? value : IndexedSeq(value);
    }

    if ( Collection ) IndexedCollection.__proto__ = Collection;
    IndexedCollection.prototype = Object.create( Collection && Collection.prototype );
    IndexedCollection.prototype.constructor = IndexedCollection;

    return IndexedCollection;
  }(Collection));

  var SetCollection = /*@__PURE__*/(function (Collection) {
    function SetCollection(value) {
      return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);
    }

    if ( Collection ) SetCollection.__proto__ = Collection;
    SetCollection.prototype = Object.create( Collection && Collection.prototype );
    SetCollection.prototype.constructor = SetCollection;

    return SetCollection;
  }(Collection));

  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';

  function isSeq(maybeSeq) {
    return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);
  }

  var IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';

  function isRecord(maybeRecord) {
    return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);
  }

  function isImmutable(maybeImmutable) {
    return isCollection(maybeImmutable) || isRecord(maybeImmutable);
  }

  var IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';

  function isOrdered(maybeOrdered) {
    return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);
  }

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

  var Iterator = function Iterator(next) {
    this.next = next;
  };

  Iterator.prototype.toString = function toString () {
    return '[Iterator]';
  };

  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect = Iterator.prototype.toSource = function() {
    return this.toString();
  };
  Iterator.prototype[ITERATOR_SYMBOL] = function() {
    return this;
  };

  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult
      ? (iteratorResult.value = value)
      : (iteratorResult = {
          value: value,
          done: false,
        });
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn =
      iterable &&
      ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
        iterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var hasOwnProperty$b = Object.prototype.hasOwnProperty;

  function isArrayLike$1(value) {
    if (Array.isArray(value) || typeof value === 'string') {
      return true;
    }

    return (
      value &&
      typeof value === 'object' &&
      Number.isInteger(value.length) &&
      value.length >= 0 &&
      (value.length === 0
        ? // Only {length: 0} is considered Array-like.
          Object.keys(value).length === 1
        : // An object is only Array-like if it has a property where the last value
          // in the array-like may be found (which could be undefined).
          value.hasOwnProperty(value.length - 1))
    );
  }

  var Seq = /*@__PURE__*/(function (Collection$$1) {
    function Seq(value) {
      return value === null || value === undefined
        ? emptySequence()
        : isImmutable(value)
          ? value.toSeq()
          : seqFromValue(value);
    }

    if ( Collection$$1 ) Seq.__proto__ = Collection$$1;
    Seq.prototype = Object.create( Collection$$1 && Collection$$1.prototype );
    Seq.prototype.constructor = Seq;

    Seq.prototype.toSeq = function toSeq () {
      return this;
    };

    Seq.prototype.toString = function toString () {
      return this.__toString('Seq {', '}');
    };

    Seq.prototype.cacheResult = function cacheResult () {
      if (!this._cache && this.__iterateUncached) {
        this._cache = this.entrySeq().toArray();
        this.size = this._cache.length;
      }
      return this;
    };

    // abstract __iterateUncached(fn, reverse)

    Seq.prototype.__iterate = function __iterate (fn, reverse) {
      var cache = this._cache;
      if (cache) {
        var size = cache.length;
        var i = 0;
        while (i !== size) {
          var entry = cache[reverse ? size - ++i : i++];
          if (fn(entry[1], entry[0], this) === false) {
            break;
          }
        }
        return i;
      }
      return this.__iterateUncached(fn, reverse);
    };

    // abstract __iteratorUncached(type, reverse)

    Seq.prototype.__iterator = function __iterator (type, reverse) {
      var cache = this._cache;
      if (cache) {
        var size = cache.length;
        var i = 0;
        return new Iterator(function () {
          if (i === size) {
            return iteratorDone();
          }
          var entry = cache[reverse ? size - ++i : i++];
          return iteratorValue(type, entry[0], entry[1]);
        });
      }
      return this.__iteratorUncached(type, reverse);
    };

    return Seq;
  }(Collection));

  var KeyedSeq = /*@__PURE__*/(function (Seq) {
    function KeyedSeq(value) {
      return value === null || value === undefined
        ? emptySequence().toKeyedSeq()
        : isCollection(value)
          ? isKeyed(value)
            ? value.toSeq()
            : value.fromEntrySeq()
          : isRecord(value)
            ? value.toSeq()
            : keyedSeqFromValue(value);
    }

    if ( Seq ) KeyedSeq.__proto__ = Seq;
    KeyedSeq.prototype = Object.create( Seq && Seq.prototype );
    KeyedSeq.prototype.constructor = KeyedSeq;

    KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq () {
      return this;
    };

    return KeyedSeq;
  }(Seq));

  var IndexedSeq = /*@__PURE__*/(function (Seq) {
    function IndexedSeq(value) {
      return value === null || value === undefined
        ? emptySequence()
        : isCollection(value)
          ? isKeyed(value)
            ? value.entrySeq()
            : value.toIndexedSeq()
          : isRecord(value)
            ? value.toSeq().entrySeq()
            : indexedSeqFromValue(value);
    }

    if ( Seq ) IndexedSeq.__proto__ = Seq;
    IndexedSeq.prototype = Object.create( Seq && Seq.prototype );
    IndexedSeq.prototype.constructor = IndexedSeq;

    IndexedSeq.of = function of (/*...values*/) {
      return IndexedSeq(arguments);
    };

    IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq () {
      return this;
    };

    IndexedSeq.prototype.toString = function toString () {
      return this.__toString('Seq [', ']');
    };

    return IndexedSeq;
  }(Seq));

  var SetSeq = /*@__PURE__*/(function (Seq) {
    function SetSeq(value) {
      return (isCollection(value) && !isAssociative(value)
        ? value
        : IndexedSeq(value)
      ).toSetSeq();
    }

    if ( Seq ) SetSeq.__proto__ = Seq;
    SetSeq.prototype = Object.create( Seq && Seq.prototype );
    SetSeq.prototype.constructor = SetSeq;

    SetSeq.of = function of (/*...values*/) {
      return SetSeq(arguments);
    };

    SetSeq.prototype.toSetSeq = function toSetSeq () {
      return this;
    };

    return SetSeq;
  }(Seq));

  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  Seq.prototype[IS_SEQ_SYMBOL] = true;

  // #pragma Root Sequences

  var ArraySeq = /*@__PURE__*/(function (IndexedSeq) {
    function ArraySeq(array) {
      this._array = array;
      this.size = array.length;
    }

    if ( IndexedSeq ) ArraySeq.__proto__ = IndexedSeq;
    ArraySeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );
    ArraySeq.prototype.constructor = ArraySeq;

    ArraySeq.prototype.get = function get (index, notSetValue) {
      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
    };

    ArraySeq.prototype.__iterate = function __iterate (fn, reverse) {
      var array = this._array;
      var size = array.length;
      var i = 0;
      while (i !== size) {
        var ii = reverse ? size - ++i : i++;
        if (fn(array[ii], ii, this) === false) {
          break;
        }
      }
      return i;
    };

    ArraySeq.prototype.__iterator = function __iterator (type, reverse) {
      var array = this._array;
      var size = array.length;
      var i = 0;
      return new Iterator(function () {
        if (i === size) {
          return iteratorDone();
        }
        var ii = reverse ? size - ++i : i++;
        return iteratorValue(type, ii, array[ii]);
      });
    };

    return ArraySeq;
  }(IndexedSeq));

  var ObjectSeq = /*@__PURE__*/(function (KeyedSeq) {
    function ObjectSeq(object) {
      var keys = Object.keys(object);
      this._object = object;
      this._keys = keys;
      this.size = keys.length;
    }

    if ( KeyedSeq ) ObjectSeq.__proto__ = KeyedSeq;
    ObjectSeq.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );
    ObjectSeq.prototype.constructor = ObjectSeq;

    ObjectSeq.prototype.get = function get (key, notSetValue) {
      if (notSetValue !== undefined && !this.has(key)) {
        return notSetValue;
      }
      return this._object[key];
    };

    ObjectSeq.prototype.has = function has (key) {
      return hasOwnProperty$b.call(this._object, key);
    };

    ObjectSeq.prototype.__iterate = function __iterate (fn, reverse) {
      var object = this._object;
      var keys = this._keys;
      var size = keys.length;
      var i = 0;
      while (i !== size) {
        var key = keys[reverse ? size - ++i : i++];
        if (fn(object[key], key, this) === false) {
          break;
        }
      }
      return i;
    };

    ObjectSeq.prototype.__iterator = function __iterator (type, reverse) {
      var object = this._object;
      var keys = this._keys;
      var size = keys.length;
      var i = 0;
      return new Iterator(function () {
        if (i === size) {
          return iteratorDone();
        }
        var key = keys[reverse ? size - ++i : i++];
        return iteratorValue(type, key, object[key]);
      });
    };

    return ObjectSeq;
  }(KeyedSeq));
  ObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;

  var CollectionSeq = /*@__PURE__*/(function (IndexedSeq) {
    function CollectionSeq(collection) {
      this._collection = collection;
      this.size = collection.length || collection.size;
    }

    if ( IndexedSeq ) CollectionSeq.__proto__ = IndexedSeq;
    CollectionSeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );
    CollectionSeq.prototype.constructor = CollectionSeq;

    CollectionSeq.prototype.__iterateUncached = function __iterateUncached (fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var collection = this._collection;
      var iterator = getIterator(collection);
      var iterations = 0;
      if (isIterator(iterator)) {
        var step;
        while (!(step = iterator.next()).done) {
          if (fn(step.value, iterations++, this) === false) {
            break;
          }
        }
      }
      return iterations;
    };

    CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached (type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var collection = this._collection;
      var iterator = getIterator(collection);
      if (!isIterator(iterator)) {
        return new Iterator(iteratorDone);
      }
      var iterations = 0;
      return new Iterator(function () {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, iterations++, step.value);
      });
    };

    return CollectionSeq;
  }(IndexedSeq));

  // # pragma Helper functions

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq = Array.isArray(value)
      ? new ArraySeq(value)
      : hasIterator(value)
        ? new CollectionSeq(value)
        : undefined;
    if (seq) {
      return seq.fromEntrySeq();
    }
    if (typeof value === 'object') {
      return new ObjectSeq(value);
    }
    throw new TypeError(
      'Expected Array or collection object of [k, v] entries, or keyed object: ' +
        value
    );
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (seq) {
      return seq;
    }
    throw new TypeError(
      'Expected Array or collection object of values: ' + value
    );
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (seq) {
      return seq;
    }
    if (typeof value === 'object') {
      return new ObjectSeq(value);
    }
    throw new TypeError(
      'Expected Array or collection object of values, or keyed object: ' + value
    );
  }

  function maybeIndexedSeqFromValue(value) {
    return isArrayLike$1(value)
      ? new ArraySeq(value)
      : hasIterator(value)
        ? new CollectionSeq(value)
        : undefined;
  }

  var IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';

  function isMap(maybeMap) {
    return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);
  }

  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  function isValueObject(maybeValue) {
    return Boolean(
      maybeValue &&
        typeof maybeValue.equals === 'function' &&
        typeof maybeValue.hashCode === 'function'
    );
  }

  /**
   * An extension of the "same-value" algorithm as [described for use by ES6 Map
   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
   *
   * NaN is considered the same as NaN, however -0 and 0 are considered the same
   * value, which is different from the algorithm described by
   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
   *
   * This is extended further to allow Objects to describe the values they
   * represent, by way of `valueOf` or `equals` (and `hashCode`).
   *
   * Note: because of this extension, the key equality of Immutable.Map and the
   * value equality of Immutable.Set will differ from ES6 Map and Set.
   *
   * ### Defining custom values
   *
   * The easiest way to describe the value an object represents is by implementing
   * `valueOf`. For example, `Date` represents a value by returning a unix
   * timestamp for `valueOf`:
   *
   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
   *     var date2 = new Date(1234567890000);
   *     date1.valueOf(); // 1234567890000
   *     assert( date1 !== date2 );
   *     assert( Immutable.is( date1, date2 ) );
   *
   * Note: overriding `valueOf` may have other implications if you use this object
   * where JavaScript expects a primitive, such as implicit string coercion.
   *
   * For more complex types, especially collections, implementing `valueOf` may
   * not be performant. An alternative is to implement `equals` and `hashCode`.
   *
   * `equals` takes another object, presumably of similar type, and returns true
   * if it is equal. Equality is symmetrical, so the same result should be
   * returned if this and the argument are flipped.
   *
   *     assert( a.equals(b) === b.equals(a) );
   *
   * `hashCode` returns a 32bit integer number representing the object which will
   * be used to determine how to store the value object in a Map or Set. You must
   * provide both or neither methods, one must not exist without the other.
   *
   * Also, an important relationship between these methods must be upheld: if two
   * values are equal, they *must* return the same hashCode. If the values are not
   * equal, they might have the same hashCode; this is called a hash collision,
   * and while undesirable for performance reasons, it is acceptable.
   *
   *     if (a.equals(b)) {
   *       assert( a.hashCode() === b.hashCode() );
   *     }
   *
   * All Immutable collections are Value Objects: they implement `equals()`
   * and `hashCode()`.
   */
  function is(valueA, valueB) {
    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (
      typeof valueA.valueOf === 'function' &&
      typeof valueB.valueOf === 'function'
    ) {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    return !!(
      isValueObject(valueA) &&
      isValueObject(valueB) &&
      valueA.equals(valueB)
    );
  }

  var imul =
    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2
      ? Math.imul
      : function imul(a, b) {
          a |= 0; // int
          b |= 0; // int
          var c = a & 0xffff;
          var d = b & 0xffff;
          // Shift by 0 fixes the sign on the high part.
          return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int
        };

  // v8 has an optimization for storing 31-bit signed numbers.
  // Values which have either 00 or 11 as the high order bits qualify.
  // This function drops the highest order bit in a signed number, maintaining
  // the sign bit.
  function smi(i32) {
    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);
  }

  var defaultValueOf = Object.prototype.valueOf;

  function hash(o) {
    switch (typeof o) {
      case 'boolean':
        // The hash values for built-in constants are a 1 value for each 5-byte
        // shift region expect for the first, which encodes the value. This
        // reduces the odds of a hash collision for these common values.
        return o ? 0x42108421 : 0x42108420;
      case 'number':
        return hashNumber(o);
      case 'string':
        return o.length > STRING_HASH_CACHE_MIN_STRLEN
          ? cachedHashString(o)
          : hashString(o);
      case 'object':
      case 'function':
        if (o === null) {
          return 0x42108422;
        }
        if (typeof o.hashCode === 'function') {
          // Drop any high bits from accidentally long hash codes.
          return smi(o.hashCode(o));
        }
        if (o.valueOf !== defaultValueOf && typeof o.valueOf === 'function') {
          o = o.valueOf(o);
        }
        return hashJSObj(o);
      case 'undefined':
        return 0x42108423;
      default:
        if (typeof o.toString === 'function') {
          return hashString(o.toString());
        }
        throw new Error('Value type ' + typeof o + ' cannot be hashed.');
    }
  }

  // Compress arbitrarily large numbers into smi hashes.
  function hashNumber(n) {
    if (n !== n || n === Infinity) {
      return 0;
    }
    var hash = n | 0;
    if (hash !== n) {
      hash ^= n * 0xffffffff;
    }
    while (n > 0xffffffff) {
      n /= 0xffffffff;
      hash ^= n;
    }
    return smi(hash);
  }

  function cachedHashString(string) {
    var hashed = stringHashCache[string];
    if (hashed === undefined) {
      hashed = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hashed;
    }
    return hashed;
  }

  // http://jsperf.com/hashing-strings
  function hashString(string) {
    // This is the hash from JVM
    // The hash code for a string is computed as
    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
    // where s[i] is the ith character of the string and n is the length of
    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
    // (exclusive) by dropping high bits.
    var hashed = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hashed = (31 * hashed + string.charCodeAt(ii)) | 0;
    }
    return smi(hashed);
  }

  function hashJSObj(obj) {
    var hashed;
    if (usingWeakMap) {
      hashed = weakMap.get(obj);
      if (hashed !== undefined) {
        return hashed;
      }
    }

    hashed = obj[UID_HASH_KEY];
    if (hashed !== undefined) {
      return hashed;
    }

    if (!canDefineProperty) {
      hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hashed !== undefined) {
        return hashed;
      }

      hashed = getIENodeHash(obj);
      if (hashed !== undefined) {
        return hashed;
      }
    }

    hashed = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hashed);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        enumerable: false,
        configurable: false,
        writable: false,
        value: hashed,
      });
    } else if (
      obj.propertyIsEnumerable !== undefined &&
      obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable
    ) {
      // Since we can't define a non-enumerable property on the object
      // we'll hijack one of the less-used non-enumerable properties to
      // save our hash on it. Since this is a function it will not show up in
      // `JSON.stringify` which is what we want.
      obj.propertyIsEnumerable = function() {
        return this.constructor.prototype.propertyIsEnumerable.apply(
          this,
          arguments
        );
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;
    } else if (obj.nodeType !== undefined) {
      // At this point we couldn't get the IE `uniqueID` to use as a hash
      // and we couldn't use a non-enumerable property to exploit the
      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
      // itself.
      obj[UID_HASH_KEY] = hashed;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hashed;
  }

  // Get references to ES5 object methods.
  var isExtensible = Object.isExtensible;

  // True if Object.defineProperty works as expected. IE8 fails this test.
  var canDefineProperty = (function() {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  })();

  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
  // and avoid memory leaks from the IE cloneNode bug.
  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1: // Element
          return node.uniqueID;
        case 9: // Document
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  // If possible, use a WeakMap.
  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  var ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq$$1) {
    function ToKeyedSequence(indexed, useKeys) {
      this._iter = indexed;
      this._useKeys = useKeys;
      this.size = indexed.size;
    }

    if ( KeyedSeq$$1 ) ToKeyedSequence.__proto__ = KeyedSeq$$1;
    ToKeyedSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );
    ToKeyedSequence.prototype.constructor = ToKeyedSequence;

    ToKeyedSequence.prototype.get = function get (key, notSetValue) {
      return this._iter.get(key, notSetValue);
    };

    ToKeyedSequence.prototype.has = function has (key) {
      return this._iter.has(key);
    };

    ToKeyedSequence.prototype.valueSeq = function valueSeq () {
      return this._iter.valueSeq();
    };

    ToKeyedSequence.prototype.reverse = function reverse () {
      var this$1$1 = this;

      var reversedSequence = reverseFactory(this, true);
      if (!this._useKeys) {
        reversedSequence.valueSeq = function () { return this$1$1._iter.toSeq().reverse(); };
      }
      return reversedSequence;
    };

    ToKeyedSequence.prototype.map = function map (mapper, context) {
      var this$1$1 = this;

      var mappedSequence = mapFactory(this, mapper, context);
      if (!this._useKeys) {
        mappedSequence.valueSeq = function () { return this$1$1._iter.toSeq().map(mapper, context); };
      }
      return mappedSequence;
    };

    ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      return this._iter.__iterate(function (v, k) { return fn(v, k, this$1$1); }, reverse);
    };

    ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {
      return this._iter.__iterator(type, reverse);
    };

    return ToKeyedSequence;
  }(KeyedSeq));
  ToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;

  var ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq$$1) {
    function ToIndexedSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    if ( IndexedSeq$$1 ) ToIndexedSequence.__proto__ = IndexedSeq$$1;
    ToIndexedSequence.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );
    ToIndexedSequence.prototype.constructor = ToIndexedSequence;

    ToIndexedSequence.prototype.includes = function includes (value) {
      return this._iter.includes(value);
    };

    ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      var i = 0;
      reverse && ensureSize(this);
      return this._iter.__iterate(
        function (v) { return fn(v, reverse ? this$1$1.size - ++i : i++, this$1$1); },
        reverse
      );
    };

    ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {
      var this$1$1 = this;

      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var i = 0;
      reverse && ensureSize(this);
      return new Iterator(function () {
        var step = iterator.next();
        return step.done
          ? step
          : iteratorValue(
              type,
              reverse ? this$1$1.size - ++i : i++,
              step.value,
              step
            );
      });
    };

    return ToIndexedSequence;
  }(IndexedSeq));

  var ToSetSequence = /*@__PURE__*/(function (SetSeq$$1) {
    function ToSetSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    if ( SetSeq$$1 ) ToSetSequence.__proto__ = SetSeq$$1;
    ToSetSequence.prototype = Object.create( SetSeq$$1 && SetSeq$$1.prototype );
    ToSetSequence.prototype.constructor = ToSetSequence;

    ToSetSequence.prototype.has = function has (key) {
      return this._iter.includes(key);
    };

    ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      return this._iter.__iterate(function (v) { return fn(v, v, this$1$1); }, reverse);
    };

    ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        return step.done
          ? step
          : iteratorValue(type, step.value, step.value, step);
      });
    };

    return ToSetSequence;
  }(SetSeq));

  var FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq$$1) {
    function FromEntriesSequence(entries) {
      this._iter = entries;
      this.size = entries.size;
    }

    if ( KeyedSeq$$1 ) FromEntriesSequence.__proto__ = KeyedSeq$$1;
    FromEntriesSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );
    FromEntriesSequence.prototype.constructor = FromEntriesSequence;

    FromEntriesSequence.prototype.entrySeq = function entrySeq () {
      return this._iter.toSeq();
    };

    FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      return this._iter.__iterate(function (entry) {
        // Check if entry exists first so array access doesn't throw for holes
        // in the parent iteration.
        if (entry) {
          validateEntry(entry);
          var indexedCollection = isCollection(entry);
          return fn(
            indexedCollection ? entry.get(1) : entry[1],
            indexedCollection ? entry.get(0) : entry[0],
            this$1$1
          );
        }
      }, reverse);
    };

    FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          // Check if entry exists first so array access doesn't throw for holes
          // in the parent iteration.
          if (entry) {
            validateEntry(entry);
            var indexedCollection = isCollection(entry);
            return iteratorValue(
              type,
              indexedCollection ? entry.get(0) : entry[0],
              indexedCollection ? entry.get(1) : entry[1],
              step
            );
          }
        }
      });
    };

    return FromEntriesSequence;
  }(KeyedSeq));

  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

  function flipFactory(collection) {
    var flipSequence = makeSequence(collection);
    flipSequence._iter = collection;
    flipSequence.size = collection.size;
    flipSequence.flip = function () { return collection; };
    flipSequence.reverse = function() {
      var reversedSequence = collection.reverse.apply(this); // super.reverse()
      reversedSequence.flip = function () { return collection.reverse(); };
      return reversedSequence;
    };
    flipSequence.has = function (key) { return collection.includes(key); };
    flipSequence.includes = function (key) { return collection.has(key); };
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      return collection.__iterate(function (v, k) { return fn(k, v, this$1$1) !== false; }, reverse);
    };
    flipSequence.__iteratorUncached = function(type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = collection.__iterator(type, reverse);
        return new Iterator(function () {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return collection.__iterator(
        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
        reverse
      );
    };
    return flipSequence;
  }

  function mapFactory(collection, mapper, context) {
    var mappedSequence = makeSequence(collection);
    mappedSequence.size = collection.size;
    mappedSequence.has = function (key) { return collection.has(key); };
    mappedSequence.get = function (key, notSetValue) {
      var v = collection.get(key, NOT_SET);
      return v === NOT_SET
        ? notSetValue
        : mapper.call(context, v, key, collection);
    };
    mappedSequence.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      return collection.__iterate(
        function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1$1) !== false; },
        reverse
      );
    };
    mappedSequence.__iteratorUncached = function(type, reverse) {
      var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(
          type,
          key,
          mapper.call(context, entry[1], key, collection),
          step
        );
      });
    };
    return mappedSequence;
  }

  function reverseFactory(collection, useKeys) {
    var this$1$1 = this;

    var reversedSequence = makeSequence(collection);
    reversedSequence._iter = collection;
    reversedSequence.size = collection.size;
    reversedSequence.reverse = function () { return collection; };
    if (collection.flip) {
      reversedSequence.flip = function() {
        var flipSequence = flipFactory(collection);
        flipSequence.reverse = function () { return collection.flip(); };
        return flipSequence;
      };
    }
    reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };
    reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };
    reversedSequence.includes = function (value) { return collection.includes(value); };
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function(fn, reverse) {
      var this$1$1 = this;

      var i = 0;
      reverse && ensureSize(collection);
      return collection.__iterate(
        function (v, k) { return fn(v, useKeys ? k : reverse ? this$1$1.size - ++i : i++, this$1$1); },
        !reverse
      );
    };
    reversedSequence.__iterator = function (type, reverse) {
      var i = 0;
      reverse && ensureSize(collection);
      var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        return iteratorValue(
          type,
          useKeys ? entry[0] : reverse ? this$1$1.size - ++i : i++,
          entry[1],
          step
        );
      });
    };
    return reversedSequence;
  }

  function filterFactory(collection, predicate, context, useKeys) {
    var filterSequence = makeSequence(collection);
    if (useKeys) {
      filterSequence.has = function (key) {
        var v = collection.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, collection);
      };
      filterSequence.get = function (key, notSetValue) {
        var v = collection.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, collection)
          ? v
          : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      var iterations = 0;
      collection.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$1$1);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function(type, reverse) {
      var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, collection)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    };
    return filterSequence;
  }

  function countByFactory(collection, grouper, context) {
    var groups = Map$2().asMutable();
    collection.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });
    });
    return groups.asImmutable();
  }

  function groupByFactory(collection, grouper, context) {
    var isKeyedIter = isKeyed(collection);
    var groups = (isOrdered(collection) ? OrderedMap() : Map$2()).asMutable();
    collection.__iterate(function (v, k) {
      groups.update(
        grouper.call(context, v, k, collection),
        function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }
      );
    });
    var coerce = collectionClass(collection);
    return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();
  }

  function sliceFactory(collection, begin, end, useKeys) {
    var originalSize = collection.size;

    if (wholeSlice(begin, end, originalSize)) {
      return collection;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    // begin or end will be NaN if they were provided as negative numbers and
    // this collection's size is unknown. In that case, cache first so there is
    // a known size and these do not resolve to NaN.
    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);
    }

    // Note: resolvedEnd is undefined when the original sequence's length is
    // unknown and this slice did not supply an end and should contain all
    // elements after resolvedBegin.
    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(collection);

    // If collection.size is undefined, the size of the realized sliceSeq is
    // unknown at this point unless the number of items to slice is 0
    sliceSeq.size =
      sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;

    if (!useKeys && isSeq(collection) && sliceSize >= 0) {
      sliceSeq.get = function(index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize
          ? collection.get(index + resolvedBegin, notSetValue)
          : notSetValue;
      };
    }

    sliceSeq.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      collection.__iterate(function (v, k) {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return (
            fn(v, useKeys ? k : iterations - 1, this$1$1) !== false &&
            iterations !== sliceSize
          );
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function(type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      // Don't bother instantiating parent iterator if taking 0.
      if (sliceSize === 0) {
        return new Iterator(iteratorDone);
      }
      var iterator = collection.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function () {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES || step.done) {
          return step;
        }
        if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        }
        return iteratorValue(type, iterations - 1, step.value[1], step);
      });
    };

    return sliceSeq;
  }

  function takeWhileFactory(collection, predicate, context) {
    var takeSequence = makeSequence(collection);
    takeSequence.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      collection.__iterate(
        function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1$1); }
      );
      return iterations;
    };
    takeSequence.__iteratorUncached = function(type, reverse) {
      var this$1$1 = this;

      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function () {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$1$1)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }

  function skipWhileFactory(collection, predicate, context, useKeys) {
    var skipSequence = makeSequence(collection);
    skipSequence.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      collection.__iterate(function (v, k, c) {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$1$1);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function(type, reverse) {
      var this$1$1 = this;

      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function () {
        var step;
        var k;
        var v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            }
            if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            }
            return iteratorValue(type, iterations++, step.value[1], step);
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$1$1));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }

  function concatFactory(collection, values) {
    var isKeyedCollection = isKeyed(collection);
    var iters = [collection]
      .concat(values)
      .map(function (v) {
        if (!isCollection(v)) {
          v = isKeyedCollection
            ? keyedSeqFromValue(v)
            : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
        } else if (isKeyedCollection) {
          v = KeyedCollection(v);
        }
        return v;
      })
      .filter(function (v) { return v.size !== 0; });

    if (iters.length === 0) {
      return collection;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (
        singleton === collection ||
        (isKeyedCollection && isKeyed(singleton)) ||
        (isIndexed(collection) && isIndexed(singleton))
      ) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedCollection) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(collection)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(function (sum, seq) {
      if (sum !== undefined) {
        var size = seq.size;
        if (size !== undefined) {
          return sum + size;
        }
      }
    }, 0);
    return concatSeq;
  }

  function flattenFactory(collection, depth, useKeys) {
    var flatSequence = makeSequence(collection);
    flatSequence.__iterateUncached = function(fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {
        iter.__iterate(function (v, k) {
          if ((!depth || currentDepth < depth) && isCollection(v)) {
            flatDeep(v, currentDepth + 1);
          } else {
            iterations++;
            if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {
              stopped = true;
            }
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(collection, 0);
      return iterations;
    };
    flatSequence.__iteratorUncached = function(type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = collection.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function () {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isCollection(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    };
    return flatSequence;
  }

  function flatMapFactory(collection, mapper, context) {
    var coerce = collectionClass(collection);
    return collection
      .toSeq()
      .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })
      .flatten(true);
  }

  function interposeFactory(collection, separator) {
    var interposedSequence = makeSequence(collection);
    interposedSequence.size = collection.size && collection.size * 2 - 1;
    interposedSequence.__iterateUncached = function(fn, reverse) {
      var this$1$1 = this;

      var iterations = 0;
      collection.__iterate(
        function (v) { return (!iterations || fn(separator, iterations++, this$1$1) !== false) &&
          fn(v, iterations++, this$1$1) !== false; },
        reverse
      );
      return iterations;
    };
    interposedSequence.__iteratorUncached = function(type, reverse) {
      var iterator = collection.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function () {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2
          ? iteratorValue(type, iterations++, separator)
          : iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }

  function sortFactory(collection, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedCollection = isKeyed(collection);
    var index = 0;
    var entries = collection
      .toSeq()
      .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })
      .valueSeq()
      .toArray();
    entries.sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; }).forEach(
      isKeyedCollection
        ? function (v, i) {
            entries[i].length = 2;
          }
        : function (v, i) {
            entries[i] = v[1];
          }
    );
    return isKeyedCollection
      ? KeyedSeq(entries)
      : isIndexed(collection)
        ? IndexedSeq(entries)
        : SetSeq(entries);
  }

  function maxFactory(collection, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = collection
        .toSeq()
        .map(function (v, k) { return [v, mapper(v, k, collection)]; })
        .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });
      return entry && entry[0];
    }
    return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);
    // b is considered the new max if the comparator declares them equal, but
    // they are not equal and b is in fact a nullish value.
    return (
      (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||
      comp > 0
    );
  }

  function zipWithFactory(keyIter, zipper, iters, zipAll) {
    var zipSequence = makeSequence(keyIter);
    var sizes = new ArraySeq(iters).map(function (i) { return i.size; });
    zipSequence.size = zipAll ? sizes.max() : sizes.min();
    // Note: this a generic base implementation of __iterate in terms of
    // __iterator which may be more generically useful in the future.
    zipSequence.__iterate = function(fn, reverse) {
      /* generic:
      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        iterations++;
        if (fn(step.value[1], step.value[0], this) === false) {
          break;
        }
      }
      return iterations;
      */
      // indexed:
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function(type, reverse) {
      var iterators = iters.map(
        function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }
      );
      var iterations = 0;
      var isDone = false;
      return new Iterator(function () {
        var steps;
        if (!isDone) {
          steps = iterators.map(function (i) { return i.next(); });
          isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(
          type,
          iterations++,
          zipper.apply(null, steps.map(function (s) { return s.value; }))
        );
      });
    };
    return zipSequence;
  }

  // #pragma Helper Functions

  function reify(iter, seq) {
    return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function collectionClass(collection) {
    return isKeyed(collection)
      ? KeyedCollection
      : isIndexed(collection)
        ? IndexedCollection
        : SetCollection;
  }

  function makeSequence(collection) {
    return Object.create(
      (isKeyed(collection)
        ? KeyedSeq
        : isIndexed(collection)
          ? IndexedSeq
          : SetSeq
      ).prototype
    );
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    }
    return Seq.prototype.cacheResult.call(this);
  }

  function defaultComparator(a, b) {
    if (a === undefined && b === undefined) {
      return 0;
    }

    if (a === undefined) {
      return 1;
    }

    if (b === undefined) {
      return -1;
    }

    return a > b ? 1 : a < b ? -1 : 0;
  }

  // http://jsperf.com/copy-array-inline
  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function invariant(condition, error) {
    if (!condition) { throw new Error(error); }
  }

  function assertNotInfinite(size) {
    invariant(
      size !== Infinity,
      'Cannot perform this action with an infinite size.'
    );
  }

  function coerceKeyPath(keyPath) {
    if (isArrayLike$1(keyPath) && typeof keyPath !== 'string') {
      return keyPath;
    }
    if (isOrdered(keyPath)) {
      return keyPath.toArray();
    }
    throw new TypeError(
      'Invalid keyPath: expected Ordered Collection or Array: ' + keyPath
    );
  }

  function isPlainObj(value) {
    return (
      value &&
      (typeof value.constructor !== 'function' ||
        value.constructor.name === 'Object')
    );
  }

  /**
   * Returns true if the value is a potentially-persistent data structure, either
   * provided by Immutable.js or a plain Array or Object.
   */
  function isDataStructure(value) {
    return (
      typeof value === 'object' &&
      (isImmutable(value) || Array.isArray(value) || isPlainObj(value))
    );
  }

  /**
   * Converts a value to a string, adding quotes if a string was provided.
   */
  function quoteString(value) {
    try {
      return typeof value === 'string' ? JSON.stringify(value) : String(value);
    } catch (_ignoreError) {
      return JSON.stringify(value);
    }
  }

  function has$3(collection, key) {
    return isImmutable(collection)
      ? collection.has(key)
      : isDataStructure(collection) && hasOwnProperty$b.call(collection, key);
  }

  function get$2(collection, key, notSetValue) {
    return isImmutable(collection)
      ? collection.get(key, notSetValue)
      : !has$3(collection, key)
        ? notSetValue
        : typeof collection.get === 'function'
          ? collection.get(key)
          : collection[key];
  }

  function shallowCopy(from) {
    if (Array.isArray(from)) {
      return arrCopy(from);
    }
    var to = {};
    for (var key in from) {
      if (hasOwnProperty$b.call(from, key)) {
        to[key] = from[key];
      }
    }
    return to;
  }

  function remove$2(collection, key) {
    if (!isDataStructure(collection)) {
      throw new TypeError(
        'Cannot update non-data-structure value: ' + collection
      );
    }
    if (isImmutable(collection)) {
      if (!collection.remove) {
        throw new TypeError(
          'Cannot update immutable value without .remove() method: ' + collection
        );
      }
      return collection.remove(key);
    }
    if (!hasOwnProperty$b.call(collection, key)) {
      return collection;
    }
    var collectionCopy = shallowCopy(collection);
    if (Array.isArray(collectionCopy)) {
      collectionCopy.splice(key, 1);
    } else {
      delete collectionCopy[key];
    }
    return collectionCopy;
  }

  function set$1(collection, key, value) {
    if (!isDataStructure(collection)) {
      throw new TypeError(
        'Cannot update non-data-structure value: ' + collection
      );
    }
    if (isImmutable(collection)) {
      if (!collection.set) {
        throw new TypeError(
          'Cannot update immutable value without .set() method: ' + collection
        );
      }
      return collection.set(key, value);
    }
    if (hasOwnProperty$b.call(collection, key) && value === collection[key]) {
      return collection;
    }
    var collectionCopy = shallowCopy(collection);
    collectionCopy[key] = value;
    return collectionCopy;
  }

  function updateIn(collection, keyPath, notSetValue, updater) {
    if (!updater) {
      updater = notSetValue;
      notSetValue = undefined;
    }
    var updatedValue = updateInDeeply(
      isImmutable(collection),
      collection,
      coerceKeyPath(keyPath),
      0,
      notSetValue,
      updater
    );
    return updatedValue === NOT_SET ? notSetValue : updatedValue;
  }

  function updateInDeeply(
    inImmutable,
    existing,
    keyPath,
    i,
    notSetValue,
    updater
  ) {
    var wasNotSet = existing === NOT_SET;
    if (i === keyPath.length) {
      var existingValue = wasNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    if (!wasNotSet && !isDataStructure(existing)) {
      throw new TypeError(
        'Cannot update within non-data-structure value in path [' +
          keyPath.slice(0, i).map(quoteString) +
          ']: ' +
          existing
      );
    }
    var key = keyPath[i];
    var nextExisting = wasNotSet ? NOT_SET : get$2(existing, key, NOT_SET);
    var nextUpdated = updateInDeeply(
      nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),
      nextExisting,
      keyPath,
      i + 1,
      notSetValue,
      updater
    );
    return nextUpdated === nextExisting
      ? existing
      : nextUpdated === NOT_SET
        ? remove$2(existing, key)
        : set$1(
            wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,
            key,
            nextUpdated
          );
  }

  function setIn(collection, keyPath, value) {
    return updateIn(collection, keyPath, NOT_SET, function () { return value; });
  }

  function setIn$1(keyPath, v) {
    return setIn(this, keyPath, v);
  }

  function removeIn(collection, keyPath) {
    return updateIn(collection, keyPath, function () { return NOT_SET; });
  }

  function deleteIn(keyPath) {
    return removeIn(this, keyPath);
  }

  function update(collection, key, notSetValue, updater) {
    return updateIn(collection, [key], notSetValue, updater);
  }

  function update$1(key, notSetValue, updater) {
    return arguments.length === 1
      ? key(this)
      : update(this, key, notSetValue, updater);
  }

  function updateIn$1(keyPath, notSetValue, updater) {
    return updateIn(this, keyPath, notSetValue, updater);
  }

  function merge() {
    var iters = [], len = arguments.length;
    while ( len-- ) iters[ len ] = arguments[ len ];

    return mergeIntoKeyedWith(this, iters);
  }

  function mergeWith(merger) {
    var iters = [], len = arguments.length - 1;
    while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

    if (typeof merger !== 'function') {
      throw new TypeError('Invalid merger function: ' + merger);
    }
    return mergeIntoKeyedWith(this, iters, merger);
  }

  function mergeIntoKeyedWith(collection, collections, merger) {
    var iters = [];
    for (var ii = 0; ii < collections.length; ii++) {
      var collection$1 = KeyedCollection(collections[ii]);
      if (collection$1.size !== 0) {
        iters.push(collection$1);
      }
    }
    if (iters.length === 0) {
      return collection;
    }
    if (
      collection.toSeq().size === 0 &&
      !collection.__ownerID &&
      iters.length === 1
    ) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function (collection) {
      var mergeIntoCollection = merger
        ? function (value, key) {
            update(
              collection,
              key,
              NOT_SET,
              function (oldVal) { return (oldVal === NOT_SET ? value : merger(oldVal, value, key)); }
            );
          }
        : function (value, key) {
            collection.set(key, value);
          };
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoCollection);
      }
    });
  }

  function merge$1(collection) {
    var sources = [], len = arguments.length - 1;
    while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

    return mergeWithSources(collection, sources);
  }

  function mergeWith$1(merger, collection) {
    var sources = [], len = arguments.length - 2;
    while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];

    return mergeWithSources(collection, sources, merger);
  }

  function mergeDeep(collection) {
    var sources = [], len = arguments.length - 1;
    while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];

    return mergeDeepWithSources(collection, sources);
  }

  function mergeDeepWith(merger, collection) {
    var sources = [], len = arguments.length - 2;
    while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];

    return mergeDeepWithSources(collection, sources, merger);
  }

  function mergeDeepWithSources(collection, sources, merger) {
    return mergeWithSources(collection, sources, deepMergerWith(merger));
  }

  function mergeWithSources(collection, sources, merger) {
    if (!isDataStructure(collection)) {
      throw new TypeError(
        'Cannot merge into non-data-structure value: ' + collection
      );
    }
    if (isImmutable(collection)) {
      return typeof merger === 'function' && collection.mergeWith
        ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))
        : collection.merge
          ? collection.merge.apply(collection, sources)
          : collection.concat.apply(collection, sources);
    }
    var isArray = Array.isArray(collection);
    var merged = collection;
    var Collection$$1 = isArray ? IndexedCollection : KeyedCollection;
    var mergeItem = isArray
      ? function (value) {
          // Copy on write
          if (merged === collection) {
            merged = shallowCopy(merged);
          }
          merged.push(value);
        }
      : function (value, key) {
          var hasVal = hasOwnProperty$b.call(merged, key);
          var nextVal =
            hasVal && merger ? merger(merged[key], value, key) : value;
          if (!hasVal || nextVal !== merged[key]) {
            // Copy on write
            if (merged === collection) {
              merged = shallowCopy(merged);
            }
            merged[key] = nextVal;
          }
        };
    for (var i = 0; i < sources.length; i++) {
      Collection$$1(sources[i]).forEach(mergeItem);
    }
    return merged;
  }

  function deepMergerWith(merger) {
    function deepMerger(oldValue, newValue, key) {
      return isDataStructure(oldValue) && isDataStructure(newValue)
        ? mergeWithSources(oldValue, [newValue], deepMerger)
        : merger
          ? merger(oldValue, newValue, key)
          : newValue;
    }
    return deepMerger;
  }

  function mergeDeep$1() {
    var iters = [], len = arguments.length;
    while ( len-- ) iters[ len ] = arguments[ len ];

    return mergeDeepWithSources(this, iters);
  }

  function mergeDeepWith$1(merger) {
    var iters = [], len = arguments.length - 1;
    while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

    return mergeDeepWithSources(this, iters, merger);
  }

  function mergeIn(keyPath) {
    var iters = [], len = arguments.length - 1;
    while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

    return updateIn(this, keyPath, emptyMap(), function (m) { return mergeWithSources(m, iters); });
  }

  function mergeDeepIn(keyPath) {
    var iters = [], len = arguments.length - 1;
    while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];

    return updateIn(this, keyPath, emptyMap(), function (m) { return mergeDeepWithSources(m, iters); }
    );
  }

  function withMutations(fn) {
    var mutable = this.asMutable();
    fn(mutable);
    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
  }

  function asMutable() {
    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
  }

  function asImmutable() {
    return this.__ensureOwner();
  }

  function wasAltered() {
    return this.__altered;
  }

  var Map$2 = /*@__PURE__*/(function (KeyedCollection$$1) {
    function Map(value) {
      return value === null || value === undefined
        ? emptyMap()
        : isMap(value) && !isOrdered(value)
          ? value
          : emptyMap().withMutations(function (map) {
              var iter = KeyedCollection$$1(value);
              assertNotInfinite(iter.size);
              iter.forEach(function (v, k) { return map.set(k, v); });
            });
    }

    if ( KeyedCollection$$1 ) Map.__proto__ = KeyedCollection$$1;
    Map.prototype = Object.create( KeyedCollection$$1 && KeyedCollection$$1.prototype );
    Map.prototype.constructor = Map;

    Map.of = function of () {
      var keyValues = [], len = arguments.length;
      while ( len-- ) keyValues[ len ] = arguments[ len ];

      return emptyMap().withMutations(function (map) {
        for (var i = 0; i < keyValues.length; i += 2) {
          if (i + 1 >= keyValues.length) {
            throw new Error('Missing value for key: ' + keyValues[i]);
          }
          map.set(keyValues[i], keyValues[i + 1]);
        }
      });
    };

    Map.prototype.toString = function toString () {
      return this.__toString('Map {', '}');
    };

    // @pragma Access

    Map.prototype.get = function get (k, notSetValue) {
      return this._root
        ? this._root.get(0, undefined, k, notSetValue)
        : notSetValue;
    };

    // @pragma Modification

    Map.prototype.set = function set (k, v) {
      return updateMap(this, k, v);
    };

    Map.prototype.remove = function remove (k) {
      return updateMap(this, k, NOT_SET);
    };

    Map.prototype.deleteAll = function deleteAll (keys) {
      var collection = Collection(keys);

      if (collection.size === 0) {
        return this;
      }

      return this.withMutations(function (map) {
        collection.forEach(function (key) { return map.remove(key); });
      });
    };

    Map.prototype.clear = function clear () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._root = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyMap();
    };

    // @pragma Composition

    Map.prototype.sort = function sort (comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator));
    };

    Map.prototype.sortBy = function sortBy (mapper, comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator, mapper));
    };

    Map.prototype.map = function map (mapper, context) {
      return this.withMutations(function (map) {
        map.forEach(function (value, key) {
          map.set(key, mapper.call(context, value, key, map));
        });
      });
    };

    // @pragma Mutability

    Map.prototype.__iterator = function __iterator (type, reverse) {
      return new MapIterator(this, type, reverse);
    };

    Map.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      var iterations = 0;
      this._root &&
        this._root.iterate(function (entry) {
          iterations++;
          return fn(entry[1], entry[0], this$1$1);
        }, reverse);
      return iterations;
    };

    Map.prototype.__ensureOwner = function __ensureOwner (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        if (this.size === 0) {
          return emptyMap();
        }
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeMap(this.size, this._root, ownerID, this.__hash);
    };

    return Map;
  }(KeyedCollection));

  Map$2.isMap = isMap;

  var MapPrototype = Map$2.prototype;
  MapPrototype[IS_MAP_SYMBOL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeAll = MapPrototype.deleteAll;
  MapPrototype.setIn = setIn$1;
  MapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;
  MapPrototype.update = update$1;
  MapPrototype.updateIn = updateIn$1;
  MapPrototype.merge = MapPrototype.concat = merge;
  MapPrototype.mergeWith = mergeWith;
  MapPrototype.mergeDeep = mergeDeep$1;
  MapPrototype.mergeDeepWith = mergeDeepWith$1;
  MapPrototype.mergeIn = mergeIn;
  MapPrototype.mergeDeepIn = mergeDeepIn;
  MapPrototype.withMutations = withMutations;
  MapPrototype.wasAltered = wasAltered;
  MapPrototype.asImmutable = asImmutable;
  MapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;
  MapPrototype['@@transducer/step'] = function(result, arr) {
    return result.set(arr[0], arr[1]);
  };
  MapPrototype['@@transducer/result'] = function(obj) {
    return obj.asImmutable();
  };

  // #pragma Trie Nodes

  var ArrayMapNode = function ArrayMapNode(ownerID, entries) {
    this.ownerID = ownerID;
    this.entries = entries;
  };

  ArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  ArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;

    var entries = this.entries;
    var idx = 0;
    var len = entries.length;
    for (; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && entries.length === 1) {
      return; // undefined
    }

    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
      return createNodes(ownerID, entries, key, value);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1
          ? newEntries.pop()
          : (newEntries[idx] = newEntries.pop());
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new ArrayMapNode(ownerID, newEntries);
  };

  var BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {
    this.ownerID = ownerID;
    this.bitmap = bitmap;
    this.nodes = nodes;
  };

  BitmapIndexedNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
    var bitmap = this.bitmap;
    return (bitmap & bit) === 0
      ? notSetValue
      : this.nodes[popCount(bitmap & (bit - 1))].get(
          shift + SHIFT,
          keyHash,
          key,
          notSetValue
        );
  };

  BitmapIndexedNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var bit = 1 << keyHashFrag;
    var bitmap = this.bitmap;
    var exists = (bitmap & bit) !== 0;

    if (!exists && value === NOT_SET) {
      return this;
    }

    var idx = popCount(bitmap & (bit - 1));
    var nodes = this.nodes;
    var node = exists ? nodes[idx] : undefined;
    var newNode = updateNode(
      node,
      ownerID,
      shift + SHIFT,
      keyHash,
      key,
      value,
      didChangeSize,
      didAlter
    );

    if (newNode === node) {
      return this;
    }

    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
    }

    if (
      exists &&
      !newNode &&
      nodes.length === 2 &&
      isLeafNode(nodes[idx ^ 1])
    ) {
      return nodes[idx ^ 1];
    }

    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
      return newNode;
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;
    var newNodes = exists
      ? newNode
        ? setAt(nodes, idx, newNode, isEditable)
        : spliceOut(nodes, idx, isEditable)
      : spliceIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.bitmap = newBitmap;
      this.nodes = newNodes;
      return this;
    }

    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
  };

  var HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {
    this.ownerID = ownerID;
    this.count = count;
    this.nodes = nodes;
  };

  HashArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var node = this.nodes[idx];
    return node
      ? node.get(shift + SHIFT, keyHash, key, notSetValue)
      : notSetValue;
  };

  HashArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var removed = value === NOT_SET;
    var nodes = this.nodes;
    var node = nodes[idx];

    if (removed && !node) {
      return this;
    }

    var newNode = updateNode(
      node,
      ownerID,
      shift + SHIFT,
      keyHash,
      key,
      value,
      didChangeSize,
      didAlter
    );
    if (newNode === node) {
      return this;
    }

    var newCount = this.count;
    if (!node) {
      newCount++;
    } else if (!newNode) {
      newCount--;
      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
        return packNodes(ownerID, nodes, newCount, idx);
      }
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newNodes = setAt(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.count = newCount;
      this.nodes = newNodes;
      return this;
    }

    return new HashArrayMapNode(ownerID, newCount, newNodes);
  };

  var HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entries = entries;
  };

  HashCollisionNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  HashCollisionNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }

    var removed = value === NOT_SET;

    if (keyHash !== this.keyHash) {
      if (removed) {
        return this;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
    }

    var entries = this.entries;
    var idx = 0;
    var len = entries.length;
    for (; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && len === 2) {
      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1
          ? newEntries.pop()
          : (newEntries[idx] = newEntries.pop());
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new HashCollisionNode(ownerID, this.keyHash, newEntries);
  };

  var ValueNode = function ValueNode(ownerID, keyHash, entry) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entry = entry;
  };

  ValueNode.prototype.get = function get (shift, keyHash, key, notSetValue) {
    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
  };

  ValueNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;
    var keyMatch = is(key, this.entry[0]);
    if (keyMatch ? value === this.entry[1] : removed) {
      return this;
    }

    SetRef(didAlter);

    if (removed) {
      SetRef(didChangeSize);
      return; // undefined
    }

    if (keyMatch) {
      if (ownerID && ownerID === this.ownerID) {
        this.entry[1] = value;
        return this;
      }
      return new ValueNode(ownerID, this.keyHash, [key, value]);
    }

    SetRef(didChangeSize);
    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
  };

  // #pragma Iterators

  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(
    fn,
    reverse
  ) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  };

  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(
    fn,
    reverse
  ) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  };

  // eslint-disable-next-line no-unused-vars
  ValueNode.prototype.iterate = function(fn, reverse) {
    return fn(this.entry);
  };

  var MapIterator = /*@__PURE__*/(function (Iterator$$1) {
    function MapIterator(map, type, reverse) {
      this._type = type;
      this._reverse = reverse;
      this._stack = map._root && mapIteratorFrame(map._root);
    }

    if ( Iterator$$1 ) MapIterator.__proto__ = Iterator$$1;
    MapIterator.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );
    MapIterator.prototype.constructor = MapIterator;

    MapIterator.prototype.next = function next () {
      var type = this._type;
      var stack = this._stack;
      while (stack) {
        var node = stack.node;
        var index = stack.index++;
        var maxIndex = (void 0);
        if (node.entry) {
          if (index === 0) {
            return mapIteratorValue(type, node.entry);
          }
        } else if (node.entries) {
          maxIndex = node.entries.length - 1;
          if (index <= maxIndex) {
            return mapIteratorValue(
              type,
              node.entries[this._reverse ? maxIndex - index : index]
            );
          }
        } else {
          maxIndex = node.nodes.length - 1;
          if (index <= maxIndex) {
            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
            if (subNode) {
              if (subNode.entry) {
                return mapIteratorValue(type, subNode.entry);
              }
              stack = this._stack = mapIteratorFrame(subNode, stack);
            }
            continue;
          }
        }
        stack = this._stack = this._stack.__prev;
      }
      return iteratorDone();
    };

    return MapIterator;
  }(Iterator));

  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev,
    };
  }

  function makeMap(size, root, ownerID, hash$$1) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash$$1;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef();
      var didAlter = MakeRef();
      newRoot = updateNode(
        map._root,
        map.__ownerID,
        0,
        undefined,
        k,
        v,
        didChangeSize,
        didAlter
      );
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(
    node,
    ownerID,
    shift,
    keyHash,
    key,
    value,
    didChangeSize,
    didAlter
  ) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(
      ownerID,
      shift,
      keyHash,
      key,
      value,
      didChangeSize,
      didAlter
    );
  }

  function isLeafNode(node) {
    return (
      node.constructor === ValueNode || node.constructor === HashCollisionNode
    );
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes =
      idx1 === idx2
        ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]
        : ((newNode = new ValueNode(ownerID, keyHash, entry)),
          idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function popCount(x) {
    x -= (x >> 1) & 0x55555555;
    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
    x = (x + (x >> 4)) & 0x0f0f0f0f;
    x += x >> 8;
    x += x >> 16;
    return x & 0x7f;
  }

  function setAt(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  var IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';

  function isList(maybeList) {
    return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);
  }

  var List$1 = /*@__PURE__*/(function (IndexedCollection$$1) {
    function List(value) {
      var empty = emptyList();
      if (value === null || value === undefined) {
        return empty;
      }
      if (isList(value)) {
        return value;
      }
      var iter = IndexedCollection$$1(value);
      var size = iter.size;
      if (size === 0) {
        return empty;
      }
      assertNotInfinite(size);
      if (size > 0 && size < SIZE) {
        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
      }
      return empty.withMutations(function (list) {
        list.setSize(size);
        iter.forEach(function (v, i) { return list.set(i, v); });
      });
    }

    if ( IndexedCollection$$1 ) List.__proto__ = IndexedCollection$$1;
    List.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );
    List.prototype.constructor = List;

    List.of = function of (/*...values*/) {
      return this(arguments);
    };

    List.prototype.toString = function toString () {
      return this.__toString('List [', ']');
    };

    // @pragma Access

    List.prototype.get = function get (index, notSetValue) {
      index = wrapIndex(this, index);
      if (index >= 0 && index < this.size) {
        index += this._origin;
        var node = listNodeFor(this, index);
        return node && node.array[index & MASK];
      }
      return notSetValue;
    };

    // @pragma Modification

    List.prototype.set = function set (index, value) {
      return updateList(this, index, value);
    };

    List.prototype.remove = function remove (index) {
      return !this.has(index)
        ? this
        : index === 0
          ? this.shift()
          : index === this.size - 1
            ? this.pop()
            : this.splice(index, 1);
    };

    List.prototype.insert = function insert (index, value) {
      return this.splice(index, 0, value);
    };

    List.prototype.clear = function clear () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = this._origin = this._capacity = 0;
        this._level = SHIFT;
        this._root = this._tail = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyList();
    };

    List.prototype.push = function push (/*...values*/) {
      var values = arguments;
      var oldSize = this.size;
      return this.withMutations(function (list) {
        setListBounds(list, 0, oldSize + values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(oldSize + ii, values[ii]);
        }
      });
    };

    List.prototype.pop = function pop () {
      return setListBounds(this, 0, -1);
    };

    List.prototype.unshift = function unshift (/*...values*/) {
      var values = arguments;
      return this.withMutations(function (list) {
        setListBounds(list, -values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(ii, values[ii]);
        }
      });
    };

    List.prototype.shift = function shift () {
      return setListBounds(this, 1);
    };

    // @pragma Composition

    List.prototype.concat = function concat (/*...collections*/) {
      var arguments$1 = arguments;

      var seqs = [];
      for (var i = 0; i < arguments.length; i++) {
        var argument = arguments$1[i];
        var seq = IndexedCollection$$1(
          typeof argument !== 'string' && hasIterator(argument)
            ? argument
            : [argument]
        );
        if (seq.size !== 0) {
          seqs.push(seq);
        }
      }
      if (seqs.length === 0) {
        return this;
      }
      if (this.size === 0 && !this.__ownerID && seqs.length === 1) {
        return this.constructor(seqs[0]);
      }
      return this.withMutations(function (list) {
        seqs.forEach(function (seq) { return seq.forEach(function (value) { return list.push(value); }); });
      });
    };

    List.prototype.setSize = function setSize (size) {
      return setListBounds(this, 0, size);
    };

    List.prototype.map = function map (mapper, context) {
      var this$1$1 = this;

      return this.withMutations(function (list) {
        for (var i = 0; i < this$1$1.size; i++) {
          list.set(i, mapper.call(context, list.get(i), i, list));
        }
      });
    };

    // @pragma Iteration

    List.prototype.slice = function slice (begin, end) {
      var size = this.size;
      if (wholeSlice(begin, end, size)) {
        return this;
      }
      return setListBounds(
        this,
        resolveBegin(begin, size),
        resolveEnd(end, size)
      );
    };

    List.prototype.__iterator = function __iterator (type, reverse) {
      var index = reverse ? this.size : 0;
      var values = iterateList(this, reverse);
      return new Iterator(function () {
        var value = values();
        return value === DONE
          ? iteratorDone()
          : iteratorValue(type, reverse ? --index : index++, value);
      });
    };

    List.prototype.__iterate = function __iterate (fn, reverse) {
      var index = reverse ? this.size : 0;
      var values = iterateList(this, reverse);
      var value;
      while ((value = values()) !== DONE) {
        if (fn(value, reverse ? --index : index++, this) === false) {
          break;
        }
      }
      return index;
    };

    List.prototype.__ensureOwner = function __ensureOwner (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        if (this.size === 0) {
          return emptyList();
        }
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeList(
        this._origin,
        this._capacity,
        this._level,
        this._root,
        this._tail,
        ownerID,
        this.__hash
      );
    };

    return List;
  }(IndexedCollection));

  List$1.isList = isList;

  var ListPrototype = List$1.prototype;
  ListPrototype[IS_LIST_SYMBOL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.merge = ListPrototype.concat;
  ListPrototype.setIn = setIn$1;
  ListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;
  ListPrototype.update = update$1;
  ListPrototype.updateIn = updateIn$1;
  ListPrototype.mergeIn = mergeIn;
  ListPrototype.mergeDeepIn = mergeDeepIn;
  ListPrototype.withMutations = withMutations;
  ListPrototype.wasAltered = wasAltered;
  ListPrototype.asImmutable = asImmutable;
  ListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;
  ListPrototype['@@transducer/step'] = function(result, arr) {
    return result.push(arr);
  };
  ListPrototype['@@transducer/result'] = function(obj) {
    return obj.asImmutable();
  };

  var VNode = function VNode(array, ownerID) {
    this.array = array;
    this.ownerID = ownerID;
  };

  // TODO: seems like these methods are very similar

  VNode.prototype.removeBefore = function removeBefore (ownerID, level, index) {
    if (index === level ? 1 << level : this.array.length === 0) {
      return this;
    }
    var originIndex = (index >>> level) & MASK;
    if (originIndex >= this.array.length) {
      return new VNode([], ownerID);
    }
    var removingFirst = originIndex === 0;
    var newChild;
    if (level > 0) {
      var oldChild = this.array[originIndex];
      newChild =
        oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
      if (newChild === oldChild && removingFirst) {
        return this;
      }
    }
    if (removingFirst && !newChild) {
      return this;
    }
    var editable = editableVNode(this, ownerID);
    if (!removingFirst) {
      for (var ii = 0; ii < originIndex; ii++) {
        editable.array[ii] = undefined;
      }
    }
    if (newChild) {
      editable.array[originIndex] = newChild;
    }
    return editable;
  };

  VNode.prototype.removeAfter = function removeAfter (ownerID, level, index) {
    if (index === (level ? 1 << level : 0) || this.array.length === 0) {
      return this;
    }
    var sizeIndex = ((index - 1) >>> level) & MASK;
    if (sizeIndex >= this.array.length) {
      return this;
    }

    var newChild;
    if (level > 0) {
      var oldChild = this.array[sizeIndex];
      newChild =
        oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
      if (newChild === oldChild && sizeIndex === this.array.length - 1) {
        return this;
      }
    }

    var editable = editableVNode(this, ownerID);
    editable.array.splice(sizeIndex + 1);
    if (newChild) {
      editable.array[sizeIndex] = newChild;
    }
    return editable;
  };

  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0
        ? iterateLeaf(node, offset)
        : iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : (left - offset) >> level;
      var to = ((right - offset) >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        while (true) {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(
            array && array[idx],
            level - SHIFT,
            offset + (idx << level)
          );
        }
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function (list) {
        index < 0
          ? setListBounds(list, index).set(0, value)
          : setListBounds(list, 0, index + 1).set(index, value);
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef();
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(
        newRoot,
        list.__ownerID,
        list._level,
        index,
        value,
        didAlter
      );
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = (index >>> level) & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(
        lowerNode,
        ownerID,
        level - SHIFT,
        index,
        value,
        didAlter
      );
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    if (didAlter) {
      SetRef(didAlter);
    }

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << (list._level + SHIFT)) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[(rawIndex >>> level) & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    // Sanitize begin & end using this shorthand for ToInt32(argument)
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
    if (begin !== undefined) {
      begin |= 0;
    }
    if (end !== undefined) {
      end |= 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity =
      end === undefined
        ? oldCapacity
        : end < 0
          ? oldCapacity + end
          : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    // If it's going to end after it starts, it's empty.
    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    // New origin might need creating a higher root.
    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(
        newRoot && newRoot.array.length ? [undefined, newRoot] : [],
        owner
      );
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    // New size might need creating a higher root.
    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
      newRoot = new VNode(
        newRoot && newRoot.array.length ? [newRoot] : [],
        owner
      );
      newLevel += SHIFT;
    }

    // Locate or create the new tail.
    var oldTail = list._tail;
    var newTail =
      newTailOffset < oldTailOffset
        ? listNodeFor(list, newCapacity - 1)
        : newTailOffset > oldTailOffset
          ? new VNode([], owner)
          : oldTail;

    // Merge Tail into tree.
    if (
      oldTail &&
      newTailOffset > oldTailOffset &&
      newOrigin < oldCapacity &&
      oldTail.array.length
    ) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = (oldTailOffset >>> level) & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
    }

    // If the size has been reduced, there's a chance the tail needs to be trimmed.
    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    // If the new origin is within the tail, then we do not need a root.
    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

      // Otherwise, if the root has been trimmed, garbage collect.
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      // Identify the new top root node of the subtree of the old root.
      while (newRoot) {
        var beginIndex = (newOrigin >>> newLevel) & MASK;
        if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      // Trim the new sides of the new root.
      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(
          owner,
          newLevel,
          newTailOffset - offsetShift
        );
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;
  }

  var OrderedMap = /*@__PURE__*/(function (Map$$1) {
    function OrderedMap(value) {
      return value === null || value === undefined
        ? emptyOrderedMap()
        : isOrderedMap(value)
          ? value
          : emptyOrderedMap().withMutations(function (map) {
              var iter = KeyedCollection(value);
              assertNotInfinite(iter.size);
              iter.forEach(function (v, k) { return map.set(k, v); });
            });
    }

    if ( Map$$1 ) OrderedMap.__proto__ = Map$$1;
    OrderedMap.prototype = Object.create( Map$$1 && Map$$1.prototype );
    OrderedMap.prototype.constructor = OrderedMap;

    OrderedMap.of = function of (/*...values*/) {
      return this(arguments);
    };

    OrderedMap.prototype.toString = function toString () {
      return this.__toString('OrderedMap {', '}');
    };

    // @pragma Access

    OrderedMap.prototype.get = function get (k, notSetValue) {
      var index = this._map.get(k);
      return index !== undefined ? this._list.get(index)[1] : notSetValue;
    };

    // @pragma Modification

    OrderedMap.prototype.clear = function clear () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._map.clear();
        this._list.clear();
        return this;
      }
      return emptyOrderedMap();
    };

    OrderedMap.prototype.set = function set (k, v) {
      return updateOrderedMap(this, k, v);
    };

    OrderedMap.prototype.remove = function remove (k) {
      return updateOrderedMap(this, k, NOT_SET);
    };

    OrderedMap.prototype.wasAltered = function wasAltered () {
      return this._map.wasAltered() || this._list.wasAltered();
    };

    OrderedMap.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      return this._list.__iterate(
        function (entry) { return entry && fn(entry[1], entry[0], this$1$1); },
        reverse
      );
    };

    OrderedMap.prototype.__iterator = function __iterator (type, reverse) {
      return this._list.fromEntrySeq().__iterator(type, reverse);
    };

    OrderedMap.prototype.__ensureOwner = function __ensureOwner (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      var newList = this._list.__ensureOwner(ownerID);
      if (!ownerID) {
        if (this.size === 0) {
          return emptyOrderedMap();
        }
        this.__ownerID = ownerID;
        this._map = newMap;
        this._list = newList;
        return this;
      }
      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
    };

    return OrderedMap;
  }(Map$2));

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SYMBOL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return (
      EMPTY_ORDERED_MAP ||
      (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))
    );
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) {
      // removed
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function (entry, idx) { return entry !== undefined && i !== idx; });
        newMap = newList
          .toKeyedSeq()
          .map(function (entry) { return entry[0]; })
          .flip()
          .toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else if (has) {
      if (v === list.get(i)[1]) {
        return omap;
      }
      newMap = map;
      newList = list.set(i, [k, v]);
    } else {
      newMap = map.set(k, list.size);
      newList = list.set(list.size, [k, v]);
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  var IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';

  function isStack(maybeStack) {
    return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);
  }

  var Stack$1 = /*@__PURE__*/(function (IndexedCollection$$1) {
    function Stack(value) {
      return value === null || value === undefined
        ? emptyStack()
        : isStack(value)
          ? value
          : emptyStack().pushAll(value);
    }

    if ( IndexedCollection$$1 ) Stack.__proto__ = IndexedCollection$$1;
    Stack.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );
    Stack.prototype.constructor = Stack;

    Stack.of = function of (/*...values*/) {
      return this(arguments);
    };

    Stack.prototype.toString = function toString () {
      return this.__toString('Stack [', ']');
    };

    // @pragma Access

    Stack.prototype.get = function get (index, notSetValue) {
      var head = this._head;
      index = wrapIndex(this, index);
      while (head && index--) {
        head = head.next;
      }
      return head ? head.value : notSetValue;
    };

    Stack.prototype.peek = function peek () {
      return this._head && this._head.value;
    };

    // @pragma Modification

    Stack.prototype.push = function push (/*...values*/) {
      var arguments$1 = arguments;

      if (arguments.length === 0) {
        return this;
      }
      var newSize = this.size + arguments.length;
      var head = this._head;
      for (var ii = arguments.length - 1; ii >= 0; ii--) {
        head = {
          value: arguments$1[ii],
          next: head,
        };
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pushAll = function pushAll (iter) {
      iter = IndexedCollection$$1(iter);
      if (iter.size === 0) {
        return this;
      }
      if (this.size === 0 && isStack(iter)) {
        return iter;
      }
      assertNotInfinite(iter.size);
      var newSize = this.size;
      var head = this._head;
      iter.__iterate(function (value) {
        newSize++;
        head = {
          value: value,
          next: head,
        };
      }, /* reverse */ true);
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pop = function pop () {
      return this.slice(1);
    };

    Stack.prototype.clear = function clear () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._head = undefined;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyStack();
    };

    Stack.prototype.slice = function slice (begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      var resolvedBegin = resolveBegin(begin, this.size);
      var resolvedEnd = resolveEnd(end, this.size);
      if (resolvedEnd !== this.size) {
        // super.slice(begin, end);
        return IndexedCollection$$1.prototype.slice.call(this, begin, end);
      }
      var newSize = this.size - resolvedBegin;
      var head = this._head;
      while (resolvedBegin--) {
        head = head.next;
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    // @pragma Mutability

    Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        if (this.size === 0) {
          return emptyStack();
        }
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeStack(this.size, this._head, ownerID, this.__hash);
    };

    // @pragma Iteration

    Stack.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      if (reverse) {
        return new ArraySeq(this.toArray()).__iterate(
          function (v, k) { return fn(v, k, this$1$1); },
          reverse
        );
      }
      var iterations = 0;
      var node = this._head;
      while (node) {
        if (fn(node.value, iterations++, this) === false) {
          break;
        }
        node = node.next;
      }
      return iterations;
    };

    Stack.prototype.__iterator = function __iterator (type, reverse) {
      if (reverse) {
        return new ArraySeq(this.toArray()).__iterator(type, reverse);
      }
      var iterations = 0;
      var node = this._head;
      return new Iterator(function () {
        if (node) {
          var value = node.value;
          node = node.next;
          return iteratorValue(type, iterations++, value);
        }
        return iteratorDone();
      });
    };

    return Stack;
  }(IndexedCollection));

  Stack$1.isStack = isStack;

  var StackPrototype = Stack$1.prototype;
  StackPrototype[IS_STACK_SYMBOL] = true;
  StackPrototype.shift = StackPrototype.pop;
  StackPrototype.unshift = StackPrototype.push;
  StackPrototype.unshiftAll = StackPrototype.pushAll;
  StackPrototype.withMutations = withMutations;
  StackPrototype.wasAltered = wasAltered;
  StackPrototype.asImmutable = asImmutable;
  StackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;
  StackPrototype['@@transducer/step'] = function(result, arr) {
    return result.unshift(arr);
  };
  StackPrototype['@@transducer/result'] = function(obj) {
    return obj.asImmutable();
  };

  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  var IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';

  function isSet(maybeSet) {
    return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);
  }

  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (
      !isCollection(b) ||
      (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||
      (a.__hash !== undefined &&
        b.__hash !== undefined &&
        a.__hash !== b.__hash) ||
      isKeyed(a) !== isKeyed(b) ||
      isIndexed(a) !== isIndexed(b) ||
      isOrdered(a) !== isOrdered(b)
    ) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return (
        b.every(function (v, k) {
          var entry = entries.next().value;
          return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
        }) && entries.next().done
      );
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function (v, k) {
      if (
        notAssociative
          ? !a.has(v)
          : flipped
            ? !is(v, a.get(k, NOT_SET))
            : !is(a.get(k, NOT_SET), v)
      ) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  /**
   * Contributes additional methods to a constructor
   */
  function mixin(ctor, methods) {
    var keyCopier = function (key) {
      ctor.prototype[key] = methods[key];
    };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols &&
      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  function toJS(value) {
    if (!value || typeof value !== 'object') {
      return value;
    }
    if (!isCollection(value)) {
      if (!isDataStructure(value)) {
        return value;
      }
      value = Seq(value);
    }
    if (isKeyed(value)) {
      var result$1 = {};
      value.__iterate(function (v, k) {
        result$1[k] = toJS(v);
      });
      return result$1;
    }
    var result = [];
    value.__iterate(function (v) {
      result.push(toJS(v));
    });
    return result;
  }

  var Set$1 = /*@__PURE__*/(function (SetCollection$$1) {
    function Set(value) {
      return value === null || value === undefined
        ? emptySet()
        : isSet(value) && !isOrdered(value)
          ? value
          : emptySet().withMutations(function (set) {
              var iter = SetCollection$$1(value);
              assertNotInfinite(iter.size);
              iter.forEach(function (v) { return set.add(v); });
            });
    }

    if ( SetCollection$$1 ) Set.__proto__ = SetCollection$$1;
    Set.prototype = Object.create( SetCollection$$1 && SetCollection$$1.prototype );
    Set.prototype.constructor = Set;

    Set.of = function of (/*...values*/) {
      return this(arguments);
    };

    Set.fromKeys = function fromKeys (value) {
      return this(KeyedCollection(value).keySeq());
    };

    Set.intersect = function intersect (sets) {
      sets = Collection(sets).toArray();
      return sets.length
        ? SetPrototype.intersect.apply(Set(sets.pop()), sets)
        : emptySet();
    };

    Set.union = function union (sets) {
      sets = Collection(sets).toArray();
      return sets.length
        ? SetPrototype.union.apply(Set(sets.pop()), sets)
        : emptySet();
    };

    Set.prototype.toString = function toString () {
      return this.__toString('Set {', '}');
    };

    // @pragma Access

    Set.prototype.has = function has (value) {
      return this._map.has(value);
    };

    // @pragma Modification

    Set.prototype.add = function add (value) {
      return updateSet(this, this._map.set(value, value));
    };

    Set.prototype.remove = function remove (value) {
      return updateSet(this, this._map.remove(value));
    };

    Set.prototype.clear = function clear () {
      return updateSet(this, this._map.clear());
    };

    // @pragma Composition

    Set.prototype.map = function map (mapper, context) {
      var this$1$1 = this;

      var removes = [];
      var adds = [];
      this.forEach(function (value) {
        var mapped = mapper.call(context, value, value, this$1$1);
        if (mapped !== value) {
          removes.push(value);
          adds.push(mapped);
        }
      });
      return this.withMutations(function (set) {
        removes.forEach(function (value) { return set.remove(value); });
        adds.forEach(function (value) { return set.add(value); });
      });
    };

    Set.prototype.union = function union () {
      var iters = [], len = arguments.length;
      while ( len-- ) iters[ len ] = arguments[ len ];

      iters = iters.filter(function (x) { return x.size !== 0; });
      if (iters.length === 0) {
        return this;
      }
      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
        return this.constructor(iters[0]);
      }
      return this.withMutations(function (set) {
        for (var ii = 0; ii < iters.length; ii++) {
          SetCollection$$1(iters[ii]).forEach(function (value) { return set.add(value); });
        }
      });
    };

    Set.prototype.intersect = function intersect () {
      var iters = [], len = arguments.length;
      while ( len-- ) iters[ len ] = arguments[ len ];

      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function (iter) { return SetCollection$$1(iter); });
      var toRemove = [];
      this.forEach(function (value) {
        if (!iters.every(function (iter) { return iter.includes(value); })) {
          toRemove.push(value);
        }
      });
      return this.withMutations(function (set) {
        toRemove.forEach(function (value) {
          set.remove(value);
        });
      });
    };

    Set.prototype.subtract = function subtract () {
      var iters = [], len = arguments.length;
      while ( len-- ) iters[ len ] = arguments[ len ];

      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function (iter) { return SetCollection$$1(iter); });
      var toRemove = [];
      this.forEach(function (value) {
        if (iters.some(function (iter) { return iter.includes(value); })) {
          toRemove.push(value);
        }
      });
      return this.withMutations(function (set) {
        toRemove.forEach(function (value) {
          set.remove(value);
        });
      });
    };

    Set.prototype.sort = function sort (comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator));
    };

    Set.prototype.sortBy = function sortBy (mapper, comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator, mapper));
    };

    Set.prototype.wasAltered = function wasAltered () {
      return this._map.wasAltered();
    };

    Set.prototype.__iterate = function __iterate (fn, reverse) {
      var this$1$1 = this;

      return this._map.__iterate(function (k) { return fn(k, k, this$1$1); }, reverse);
    };

    Set.prototype.__iterator = function __iterator (type, reverse) {
      return this._map.__iterator(type, reverse);
    };

    Set.prototype.__ensureOwner = function __ensureOwner (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        if (this.size === 0) {
          return this.__empty();
        }
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return this.__make(newMap, ownerID);
    };

    return Set;
  }(SetCollection));

  Set$1.isSet = isSet;

  var SetPrototype = Set$1.prototype;
  SetPrototype[IS_SET_SYMBOL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.merge = SetPrototype.concat = SetPrototype.union;
  SetPrototype.withMutations = withMutations;
  SetPrototype.asImmutable = asImmutable;
  SetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;
  SetPrototype['@@transducer/step'] = function(result, arr) {
    return result.add(arr);
  };
  SetPrototype['@@transducer/result'] = function(obj) {
    return obj.asImmutable();
  };

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map
      ? set
      : newMap.size === 0
        ? set.__empty()
        : set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  /**
   * Returns a lazy seq of nums from start (inclusive) to end
   * (exclusive), by step, where start defaults to 0, step to 1, and end to
   * infinity. When start is equal to end, returns empty list.
   */
  var Range = /*@__PURE__*/(function (IndexedSeq$$1) {
    function Range(start, end, step) {
      if (!(this instanceof Range)) {
        return new Range(start, end, step);
      }
      invariant(step !== 0, 'Cannot step a Range by 0');
      start = start || 0;
      if (end === undefined) {
        end = Infinity;
      }
      step = step === undefined ? 1 : Math.abs(step);
      if (end < start) {
        step = -step;
      }
      this._start = start;
      this._end = end;
      this._step = step;
      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
      if (this.size === 0) {
        if (EMPTY_RANGE) {
          return EMPTY_RANGE;
        }
        EMPTY_RANGE = this;
      }
    }

    if ( IndexedSeq$$1 ) Range.__proto__ = IndexedSeq$$1;
    Range.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );
    Range.prototype.constructor = Range;

    Range.prototype.toString = function toString () {
      if (this.size === 0) {
        return 'Range []';
      }
      return (
        'Range [ ' +
        this._start +
        '...' +
        this._end +
        (this._step !== 1 ? ' by ' + this._step : '') +
        ' ]'
      );
    };

    Range.prototype.get = function get (index, notSetValue) {
      return this.has(index)
        ? this._start + wrapIndex(this, index) * this._step
        : notSetValue;
    };

    Range.prototype.includes = function includes (searchValue) {
      var possibleIndex = (searchValue - this._start) / this._step;
      return (
        possibleIndex >= 0 &&
        possibleIndex < this.size &&
        possibleIndex === Math.floor(possibleIndex)
      );
    };

    Range.prototype.slice = function slice (begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      begin = resolveBegin(begin, this.size);
      end = resolveEnd(end, this.size);
      if (end <= begin) {
        return new Range(0, 0);
      }
      return new Range(
        this.get(begin, this._end),
        this.get(end, this._end),
        this._step
      );
    };

    Range.prototype.indexOf = function indexOf (searchValue) {
      var offsetValue = searchValue - this._start;
      if (offsetValue % this._step === 0) {
        var index = offsetValue / this._step;
        if (index >= 0 && index < this.size) {
          return index;
        }
      }
      return -1;
    };

    Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {
      return this.indexOf(searchValue);
    };

    Range.prototype.__iterate = function __iterate (fn, reverse) {
      var size = this.size;
      var step = this._step;
      var value = reverse ? this._start + (size - 1) * step : this._start;
      var i = 0;
      while (i !== size) {
        if (fn(value, reverse ? size - ++i : i++, this) === false) {
          break;
        }
        value += reverse ? -step : step;
      }
      return i;
    };

    Range.prototype.__iterator = function __iterator (type, reverse) {
      var size = this.size;
      var step = this._step;
      var value = reverse ? this._start + (size - 1) * step : this._start;
      var i = 0;
      return new Iterator(function () {
        if (i === size) {
          return iteratorDone();
        }
        var v = value;
        value += reverse ? -step : step;
        return iteratorValue(type, reverse ? size - ++i : i++, v);
      });
    };

    Range.prototype.equals = function equals (other) {
      return other instanceof Range
        ? this._start === other._start &&
            this._end === other._end &&
            this._step === other._step
        : deepEqual(this, other);
    };

    return Range;
  }(IndexedSeq));

  var EMPTY_RANGE;

  function getIn(collection, searchKeyPath, notSetValue) {
    var keyPath = coerceKeyPath(searchKeyPath);
    var i = 0;
    while (i !== keyPath.length) {
      collection = get$2(collection, keyPath[i++], NOT_SET);
      if (collection === NOT_SET) {
        return notSetValue;
      }
    }
    return collection;
  }

  function getIn$1(searchKeyPath, notSetValue) {
    return getIn(this, searchKeyPath, notSetValue);
  }

  function hasIn$1(collection, keyPath) {
    return getIn(collection, keyPath, NOT_SET) !== NOT_SET;
  }

  function hasIn$1$1(searchKeyPath) {
    return hasIn$1(this, searchKeyPath);
  }

  function toObject$1() {
    assertNotInfinite(this.size);
    var object = {};
    this.__iterate(function (v, k) {
      object[k] = v;
    });
    return object;
  }

  // Note: all of these methods are deprecated.
  Collection.isIterable = isCollection;
  Collection.isKeyed = isKeyed;
  Collection.isIndexed = isIndexed;
  Collection.isAssociative = isAssociative;
  Collection.isOrdered = isOrdered;

  Collection.Iterator = Iterator;

  mixin(Collection, {
    // ### Conversion to other types

    toArray: function toArray() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      var useTuples = isKeyed(this);
      var i = 0;
      this.__iterate(function (v, k) {
        // Keyed collections produce an array of tuples.
        array[i++] = useTuples ? [k, v] : v;
      });
      return array;
    },

    toIndexedSeq: function toIndexedSeq() {
      return new ToIndexedSequence(this);
    },

    toJS: function toJS$1() {
      return toJS(this);
    },

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function toMap() {
      // Use Late Binding here to solve the circular dependency.
      return Map$2(this.toKeyedSeq());
    },

    toObject: toObject$1,

    toOrderedMap: function toOrderedMap() {
      // Use Late Binding here to solve the circular dependency.
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function toOrderedSet() {
      // Use Late Binding here to solve the circular dependency.
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function toSet() {
      // Use Late Binding here to solve the circular dependency.
      return Set$1(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function toSetSeq() {
      return new ToSetSequence(this);
    },

    toSeq: function toSeq() {
      return isIndexed(this)
        ? this.toIndexedSeq()
        : isKeyed(this)
          ? this.toKeyedSeq()
          : this.toSetSeq();
    },

    toStack: function toStack() {
      // Use Late Binding here to solve the circular dependency.
      return Stack$1(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function toList() {
      // Use Late Binding here to solve the circular dependency.
      return List$1(isKeyed(this) ? this.valueSeq() : this);
    },

    // ### Common JavaScript methods and properties

    toString: function toString() {
      return '[Collection]';
    },

    __toString: function __toString(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return (
        head +
        ' ' +
        this.toSeq()
          .map(this.__toStringMapper)
          .join(', ') +
        ' ' +
        tail
      );
    },

    // ### ES6 Collection methods (ES6 Array and Map)

    concat: function concat() {
      var values = [], len = arguments.length;
      while ( len-- ) values[ len ] = arguments[ len ];

      return reify(this, concatFactory(this, values));
    },

    includes: function includes(searchValue) {
      return this.some(function (value) { return is(value, searchValue); });
    },

    entries: function entries() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function every(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function (v, k, c) {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function find(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    forEach: function forEach(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function join(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function (v) {
        isFirst ? (isFirst = false) : (joined += separator);
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function keys() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function map(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function reduce$1(reducer, initialReduction, context) {
      return reduce(
        this,
        reducer,
        initialReduction,
        context,
        arguments.length < 2,
        false
      );
    },

    reduceRight: function reduceRight(reducer, initialReduction, context) {
      return reduce(
        this,
        reducer,
        initialReduction,
        context,
        arguments.length < 2,
        true
      );
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function some(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function sort(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function values() {
      return this.__iterator(ITERATE_VALUES);
    },

    // ### More sequential methods

    butLast: function butLast() {
      return this.slice(0, -1);
    },

    isEmpty: function isEmpty() {
      return this.size !== undefined ? this.size === 0 : !this.some(function () { return true; });
    },

    count: function count(predicate, context) {
      return ensureSize(
        predicate ? this.toSeq().filter(predicate, context) : this
      );
    },

    countBy: function countBy(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function equals(other) {
      return deepEqual(this, other);
    },

    entrySeq: function entrySeq() {
      var collection = this;
      if (collection._cache) {
        // We cache as an entries array, so we can just return the cache!
        return new ArraySeq(collection._cache);
      }
      var entriesSequence = collection
        .toSeq()
        .map(entryMapper)
        .toIndexedSeq();
      entriesSequence.fromEntrySeq = function () { return collection.toSeq(); };
      return entriesSequence;
    },

    filterNot: function filterNot(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findEntry: function findEntry(predicate, context, notSetValue) {
      var found = notSetValue;
      this.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findKey: function findKey(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLast: function findLast(predicate, context, notSetValue) {
      return this.toKeyedSeq()
        .reverse()
        .find(predicate, context, notSetValue);
    },

    findLastEntry: function findLastEntry(predicate, context, notSetValue) {
      return this.toKeyedSeq()
        .reverse()
        .findEntry(predicate, context, notSetValue);
    },

    findLastKey: function findLastKey(predicate, context) {
      return this.toKeyedSeq()
        .reverse()
        .findKey(predicate, context);
    },

    first: function first(notSetValue) {
      return this.find(returnTrue, null, notSetValue);
    },

    flatMap: function flatMap(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function fromEntrySeq() {
      return new FromEntriesSequence(this);
    },

    get: function get(searchKey, notSetValue) {
      return this.find(function (_, key) { return is(key, searchKey); }, undefined, notSetValue);
    },

    getIn: getIn$1,

    groupBy: function groupBy(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function has(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: hasIn$1$1,

    isSubset: function isSubset(iter) {
      iter = typeof iter.includes === 'function' ? iter : Collection(iter);
      return this.every(function (value) { return iter.includes(value); });
    },

    isSuperset: function isSuperset(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);
      return iter.isSubset(this);
    },

    keyOf: function keyOf(searchValue) {
      return this.findKey(function (value) { return is(value, searchValue); });
    },

    keySeq: function keySeq() {
      return this.toSeq()
        .map(keyMapper)
        .toIndexedSeq();
    },

    last: function last(notSetValue) {
      return this.toSeq()
        .reverse()
        .first(notSetValue);
    },

    lastKeyOf: function lastKeyOf(searchValue) {
      return this.toKeyedSeq()
        .reverse()
        .keyOf(searchValue);
    },

    max: function max(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function maxBy(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function min(comparator) {
      return maxFactory(
        this,
        comparator ? neg(comparator) : defaultNegComparator
      );
    },

    minBy: function minBy(mapper, comparator) {
      return maxFactory(
        this,
        comparator ? neg(comparator) : defaultNegComparator,
        mapper
      );
    },

    rest: function rest() {
      return this.slice(1);
    },

    skip: function skip(amount) {
      return amount === 0 ? this : this.slice(Math.max(0, amount));
    },

    skipLast: function skipLast(amount) {
      return amount === 0 ? this : this.slice(0, -Math.max(0, amount));
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function skipUntil(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function sortBy(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function take(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function takeLast(amount) {
      return this.slice(-Math.max(0, amount));
    },

    takeWhile: function takeWhile(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function takeUntil(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    update: function update(fn) {
      return fn(this);
    },

    valueSeq: function valueSeq() {
      return this.toIndexedSeq();
    },

    // ### Hashable Object

    hashCode: function hashCode() {
      return this.__hash || (this.__hash = hashCollection(this));
    },

    // ### Internal

    // abstract __iterate(fn, reverse)

    // abstract __iterator(type, reverse)
  });

  var CollectionPrototype = Collection.prototype;
  CollectionPrototype[IS_COLLECTION_SYMBOL] = true;
  CollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;
  CollectionPrototype.toJSON = CollectionPrototype.toArray;
  CollectionPrototype.__toStringMapper = quoteString;
  CollectionPrototype.inspect = CollectionPrototype.toSource = function() {
    return this.toString();
  };
  CollectionPrototype.chain = CollectionPrototype.flatMap;
  CollectionPrototype.contains = CollectionPrototype.includes;

  mixin(KeyedCollection, {
    // ### More sequential methods

    flip: function flip() {
      return reify(this, flipFactory(this));
    },

    mapEntries: function mapEntries(mapper, context) {
      var this$1$1 = this;

      var iterations = 0;
      return reify(
        this,
        this.toSeq()
          .map(function (v, k) { return mapper.call(context, [k, v], iterations++, this$1$1); })
          .fromEntrySeq()
      );
    },

    mapKeys: function mapKeys(mapper, context) {
      var this$1$1 = this;

      return reify(
        this,
        this.toSeq()
          .flip()
          .map(function (k, v) { return mapper.call(context, k, v, this$1$1); })
          .flip()
      );
    },
  });

  var KeyedCollectionPrototype = KeyedCollection.prototype;
  KeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;
  KeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;
  KeyedCollectionPrototype.toJSON = toObject$1;
  KeyedCollectionPrototype.__toStringMapper = function (v, k) { return quoteString(k) + ': ' + quoteString(v); };

  mixin(IndexedCollection, {
    // ### Conversion to other types

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, false);
    },

    // ### ES6 Collection methods (ES6 Array and Map)

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function findIndex(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function indexOf(searchValue) {
      var key = this.keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function lastIndexOf(searchValue) {
      var key = this.lastKeyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function splice(index, removeNum /*, ...values*/) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum || 0, 0);
      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
        return this;
      }
      // If index is negative, it should resolve relative to the size of the
      // collection. However size may be expensive to compute if not cached, so
      // only call count() if the number is in fact negative.
      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(
        this,
        numArgs === 1
          ? spliced
          : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
      );
    },

    // ### More collection methods

    findLastIndex: function findLastIndex(predicate, context) {
      var entry = this.findLastEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    first: function first(notSetValue) {
      return this.get(0, notSetValue);
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function get(index, notSetValue) {
      index = wrapIndex(this, index);
      return index < 0 ||
        (this.size === Infinity || (this.size !== undefined && index > this.size))
        ? notSetValue
        : this.find(function (_, key) { return key === index; }, undefined, notSetValue);
    },

    has: function has(index) {
      index = wrapIndex(this, index);
      return (
        index >= 0 &&
        (this.size !== undefined
          ? this.size === Infinity || index < this.size
          : this.indexOf(index) !== -1)
      );
    },

    interpose: function interpose(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function interleave(/*...collections*/) {
      var collections = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * collections.length;
      }
      return reify(this, interleaved);
    },

    keySeq: function keySeq() {
      return Range(0, this.size);
    },

    last: function last(notSetValue) {
      return this.get(-1, notSetValue);
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function zip(/*, ...collections */) {
      var collections = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, collections));
    },

    zipAll: function zipAll(/*, ...collections */) {
      var collections = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, collections, true));
    },

    zipWith: function zipWith(zipper /*, ...collections */) {
      var collections = arrCopy(arguments);
      collections[0] = this;
      return reify(this, zipWithFactory(this, zipper, collections));
    },
  });

  var IndexedCollectionPrototype = IndexedCollection.prototype;
  IndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;
  IndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;

  mixin(SetCollection, {
    // ### ES6 Collection methods (ES6 Array and Map)

    get: function get(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function includes(value) {
      return this.has(value);
    },

    // ### More sequential methods

    keySeq: function keySeq() {
      return this.valueSeq();
    },
  });

  SetCollection.prototype.has = CollectionPrototype.includes;
  SetCollection.prototype.contains = SetCollection.prototype.includes;

  // Mixin subclasses

  mixin(KeyedSeq, KeyedCollection.prototype);
  mixin(IndexedSeq, IndexedCollection.prototype);
  mixin(SetSeq, SetCollection.prototype);

  // #pragma Helper functions

  function reduce(collection, reducer, reduction, context, useFirst, reverse) {
    assertNotInfinite(collection.size);
    collection.__iterate(function (v, k, c) {
      if (useFirst) {
        useFirst = false;
        reduction = v;
      } else {
        reduction = reducer.call(context, reduction, v, k, c);
      }
    }, reverse);
    return reduction;
  }

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  }

  function neg(predicate) {
    return function() {
      return -predicate.apply(this, arguments);
    };
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashCollection(collection) {
    if (collection.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(collection);
    var keyed = isKeyed(collection);
    var h = ordered ? 1 : 0;
    var size = collection.__iterate(
      keyed
        ? ordered
          ? function (v, k) {
              h = (31 * h + hashMerge(hash(v), hash(k))) | 0;
            }
          : function (v, k) {
              h = (h + hashMerge(hash(v), hash(k))) | 0;
            }
        : ordered
          ? function (v) {
              h = (31 * h + hash(v)) | 0;
            }
          : function (v) {
              h = (h + hash(v)) | 0;
            }
    );
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xcc9e2d51);
    h = imul((h << 15) | (h >>> -15), 0x1b873593);
    h = imul((h << 13) | (h >>> -13), 5);
    h = ((h + 0xe6546b64) | 0) ^ size;
    h = imul(h ^ (h >>> 16), 0x85ebca6b);
    h = imul(h ^ (h >>> 13), 0xc2b2ae35);
    h = smi(h ^ (h >>> 16));
    return h;
  }

  function hashMerge(a, b) {
    return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int
  }

  var OrderedSet = /*@__PURE__*/(function (Set$$1) {
    function OrderedSet(value) {
      return value === null || value === undefined
        ? emptyOrderedSet()
        : isOrderedSet(value)
          ? value
          : emptyOrderedSet().withMutations(function (set) {
              var iter = SetCollection(value);
              assertNotInfinite(iter.size);
              iter.forEach(function (v) { return set.add(v); });
            });
    }

    if ( Set$$1 ) OrderedSet.__proto__ = Set$$1;
    OrderedSet.prototype = Object.create( Set$$1 && Set$$1.prototype );
    OrderedSet.prototype.constructor = OrderedSet;

    OrderedSet.of = function of (/*...values*/) {
      return this(arguments);
    };

    OrderedSet.fromKeys = function fromKeys (value) {
      return this(KeyedCollection(value).keySeq());
    };

    OrderedSet.prototype.toString = function toString () {
      return this.__toString('OrderedSet {', '}');
    };

    return OrderedSet;
  }(Set$1));

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SYMBOL] = true;
  OrderedSetPrototype.zip = IndexedCollectionPrototype.zip;
  OrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return (
      EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))
    );
  }

  var Record = function Record(defaultValues, name) {
    var hasInitialized;

    var RecordType = function Record(values) {
      var this$1$1 = this;

      if (values instanceof RecordType) {
        return values;
      }
      if (!(this instanceof RecordType)) {
        return new RecordType(values);
      }
      if (!hasInitialized) {
        hasInitialized = true;
        var keys = Object.keys(defaultValues);
        var indices = (RecordTypePrototype._indices = {});
        // Deprecated: left to attempt not to break any external code which
        // relies on a ._name property existing on record instances.
        // Use Record.getDescriptiveName() instead
        RecordTypePrototype._name = name;
        RecordTypePrototype._keys = keys;
        RecordTypePrototype._defaultValues = defaultValues;
        for (var i = 0; i < keys.length; i++) {
          var propName = keys[i];
          indices[propName] = i;
          if (RecordTypePrototype[propName]) {
            /* eslint-disable no-console */
            typeof console === 'object' &&
              console.warn &&
              console.warn(
                'Cannot define ' +
                  recordName(this) +
                  ' with property "' +
                  propName +
                  '" since that property name is part of the Record API.'
              );
            /* eslint-enable no-console */
          } else {
            setProp(RecordTypePrototype, propName);
          }
        }
      }
      this.__ownerID = undefined;
      this._values = List$1().withMutations(function (l) {
        l.setSize(this$1$1._keys.length);
        KeyedCollection(values).forEach(function (v, k) {
          l.set(this$1$1._indices[k], v === this$1$1._defaultValues[k] ? undefined : v);
        });
      });
    };

    var RecordTypePrototype = (RecordType.prototype = Object.create(
      RecordPrototype
    ));
    RecordTypePrototype.constructor = RecordType;

    if (name) {
      RecordType.displayName = name;
    }

    return RecordType;
  };

  Record.prototype.toString = function toString () {
    var str = recordName(this) + ' { ';
    var keys = this._keys;
    var k;
    for (var i = 0, l = keys.length; i !== l; i++) {
      k = keys[i];
      str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));
    }
    return str + ' }';
  };

  Record.prototype.equals = function equals (other) {
    return (
      this === other ||
      (other &&
        this._keys === other._keys &&
        recordSeq(this).equals(recordSeq(other)))
    );
  };

  Record.prototype.hashCode = function hashCode () {
    return recordSeq(this).hashCode();
  };

  // @pragma Access

  Record.prototype.has = function has (k) {
    return this._indices.hasOwnProperty(k);
  };

  Record.prototype.get = function get (k, notSetValue) {
    if (!this.has(k)) {
      return notSetValue;
    }
    var index = this._indices[k];
    var value = this._values.get(index);
    return value === undefined ? this._defaultValues[k] : value;
  };

  // @pragma Modification

  Record.prototype.set = function set (k, v) {
    if (this.has(k)) {
      var newValues = this._values.set(
        this._indices[k],
        v === this._defaultValues[k] ? undefined : v
      );
      if (newValues !== this._values && !this.__ownerID) {
        return makeRecord(this, newValues);
      }
    }
    return this;
  };

  Record.prototype.remove = function remove (k) {
    return this.set(k);
  };

  Record.prototype.clear = function clear () {
    var newValues = this._values.clear().setSize(this._keys.length);
    return this.__ownerID ? this : makeRecord(this, newValues);
  };

  Record.prototype.wasAltered = function wasAltered () {
    return this._values.wasAltered();
  };

  Record.prototype.toSeq = function toSeq () {
    return recordSeq(this);
  };

  Record.prototype.toJS = function toJS$1 () {
    return toJS(this);
  };

  Record.prototype.entries = function entries () {
    return this.__iterator(ITERATE_ENTRIES);
  };

  Record.prototype.__iterator = function __iterator (type, reverse) {
    return recordSeq(this).__iterator(type, reverse);
  };

  Record.prototype.__iterate = function __iterate (fn, reverse) {
    return recordSeq(this).__iterate(fn, reverse);
  };

  Record.prototype.__ensureOwner = function __ensureOwner (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newValues = this._values.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._values = newValues;
      return this;
    }
    return makeRecord(this, newValues, ownerID);
  };

  Record.isRecord = isRecord;
  Record.getDescriptiveName = recordName;
  var RecordPrototype = Record.prototype;
  RecordPrototype[IS_RECORD_SYMBOL] = true;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;
  RecordPrototype.getIn = getIn$1;
  RecordPrototype.hasIn = CollectionPrototype.hasIn;
  RecordPrototype.merge = merge;
  RecordPrototype.mergeWith = mergeWith;
  RecordPrototype.mergeIn = mergeIn;
  RecordPrototype.mergeDeep = mergeDeep$1;
  RecordPrototype.mergeDeepWith = mergeDeepWith$1;
  RecordPrototype.mergeDeepIn = mergeDeepIn;
  RecordPrototype.setIn = setIn$1;
  RecordPrototype.update = update$1;
  RecordPrototype.updateIn = updateIn$1;
  RecordPrototype.withMutations = withMutations;
  RecordPrototype.asMutable = asMutable;
  RecordPrototype.asImmutable = asImmutable;
  RecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;
  RecordPrototype.toJSON = RecordPrototype.toObject =
    CollectionPrototype.toObject;
  RecordPrototype.inspect = RecordPrototype.toSource = function() {
    return this.toString();
  };

  function makeRecord(likeRecord, values, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._values = values;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record.constructor.displayName || record.constructor.name || 'Record';
  }

  function recordSeq(record) {
    return keyedSeqFromValue(record._keys.map(function (k) { return [k, record.get(k)]; }));
  }

  function setProp(prototype, name) {
    try {
      Object.defineProperty(prototype, name, {
        get: function() {
          return this.get(name);
        },
        set: function(value) {
          invariant(this.__ownerID, 'Cannot set on an immutable record.');
          this.set(name, value);
        },
      });
    } catch (error) {
      // Object.defineProperty failed. Probably IE8.
    }
  }

  /**
   * Returns a lazy Seq of `value` repeated `times` times. When `times` is
   * undefined, returns an infinite sequence of `value`.
   */
  var Repeat = /*@__PURE__*/(function (IndexedSeq$$1) {
    function Repeat(value, times) {
      if (!(this instanceof Repeat)) {
        return new Repeat(value, times);
      }
      this._value = value;
      this.size = times === undefined ? Infinity : Math.max(0, times);
      if (this.size === 0) {
        if (EMPTY_REPEAT) {
          return EMPTY_REPEAT;
        }
        EMPTY_REPEAT = this;
      }
    }

    if ( IndexedSeq$$1 ) Repeat.__proto__ = IndexedSeq$$1;
    Repeat.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );
    Repeat.prototype.constructor = Repeat;

    Repeat.prototype.toString = function toString () {
      if (this.size === 0) {
        return 'Repeat []';
      }
      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
    };

    Repeat.prototype.get = function get (index, notSetValue) {
      return this.has(index) ? this._value : notSetValue;
    };

    Repeat.prototype.includes = function includes (searchValue) {
      return is(this._value, searchValue);
    };

    Repeat.prototype.slice = function slice (begin, end) {
      var size = this.size;
      return wholeSlice(begin, end, size)
        ? this
        : new Repeat(
            this._value,
            resolveEnd(end, size) - resolveBegin(begin, size)
          );
    };

    Repeat.prototype.reverse = function reverse () {
      return this;
    };

    Repeat.prototype.indexOf = function indexOf (searchValue) {
      if (is(this._value, searchValue)) {
        return 0;
      }
      return -1;
    };

    Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {
      if (is(this._value, searchValue)) {
        return this.size;
      }
      return -1;
    };

    Repeat.prototype.__iterate = function __iterate (fn, reverse) {
      var size = this.size;
      var i = 0;
      while (i !== size) {
        if (fn(this._value, reverse ? size - ++i : i++, this) === false) {
          break;
        }
      }
      return i;
    };

    Repeat.prototype.__iterator = function __iterator (type, reverse) {
      var this$1$1 = this;

      var size = this.size;
      var i = 0;
      return new Iterator(
        function () { return i === size
            ? iteratorDone()
            : iteratorValue(type, reverse ? size - ++i : i++, this$1$1._value); }
      );
    };

    Repeat.prototype.equals = function equals (other) {
      return other instanceof Repeat
        ? is(this._value, other._value)
        : deepEqual(other);
    };

    return Repeat;
  }(IndexedSeq));

  var EMPTY_REPEAT;

  function fromJS(value, converter) {
    return fromJSWith(
      [],
      converter || defaultConverter,
      value,
      '',
      converter && converter.length > 2 ? [] : undefined,
      { '': value }
    );
  }

  function fromJSWith(stack, converter, value, key, keyPath, parentValue) {
    var toSeq = Array.isArray(value)
      ? IndexedSeq
      : isPlainObj(value)
        ? KeyedSeq
        : null;
    if (toSeq) {
      if (~stack.indexOf(value)) {
        throw new TypeError('Cannot convert circular structure to Immutable');
      }
      stack.push(value);
      keyPath && key !== '' && keyPath.push(key);
      var converted = converter.call(
        parentValue,
        key,
        toSeq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }
        ),
        keyPath && keyPath.slice()
      );
      stack.pop();
      keyPath && keyPath.pop();
      return converted;
    }
    return value;
  }

  function defaultConverter(k, v) {
    return isKeyed(v) ? v.toMap() : v.toList();
  }

  var version = "4.0.0-rc.11";

  var Immutable = {
    version: version,

    Collection: Collection,
    // Note: Iterable is deprecated
    Iterable: Collection,

    Seq: Seq,
    Map: Map$2,
    OrderedMap: OrderedMap,
    List: List$1,
    Stack: Stack$1,
    Set: Set$1,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS,
    hash: hash,

    isImmutable: isImmutable,
    isCollection: isCollection,
    isKeyed: isKeyed,
    isIndexed: isIndexed,
    isAssociative: isAssociative,
    isOrdered: isOrdered,
    isValueObject: isValueObject,
    isSeq: isSeq,
    isList: isList,
    isMap: isMap,
    isOrderedMap: isOrderedMap,
    isStack: isStack,
    isSet: isSet,
    isOrderedSet: isOrderedSet,
    isRecord: isRecord,

    get: get$2,
    getIn: getIn,
    has: has$3,
    hasIn: hasIn$1,
    merge: merge$1,
    mergeDeep: mergeDeep,
    mergeWith: mergeWith$1,
    mergeDeepWith: mergeDeepWith,
    remove: remove$2,
    removeIn: removeIn,
    set: set$1,
    setIn: setIn,
    update: update,
    updateIn: updateIn,
  };

  /**
   * Check if we're required to add a port number.
   *
   * @see https://url.spec.whatwg.org/#default-port
   * @param {Number|String} port Port number we need to check
   * @param {String} protocol Protocol we need to check against.
   * @returns {Boolean} Is it a default port for the given protocol
   * @api private
   */
  var requiresPort = function required(port, protocol) {
    protocol = protocol.split(':')[0];
    port = +port;

    if (!port) return false;

    switch (protocol) {
      case 'http':
      case 'ws':
      return port !== 80;

      case 'https':
      case 'wss':
      return port !== 443;

      case 'ftp':
      return port !== 21;

      case 'gopher':
      return port !== 70;

      case 'file':
      return false;
    }

    return port !== 0;
  };

  var has$2 = Object.prototype.hasOwnProperty
    , undef;

  /**
   * Decode a URI encoded string.
   *
   * @param {String} input The URI encoded string.
   * @returns {String|Null} The decoded string.
   * @api private
   */
  function decode(input) {
    try {
      return decodeURIComponent(input.replace(/\+/g, ' '));
    } catch (e) {
      return null;
    }
  }

  /**
   * Attempts to encode a given input.
   *
   * @param {String} input The string that needs to be encoded.
   * @returns {String|Null} The encoded string.
   * @api private
   */
  function encode(input) {
    try {
      return encodeURIComponent(input);
    } catch (e) {
      return null;
    }
  }

  /**
   * Simple query string parser.
   *
   * @param {String} query The query string that needs to be parsed.
   * @returns {Object}
   * @api public
   */
  function querystring(query) {
    var parser = /([^=?#&]+)=?([^&]*)/g
      , result = {}
      , part;

    while (part = parser.exec(query)) {
      var key = decode(part[1])
        , value = decode(part[2]);

      //
      // Prevent overriding of existing properties. This ensures that build-in
      // methods like `toString` or __proto__ are not overriden by malicious
      // querystrings.
      //
      // In the case if failed decoding, we want to omit the key/value pairs
      // from the result.
      //
      if (key === null || value === null || key in result) continue;
      result[key] = value;
    }

    return result;
  }

  /**
   * Transform a query string to an object.
   *
   * @param {Object} obj Object that should be transformed.
   * @param {String} prefix Optional prefix.
   * @returns {String}
   * @api public
   */
  function querystringify(obj, prefix) {
    prefix = prefix || '';

    var pairs = []
      , value
      , key;

    //
    // Optionally prefix with a '?' if needed
    //
    if ('string' !== typeof prefix) prefix = '?';

    for (key in obj) {
      if (has$2.call(obj, key)) {
        value = obj[key];

        //
        // Edge cases where we actually want to encode the value to an empty
        // string instead of the stringified value.
        //
        if (!value && (value === null || value === undef || isNaN(value))) {
          value = '';
        }

        key = encode(key);
        value = encode(value);

        //
        // If we failed to encode the strings, we should bail out as we don't
        // want to add invalid strings to the query.
        //
        if (key === null || value === null) continue;
        pairs.push(key +'='+ value);
      }
    }

    return pairs.length ? prefix + pairs.join('&') : '';
  }

  //
  // Expose the module.
  //
  var stringify = querystringify;
  var parse = querystring;

  var querystringify_1 = {
  	stringify: stringify,
  	parse: parse
  };

  var CRHTLF = /[\n\r\t]/g
    , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
    , protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i
    , windowsDriveLetter = /^[a-zA-Z]:/
    , whitespace = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;

  /**
   * Trim a given string.
   *
   * @param {String} str String to trim.
   * @public
   */
  function trimLeft(str) {
    return (str ? str : '').toString().replace(whitespace, '');
  }

  /**
   * These are the parse rules for the URL parser, it informs the parser
   * about:
   *
   * 0. The char it Needs to parse, if it's a string it should be done using
   *    indexOf, RegExp using exec and NaN means set as current value.
   * 1. The property we should set when parsing this value.
   * 2. Indication if it's backwards or forward parsing, when set as number it's
   *    the value of extra chars that should be split off.
   * 3. Inherit from location if non existing in the parser.
   * 4. `toLowerCase` the resulting value.
   */
  var rules = [
    ['#', 'hash'],                        // Extract from the back.
    ['?', 'query'],                       // Extract from the back.
    function sanitize(address, url) {     // Sanitize what is left of the address
      return isSpecial(url.protocol) ? address.replace(/\\/g, '/') : address;
    },
    ['/', 'pathname'],                    // Extract from the back.
    ['@', 'auth', 1],                     // Extract from the front.
    [NaN, 'host', undefined, 1, 1],       // Set left over value.
    [/:(\d*)$/, 'port', undefined, 1],    // RegExp the back.
    [NaN, 'hostname', undefined, 1, 1]    // Set left over.
  ];

  /**
   * These properties should not be copied or inherited from. This is only needed
   * for all non blob URL's as a blob URL does not include a hash, only the
   * origin.
   *
   * @type {Object}
   * @private
   */
  var ignore = { hash: 1, query: 1 };

  /**
   * The location object differs when your code is loaded through a normal page,
   * Worker or through a worker using a blob. And with the blobble begins the
   * trouble as the location object will contain the URL of the blob, not the
   * location of the page where our code is loaded in. The actual origin is
   * encoded in the `pathname` so we can thankfully generate a good "default"
   * location from it so we can generate proper relative URL's again.
   *
   * @param {Object|String} loc Optional default location object.
   * @returns {Object} lolcation object.
   * @public
   */
  function lolcation(loc) {
    var globalVar;

    if (typeof window !== 'undefined') globalVar = window;
    else if (typeof commonjsGlobal !== 'undefined') globalVar = commonjsGlobal;
    else if (typeof self !== 'undefined') globalVar = self;
    else globalVar = {};

    var location = globalVar.location || {};
    loc = loc || location;

    var finaldestination = {}
      , type = typeof loc
      , key;

    if ('blob:' === loc.protocol) {
      finaldestination = new Url(unescape(loc.pathname), {});
    } else if ('string' === type) {
      finaldestination = new Url(loc, {});
      for (key in ignore) delete finaldestination[key];
    } else if ('object' === type) {
      for (key in loc) {
        if (key in ignore) continue;
        finaldestination[key] = loc[key];
      }

      if (finaldestination.slashes === undefined) {
        finaldestination.slashes = slashes.test(loc.href);
      }
    }

    return finaldestination;
  }

  /**
   * Check whether a protocol scheme is special.
   *
   * @param {String} The protocol scheme of the URL
   * @return {Boolean} `true` if the protocol scheme is special, else `false`
   * @private
   */
  function isSpecial(scheme) {
    return (
      scheme === 'file:' ||
      scheme === 'ftp:' ||
      scheme === 'http:' ||
      scheme === 'https:' ||
      scheme === 'ws:' ||
      scheme === 'wss:'
    );
  }

  /**
   * @typedef ProtocolExtract
   * @type Object
   * @property {String} protocol Protocol matched in the URL, in lowercase.
   * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
   * @property {String} rest Rest of the URL that is not part of the protocol.
   */

  /**
   * Extract protocol information from a URL with/without double slash ("//").
   *
   * @param {String} address URL we want to extract from.
   * @param {Object} location
   * @return {ProtocolExtract} Extracted information.
   * @private
   */
  function extractProtocol(address, location) {
    address = trimLeft(address);
    address = address.replace(CRHTLF, '');
    location = location || {};

    var match = protocolre.exec(address);
    var protocol = match[1] ? match[1].toLowerCase() : '';
    var forwardSlashes = !!match[2];
    var otherSlashes = !!match[3];
    var slashesCount = 0;
    var rest;

    if (forwardSlashes) {
      if (otherSlashes) {
        rest = match[2] + match[3] + match[4];
        slashesCount = match[2].length + match[3].length;
      } else {
        rest = match[2] + match[4];
        slashesCount = match[2].length;
      }
    } else {
      if (otherSlashes) {
        rest = match[3] + match[4];
        slashesCount = match[3].length;
      } else {
        rest = match[4];
      }
    }

    if (protocol === 'file:') {
      if (slashesCount >= 2) {
        rest = rest.slice(2);
      }
    } else if (isSpecial(protocol)) {
      rest = match[4];
    } else if (protocol) {
      if (forwardSlashes) {
        rest = rest.slice(2);
      }
    } else if (slashesCount >= 2 && isSpecial(location.protocol)) {
      rest = match[4];
    }

    return {
      protocol: protocol,
      slashes: forwardSlashes || isSpecial(protocol),
      slashesCount: slashesCount,
      rest: rest
    };
  }

  /**
   * Resolve a relative URL pathname against a base URL pathname.
   *
   * @param {String} relative Pathname of the relative URL.
   * @param {String} base Pathname of the base URL.
   * @return {String} Resolved pathname.
   * @private
   */
  function resolve(relative, base) {
    if (relative === '') return base;

    var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
      , i = path.length
      , last = path[i - 1]
      , unshift = false
      , up = 0;

    while (i--) {
      if (path[i] === '.') {
        path.splice(i, 1);
      } else if (path[i] === '..') {
        path.splice(i, 1);
        up++;
      } else if (up) {
        if (i === 0) unshift = true;
        path.splice(i, 1);
        up--;
      }
    }

    if (unshift) path.unshift('');
    if (last === '.' || last === '..') path.push('');

    return path.join('/');
  }

  /**
   * The actual URL instance. Instead of returning an object we've opted-in to
   * create an actual constructor as it's much more memory efficient and
   * faster and it pleases my OCD.
   *
   * It is worth noting that we should not use `URL` as class name to prevent
   * clashes with the global URL instance that got introduced in browsers.
   *
   * @constructor
   * @param {String} address URL we want to parse.
   * @param {Object|String} [location] Location defaults for relative paths.
   * @param {Boolean|Function} [parser] Parser for the query string.
   * @private
   */
  function Url(address, location, parser) {
    address = trimLeft(address);
    address = address.replace(CRHTLF, '');

    if (!(this instanceof Url)) {
      return new Url(address, location, parser);
    }

    var relative, extracted, parse, instruction, index, key
      , instructions = rules.slice()
      , type = typeof location
      , url = this
      , i = 0;

    //
    // The following if statements allows this module two have compatibility with
    // 2 different API:
    //
    // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
    //    where the boolean indicates that the query string should also be parsed.
    //
    // 2. The `URL` interface of the browser which accepts a URL, object as
    //    arguments. The supplied object will be used as default values / fall-back
    //    for relative paths.
    //
    if ('object' !== type && 'string' !== type) {
      parser = location;
      location = null;
    }

    if (parser && 'function' !== typeof parser) parser = querystringify_1.parse;

    location = lolcation(location);

    //
    // Extract protocol information before running the instructions.
    //
    extracted = extractProtocol(address || '', location);
    relative = !extracted.protocol && !extracted.slashes;
    url.slashes = extracted.slashes || relative && location.slashes;
    url.protocol = extracted.protocol || location.protocol || '';
    address = extracted.rest;

    //
    // When the authority component is absent the URL starts with a path
    // component.
    //
    if (
      extracted.protocol === 'file:' && (
        extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||
      (!extracted.slashes &&
        (extracted.protocol ||
          extracted.slashesCount < 2 ||
          !isSpecial(url.protocol)))
    ) {
      instructions[3] = [/(.*)/, 'pathname'];
    }

    for (; i < instructions.length; i++) {
      instruction = instructions[i];

      if (typeof instruction === 'function') {
        address = instruction(address, url);
        continue;
      }

      parse = instruction[0];
      key = instruction[1];

      if (parse !== parse) {
        url[key] = address;
      } else if ('string' === typeof parse) {
        index = parse === '@'
          ? address.lastIndexOf(parse)
          : address.indexOf(parse);

        if (~index) {
          if ('number' === typeof instruction[2]) {
            url[key] = address.slice(0, index);
            address = address.slice(index + instruction[2]);
          } else {
            url[key] = address.slice(index);
            address = address.slice(0, index);
          }
        }
      } else if ((index = parse.exec(address))) {
        url[key] = index[1];
        address = address.slice(0, index.index);
      }

      url[key] = url[key] || (
        relative && instruction[3] ? location[key] || '' : ''
      );

      //
      // Hostname, host and protocol should be lowercased so they can be used to
      // create a proper `origin`.
      //
      if (instruction[4]) url[key] = url[key].toLowerCase();
    }

    //
    // Also parse the supplied query string in to an object. If we're supplied
    // with a custom parser as function use that instead of the default build-in
    // parser.
    //
    if (parser) url.query = parser(url.query);

    //
    // If the URL is relative, resolve the pathname against the base URL.
    //
    if (
        relative
      && location.slashes
      && url.pathname.charAt(0) !== '/'
      && (url.pathname !== '' || location.pathname !== '')
    ) {
      url.pathname = resolve(url.pathname, location.pathname);
    }

    //
    // Default to a / for pathname if none exists. This normalizes the URL
    // to always have a /
    //
    if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {
      url.pathname = '/' + url.pathname;
    }

    //
    // We should not add port numbers if they are already the default port number
    // for a given protocol. As the host also contains the port number we're going
    // override it with the hostname which contains no port number.
    //
    if (!requiresPort(url.port, url.protocol)) {
      url.host = url.hostname;
      url.port = '';
    }

    //
    // Parse down the `auth` for the username and password.
    //
    url.username = url.password = '';

    if (url.auth) {
      index = url.auth.indexOf(':');

      if (~index) {
        url.username = url.auth.slice(0, index);
        url.username = encodeURIComponent(decodeURIComponent(url.username));

        url.password = url.auth.slice(index + 1);
        url.password = encodeURIComponent(decodeURIComponent(url.password));
      } else {
        url.username = encodeURIComponent(decodeURIComponent(url.auth));
      }

      url.auth = url.password ? url.username +':'+ url.password : url.username;
    }

    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
      ? url.protocol +'//'+ url.host
      : 'null';

    //
    // The href is just the compiled result.
    //
    url.href = url.toString();
  }

  /**
   * This is convenience method for changing properties in the URL instance to
   * insure that they all propagate correctly.
   *
   * @param {String} part          Property we need to adjust.
   * @param {Mixed} value          The newly assigned value.
   * @param {Boolean|Function} fn  When setting the query, it will be the function
   *                               used to parse the query.
   *                               When setting the protocol, double slash will be
   *                               removed from the final url if it is true.
   * @returns {URL} URL instance for chaining.
   * @public
   */
  function set(part, value, fn) {
    var url = this;

    switch (part) {
      case 'query':
        if ('string' === typeof value && value.length) {
          value = (fn || querystringify_1.parse)(value);
        }

        url[part] = value;
        break;

      case 'port':
        url[part] = value;

        if (!requiresPort(value, url.protocol)) {
          url.host = url.hostname;
          url[part] = '';
        } else if (value) {
          url.host = url.hostname +':'+ value;
        }

        break;

      case 'hostname':
        url[part] = value;

        if (url.port) value += ':'+ url.port;
        url.host = value;
        break;

      case 'host':
        url[part] = value;

        if (/:\d+$/.test(value)) {
          value = value.split(':');
          url.port = value.pop();
          url.hostname = value.join(':');
        } else {
          url.hostname = value;
          url.port = '';
        }

        break;

      case 'protocol':
        url.protocol = value.toLowerCase();
        url.slashes = !fn;
        break;

      case 'pathname':
      case 'hash':
        if (value) {
          var char = part === 'pathname' ? '/' : '#';
          url[part] = value.charAt(0) !== char ? char + value : value;
        } else {
          url[part] = value;
        }
        break;

      case 'username':
      case 'password':
        url[part] = encodeURIComponent(value);
        break;

      case 'auth':
        var index = value.indexOf(':');

        if (~index) {
          url.username = value.slice(0, index);
          url.username = encodeURIComponent(decodeURIComponent(url.username));

          url.password = value.slice(index + 1);
          url.password = encodeURIComponent(decodeURIComponent(url.password));
        } else {
          url.username = encodeURIComponent(decodeURIComponent(value));
        }
    }

    for (var i = 0; i < rules.length; i++) {
      var ins = rules[i];

      if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
    }

    url.auth = url.password ? url.username +':'+ url.password : url.username;

    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
      ? url.protocol +'//'+ url.host
      : 'null';

    url.href = url.toString();

    return url;
  }

  /**
   * Transform the properties back in to a valid and full URL string.
   *
   * @param {Function} stringify Optional query stringify function.
   * @returns {String} Compiled version of the URL.
   * @public
   */
  function toString$1(stringify) {
    if (!stringify || 'function' !== typeof stringify) stringify = querystringify_1.stringify;

    var query
      , url = this
      , host = url.host
      , protocol = url.protocol;

    if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

    var result =
      protocol +
      ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');

    if (url.username) {
      result += url.username;
      if (url.password) result += ':'+ url.password;
      result += '@';
    } else if (url.password) {
      result += ':'+ url.password;
      result += '@';
    } else if (
      url.protocol !== 'file:' &&
      isSpecial(url.protocol) &&
      !host &&
      url.pathname !== '/'
    ) {
      //
      // Add back the empty userinfo, otherwise the original invalid URL
      // might be transformed into a valid one with `url.pathname` as host.
      //
      result += '@';
    }

    //
    // Trailing colon is removed from `url.host` when it is parsed. If it still
    // ends with a colon, then add back the trailing colon that was removed. This
    // prevents an invalid URL from being transformed into a valid one.
    //
    if (host[host.length - 1] === ':') host += ':';
    result += host + url.pathname;

    query = 'object' === typeof url.query ? stringify(url.query) : url.query;
    if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

    if (url.hash) result += url.hash;

    return result;
  }

  Url.prototype = { set: set, toString: toString$1 };

  //
  // Expose the URL parser and some additional properties that might be useful for
  // others or testing.
  //
  Url.extractProtocol = extractProtocol;
  Url.location = lolcation;
  Url.trimLeft = trimLeft;
  Url.qs = querystringify_1;

  var urlParse = Url;

  /** Detect free variable `global` from Node.js. */

  var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  var _freeGlobal = freeGlobal;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = _freeGlobal || freeSelf || Function('return this')();

  var _root = root;

  /** Built-in value references. */
  var Symbol$1 = _root.Symbol;

  var _Symbol = Symbol$1;

  /** Used for built-in method references. */
  var objectProto$c = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$a = objectProto$c.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString$1 = objectProto$c.toString;

  /** Built-in value references. */
  var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty$a.call(value, symToStringTag$1),
        tag = value[symToStringTag$1];

    try {
      value[symToStringTag$1] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString$1.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag$1] = tag;
      } else {
        delete value[symToStringTag$1];
      }
    }
    return result;
  }

  var _getRawTag = getRawTag;

  /** Used for built-in method references. */
  var objectProto$b = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto$b.toString;

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  var _objectToString = objectToString;

  /** `Object#toString` result references. */
  var nullTag = '[object Null]',
      undefinedTag = '[object Undefined]';

  /** Built-in value references. */
  var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }
    return (symToStringTag && symToStringTag in Object(value))
      ? _getRawTag(value)
      : _objectToString(value);
  }

  var _baseGetTag = baseGetTag;

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  var _overArg = overArg;

  /** Built-in value references. */
  var getPrototype = _overArg(Object.getPrototypeOf, Object);

  var _getPrototype = getPrototype;

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return value != null && typeof value == 'object';
  }

  var isObjectLike_1 = isObjectLike;

  /** `Object#toString` result references. */
  var objectTag$3 = '[object Object]';

  /** Used for built-in method references. */
  var funcProto$2 = Function.prototype,
      objectProto$a = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString$2 = funcProto$2.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty$9 = objectProto$a.hasOwnProperty;

  /** Used to infer the `Object` constructor. */
  var objectCtorString = funcToString$2.call(Object);

  /**
   * Checks if `value` is a plain object, that is, an object created by the
   * `Object` constructor or one with a `[[Prototype]]` of `null`.
   *
   * @static
   * @memberOf _
   * @since 0.8.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * _.isPlainObject(new Foo);
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'x': 0, 'y': 0 });
   * // => true
   *
   * _.isPlainObject(Object.create(null));
   * // => true
   */
  function isPlainObject(value) {
    if (!isObjectLike_1(value) || _baseGetTag(value) != objectTag$3) {
      return false;
    }
    var proto = _getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty$9.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor &&
      funcToString$2.call(Ctor) == objectCtorString;
  }

  var isPlainObject_1 = isPlainObject;

  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  var _listCacheClear = listCacheClear;

  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || (value !== value && other !== other);
  }

  var eq_1 = eq;

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq_1(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  var _assocIndexOf = assocIndexOf;

  /** Used for built-in method references. */
  var arrayProto$1 = Array.prototype;

  /** Built-in value references. */
  var splice$1 = arrayProto$1.splice;

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = _assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice$1.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  var _listCacheDelete = listCacheDelete;

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = _assocIndexOf(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  var _listCacheGet = listCacheGet;

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return _assocIndexOf(this.__data__, key) > -1;
  }

  var _listCacheHas = listCacheHas;

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = _assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  var _listCacheSet = listCacheSet;

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = _listCacheClear;
  ListCache.prototype['delete'] = _listCacheDelete;
  ListCache.prototype.get = _listCacheGet;
  ListCache.prototype.has = _listCacheHas;
  ListCache.prototype.set = _listCacheSet;

  var _ListCache = ListCache;

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new _ListCache;
    this.size = 0;
  }

  var _stackClear = stackClear;

  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);

    this.size = data.size;
    return result;
  }

  var _stackDelete = stackDelete;

  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  var _stackGet = stackGet;

  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  var _stackHas = stackHas;

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
  }

  var isObject_1 = isObject;

  /** `Object#toString` result references. */
  var asyncTag = '[object AsyncFunction]',
      funcTag$1 = '[object Function]',
      genTag = '[object GeneratorFunction]',
      proxyTag = '[object Proxy]';

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    if (!isObject_1(value)) {
      return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = _baseGetTag(value);
    return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  var isFunction_1 = isFunction;

  /** Used to detect overreaching core-js shims. */
  var coreJsData = _root['__core-js_shared__'];

  var _coreJsData = coreJsData;

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = (function() {
    var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
    return uid ? ('Symbol(src)_1.' + uid) : '';
  }());

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  }

  var _isMasked = isMasked;

  /** Used for built-in method references. */
  var funcProto$1 = Function.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString$1 = funcProto$1.toString;

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString$1.call(func);
      } catch (e) {}
      try {
        return (func + '');
      } catch (e) {}
    }
    return '';
  }

  var _toSource = toSource;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto$9 = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty$8 = objectProto$9.hasOwnProperty;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' +
    funcToString.call(hasOwnProperty$8).replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
  );

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject_1(value) || _isMasked(value)) {
      return false;
    }
    var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;
    return pattern.test(_toSource(value));
  }

  var _baseIsNative = baseIsNative;

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  var _getValue = getValue;

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = _getValue(object, key);
    return _baseIsNative(value) ? value : undefined;
  }

  var _getNative = getNative;

  /* Built-in method references that are verified to be native. */
  var Map$1 = _getNative(_root, 'Map');

  var _Map = Map$1;

  /* Built-in method references that are verified to be native. */
  var nativeCreate = _getNative(Object, 'create');

  var _nativeCreate = nativeCreate;

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
    this.size = 0;
  }

  var _hashClear = hashClear;

  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  var _hashDelete = hashDelete;

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';

  /** Used for built-in method references. */
  var objectProto$8 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$7 = objectProto$8.hasOwnProperty;

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (_nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED$2 ? undefined : result;
    }
    return hasOwnProperty$7.call(data, key) ? data[key] : undefined;
  }

  var _hashGet = hashGet;

  /** Used for built-in method references. */
  var objectProto$7 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$6 = objectProto$7.hasOwnProperty;

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return _nativeCreate ? (data[key] !== undefined) : hasOwnProperty$6.call(data, key);
  }

  var _hashHas = hashHas;

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = (_nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;
    return this;
  }

  var _hashSet = hashSet;

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = _hashClear;
  Hash.prototype['delete'] = _hashDelete;
  Hash.prototype.get = _hashGet;
  Hash.prototype.has = _hashHas;
  Hash.prototype.set = _hashSet;

  var _Hash = Hash;

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new _Hash,
      'map': new (_Map || _ListCache),
      'string': new _Hash
    };
  }

  var _mapCacheClear = mapCacheClear;

  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = typeof value;
    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
      ? (value !== '__proto__')
      : (value === null);
  }

  var _isKeyable = isKeyable;

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return _isKeyable(key)
      ? data[typeof key == 'string' ? 'string' : 'hash']
      : data.map;
  }

  var _getMapData = getMapData;

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = _getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  var _mapCacheDelete = mapCacheDelete;

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return _getMapData(this, key).get(key);
  }

  var _mapCacheGet = mapCacheGet;

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return _getMapData(this, key).has(key);
  }

  var _mapCacheHas = mapCacheHas;

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = _getMapData(this, key),
        size = data.size;

    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  var _mapCacheSet = mapCacheSet;

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = _mapCacheClear;
  MapCache.prototype['delete'] = _mapCacheDelete;
  MapCache.prototype.get = _mapCacheGet;
  MapCache.prototype.has = _mapCacheHas;
  MapCache.prototype.set = _mapCacheSet;

  var _MapCache = MapCache;

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE$2 = 200;

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof _ListCache) {
      var pairs = data.__data__;
      if (!_Map || (pairs.length < LARGE_ARRAY_SIZE$2 - 1)) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new _MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  var _stackSet = stackSet;

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new _ListCache(entries);
    this.size = data.size;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = _stackClear;
  Stack.prototype['delete'] = _stackDelete;
  Stack.prototype.get = _stackGet;
  Stack.prototype.has = _stackHas;
  Stack.prototype.set = _stackSet;

  var _Stack = Stack;

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  var _setCacheAdd = setCacheAdd;

  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  var _setCacheHas = setCacheHas;

  /**
   *
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */
  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new _MapCache;
    while (++index < length) {
      this.add(values[index]);
    }
  }

  // Add methods to `SetCache`.
  SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
  SetCache.prototype.has = _setCacheHas;

  var _SetCache = SetCache;

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  var _arraySome = arraySome;

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  var _cacheHas = cacheHas;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG$5 = 1,
      COMPARE_UNORDERED_FLAG$3 = 2;

  /**
   * A specialized version of `baseIsEqualDeep` for arrays with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Array} array The array to compare.
   * @param {Array} other The other array to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `array` and `other` objects.
   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
   */
  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    // Check that cyclic values are equal.
    var arrStacked = stack.get(array);
    var othStacked = stack.get(other);
    if (arrStacked && othStacked) {
      return arrStacked == other && othStacked == array;
    }
    var index = -1,
        result = true,
        seen = (bitmask & COMPARE_UNORDERED_FLAG$3) ? new _SetCache : undefined;

    stack.set(array, other);
    stack.set(other, array);

    // Ignore non-index properties.
    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial
          ? customizer(othValue, arrValue, index, other, array, stack)
          : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      // Recursively compare arrays (susceptible to call stack limits).
      if (seen) {
        if (!_arraySome(other, function(othValue, othIndex) {
              if (!_cacheHas(seen, othIndex) &&
                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
          result = false;
          break;
        }
      } else if (!(
            arrValue === othValue ||
              equalFunc(arrValue, othValue, bitmask, customizer, stack)
          )) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  var _equalArrays = equalArrays;

  /** Built-in value references. */
  var Uint8Array = _root.Uint8Array;

  var _Uint8Array = Uint8Array;

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  var _mapToArray = mapToArray;

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  var _setToArray = setToArray;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG$4 = 1,
      COMPARE_UNORDERED_FLAG$2 = 2;

  /** `Object#toString` result references. */
  var boolTag$1 = '[object Boolean]',
      dateTag$1 = '[object Date]',
      errorTag$1 = '[object Error]',
      mapTag$2 = '[object Map]',
      numberTag$1 = '[object Number]',
      regexpTag$2 = '[object RegExp]',
      setTag$2 = '[object Set]',
      stringTag$2 = '[object String]',
      symbolTag$1 = '[object Symbol]';

  var arrayBufferTag$1 = '[object ArrayBuffer]',
      dataViewTag$2 = '[object DataView]';

  /** Used to convert symbols to primitives and strings. */
  var symbolProto$1 = _Symbol ? _Symbol.prototype : undefined,
      symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : undefined;

  /**
   * A specialized version of `baseIsEqualDeep` for comparing objects of
   * the same `toStringTag`.
   *
   * **Note:** This function only supports comparing values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {string} tag The `toStringTag` of the objects to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag$2:
        if ((object.byteLength != other.byteLength) ||
            (object.byteOffset != other.byteOffset)) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag$1:
        if ((object.byteLength != other.byteLength) ||
            !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {
          return false;
        }
        return true;

      case boolTag$1:
      case dateTag$1:
      case numberTag$1:
        // Coerce booleans to `1` or `0` and dates to milliseconds.
        // Invalid dates are coerced to `NaN`.
        return eq_1(+object, +other);

      case errorTag$1:
        return object.name == other.name && object.message == other.message;

      case regexpTag$2:
      case stringTag$2:
        // Coerce regexes to strings and treat strings, primitives and objects,
        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
        // for more details.
        return object == (other + '');

      case mapTag$2:
        var convert = _mapToArray;

      case setTag$2:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
        convert || (convert = _setToArray);

        if (object.size != other.size && !isPartial) {
          return false;
        }
        // Assume cyclic values are equal.
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG$2;

        // Recursively compare objects (susceptible to call stack limits).
        stack.set(object, other);
        var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag$1:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }

  var _equalByTag = equalByTag;

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  var _arrayPush = arrayPush;

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  var isArray_1 = isArray;

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object));
  }

  var _baseGetAllKeys = baseGetAllKeys;

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  var _arrayFilter = arrayFilter;

  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  var stubArray_1 = stubArray;

  /** Used for built-in method references. */
  var objectProto$6 = Object.prototype;

  /** Built-in value references. */
  var propertyIsEnumerable$1 = objectProto$6.propertyIsEnumerable;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = !nativeGetSymbols ? stubArray_1 : function(object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return _arrayFilter(nativeGetSymbols(object), function(symbol) {
      return propertyIsEnumerable$1.call(object, symbol);
    });
  };

  var _getSymbols = getSymbols;

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  var _baseTimes = baseTimes;

  /** `Object#toString` result references. */
  var argsTag$2 = '[object Arguments]';

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return isObjectLike_1(value) && _baseGetTag(value) == argsTag$2;
  }

  var _baseIsArguments = baseIsArguments;

  /** Used for built-in method references. */
  var objectProto$5 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$5 = objectProto$5.hasOwnProperty;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto$5.propertyIsEnumerable;

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
    return isObjectLike_1(value) && hasOwnProperty$5.call(value, 'callee') &&
      !propertyIsEnumerable.call(value, 'callee');
  };

  var isArguments_1 = isArguments;

  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }

  var stubFalse_1 = stubFalse;

  var isBuffer_1 = createCommonjsModule(function (module, exports) {
  /** Detect free variable `exports`. */
  var freeExports = exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Built-in value references. */
  var Buffer = moduleExports ? _root.Buffer : undefined;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

  /**
   * Checks if `value` is a buffer.
   *
   * @static
   * @memberOf _
   * @since 4.3.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
   * @example
   *
   * _.isBuffer(new Buffer(2));
   * // => true
   *
   * _.isBuffer(new Uint8Array(2));
   * // => false
   */
  var isBuffer = nativeIsBuffer || stubFalse_1;

  module.exports = isBuffer;
  });

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER$1 = 9007199254740991;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    var type = typeof value;
    length = length == null ? MAX_SAFE_INTEGER$1 : length;

    return !!length &&
      (type == 'number' ||
        (type != 'symbol' && reIsUint.test(value))) &&
          (value > -1 && value % 1 == 0 && value < length);
  }

  var _isIndex = isIndex;

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' &&
      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  var isLength_1 = isLength;

  /** `Object#toString` result references. */
  var argsTag$1 = '[object Arguments]',
      arrayTag$1 = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag$1 = '[object Map]',
      numberTag = '[object Number]',
      objectTag$2 = '[object Object]',
      regexpTag$1 = '[object RegExp]',
      setTag$1 = '[object Set]',
      stringTag$1 = '[object String]',
      weakMapTag$1 = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag$1 = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag$1] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag$2] = typedArrayTags[regexpTag$1] =
  typedArrayTags[setTag$1] = typedArrayTags[stringTag$1] =
  typedArrayTags[weakMapTag$1] = false;

  /**
   * The base implementation of `_.isTypedArray` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   */
  function baseIsTypedArray(value) {
    return isObjectLike_1(value) &&
      isLength_1(value.length) && !!typedArrayTags[_baseGetTag(value)];
  }

  var _baseIsTypedArray = baseIsTypedArray;

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  var _baseUnary = baseUnary;

  var _nodeUtil = createCommonjsModule(function (module, exports) {
  /** Detect free variable `exports`. */
  var freeExports = exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && _freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  module.exports = nodeUtil;
  });

  /* Node.js helper references. */
  var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;

  var isTypedArray_1 = isTypedArray;

  /** Used for built-in method references. */
  var objectProto$4 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$4 = objectProto$4.hasOwnProperty;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray_1(value),
        isArg = !isArr && isArguments_1(value),
        isBuff = !isArr && !isArg && isBuffer_1(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? _baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty$4.call(value, key)) &&
          !(skipIndexes && (
             // Safari 9 has enumerable `arguments.length` in strict mode.
             key == 'length' ||
             // Node.js 0.10 has enumerable non-index properties on buffers.
             (isBuff && (key == 'offset' || key == 'parent')) ||
             // PhantomJS 2 has enumerable non-index properties on typed arrays.
             (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
             // Skip index properties.
             _isIndex(key, length)
          ))) {
        result.push(key);
      }
    }
    return result;
  }

  var _arrayLikeKeys = arrayLikeKeys;

  /** Used for built-in method references. */
  var objectProto$3 = Object.prototype;

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$3;

    return value === proto;
  }

  var _isPrototype = isPrototype;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys = _overArg(Object.keys, Object);

  var _nativeKeys = nativeKeys;

  /** Used for built-in method references. */
  var objectProto$2 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$3 = objectProto$2.hasOwnProperty;

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!_isPrototype(object)) {
      return _nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$3.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  var _baseKeys = baseKeys;

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength_1(value.length) && !isFunction_1(value);
  }

  var isArrayLike_1 = isArrayLike;

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object);
  }

  var keys_1 = keys;

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return _baseGetAllKeys(object, keys_1, _getSymbols);
  }

  var _getAllKeys = getAllKeys;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG$3 = 1;

  /** Used for built-in method references. */
  var objectProto$1 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$2 = objectProto$1.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqualDeep` for objects with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3,
        objProps = _getAllKeys(object),
        objLength = objProps.length,
        othProps = _getAllKeys(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty$2.call(other, key))) {
        return false;
      }
    }
    // Check that cyclic values are equal.
    var objStacked = stack.get(object);
    var othStacked = stack.get(other);
    if (objStacked && othStacked) {
      return objStacked == other && othStacked == object;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);

    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial
          ? customizer(othValue, objValue, key, other, object, stack)
          : customizer(objValue, othValue, key, object, other, stack);
      }
      // Recursively compare objects (susceptible to call stack limits).
      if (!(compared === undefined
            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
            : compared
          )) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      // Non `Object` object instances with different constructors are not equal.
      if (objCtor != othCtor &&
          ('constructor' in object && 'constructor' in other) &&
          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
            typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  var _equalObjects = equalObjects;

  /* Built-in method references that are verified to be native. */
  var DataView = _getNative(_root, 'DataView');

  var _DataView = DataView;

  /* Built-in method references that are verified to be native. */
  var Promise$1 = _getNative(_root, 'Promise');

  var _Promise = Promise$1;

  /* Built-in method references that are verified to be native. */
  var Set = _getNative(_root, 'Set');

  var _Set = Set;

  /* Built-in method references that are verified to be native. */
  var WeakMap$1 = _getNative(_root, 'WeakMap');

  var _WeakMap = WeakMap$1;

  /** `Object#toString` result references. */
  var mapTag = '[object Map]',
      objectTag$1 = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      weakMapTag = '[object WeakMap]';

  var dataViewTag = '[object DataView]';

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = _toSource(_DataView),
      mapCtorString = _toSource(_Map),
      promiseCtorString = _toSource(_Promise),
      setCtorString = _toSource(_Set),
      weakMapCtorString = _toSource(_WeakMap);

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = _baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag) ||
      (_Map && getTag(new _Map) != mapTag) ||
      (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
      (_Set && getTag(new _Set) != setTag) ||
      (_WeakMap && getTag(new _WeakMap) != weakMapTag)) {
    getTag = function(value) {
      var result = _baseGetTag(value),
          Ctor = result == objectTag$1 ? value.constructor : undefined,
          ctorString = Ctor ? _toSource(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString: return dataViewTag;
          case mapCtorString: return mapTag;
          case promiseCtorString: return promiseTag;
          case setCtorString: return setTag;
          case weakMapCtorString: return weakMapTag;
        }
      }
      return result;
    };
  }

  var _getTag = getTag;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG$2 = 1;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      objectTag = '[object Object]';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$1 = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqual` for arrays and objects which performs
   * deep comparisons and tracks traversed objects enabling objects with circular
   * references to be compared.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} [stack] Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray_1(object),
        othIsArr = isArray_1(other),
        objTag = objIsArr ? arrayTag : _getTag(object),
        othTag = othIsArr ? arrayTag : _getTag(other);

    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;

    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && isBuffer_1(object)) {
      if (!isBuffer_1(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new _Stack);
      return (objIsArr || isTypedArray_1(object))
        ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)
        : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
      var objIsWrapped = objIsObj && hasOwnProperty$1.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty$1.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;

        stack || (stack = new _Stack);
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new _Stack);
    return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  var _baseIsEqualDeep = baseIsEqualDeep;

  /**
   * The base implementation of `_.isEqual` which supports partial comparisons
   * and tracks traversed objects.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Unordered comparison
   *  2 - Partial comparison
   * @param {Function} [customizer] The function to customize comparisons.
   * @param {Object} [stack] Tracks traversed `value` and `other` objects.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   */
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || (!isObjectLike_1(value) && !isObjectLike_1(other))) {
      return value !== value && other !== other;
    }
    return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  var _baseIsEqual = baseIsEqual;

  /**
   * Performs a deep comparison between two values to determine if they are
   * equivalent.
   *
   * **Note:** This method supports comparing arrays, array buffers, booleans,
   * date objects, error objects, maps, numbers, `Object` objects, regexes,
   * sets, strings, symbols, and typed arrays. `Object` objects are compared
   * by their own, not inherited, enumerable properties. Functions and DOM
   * nodes are compared by strict equality, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.isEqual(object, other);
   * // => true
   *
   * object === other;
   * // => false
   */
  function isEqual(value, other) {
    return _baseIsEqual(value, other);
  }

  var isEqual_1 = isEqual;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG$1 = 1,
      COMPARE_UNORDERED_FLAG$1 = 2;

  /**
   * The base implementation of `_.isMatch` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to inspect.
   * @param {Object} source The object of property values to match.
   * @param {Array} matchData The property names, values, and compare flags to match.
   * @param {Function} [customizer] The function to customize comparisons.
   * @returns {boolean} Returns `true` if `object` is a match, else `false`.
   */
  function baseIsMatch(object, source, matchData, customizer) {
    var index = matchData.length,
        length = index,
        noCustomizer = !customizer;

    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index--) {
      var data = matchData[index];
      if ((noCustomizer && data[2])
            ? data[1] !== object[data[0]]
            : !(data[0] in object)
          ) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0],
          objValue = object[key],
          srcValue = data[1];

      if (noCustomizer && data[2]) {
        if (objValue === undefined && !(key in object)) {
          return false;
        }
      } else {
        var stack = new _Stack;
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === undefined
              ? _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack)
              : result
            )) {
          return false;
        }
      }
    }
    return true;
  }

  var _baseIsMatch = baseIsMatch;

  /**
   * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` if suitable for strict
   *  equality comparisons, else `false`.
   */
  function isStrictComparable(value) {
    return value === value && !isObject_1(value);
  }

  var _isStrictComparable = isStrictComparable;

  /**
   * Gets the property names, values, and compare flags of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the match data of `object`.
   */
  function getMatchData(object) {
    var result = keys_1(object),
        length = result.length;

    while (length--) {
      var key = result[length],
          value = object[key];

      result[length] = [key, value, _isStrictComparable(value)];
    }
    return result;
  }

  var _getMatchData = getMatchData;

  /**
   * A specialized version of `matchesProperty` for source values suitable
   * for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function matchesStrictComparable(key, srcValue) {
    return function(object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue &&
        (srcValue !== undefined || (key in Object(object)));
    };
  }

  var _matchesStrictComparable = matchesStrictComparable;

  /**
   * The base implementation of `_.matches` which doesn't clone `source`.
   *
   * @private
   * @param {Object} source The object of property values to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatches(source) {
    var matchData = _getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return _matchesStrictComparable(matchData[0][0], matchData[0][1]);
    }
    return function(object) {
      return object === source || _baseIsMatch(object, source, matchData);
    };
  }

  var _baseMatches = baseMatches;

  /** `Object#toString` result references. */
  var symbolTag = '[object Symbol]';

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol(value) {
    return typeof value == 'symbol' ||
      (isObjectLike_1(value) && _baseGetTag(value) == symbolTag);
  }

  var isSymbol_1 = isSymbol;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;

  /**
   * Checks if `value` is a property name and not a property path.
   *
   * @private
   * @param {*} value The value to check.
   * @param {Object} [object] The object to query keys on.
   * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
   */
  function isKey(value, object) {
    if (isArray_1(value)) {
      return false;
    }
    var type = typeof value;
    if (type == 'number' || type == 'symbol' || type == 'boolean' ||
        value == null || isSymbol_1(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
      (object != null && value in Object(object));
  }

  var _isKey = isKey;

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /**
   * Creates a function that memoizes the result of `func`. If `resolver` is
   * provided, it determines the cache key for storing the result based on the
   * arguments provided to the memoized function. By default, the first argument
   * provided to the memoized function is used as the map cache key. The `func`
   * is invoked with the `this` binding of the memoized function.
   *
   * **Note:** The cache is exposed as the `cache` property on the memoized
   * function. Its creation may be customized by replacing the `_.memoize.Cache`
   * constructor with one whose instances implement the
   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
   * method interface of `clear`, `delete`, `get`, `has`, and `set`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to have its output memoized.
   * @param {Function} [resolver] The function to resolve the cache key.
   * @returns {Function} Returns the new memoized function.
   * @example
   *
   * var object = { 'a': 1, 'b': 2 };
   * var other = { 'c': 3, 'd': 4 };
   *
   * var values = _.memoize(_.values);
   * values(object);
   * // => [1, 2]
   *
   * values(other);
   * // => [3, 4]
   *
   * object.a = 2;
   * values(object);
   * // => [1, 2]
   *
   * // Modify the result cache.
   * values.cache.set(object, ['a', 'b']);
   * values(object);
   * // => ['a', 'b']
   *
   * // Replace `_.memoize.Cache`.
   * _.memoize.Cache = WeakMap;
   */
  function memoize(func, resolver) {
    if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;

      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize.Cache || _MapCache);
    return memoized;
  }

  // Expose `MapCache`.
  memoize.Cache = _MapCache;

  var memoize_1 = memoize;

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /**
   * A specialized version of `_.memoize` which clears the memoized function's
   * cache when it exceeds `MAX_MEMOIZE_SIZE`.
   *
   * @private
   * @param {Function} func The function to have its output memoized.
   * @returns {Function} Returns the new memoized function.
   */
  function memoizeCapped(func) {
    var result = memoize_1(func, function(key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });

    var cache = result.cache;
    return result;
  }

  var _memoizeCapped = memoizeCapped;

  /** Used to match property names within property paths. */
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Converts `string` to a property path array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the property path array.
   */
  var stringToPath = _memoizeCapped(function(string) {
    var result = [];
    if (string.charCodeAt(0) === 46 /* . */) {
      result.push('');
    }
    string.replace(rePropName, function(match, number, quote, subString) {
      result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
    });
    return result;
  });

  var _stringToPath = stringToPath;

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  var _arrayMap = arrayMap;

  /** Used as references for various `Number` constants. */
  var INFINITY$3 = 1 / 0;

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = _Symbol ? _Symbol.prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  /**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') {
      return value;
    }
    if (isArray_1(value)) {
      // Recursively convert values (susceptible to call stack limits).
      return _arrayMap(value, baseToString) + '';
    }
    if (isSymbol_1(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY$3) ? '-0' : result;
  }

  var _baseToString = baseToString;

  /**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */
  function toString(value) {
    return value == null ? '' : _baseToString(value);
  }

  var toString_1 = toString;

  /**
   * Casts `value` to a path array if it's not one.
   *
   * @private
   * @param {*} value The value to inspect.
   * @param {Object} [object] The object to query keys on.
   * @returns {Array} Returns the cast property path array.
   */
  function castPath(value, object) {
    if (isArray_1(value)) {
      return value;
    }
    return _isKey(value, object) ? [value] : _stringToPath(toString_1(value));
  }

  var _castPath = castPath;

  /** Used as references for various `Number` constants. */
  var INFINITY$2 = 1 / 0;

  /**
   * Converts `value` to a string key if it's not a string or symbol.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {string|symbol} Returns the key.
   */
  function toKey(value) {
    if (typeof value == 'string' || isSymbol_1(value)) {
      return value;
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY$2) ? '-0' : result;
  }

  var _toKey = toKey;

  /**
   * The base implementation of `_.get` without support for default values.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @returns {*} Returns the resolved value.
   */
  function baseGet(object, path) {
    path = _castPath(path, object);

    var index = 0,
        length = path.length;

    while (object != null && index < length) {
      object = object[_toKey(path[index++])];
    }
    return (index && index == length) ? object : undefined;
  }

  var _baseGet = baseGet;

  /**
   * Gets the value at `path` of `object`. If the resolved value is
   * `undefined`, the `defaultValue` is returned in its place.
   *
   * @static
   * @memberOf _
   * @since 3.7.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @param {*} [defaultValue] The value returned for `undefined` resolved values.
   * @returns {*} Returns the resolved value.
   * @example
   *
   * var object = { 'a': [{ 'b': { 'c': 3 } }] };
   *
   * _.get(object, 'a[0].b.c');
   * // => 3
   *
   * _.get(object, ['a', '0', 'b', 'c']);
   * // => 3
   *
   * _.get(object, 'a.b.c', 'default');
   * // => 'default'
   */
  function get$1(object, path, defaultValue) {
    var result = object == null ? undefined : _baseGet(object, path);
    return result === undefined ? defaultValue : result;
  }

  var get_1 = get$1;

  /**
   * The base implementation of `_.hasIn` without support for deep paths.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {Array|string} key The key to check.
   * @returns {boolean} Returns `true` if `key` exists, else `false`.
   */
  function baseHasIn(object, key) {
    return object != null && key in Object(object);
  }

  var _baseHasIn = baseHasIn;

  /**
   * Checks if `path` exists on `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @param {Function} hasFunc The function to check properties.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   */
  function hasPath(object, path, hasFunc) {
    path = _castPath(path, object);

    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = _toKey(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength_1(length) && _isIndex(key, length) &&
      (isArray_1(object) || isArguments_1(object));
  }

  var _hasPath = hasPath;

  /**
   * Checks if `path` is a direct or inherited property of `object`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   * @example
   *
   * var object = _.create({ 'a': _.create({ 'b': 2 }) });
   *
   * _.hasIn(object, 'a');
   * // => true
   *
   * _.hasIn(object, 'a.b');
   * // => true
   *
   * _.hasIn(object, ['a', 'b']);
   * // => true
   *
   * _.hasIn(object, 'b');
   * // => false
   */
  function hasIn(object, path) {
    return object != null && _hasPath(object, path, _baseHasIn);
  }

  var hasIn_1 = hasIn;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
   *
   * @private
   * @param {string} path The path of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatchesProperty(path, srcValue) {
    if (_isKey(path) && _isStrictComparable(srcValue)) {
      return _matchesStrictComparable(_toKey(path), srcValue);
    }
    return function(object) {
      var objValue = get_1(object, path);
      return (objValue === undefined && objValue === srcValue)
        ? hasIn_1(object, path)
        : _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }

  var _baseMatchesProperty = baseMatchesProperty;

  /**
   * This method returns the first argument it receives.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {*} value Any value.
   * @returns {*} Returns `value`.
   * @example
   *
   * var object = { 'a': 1 };
   *
   * console.log(_.identity(object) === object);
   * // => true
   */
  function identity(value) {
    return value;
  }

  var identity_1 = identity;

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  var _baseProperty = baseProperty;

  /**
   * A specialized version of `baseProperty` which supports deep paths.
   *
   * @private
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyDeep(path) {
    return function(object) {
      return _baseGet(object, path);
    };
  }

  var _basePropertyDeep = basePropertyDeep;

  /**
   * Creates a function that returns the value at `path` of a given object.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   * @example
   *
   * var objects = [
   *   { 'a': { 'b': 2 } },
   *   { 'a': { 'b': 1 } }
   * ];
   *
   * _.map(objects, _.property('a.b'));
   * // => [2, 1]
   *
   * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
   * // => [1, 2]
   */
  function property(path) {
    return _isKey(path) ? _baseProperty(_toKey(path)) : _basePropertyDeep(path);
  }

  var property_1 = property;

  /**
   * The base implementation of `_.iteratee`.
   *
   * @private
   * @param {*} [value=_.identity] The value to convert to an iteratee.
   * @returns {Function} Returns the iteratee.
   */
  function baseIteratee(value) {
    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
    if (typeof value == 'function') {
      return value;
    }
    if (value == null) {
      return identity_1;
    }
    if (typeof value == 'object') {
      return isArray_1(value)
        ? _baseMatchesProperty(value[0], value[1])
        : _baseMatches(value);
    }
    return property_1(value);
  }

  var _baseIteratee = baseIteratee;

  /**
   * Gets the last element of `array`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to query.
   * @returns {*} Returns the last element of `array`.
   * @example
   *
   * _.last([1, 2, 3]);
   * // => 3
   */
  function last(array) {
    var length = array == null ? 0 : array.length;
    return length ? array[length - 1] : undefined;
  }

  var last_1 = last;

  /**
   * The base implementation of `_.slice` without an iteratee call guard.
   *
   * @private
   * @param {Array} array The array to slice.
   * @param {number} [start=0] The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the slice of `array`.
   */
  function baseSlice(array, start, end) {
    var index = -1,
        length = array.length;

    if (start < 0) {
      start = -start > length ? 0 : (length + start);
    }
    end = end > length ? length : end;
    if (end < 0) {
      end += length;
    }
    length = start > end ? 0 : ((end - start) >>> 0);
    start >>>= 0;

    var result = Array(length);
    while (++index < length) {
      result[index] = array[index + start];
    }
    return result;
  }

  var _baseSlice = baseSlice;

  /**
   * Gets the parent value at `path` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} path The path to get the parent value of.
   * @returns {*} Returns the parent value.
   */
  function parent(object, path) {
    return path.length < 2 ? object : _baseGet(object, _baseSlice(path, 0, -1));
  }

  var _parent = parent;

  /**
   * The base implementation of `_.unset`.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {Array|string} path The property path to unset.
   * @returns {boolean} Returns `true` if the property is deleted, else `false`.
   */
  function baseUnset(object, path) {
    path = _castPath(path, object);
    object = _parent(object, path);
    return object == null || delete object[_toKey(last_1(path))];
  }

  var _baseUnset = baseUnset;

  /** Used for built-in method references. */
  var arrayProto = Array.prototype;

  /** Built-in value references. */
  var splice = arrayProto.splice;

  /**
   * The base implementation of `_.pullAt` without support for individual
   * indexes or capturing the removed elements.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {number[]} indexes The indexes of elements to remove.
   * @returns {Array} Returns `array`.
   */
  function basePullAt(array, indexes) {
    var length = array ? indexes.length : 0,
        lastIndex = length - 1;

    while (length--) {
      var index = indexes[length];
      if (length == lastIndex || index !== previous) {
        var previous = index;
        if (_isIndex(index)) {
          splice.call(array, index, 1);
        } else {
          _baseUnset(array, index);
        }
      }
    }
    return array;
  }

  var _basePullAt = basePullAt;

  /**
   * Removes all elements from `array` that `predicate` returns truthy for
   * and returns an array of the removed elements. The predicate is invoked
   * with three arguments: (value, index, array).
   *
   * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
   * to pull elements from an array by value.
   *
   * @static
   * @memberOf _
   * @since 2.0.0
   * @category Array
   * @param {Array} array The array to modify.
   * @param {Function} [predicate=_.identity] The function invoked per iteration.
   * @returns {Array} Returns the new array of removed elements.
   * @example
   *
   * var array = [1, 2, 3, 4];
   * var evens = _.remove(array, function(n) {
   *   return n % 2 == 0;
   * });
   *
   * console.log(array);
   * // => [1, 3]
   *
   * console.log(evens);
   * // => [2, 4]
   */
  function remove$1(array, predicate) {
    var result = [];
    if (!(array && array.length)) {
      return result;
    }
    var index = -1,
        indexes = [],
        length = array.length;

    predicate = _baseIteratee(predicate);
    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result.push(value);
        indexes.push(index);
      }
    }
    _basePullAt(array, indexes);
    return result;
  }

  var remove_1 = remove$1;

  var dayjs_min = createCommonjsModule(function (module, exports) {
  !function(t,e){module.exports=e();}(commonjsGlobal,function(){var t="millisecond",e="second",n="minute",r="hour",i="day",s="week",u="month",a="quarter",o="year",f="date",h=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,c=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},$=function(t,e,n){var r=String(t);return !r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},l={s:$,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return (e<=0?"+":"-")+$(r,2,"0")+":"+$(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return -t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return +(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return {M:u,y:o,w:s,d:i,D:f,h:r,m:n,s:e,ms:t,Q:a}[h]||String(h||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},y="en",M={};M[y]=d;var m=function(t){return t instanceof S},D=function(t,e,n){var r;if(!t)return y;if("string"==typeof t)M[t]&&(r=t),e&&(M[t]=e,r=t);else {var i=t.name;M[i]=t,r=i;}return !n&&r&&(y=r),r||!n&&y},v=function(t,e){if(m(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new S(n)},g=l;g.l=D,g.i=m,g.w=function(t,e){return v(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var S=function(){function d(t){this.$L=D(t.locale,null,!0),this.parse(t);}var $=d.prototype;return $.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(g.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init();},$.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds();},$.$utils=function(){return g},$.isValid=function(){return !("Invalid Date"===this.$d.toString())},$.isSame=function(t,e){var n=v(t);return this.startOf(e)<=n&&n<=this.endOf(e)},$.isAfter=function(t,e){return v(t)<this.startOf(e)},$.isBefore=function(t,e){return this.endOf(e)<v(t)},$.$g=function(t,e,n){return g.u(t)?this[e]:this.set(n,t)},$.unix=function(){return Math.floor(this.valueOf()/1e3)},$.valueOf=function(){return this.$d.getTime()},$.startOf=function(t,a){var h=this,c=!!g.u(a)||a,d=g.p(t),$=function(t,e){var n=g.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return c?n:n.endOf(i)},l=function(t,e){return g.w(h.toDate()[t].apply(h.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},y=this.$W,M=this.$M,m=this.$D,D="set"+(this.$u?"UTC":"");switch(d){case o:return c?$(1,0):$(31,11);case u:return c?$(1,M):$(0,M+1);case s:var v=this.$locale().weekStart||0,S=(y<v?y+7:y)-v;return $(c?m-S:m+(6-S),M);case i:case f:return l(D+"Hours",0);case r:return l(D+"Minutes",1);case n:return l(D+"Seconds",2);case e:return l(D+"Milliseconds",3);default:return this.clone()}},$.endOf=function(t){return this.startOf(t,!1)},$.$set=function(s,a){var h,c=g.p(s),d="set"+(this.$u?"UTC":""),$=(h={},h[i]=d+"Date",h[f]=d+"Date",h[u]=d+"Month",h[o]=d+"FullYear",h[r]=d+"Hours",h[n]=d+"Minutes",h[e]=d+"Seconds",h[t]=d+"Milliseconds",h)[c],l=c===i?this.$D+(a-this.$W):a;if(c===u||c===o){var y=this.clone().set(f,1);y.$d[$](l),y.init(),this.$d=y.set(f,Math.min(this.$D,y.daysInMonth())).$d;}else $&&this.$d[$](l);return this.init(),this},$.set=function(t,e){return this.clone().$set(t,e)},$.get=function(t){return this[g.p(t)]()},$.add=function(t,a){var f,h=this;t=Number(t);var c=g.p(a),d=function(e){var n=v(h);return g.w(n.date(n.date()+Math.round(e*t)),h)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(f={},f[n]=6e4,f[r]=36e5,f[e]=1e3,f)[c]||1,l=this.$d.getTime()+t*$;return g.w(l,this)},$.subtract=function(t,e){return this.add(-1*t,e)},$.format=function(t){var e=this;if(!this.isValid())return "Invalid Date";var n=t||"YYYY-MM-DDTHH:mm:ssZ",r=g.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return g.s(s%12||12,t,"0")},$=i.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:g.s(a+1,2,"0"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:g.s(this.$D,2,"0"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:g.s(s,2,"0"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:g.s(u,2,"0"),s:String(this.$s),ss:g.s(this.$s,2,"0"),SSS:g.s(this.$ms,3,"0"),Z:r};return n.replace(c,function(t,e){return e||l[t]||r.replace(":","")})},$.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},$.diff=function(t,f,h){var c,d=g.p(f),$=v(t),l=6e4*($.utcOffset()-this.utcOffset()),y=this-$,M=g.m(this,$);return M=(c={},c[o]=M/12,c[u]=M,c[a]=M/3,c[s]=(y-l)/6048e5,c[i]=(y-l)/864e5,c[r]=y/36e5,c[n]=y/6e4,c[e]=y/1e3,c)[d]||y,h?M:g.a(M)},$.daysInMonth=function(){return this.endOf(u).$D},$.$locale=function(){return M[this.$L]},$.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=D(t,e,!0);return r&&(n.$L=r),n},$.clone=function(){return g.w(this.$d,this)},$.toDate=function(){return new Date(this.valueOf())},$.toJSON=function(){return this.isValid()?this.toISOString():null},$.toISOString=function(){return this.$d.toISOString()},$.toString=function(){return this.$d.toUTCString()},d}(),p=S.prototype;return v.prototype=p,[["$ms",t],["$s",e],["$m",n],["$H",r],["$W",i],["$M",u],["$y",o],["$D",f]].forEach(function(t){p[t[1]]=function(e){return this.$g(e,t[0],t[1])};}),v.extend=function(t,e){return t.$i||(t(e,S,v),t.$i=!0),v},v.locale=D,v.isDayjs=m,v.unix=function(t){return v(1e3*t)},v.en=M[y],v.Ls=M,v.p={},v});
  });

  var utc = createCommonjsModule(function (module, exports) {
  !function(t,i){module.exports=i();}(commonjsGlobal,function(){return function(t,i,e){var s=i.prototype;e.utc=function(t){return new i({date:t,utc:!0,args:arguments})},s.utc=function(t){var i=e(this.toDate(),{locale:this.$L,utc:!0});return t?i.add(this.utcOffset(),"minute"):i},s.local=function(){return e(this.toDate(),{locale:this.$L,utc:!1})};var f=s.parse;s.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),f.call(this,t);};var n=s.init;s.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds();}else n.call(this);};var u=s.utcOffset;s.utcOffset=function(t,i){var e=this.$utils().u;if(e(t))return this.$u?0:e(this.$offset)?u.call(this):this.$offset;var s=Math.abs(t)<=16?60*t:t,f=this;if(i)return f.$offset=s,f.$u=0===t,f;if(0!==t){var n=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(f=this.local().add(s+n,"minute")).$offset=s,f.$x.$localOffset=n;}else f=this.utc();return f};var o=s.format;s.format=function(t){var i=t||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return o.call(this,i)},s.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||(new Date).getTimezoneOffset());return this.$d.valueOf()-6e4*t},s.isUTC=function(){return !!this.$u},s.toISOString=function(){return this.toDate().toISOString()},s.toString=function(){return this.toDate().toUTCString()};var r=s.toDate;s.toDate=function(t){return "s"===t&&this.$offset?e(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():r.call(this)};var a=s.diff;s.diff=function(t,i,s){if(t&&this.$u===t.$u)return a.call(this,t,i,s);var f=this.local(),n=e(t).local();return a.call(f,n,i,s)};}});
  });

  var minMax = createCommonjsModule(function (module, exports) {
  !function(n,e){module.exports=e();}(commonjsGlobal,function(){return function(n,e,t){var i=function(n,e){if(!e||!e.length||!e[0]||1===e.length&&!e[0].length)return null;var t;1===e.length&&e[0].length>0&&(e=e[0]),t=e[0];for(var i=1;i<e.length;i+=1)e[i].isValid()&&!e[i][n](t)||(t=e[i]);return t};t.max=function(){var n=[].slice.call(arguments,0);return i("isAfter",n)},t.min=function(){var n=[].slice.call(arguments,0);return i("isBefore",n)};}});
  });

  var relativeTime = createCommonjsModule(function (module, exports) {
  !function(r,t){module.exports=t();}(commonjsGlobal,function(){return function(r,t,e){r=r||{};var n=t.prototype,o={future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};function i(r,t,e,o){return n.fromToBase(r,t,e,o)}e.en.relativeTime=o,n.fromToBase=function(t,n,i,d,u){for(var a,f,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:"s",r:44,d:"second"},{l:"m",r:89},{l:"mm",r:44,d:"minute"},{l:"h",r:89},{l:"hh",r:21,d:"hour"},{l:"d",r:35},{l:"dd",r:25,d:"day"},{l:"M",r:45},{l:"MM",r:10,d:"month"},{l:"y",r:17},{l:"yy",d:"year"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(a=d?e(t).diff(i,y.d,!0):i.diff(t,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(a));if(s=a>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(""+p)),f="string"==typeof v?v.replace("%d",p):v(p,n,y.l,s);break}}if(n)return f;var M=s?l.future:l.past;return "function"==typeof M?M(f):M.replace("%s",f)},n.to=function(r,t){return i(r,t,this,!0)},n.from=function(r,t){return i(r,t,this)};var d=function(r){return r.$u?e.utc():e()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)};}});
  });

  /**
   * Casts `array` to a slice if it's needed.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {number} start The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the cast slice.
   */
  function castSlice(array, start, end) {
    var length = array.length;
    end = end === undefined ? length : end;
    return (!start && end >= length) ? array : _baseSlice(array, start, end);
  }

  var _castSlice = castSlice;

  /** Used to compose unicode character classes. */
  var rsAstralRange$2 = '\\ud800-\\udfff',
      rsComboMarksRange$2 = '\\u0300-\\u036f',
      reComboHalfMarksRange$2 = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange$2 = '\\u20d0-\\u20ff',
      rsComboRange$2 = rsComboMarksRange$2 + reComboHalfMarksRange$2 + rsComboSymbolsRange$2,
      rsVarRange$2 = '\\ufe0e\\ufe0f';

  /** Used to compose unicode capture groups. */
  var rsZWJ$2 = '\\u200d';

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ$2 + rsAstralRange$2  + rsComboRange$2 + rsVarRange$2 + ']');

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  var _hasUnicode = hasUnicode;

  /** `Object#toString` result references. */
  var regexpTag = '[object RegExp]';

  /**
   * The base implementation of `_.isRegExp` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
   */
  function baseIsRegExp(value) {
    return isObjectLike_1(value) && _baseGetTag(value) == regexpTag;
  }

  var _baseIsRegExp = baseIsRegExp;

  /* Node.js helper references. */
  var nodeIsRegExp = _nodeUtil && _nodeUtil.isRegExp;

  /**
   * Checks if `value` is classified as a `RegExp` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
   * @example
   *
   * _.isRegExp(/abc/);
   * // => true
   *
   * _.isRegExp('/abc/');
   * // => false
   */
  var isRegExp = nodeIsRegExp ? _baseUnary(nodeIsRegExp) : _baseIsRegExp;

  var isRegExp_1 = isRegExp;

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = _baseProperty('length');

  var _asciiSize = asciiSize;

  /** Used to compose unicode character classes. */
  var rsAstralRange$1 = '\\ud800-\\udfff',
      rsComboMarksRange$1 = '\\u0300-\\u036f',
      reComboHalfMarksRange$1 = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange$1 = '\\u20d0-\\u20ff',
      rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1,
      rsVarRange$1 = '\\ufe0e\\ufe0f';

  /** Used to compose unicode capture groups. */
  var rsAstral$1 = '[' + rsAstralRange$1 + ']',
      rsCombo$1 = '[' + rsComboRange$1 + ']',
      rsFitz$1 = '\\ud83c[\\udffb-\\udfff]',
      rsModifier$1 = '(?:' + rsCombo$1 + '|' + rsFitz$1 + ')',
      rsNonAstral$1 = '[^' + rsAstralRange$1 + ']',
      rsRegional$1 = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair$1 = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsZWJ$1 = '\\u200d';

  /** Used to compose unicode regexes. */
  var reOptMod$1 = rsModifier$1 + '?',
      rsOptVar$1 = '[' + rsVarRange$1 + ']?',
      rsOptJoin$1 = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral$1, rsRegional$1, rsSurrPair$1].join('|') + ')' + rsOptVar$1 + reOptMod$1 + ')*',
      rsSeq$1 = rsOptVar$1 + reOptMod$1 + rsOptJoin$1,
      rsSymbol$1 = '(?:' + [rsNonAstral$1 + rsCombo$1 + '?', rsCombo$1, rsRegional$1, rsSurrPair$1, rsAstral$1].join('|') + ')';

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode$1 = RegExp(rsFitz$1 + '(?=' + rsFitz$1 + ')|' + rsSymbol$1 + rsSeq$1, 'g');

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode$1.lastIndex = 0;
    while (reUnicode$1.test(string)) {
      ++result;
    }
    return result;
  }

  var _unicodeSize = unicodeSize;

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return _hasUnicode(string)
      ? _unicodeSize(string)
      : _asciiSize(string);
  }

  var _stringSize = stringSize;

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  var _asciiToArray = asciiToArray;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsVarRange = '\\ufe0e\\ufe0f';

  /** Used to compose unicode capture groups. */
  var rsAstral = '[' + rsAstralRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  var _unicodeToArray = unicodeToArray;

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return _hasUnicode(string)
      ? _unicodeToArray(string)
      : _asciiToArray(string);
  }

  var _stringToArray = stringToArray;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  var _trimmedEndIndex = trimmedEndIndex;

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, _trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  var _baseTrim = baseTrim;

  /** Used as references for various `Number` constants. */
  var NAN = 0 / 0;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt = parseInt;

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }
    if (isSymbol_1(value)) {
      return NAN;
    }
    if (isObject_1(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject_1(other) ? (other + '') : other;
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }
    value = _baseTrim(value);
    var isBinary = reIsBinary.test(value);
    return (isBinary || reIsOctal.test(value))
      ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
      : (reIsBadHex.test(value) ? NAN : +value);
  }

  var toNumber_1 = toNumber;

  /** Used as references for various `Number` constants. */
  var INFINITY$1 = 1 / 0,
      MAX_INTEGER = 1.7976931348623157e+308;

  /**
   * Converts `value` to a finite number.
   *
   * @static
   * @memberOf _
   * @since 4.12.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted number.
   * @example
   *
   * _.toFinite(3.2);
   * // => 3.2
   *
   * _.toFinite(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toFinite(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toFinite('3.2');
   * // => 3.2
   */
  function toFinite(value) {
    if (!value) {
      return value === 0 ? value : 0;
    }
    value = toNumber_1(value);
    if (value === INFINITY$1 || value === -INFINITY$1) {
      var sign = (value < 0 ? -1 : 1);
      return sign * MAX_INTEGER;
    }
    return value === value ? value : 0;
  }

  var toFinite_1 = toFinite;

  /**
   * Converts `value` to an integer.
   *
   * **Note:** This method is loosely based on
   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted integer.
   * @example
   *
   * _.toInteger(3.2);
   * // => 3
   *
   * _.toInteger(Number.MIN_VALUE);
   * // => 0
   *
   * _.toInteger(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toInteger('3.2');
   * // => 3
   */
  function toInteger(value) {
    var result = toFinite_1(value),
        remainder = result % 1;

    return result === result ? (remainder ? result - remainder : result) : 0;
  }

  var toInteger_1 = toInteger;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /**
   * Truncates `string` if it's longer than the given maximum string length.
   * The last characters of the truncated string are replaced with the omission
   * string which defaults to "...".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category String
   * @param {string} [string=''] The string to truncate.
   * @param {Object} [options={}] The options object.
   * @param {number} [options.length=30] The maximum string length.
   * @param {string} [options.omission='...'] The string to indicate text is omitted.
   * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
   * @returns {string} Returns the truncated string.
   * @example
   *
   * _.truncate('hi-diddly-ho there, neighborino');
   * // => 'hi-diddly-ho there, neighbo...'
   *
   * _.truncate('hi-diddly-ho there, neighborino', {
   *   'length': 24,
   *   'separator': ' '
   * });
   * // => 'hi-diddly-ho there,...'
   *
   * _.truncate('hi-diddly-ho there, neighborino', {
   *   'length': 24,
   *   'separator': /,? +/
   * });
   * // => 'hi-diddly-ho there...'
   *
   * _.truncate('hi-diddly-ho there, neighborino', {
   *   'omission': ' [...]'
   * });
   * // => 'hi-diddly-ho there, neig [...]'
   */
  function truncate(string, options) {
    var length = DEFAULT_TRUNC_LENGTH,
        omission = DEFAULT_TRUNC_OMISSION;

    if (isObject_1(options)) {
      var separator = 'separator' in options ? options.separator : separator;
      length = 'length' in options ? toInteger_1(options.length) : length;
      omission = 'omission' in options ? _baseToString(options.omission) : omission;
    }
    string = toString_1(string);

    var strLength = string.length;
    if (_hasUnicode(string)) {
      var strSymbols = _stringToArray(string);
      strLength = strSymbols.length;
    }
    if (length >= strLength) {
      return string;
    }
    var end = length - _stringSize(omission);
    if (end < 1) {
      return omission;
    }
    var result = strSymbols
      ? _castSlice(strSymbols, 0, end).join('')
      : string.slice(0, end);

    if (separator === undefined) {
      return result + omission;
    }
    if (strSymbols) {
      end += (result.length - end);
    }
    if (isRegExp_1(separator)) {
      if (string.slice(end).search(separator)) {
        var match,
            substring = result;

        if (!separator.global) {
          separator = RegExp(separator.source, toString_1(reFlags.exec(separator)) + 'g');
        }
        separator.lastIndex = 0;
        while ((match = separator.exec(substring))) {
          var newEnd = match.index;
        }
        result = result.slice(0, newEnd === undefined ? end : newEnd);
      }
    } else if (string.indexOf(_baseToString(separator), end) != end) {
      var index = result.lastIndexOf(separator);
      if (index > -1) {
        result = result.slice(0, index);
      }
    }
    return result + omission;
  }

  var truncate_1 = truncate;

  var inherits_1 = inherits$1;
  function inherits$1(parent, child) {
  	var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  	var extended = Object.create(parent.prototype);
  	for (var p in props) {
  		extended[p] = props[p];
  	}
  	extended.constructor = child;
  	child.prototype = extended;
  	return child;
  }

  var _class = /*#__PURE__*/Object.defineProperty({
  	inherits: inherits_1
  }, '__esModule', {value: true});

  var _typeof$3 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var defaults = {
  	defaultProtocol: 'http',
  	events: null,
  	format: noop$2,
  	formatHref: noop$2,
  	nl2br: false,
  	tagName: 'a',
  	target: typeToTarget,
  	validate: true,
  	ignoreTags: [],
  	attributes: null,
  	className: 'linkified' // Deprecated value - no default class will be provided in the future
  };

  var defaults_1 = defaults;
  var Options_1 = Options;
  var contains_1 = contains;


  function Options(opts) {
  	opts = opts || {};

  	this.defaultProtocol = opts.hasOwnProperty('defaultProtocol') ? opts.defaultProtocol : defaults.defaultProtocol;
  	this.events = opts.hasOwnProperty('events') ? opts.events : defaults.events;
  	this.format = opts.hasOwnProperty('format') ? opts.format : defaults.format;
  	this.formatHref = opts.hasOwnProperty('formatHref') ? opts.formatHref : defaults.formatHref;
  	this.nl2br = opts.hasOwnProperty('nl2br') ? opts.nl2br : defaults.nl2br;
  	this.tagName = opts.hasOwnProperty('tagName') ? opts.tagName : defaults.tagName;
  	this.target = opts.hasOwnProperty('target') ? opts.target : defaults.target;
  	this.validate = opts.hasOwnProperty('validate') ? opts.validate : defaults.validate;
  	this.ignoreTags = [];

  	// linkAttributes and linkClass is deprecated
  	this.attributes = opts.attributes || opts.linkAttributes || defaults.attributes;
  	this.className = opts.hasOwnProperty('className') ? opts.className : opts.linkClass || defaults.className;

  	// Make all tags names upper case
  	var ignoredTags = opts.hasOwnProperty('ignoreTags') ? opts.ignoreTags : defaults.ignoreTags;
  	for (var i = 0; i < ignoredTags.length; i++) {
  		this.ignoreTags.push(ignoredTags[i].toUpperCase());
  	}
  }

  Options.prototype = {
  	/**
    * Given the token, return all options for how it should be displayed
    */
  	resolve: function resolve(token) {
  		var href = token.toHref(this.defaultProtocol);
  		return {
  			formatted: this.get('format', token.toString(), token),
  			formattedHref: this.get('formatHref', href, token),
  			tagName: this.get('tagName', href, token),
  			className: this.get('className', href, token),
  			target: this.get('target', href, token),
  			events: this.getObject('events', href, token),
  			attributes: this.getObject('attributes', href, token)
  		};
  	},


  	/**
    * Returns true or false based on whether a token should be displayed as a
    * link based on the user options. By default,
    */
  	check: function check(token) {
  		return this.get('validate', token.toString(), token);
  	},


  	// Private methods

  	/**
    * Resolve an option's value based on the value of the option and the given
    * params.
    * @param {String} key Name of option to use
    * @param operator will be passed to the target option if it's method
    * @param {MultiToken} token The token from linkify.tokenize
    */
  	get: function get(key, operator, token) {
  		var optionValue = void 0,
  		    option = this[key];
  		if (!option) {
  			return option;
  		}

  		switch (typeof option === 'undefined' ? 'undefined' : _typeof$3(option)) {
  			case 'function':
  				return option(operator, token.type);
  			case 'object':
  				optionValue = option.hasOwnProperty(token.type) ? option[token.type] : defaults[key];
  				return typeof optionValue === 'function' ? optionValue(operator, token.type) : optionValue;
  		}

  		return option;
  	},
  	getObject: function getObject(key, operator, token) {
  		var option = this[key];
  		return typeof option === 'function' ? option(operator, token.type) : option;
  	}
  };

  /**
   * Quick indexOf replacement for checking the ignoreTags option
   */
  function contains(arr, value) {
  	for (var i = 0; i < arr.length; i++) {
  		if (arr[i] === value) {
  			return true;
  		}
  	}
  	return false;
  }

  function noop$2(val) {
  	return val;
  }

  function typeToTarget(href, type) {
  	return type === 'url' ? '_blank' : null;
  }

  var options = /*#__PURE__*/Object.defineProperty({
  	defaults: defaults_1,
  	Options: Options_1,
  	contains: contains_1
  }, '__esModule', {value: true});

  var state = createCommonjsModule(function (module, exports) {

  exports.__esModule = true;
  exports.stateify = exports.TokenState = exports.CharacterState = undefined;



  function createStateClass() {
  	return function (tClass) {
  		this.j = [];
  		this.T = tClass || null;
  	};
  }

  /**
  	A simple state machine that can emit token classes

  	The `j` property in this class refers to state jumps. It's a
  	multidimensional array where for each element:

  	* index [0] is a symbol or class of symbols to transition to.
  	* index [1] is a State instance which matches

  	The type of symbol will depend on the target implementation for this class.
  	In Linkify, we have a two-stage scanner. Each stage uses this state machine
  	but with a slighly different (polymorphic) implementation.

  	The `T` property refers to the token class.

  	TODO: Can the `on` and `next` methods be combined?

  	@class BaseState
  */
  var BaseState = createStateClass();
  BaseState.prototype = {
  	defaultTransition: false,

  	/**
   	@method constructor
   	@param {Class} tClass Pass in the kind of token to emit if there are
   		no jumps after this state and the state is accepting.
   */

  	/**
   	On the given symbol(s), this machine should go to the given state
   		@method on
   	@param {Array|Mixed} symbol
   	@param {BaseState} state Note that the type of this state should be the
   		same as the current instance (i.e., don't pass in a different
   		subclass)
   */
  	on: function on(symbol, state) {
  		if (symbol instanceof Array) {
  			for (var i = 0; i < symbol.length; i++) {
  				this.j.push([symbol[i], state]);
  			}
  			return this;
  		}
  		this.j.push([symbol, state]);
  		return this;
  	},


  	/**
   	Given the next item, returns next state for that item
   	@method next
   	@param {Mixed} item Should be an instance of the symbols handled by
   		this particular machine.
   	@return {State} state Returns false if no jumps are available
   */
  	next: function next(item) {
  		for (var i = 0; i < this.j.length; i++) {
  			var jump = this.j[i];
  			var symbol = jump[0]; // Next item to check for
  			var state = jump[1]; // State to jump to if items match

  			// compare item with symbol
  			if (this.test(item, symbol)) {
  				return state;
  			}
  		}

  		// Nowhere left to jump!
  		return this.defaultTransition;
  	},


  	/**
   	Does this state accept?
   	`true` only of `this.T` exists
   		@method accepts
   	@return {Boolean}
   */
  	accepts: function accepts() {
  		return !!this.T;
  	},


  	/**
   	Determine whether a given item "symbolizes" the symbol, where symbol is
   	a class of items handled by this state machine.
   		This method should be overriden in extended classes.
   		@method test
   	@param {Mixed} item Does this item match the given symbol?
   	@param {Mixed} symbol
   	@return {Boolean}
   */
  	test: function test(item, symbol) {
  		return item === symbol;
  	},


  	/**
   	Emit the token for this State (just return it in this case)
   	If this emits a token, this instance is an accepting state
   	@method emit
   	@return {Class} T
   */
  	emit: function emit() {
  		return this.T;
  	}
  };

  /**
  	State machine for string-based input

  	@class CharacterState
  	@extends BaseState
  */
  var CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {
  	/**
   	Does the given character match the given character or regular
   	expression?
   		@method test
   	@param {String} char
   	@param {String|RegExp} charOrRegExp
   	@return {Boolean}
   */
  	test: function test(character, charOrRegExp) {
  		return character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);
  	}
  });

  /**
  	State machine for input in the form of TextTokens

  	@class TokenState
  	@extends BaseState
  */
  var TokenState = (0, _class.inherits)(BaseState, createStateClass(), {

  	/**
    * Similar to `on`, but returns the state the results in the transition from
    * the given item
    * @method jump
    * @param {Mixed} item
    * @param {Token} [token]
    * @return state
    */
  	jump: function jump(token) {
  		var tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  		var state = this.next(new token('')); // dummy temp token
  		if (state === this.defaultTransition) {
  			// Make a new state!
  			state = new this.constructor(tClass);
  			this.on(token, state);
  		} else if (tClass) {
  			state.T = tClass;
  		}
  		return state;
  	},


  	/**
   	Is the given token an instance of the given token class?
   		@method test
   	@param {TextToken} token
   	@param {Class} tokenClass
   	@return {Boolean}
   */
  	test: function test(token, tokenClass) {
  		return token instanceof tokenClass;
  	}
  });

  /**
  	Given a non-empty target string, generates states (if required) for each
  	consecutive substring of characters in str starting from the beginning of
  	the string. The final state will have a special value, as specified in
  	options. All other "in between" substrings will have a default end state.

  	This turns the state machine into a Trie-like data structure (rather than a
  	intelligently-designed DFA).

  	Note that I haven't really tried these with any strings other than
  	DOMAIN.

  	@param {String} str
  	@param {CharacterState} start State to jump from the first character
  	@param {Class} endToken Token class to emit when the given string has been
  		matched and no more jumps exist.
  	@param {Class} defaultToken "Filler token", or which token type to emit when
  		we don't have a full match
  	@return {Array} list of newly-created states
  */
  function stateify(str, start, endToken, defaultToken) {
  	var i = 0,
  	    len = str.length,
  	    state = start,
  	    newStates = [],
  	    nextState = void 0;

  	// Find the next state without a jump to the next character
  	while (i < len && (nextState = state.next(str[i]))) {
  		state = nextState;
  		i++;
  	}

  	if (i >= len) {
  		return [];
  	} // no new tokens were added

  	while (i < len - 1) {
  		nextState = new CharacterState(defaultToken);
  		newStates.push(nextState);
  		state.on(str[i], nextState);
  		state = nextState;
  		i++;
  	}

  	nextState = new CharacterState(endToken);
  	newStates.push(nextState);
  	state.on(str[len - 1], nextState);

  	return newStates;
  }

  exports.CharacterState = CharacterState;
  exports.TokenState = TokenState;
  exports.stateify = stateify;
  });

  function createTokenClass() {
  	return function (value) {
  		if (value) {
  			this.v = value;
  		}
  	};
  }

  var createTokenClass_2 = createTokenClass;

  var createTokenClass_1 = /*#__PURE__*/Object.defineProperty({
  	createTokenClass: createTokenClass_2
  }, '__esModule', {value: true});

  var text = createCommonjsModule(function (module, exports) {

  exports.__esModule = true;
  exports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;





  /******************************************************************************
  	Text Tokens
  	Tokens composed of strings
  ******************************************************************************/

  /**
  	Abstract class used for manufacturing text tokens.
  	Pass in the value this token represents

  	@class TextToken
  	@abstract
  */
  var TextToken = (0, createTokenClass_1.createTokenClass)();
  TextToken.prototype = {
  	toString: function toString() {
  		return this.v + '';
  	}
  };

  function inheritsToken(value) {
  	var props = value ? { v: value } : {};
  	return (0, _class.inherits)(TextToken, (0, createTokenClass_1.createTokenClass)(), props);
  }

  /**
  	A valid domain token
  	@class DOMAIN
  	@extends TextToken
  */
  var DOMAIN = inheritsToken();

  /**
  	@class AT
  	@extends TextToken
  */
  var AT = inheritsToken('@');

  /**
  	Represents a single colon `:` character

  	@class COLON
  	@extends TextToken
  */
  var COLON = inheritsToken(':');

  /**
  	@class DOT
  	@extends TextToken
  */
  var DOT = inheritsToken('.');

  /**
  	A character class that can surround the URL, but which the URL cannot begin
  	or end with. Does not include certain English punctuation like parentheses.

  	@class PUNCTUATION
  	@extends TextToken
  */
  var PUNCTUATION = inheritsToken();

  /**
  	The word localhost (by itself)
  	@class LOCALHOST
  	@extends TextToken
  */
  var LOCALHOST = inheritsToken();

  /**
  	Newline token
  	@class NL
  	@extends TextToken
  */
  var NL = inheritsToken('\n');

  /**
  	@class NUM
  	@extends TextToken
  */
  var NUM = inheritsToken();

  /**
  	@class PLUS
  	@extends TextToken
  */
  var PLUS = inheritsToken('+');

  /**
  	@class POUND
  	@extends TextToken
  */
  var POUND = inheritsToken('#');

  /**
  	Represents a web URL protocol. Supported types include

  	* `http:`
  	* `https:`
  	* `ftp:`
  	* `ftps:`

  	@class PROTOCOL
  	@extends TextToken
  */
  var PROTOCOL = inheritsToken();

  /**
  	Represents the start of the email URI protocol

  	@class MAILTO
  	@extends TextToken
  */
  var MAILTO = inheritsToken('mailto:');

  /**
  	@class QUERY
  	@extends TextToken
  */
  var QUERY = inheritsToken('?');

  /**
  	@class SLASH
  	@extends TextToken
  */
  var SLASH = inheritsToken('/');

  /**
  	@class UNDERSCORE
  	@extends TextToken
  */
  var UNDERSCORE = inheritsToken('_');

  /**
  	One ore more non-whitespace symbol.
  	@class SYM
  	@extends TextToken
  */
  var SYM = inheritsToken();

  /**
  	@class TLD
  	@extends TextToken
  */
  var TLD = inheritsToken();

  /**
  	Represents a string of consecutive whitespace characters

  	@class WS
  	@extends TextToken
  */
  var WS = inheritsToken();

  /**
  	Opening/closing bracket classes
  */

  var OPENBRACE = inheritsToken('{');
  var OPENBRACKET = inheritsToken('[');
  var OPENANGLEBRACKET = inheritsToken('<');
  var OPENPAREN = inheritsToken('(');
  var CLOSEBRACE = inheritsToken('}');
  var CLOSEBRACKET = inheritsToken(']');
  var CLOSEANGLEBRACKET = inheritsToken('>');
  var CLOSEPAREN = inheritsToken(')');

  var AMPERSAND = inheritsToken('&');

  exports.Base = TextToken;
  exports.DOMAIN = DOMAIN;
  exports.AT = AT;
  exports.COLON = COLON;
  exports.DOT = DOT;
  exports.PUNCTUATION = PUNCTUATION;
  exports.LOCALHOST = LOCALHOST;
  exports.NL = NL;
  exports.NUM = NUM;
  exports.PLUS = PLUS;
  exports.POUND = POUND;
  exports.QUERY = QUERY;
  exports.PROTOCOL = PROTOCOL;
  exports.MAILTO = MAILTO;
  exports.SLASH = SLASH;
  exports.UNDERSCORE = UNDERSCORE;
  exports.SYM = SYM;
  exports.TLD = TLD;
  exports.WS = WS;
  exports.OPENBRACE = OPENBRACE;
  exports.OPENBRACKET = OPENBRACKET;
  exports.OPENANGLEBRACKET = OPENANGLEBRACKET;
  exports.OPENPAREN = OPENPAREN;
  exports.CLOSEBRACE = CLOSEBRACE;
  exports.CLOSEBRACKET = CLOSEBRACKET;
  exports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;
  exports.CLOSEPAREN = CLOSEPAREN;
  exports.AMPERSAND = AMPERSAND;
  });

  var scanner = createCommonjsModule(function (module, exports) {

  exports.__esModule = true;
  exports.start = exports.run = exports.TOKENS = exports.State = undefined;





  var TOKENS = _interopRequireWildcard(text);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  var tlds = 'aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|aetna|af|afamilycompany|afl|africa|ag|agakhan|agency|ai|aig|aigo|airbus|airforce|airtel|akdn|al|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao|aol|apartments|app|apple|aq|aquarelle|ar|arab|aramco|archi|army|arpa|art|arte|as|asda|asia|associates|at|athleta|attorney|au|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw|aws|ax|axa|az|azure|ba|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb|bbc|bbt|bbva|bcg|bcn|bd|be|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|calvinklein|cam|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|ci|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm|dnp|do|docs|doctor|dodge|dog|doha|domains|dot|download|drive|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dvr|dz|earth|eat|ec|eco|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epost|epson|equipment|er|ericsson|erni|es|esq|estate|esurance|et|etisalat|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|flir|florist|flowers|fly|fm|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|george|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glade|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt|gu|guardian|gucci|guge|guide|guitars|guru|gw|gy|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk|hkt|hm|hn|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr|hsbc|ht|htc|hu|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id|ie|ieee|ifm|ikano|il|im|imamat|imdb|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|intel|international|intuit|investments|io|ipiranga|iq|ir|irish|is|iselect|ismaili|ist|istanbul|it|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|je|jeep|jetzt|jewelry|jio|jlc|jll|jm|jmp|jnj|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kindle|kitchen|kiwi|km|kn|koeln|komatsu|kosher|kp|kpmg|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|lk|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr|ls|lt|ltd|ltda|lu|lundbeck|lupin|luxe|luxury|lv|ly|ma|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc|mckinsey|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|merckmsd|metlife|mg|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk|ml|mlb|mls|mm|mma|mn|mo|mobi|mobile|mobily|moda|moe|moi|mom|monash|money|monster|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|mp|mq|mr|ms|msd|mt|mtn|mtr|mu|museum|mutual|mv|mw|mx|my|mz|na|nab|nadex|nagoya|name|nationwide|natura|navy|nba|nc|ne|nec|net|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nf|nfl|ng|ngo|nhk|ni|nico|nike|nikon|ninja|nissan|nissay|nl|no|nokia|northwesternmutual|norton|now|nowruz|nowtv|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|om|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa|page|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|pccw|pe|pet|pf|pfizer|pg|ph|pharmacy|phd|philips|phone|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pnc|pohl|poker|politie|porn|post|pr|pramerica|praxi|press|prime|pro|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|qvc|racing|radio|raid|re|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|ro|rocher|rocks|rodeo|rogers|room|rs|rsvp|ru|rugby|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sb|sbi|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|sd|se|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg|sh|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|shriram|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl|sling|sm|smart|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|srt|st|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiftcover|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|telecity|telefonica|temasek|tennis|teva|tf|tg|th|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj|tjmaxx|tjx|tk|tkmaxx|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubank|ubs|uconnect|ug|uk|unicom|university|uno|uol|ups|us|uy|uz|va|vacations|vana|vanguard|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vn|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--30rr7y|xn--3bst00m|xn--3ds443g|xn--3e0b707e|xn--3hcrj9c|xn--3oq18vl8pn36a|xn--3pxu8k|xn--42c2d9a|xn--45br5cyl|xn--45brj9c|xn--45q11c|xn--4gbrim|xn--54b7fta0cc|xn--55qw42g|xn--55qx5d|xn--5su34j936bgsg|xn--5tzm5g|xn--6frz82g|xn--6qq986b3xl|xn--80adxhks|xn--80ao21a|xn--80aqecdr1a|xn--80asehdb|xn--80aswg|xn--8y0a063a|xn--90a3ac|xn--90ae|xn--90ais|xn--9dbq2a|xn--9et52u|xn--9krt00a|xn--b4w605ferd|xn--bck1b9a5dre4c|xn--c1avg|xn--c2br7g|xn--cck2b3b|xn--cg4bki|xn--clchc0ea0b2g2a9gcd|xn--czr694b|xn--czrs0t|xn--czru2d|xn--d1acj3b|xn--d1alf|xn--e1a4c|xn--eckvdtc9d|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fhbei|xn--fiq228c5hs|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--fjq720a|xn--flw351e|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--fzys8d69uvgm|xn--g2xx48c|xn--gckr3f0f|xn--gecrj9c|xn--gk3at1e|xn--h2breg3eve|xn--h2brj9c|xn--h2brj9c8c|xn--hxt814e|xn--i1b6b1a6a2e|xn--imr513n|xn--io0a7i|xn--j1aef|xn--j1amh|xn--j6w193g|xn--jlq61u9w7b|xn--jvr189m|xn--kcrx77d1x4a|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--kput3i|xn--l1acc|xn--lgbbat1ad8j|xn--mgb9awbf|xn--mgba3a3ejt|xn--mgba3a4f16a|xn--mgba7c0bbn0a|xn--mgbaakc7dvf|xn--mgbaam7a8h|xn--mgbab2bd|xn--mgbai9azgqp6j|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a|xn--mgbbh1a71e|xn--mgbc0a9azcg|xn--mgbca7dzdo|xn--mgberp4a5d4ar|xn--mgbgu82a|xn--mgbi4ecexp|xn--mgbpl2fh|xn--mgbt3dhd|xn--mgbtx2b|xn--mgbx4cd0ab|xn--mix891f|xn--mk1bu44c|xn--mxtq1m|xn--ngbc5azd|xn--ngbe9e0a|xn--ngbrx|xn--node|xn--nqv7f|xn--nqv7fs00ema|xn--nyqy26a|xn--o3cw4h|xn--ogbpf8fl|xn--p1acf|xn--p1ai|xn--pbt977c|xn--pgbs0dh|xn--pssy2u|xn--q9jyb4c|xn--qcka1pmc|xn--qxam|xn--rhqv96g|xn--rovu88b|xn--rvc1e0am3e|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--tckwe|xn--tiq49xqyj|xn--unup4y|xn--vermgensberater-ctb|xn--vermgensberatung-pwb|xn--vhquv|xn--vuq861b|xn--w4r85el8fhu5dnra|xn--w4rs40l|xn--wgbh1c|xn--wgbl6a|xn--xhq521b|xn--xkc2al3hye2a|xn--xkc2dl3a5ee0h|xn--y9a3aq|xn--yfro4i67o|xn--ygbi2ammx|xn--zfr164b|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|you|youtube|yt|yun|za|zappos|zara|zero|zip|zippo|zm|zone|zuerich|zw'.split('|'); // macro, see gulpfile.js

  /**
  	The scanner provides an interface that takes a string of text as input, and
  	outputs an array of tokens instances that can be used for easy URL parsing.

  	@module linkify
  	@submodule scanner
  	@main scanner
  */

  var NUMBERS = '0123456789'.split('');
  var ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');
  var WHITESPACE = [' ', '\f', '\r', '\t', '\v', '\xA0', '\u1680', '\u180E']; // excluding line breaks

  var domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/
  var makeState = function makeState(tokenClass) {
  	return new state.CharacterState(tokenClass);
  };

  // Frequently used states
  var S_START = makeState();
  var S_NUM = makeState(text.NUM);
  var S_DOMAIN = makeState(text.DOMAIN);
  var S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters
  var S_WS = makeState(text.WS);

  // States for special URL symbols
  S_START.on('@', makeState(text.AT)).on('.', makeState(text.DOT)).on('+', makeState(text.PLUS)).on('#', makeState(text.POUND)).on('?', makeState(text.QUERY)).on('/', makeState(text.SLASH)).on('_', makeState(text.UNDERSCORE)).on(':', makeState(text.COLON)).on('{', makeState(text.OPENBRACE)).on('[', makeState(text.OPENBRACKET)).on('<', makeState(text.OPENANGLEBRACKET)).on('(', makeState(text.OPENPAREN)).on('}', makeState(text.CLOSEBRACE)).on(']', makeState(text.CLOSEBRACKET)).on('>', makeState(text.CLOSEANGLEBRACKET)).on(')', makeState(text.CLOSEPAREN)).on('&', makeState(text.AMPERSAND)).on([',', ';', '!', '"', '\''], makeState(text.PUNCTUATION));

  // Whitespace jumps
  // Tokens of only non-newline whitespace are arbitrarily long
  S_START.on('\n', makeState(text.NL)).on(WHITESPACE, S_WS);

  // If any whitespace except newline, more whitespace!
  S_WS.on(WHITESPACE, S_WS);

  // Generates states for top-level domains
  // Note that this is most accurate when tlds are in alphabetical order
  for (var i = 0; i < tlds.length; i++) {
  	var newStates = (0, state.stateify)(tlds[i], S_START, text.TLD, text.DOMAIN);
  	domainStates.push.apply(domainStates, newStates);
  }

  // Collect the states generated by different protocls
  var partialProtocolFileStates = (0, state.stateify)('file', S_START, text.DOMAIN, text.DOMAIN);
  var partialProtocolFtpStates = (0, state.stateify)('ftp', S_START, text.DOMAIN, text.DOMAIN);
  var partialProtocolHttpStates = (0, state.stateify)('http', S_START, text.DOMAIN, text.DOMAIN);
  var partialProtocolMailtoStates = (0, state.stateify)('mailto', S_START, text.DOMAIN, text.DOMAIN);

  // Add the states to the array of DOMAINeric states
  domainStates.push.apply(domainStates, partialProtocolFileStates);
  domainStates.push.apply(domainStates, partialProtocolFtpStates);
  domainStates.push.apply(domainStates, partialProtocolHttpStates);
  domainStates.push.apply(domainStates, partialProtocolMailtoStates);

  // Protocol states
  var S_PROTOCOL_FILE = partialProtocolFileStates.pop();
  var S_PROTOCOL_FTP = partialProtocolFtpStates.pop();
  var S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();
  var S_MAILTO = partialProtocolMailtoStates.pop();
  var S_PROTOCOL_SECURE = makeState(text.DOMAIN);
  var S_FULL_PROTOCOL = makeState(text.PROTOCOL); // Full protocol ends with COLON
  var S_FULL_MAILTO = makeState(text.MAILTO); // Mailto ends with COLON

  // Secure protocols (end with 's')
  S_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);

  S_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);

  domainStates.push(S_PROTOCOL_SECURE);

  // Become protocol tokens after a COLON
  S_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);
  S_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);
  S_MAILTO.on(':', S_FULL_MAILTO);

  // Localhost
  var partialLocalhostStates = (0, state.stateify)('localhost', S_START, text.LOCALHOST, text.DOMAIN);
  domainStates.push.apply(domainStates, partialLocalhostStates);

  // Everything else
  // DOMAINs make more DOMAINs
  // Number and character transitions
  S_START.on(NUMBERS, S_NUM);
  S_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN

  S_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);

  // All the generated states should have a jump to DOMAIN
  for (var _i = 0; _i < domainStates.length; _i++) {
  	domainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);
  }

  S_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);

  // Set default transition
  S_START.defaultTransition = makeState(text.SYM);

  /**
  	Given a string, returns an array of TOKEN instances representing the
  	composition of that string.

  	@method run
  	@param {String} str Input string to scan
  	@return {Array} Array of TOKEN instances
  */
  var run = function run(str) {

  	// The state machine only looks at lowercase strings.
  	// This selective `toLowerCase` is used because lowercasing the entire
  	// string causes the length and character position to vary in some in some
  	// non-English strings. This happens only on V8-based runtimes.
  	var lowerStr = str.replace(/[A-Z]/g, function (c) {
  		return c.toLowerCase();
  	});
  	var len = str.length;
  	var tokens = []; // return value

  	var cursor = 0;

  	// Tokenize the string
  	while (cursor < len) {
  		var state = S_START;
  		var nextState = null;
  		var tokenLength = 0;
  		var latestAccepting = null;
  		var sinceAccepts = -1;

  		while (cursor < len && (nextState = state.next(lowerStr[cursor]))) {
  			state = nextState;

  			// Keep track of the latest accepting state
  			if (state.accepts()) {
  				sinceAccepts = 0;
  				latestAccepting = state;
  			} else if (sinceAccepts >= 0) {
  				sinceAccepts++;
  			}

  			tokenLength++;
  			cursor++;
  		}

  		if (sinceAccepts < 0) {
  			continue;
  		} // Should never happen

  		// Roll back to the latest accepting state
  		cursor -= sinceAccepts;
  		tokenLength -= sinceAccepts;

  		// Get the class for the new token
  		var TOKEN = latestAccepting.emit(); // Current token class

  		// No more jumps, just make a new token
  		tokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));
  	}

  	return tokens;
  };

  var start = S_START;
  exports.State = state.CharacterState;
  exports.TOKENS = TOKENS;
  exports.run = run;
  exports.start = start;
  });

  var multi = createCommonjsModule(function (module, exports) {

  exports.__esModule = true;
  exports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;







  /******************************************************************************
  	Multi-Tokens
  	Tokens composed of arrays of TextTokens
  ******************************************************************************/

  // Is the given token a valid domain token?
  // Should nums be included here?
  function isDomainToken(token) {
  	return token instanceof text.DOMAIN || token instanceof text.TLD;
  }

  /**
  	Abstract class used for manufacturing tokens of text tokens. That is rather
  	than the value for a token being a small string of text, it's value an array
  	of text tokens.

  	Used for grouping together URLs, emails, hashtags, and other potential
  	creations.

  	@class MultiToken
  	@abstract
  */
  var MultiToken = (0, createTokenClass_1.createTokenClass)();

  MultiToken.prototype = {
  	/**
   	String representing the type for this token
   	@property type
   	@default 'TOKEN'
   */
  	type: 'token',

  	/**
   	Is this multitoken a link?
   	@property isLink
   	@default false
   */
  	isLink: false,

  	/**
   	Return the string this token represents.
   	@method toString
   	@return {String}
   */
  	toString: function toString() {
  		var result = [];
  		for (var i = 0; i < this.v.length; i++) {
  			result.push(this.v[i].toString());
  		}
  		return result.join('');
  	},


  	/**
   	What should the value for this token be in the `href` HTML attribute?
   	Returns the `.toString` value by default.
   		@method toHref
   	@return {String}
   */
  	toHref: function toHref() {
  		return this.toString();
  	},


  	/**
   	Returns a hash of relevant values for this token, which includes keys
   	* type - Kind of token ('url', 'email', etc.)
   	* value - Original text
   	* href - The value that should be added to the anchor tag's href
   		attribute
   		@method toObject
   	@param {String} [protocol] `'http'` by default
   	@return {Object}
   */
  	toObject: function toObject() {
  		var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';

  		return {
  			type: this.type,
  			value: this.toString(),
  			href: this.toHref(protocol)
  		};
  	}
  };

  /**
  	Represents an arbitrarily mailto email address with the prefix included
  	@class MAILTO
  	@extends MultiToken
  */
  var MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, createTokenClass_1.createTokenClass)(), {
  	type: 'email',
  	isLink: true
  });

  /**
  	Represents a list of tokens making up a valid email address
  	@class EMAIL
  	@extends MultiToken
  */
  var EMAIL = (0, _class.inherits)(MultiToken, (0, createTokenClass_1.createTokenClass)(), {
  	type: 'email',
  	isLink: true,
  	toHref: function toHref() {
  		return 'mailto:' + this.toString();
  	}
  });

  /**
  	Represents some plain text
  	@class TEXT
  	@extends MultiToken
  */
  var TEXT = (0, _class.inherits)(MultiToken, (0, createTokenClass_1.createTokenClass)(), { type: 'text' });

  /**
  	Multi-linebreak token - represents a line break
  	@class NL
  	@extends MultiToken
  */
  var NL = (0, _class.inherits)(MultiToken, (0, createTokenClass_1.createTokenClass)(), { type: 'nl' });

  /**
  	Represents a list of tokens making up a valid URL
  	@class URL
  	@extends MultiToken
  */
  var URL = (0, _class.inherits)(MultiToken, (0, createTokenClass_1.createTokenClass)(), {
  	type: 'url',
  	isLink: true,

  	/**
   	Lowercases relevant parts of the domain and adds the protocol if
   	required. Note that this will not escape unsafe HTML characters in the
   	URL.
   		@method href
   	@param {String} protocol
   	@return {String}
   */
  	toHref: function toHref() {
  		var protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';

  		var hasProtocol = false;
  		var hasSlashSlash = false;
  		var tokens = this.v;
  		var result = [];
  		var i = 0;

  		// Make the first part of the domain lowercase
  		// Lowercase protocol
  		while (tokens[i] instanceof text.PROTOCOL) {
  			hasProtocol = true;
  			result.push(tokens[i].toString().toLowerCase());
  			i++;
  		}

  		// Skip slash-slash
  		while (tokens[i] instanceof text.SLASH) {
  			hasSlashSlash = true;
  			result.push(tokens[i].toString());
  			i++;
  		}

  		// Lowercase all other characters in the domain
  		while (isDomainToken(tokens[i])) {
  			result.push(tokens[i].toString().toLowerCase());
  			i++;
  		}

  		// Leave all other characters as they were written
  		for (; i < tokens.length; i++) {
  			result.push(tokens[i].toString());
  		}

  		result = result.join('');

  		if (!(hasProtocol || hasSlashSlash)) {
  			result = protocol + '://' + result;
  		}

  		return result;
  	},
  	hasProtocol: function hasProtocol() {
  		return this.v[0] instanceof text.PROTOCOL;
  	}
  });

  exports.Base = MultiToken;
  exports.MAILTOEMAIL = MAILTOEMAIL;
  exports.EMAIL = EMAIL;
  exports.NL = NL;
  exports.TEXT = TEXT;
  exports.URL = URL;
  });

  var parser = createCommonjsModule(function (module, exports) {

  exports.__esModule = true;
  exports.start = exports.run = exports.TOKENS = exports.State = undefined;





  var MULTI_TOKENS = _interopRequireWildcard(multi);



  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  /**
  	Not exactly parser, more like the second-stage scanner (although we can
  	theoretically hotswap the code here with a real parser in the future... but
  	for a little URL-finding utility abstract syntax trees may be a little
  	overkill).

  	URL format: http://en.wikipedia.org/wiki/URI_scheme
  	Email format: http://en.wikipedia.org/wiki/Email_address (links to RFC in
  	reference)

  	@module linkify
  	@submodule parser
  	@main parser
  */

  var makeState = function makeState(tokenClass) {
  	return new state.TokenState(tokenClass);
  };

  // The universal starting state.
  var S_START = makeState();

  // Intermediate states for URLs. Note that domains that begin with a protocol
  // are treated slighly differently from those that don't.
  var S_PROTOCOL = makeState(); // e.g., 'http:'
  var S_MAILTO = makeState(); // 'mailto:'
  var S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''
  var S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'
  var S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)
  var S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT
  var S_TLD = makeState(multi.URL); // (A) Simplest possible URL with no query string
  var S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)
  var S_TLD_PORT = makeState(multi.URL); // TLD followed by a port number
  var S_URL = makeState(multi.URL); // Long URL with optional port and maybe query string
  var S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)
  var S_URL_OPENBRACE = makeState(); // URL followed by {
  var S_URL_OPENBRACKET = makeState(); // URL followed by [
  var S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <
  var S_URL_OPENPAREN = makeState(); // URL followed by (
  var S_URL_OPENBRACE_Q = makeState(multi.URL); // URL followed by { and some symbols that the URL can end it
  var S_URL_OPENBRACKET_Q = makeState(multi.URL); // URL followed by [ and some symbols that the URL can end it
  var S_URL_OPENANGLEBRACKET_Q = makeState(multi.URL); // URL followed by < and some symbols that the URL can end it
  var S_URL_OPENPAREN_Q = makeState(multi.URL); // URL followed by ( and some symbols that the URL can end it
  var S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it
  var S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it
  var S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it
  var S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it
  var S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)
  var S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT
  var S_EMAIL = makeState(multi.EMAIL); // (C) Possible email address (could have more tlds)
  var S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)
  var S_EMAIL_PORT = makeState(multi.EMAIL); // (C) Email address with a port
  var S_MAILTO_EMAIL = makeState(multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)
  var S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars
  var S_LOCALPART = makeState(); // Local part of the email address
  var S_LOCALPART_AT = makeState(); // Local part of the email address plus @
  var S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)
  var S_NL = makeState(multi.NL); // single new line

  // Make path from start to protocol (with '//')
  S_START.on(text.NL, S_NL).on(text.PROTOCOL, S_PROTOCOL).on(text.MAILTO, S_MAILTO).on(text.SLASH, S_PROTOCOL_SLASH);

  S_PROTOCOL.on(text.SLASH, S_PROTOCOL_SLASH);
  S_PROTOCOL_SLASH.on(text.SLASH, S_PROTOCOL_SLASH_SLASH);

  // The very first potential domain name
  S_START.on(text.TLD, S_DOMAIN).on(text.DOMAIN, S_DOMAIN).on(text.LOCALHOST, S_TLD).on(text.NUM, S_DOMAIN);

  // Force URL for protocol followed by anything sane
  S_PROTOCOL_SLASH_SLASH.on(text.TLD, S_URL).on(text.DOMAIN, S_URL).on(text.NUM, S_URL).on(text.LOCALHOST, S_URL);

  // Account for dots and hyphens
  // hyphens are usually parts of domain names
  S_DOMAIN.on(text.DOT, S_DOMAIN_DOT);
  S_EMAIL_DOMAIN.on(text.DOT, S_EMAIL_DOMAIN_DOT);

  // Hyphen can jump back to a domain name

  // After the first domain and a dot, we can find either a URL or another domain
  S_DOMAIN_DOT.on(text.TLD, S_TLD).on(text.DOMAIN, S_DOMAIN).on(text.NUM, S_DOMAIN).on(text.LOCALHOST, S_DOMAIN);

  S_EMAIL_DOMAIN_DOT.on(text.TLD, S_EMAIL).on(text.DOMAIN, S_EMAIL_DOMAIN).on(text.NUM, S_EMAIL_DOMAIN).on(text.LOCALHOST, S_EMAIL_DOMAIN);

  // S_TLD accepts! But the URL could be longer, try to find a match greedily
  // The `run` function should be able to "rollback" to the accepting state
  S_TLD.on(text.DOT, S_DOMAIN_DOT);
  S_EMAIL.on(text.DOT, S_EMAIL_DOMAIN_DOT);

  // Become real URLs after `SLASH` or `COLON NUM SLASH`
  // Here PSS and non-PSS converge
  S_TLD.on(text.COLON, S_TLD_COLON).on(text.SLASH, S_URL);
  S_TLD_COLON.on(text.NUM, S_TLD_PORT);
  S_TLD_PORT.on(text.SLASH, S_URL);
  S_EMAIL.on(text.COLON, S_EMAIL_COLON);
  S_EMAIL_COLON.on(text.NUM, S_EMAIL_PORT);

  // Types of characters the URL can definitely end in
  var qsAccepting = [text.DOMAIN, text.AT, text.LOCALHOST, text.NUM, text.PLUS, text.POUND, text.PROTOCOL, text.SLASH, text.TLD, text.UNDERSCORE, text.SYM, text.AMPERSAND];

  // Types of tokens that can follow a URL and be part of the query string
  // but cannot be the very last characters
  // Characters that cannot appear in the URL at all should be excluded
  var qsNonAccepting = [text.COLON, text.DOT, text.QUERY, text.PUNCTUATION, text.CLOSEBRACE, text.CLOSEBRACKET, text.CLOSEANGLEBRACKET, text.CLOSEPAREN, text.OPENBRACE, text.OPENBRACKET, text.OPENANGLEBRACKET, text.OPENPAREN];

  // These states are responsible primarily for determining whether or not to
  // include the final round bracket.

  // URL, followed by an opening bracket
  S_URL.on(text.OPENBRACE, S_URL_OPENBRACE).on(text.OPENBRACKET, S_URL_OPENBRACKET).on(text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(text.OPENPAREN, S_URL_OPENPAREN);

  // URL with extra symbols at the end, followed by an opening bracket
  S_URL_NON_ACCEPTING.on(text.OPENBRACE, S_URL_OPENBRACE).on(text.OPENBRACKET, S_URL_OPENBRACKET).on(text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(text.OPENPAREN, S_URL_OPENPAREN);

  // Closing bracket component. This character WILL be included in the URL
  S_URL_OPENBRACE.on(text.CLOSEBRACE, S_URL);
  S_URL_OPENBRACKET.on(text.CLOSEBRACKET, S_URL);
  S_URL_OPENANGLEBRACKET.on(text.CLOSEANGLEBRACKET, S_URL);
  S_URL_OPENPAREN.on(text.CLOSEPAREN, S_URL);
  S_URL_OPENBRACE_Q.on(text.CLOSEBRACE, S_URL);
  S_URL_OPENBRACKET_Q.on(text.CLOSEBRACKET, S_URL);
  S_URL_OPENANGLEBRACKET_Q.on(text.CLOSEANGLEBRACKET, S_URL);
  S_URL_OPENPAREN_Q.on(text.CLOSEPAREN, S_URL);
  S_URL_OPENBRACE_SYMS.on(text.CLOSEBRACE, S_URL);
  S_URL_OPENBRACKET_SYMS.on(text.CLOSEBRACKET, S_URL);
  S_URL_OPENANGLEBRACKET_SYMS.on(text.CLOSEANGLEBRACKET, S_URL);
  S_URL_OPENPAREN_SYMS.on(text.CLOSEPAREN, S_URL);

  // URL that beings with an opening bracket, followed by a symbols.
  // Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only
  // has a single opening bracket for some reason).
  S_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);
  S_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);
  S_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);
  S_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);
  S_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);
  S_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);
  S_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);
  S_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);

  // URL that begins with an opening bracket, followed by some symbols
  S_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);
  S_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);
  S_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);
  S_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);
  S_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);
  S_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);
  S_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);
  S_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);

  S_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);
  S_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);
  S_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);
  S_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);
  S_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);
  S_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);
  S_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);
  S_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);

  // Account for the query string
  S_URL.on(qsAccepting, S_URL);
  S_URL_NON_ACCEPTING.on(qsAccepting, S_URL);

  S_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);
  S_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);

  // Email address-specific state definitions
  // Note: We are not allowing '/' in email addresses since this would interfere
  // with real URLs

  // For addresses with the mailto prefix
  // 'mailto:' followed by anything sane is a valid email
  S_MAILTO.on(text.TLD, S_MAILTO_EMAIL).on(text.DOMAIN, S_MAILTO_EMAIL).on(text.NUM, S_MAILTO_EMAIL).on(text.LOCALHOST, S_MAILTO_EMAIL);

  // Greedily get more potential valid email values
  S_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);
  S_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);

  // For addresses without the mailto prefix
  // Tokens allowed in the localpart of the email
  var localpartAccepting = [text.DOMAIN, text.NUM, text.PLUS, text.POUND, text.QUERY, text.UNDERSCORE, text.SYM, text.AMPERSAND, text.TLD];

  // Some of the tokens in `localpartAccepting` are already accounted for here and
  // will not be overwritten (don't worry)
  S_DOMAIN.on(localpartAccepting, S_LOCALPART).on(text.AT, S_LOCALPART_AT);
  S_TLD.on(localpartAccepting, S_LOCALPART).on(text.AT, S_LOCALPART_AT);
  S_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);

  // Okay we're on a localpart. Now what?
  // TODO: IP addresses and what if the email starts with numbers?
  S_LOCALPART.on(localpartAccepting, S_LOCALPART).on(text.AT, S_LOCALPART_AT) // close to an email address now
  .on(text.DOT, S_LOCALPART_DOT);
  S_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);
  S_LOCALPART_AT.on(text.TLD, S_EMAIL_DOMAIN).on(text.DOMAIN, S_EMAIL_DOMAIN).on(text.LOCALHOST, S_EMAIL);
  // States following `@` defined above

  var run = function run(tokens) {
  	var len = tokens.length;
  	var cursor = 0;
  	var multis = [];
  	var textTokens = [];

  	while (cursor < len) {
  		var state = S_START;
  		var secondState = null;
  		var nextState = null;
  		var multiLength = 0;
  		var latestAccepting = null;
  		var sinceAccepts = -1;

  		while (cursor < len && !(secondState = state.next(tokens[cursor]))) {
  			// Starting tokens with nowhere to jump to.
  			// Consider these to be just plain text
  			textTokens.push(tokens[cursor++]);
  		}

  		while (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {

  			// Get the next state
  			secondState = null;
  			state = nextState;

  			// Keep track of the latest accepting state
  			if (state.accepts()) {
  				sinceAccepts = 0;
  				latestAccepting = state;
  			} else if (sinceAccepts >= 0) {
  				sinceAccepts++;
  			}

  			cursor++;
  			multiLength++;
  		}

  		if (sinceAccepts < 0) {

  			// No accepting state was found, part of a regular text token
  			// Add all the tokens we looked at to the text tokens array
  			for (var i = cursor - multiLength; i < cursor; i++) {
  				textTokens.push(tokens[i]);
  			}
  		} else {

  			// Accepting state!

  			// First close off the textTokens (if available)
  			if (textTokens.length > 0) {
  				multis.push(new multi.TEXT(textTokens));
  				textTokens = [];
  			}

  			// Roll back to the latest accepting state
  			cursor -= sinceAccepts;
  			multiLength -= sinceAccepts;

  			// Create a new multitoken
  			var MULTI = latestAccepting.emit();
  			multis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));
  		}
  	}

  	// Finally close off the textTokens (if available)
  	if (textTokens.length > 0) {
  		multis.push(new multi.TEXT(textTokens));
  	}

  	return multis;
  };

  exports.State = state.TokenState;
  exports.TOKENS = MULTI_TOKENS;
  exports.run = run;
  exports.start = S_START;
  });

  var linkify$1 = createCommonjsModule(function (module, exports) {

  exports.__esModule = true;
  exports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;





  var options$1 = _interopRequireWildcard(options);



  var scanner$1 = _interopRequireWildcard(scanner);



  var parser$1 = _interopRequireWildcard(parser);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  if (!Array.isArray) {
  	Array.isArray = function (arg) {
  		return Object.prototype.toString.call(arg) === '[object Array]';
  	};
  }

  /**
  	Converts a string into tokens that represent linkable and non-linkable bits
  	@method tokenize
  	@param {String} str
  	@return {Array} tokens
  */
  var tokenize = function tokenize(str) {
  	return parser$1.run(scanner$1.run(str));
  };

  /**
  	Returns a list of linkable items in the given string.
  */
  var find = function find(str) {
  	var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  	var tokens = tokenize(str);
  	var filtered = [];

  	for (var i = 0; i < tokens.length; i++) {
  		var token = tokens[i];
  		if (token.isLink && (!type || token.type === type)) {
  			filtered.push(token.toObject());
  		}
  	}

  	return filtered;
  };

  /**
  	Is the given string valid linkable text of some sort
  	Note that this does not trim the text for you.

  	Optionally pass in a second `type` param, which is the type of link to test
  	for.

  	For example,

  		test(str, 'email');

  	Will return `true` if str is a valid email.
  */
  var test = function test(str) {
  	var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  	var tokens = tokenize(str);
  	return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);
  };

  // Scanner and parser provide states and tokens for the lexicographic stage
  // (will be used to add additional link types)
  exports.find = find;
  exports.inherits = _class.inherits;
  exports.options = options$1;
  exports.parser = parser$1;
  exports.scanner = scanner$1;
  exports.test = test;
  exports.tokenize = tokenize;
  });

  var linkifyjs = linkify$1;

  var linkify = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.assign(/*#__PURE__*/Object.create(null), linkifyjs, {
    'default': linkifyjs
  }));

  var _default$1 = mention$1;
  /**
  	Mention parser plugin for linkify
  */
  function mention$1(linkify) {
  	var TT = linkify.scanner.TOKENS; // Text tokens
  	var _linkify$parser = linkify.parser,
  	    MT = _linkify$parser.TOKENS,
  	    State = _linkify$parser.State; // Multi tokens, state

  	var MultiToken = MT.Base;
  	var S_START = linkify.parser.start;

  	var TT_DOMAIN = TT.DOMAIN;
  	var TT_LOCALHOST = TT.LOCALHOST;
  	var TT_NUM = TT.NUM;
  	var TT_SLASH = TT.SLASH;
  	var TT_TLD = TT.TLD;
  	var TT_UNDERSCORE = TT.UNDERSCORE;
  	var TT_DOT = TT.DOT;
  	var TT_AT = TT.AT;

  	function MENTION(value) {
  		this.v = value;
  	}

  	linkify.inherits(MultiToken, MENTION, {
  		type: 'mention',
  		isLink: true,
  		toHref: function toHref() {
  			return '/' + this.toString().substr(1);
  		}
  	});

  	var S_AT = S_START.jump(TT.AT); // @
  	var S_AT_SYMS = new State();
  	var S_MENTION = new State(MENTION);
  	var S_MENTION_DIVIDER = new State();
  	var S_MENTION_DIVIDER_SYMS = new State();

  	// @_,
  	S_AT.on(TT_UNDERSCORE, S_AT_SYMS);

  	//  @_*
  	S_AT_SYMS.on(TT_UNDERSCORE, S_AT_SYMS).on(TT_DOT, S_AT_SYMS);

  	// Valid mention (not made up entirely of symbols)
  	S_AT.on(TT_DOMAIN, S_MENTION).on(TT_LOCALHOST, S_MENTION).on(TT_TLD, S_MENTION).on(TT_NUM, S_MENTION);

  	S_AT_SYMS.on(TT_DOMAIN, S_MENTION).on(TT_LOCALHOST, S_MENTION).on(TT_TLD, S_MENTION).on(TT_NUM, S_MENTION);

  	// More valid mentions
  	S_MENTION.on(TT_DOMAIN, S_MENTION).on(TT_LOCALHOST, S_MENTION).on(TT_TLD, S_MENTION).on(TT_NUM, S_MENTION).on(TT_UNDERSCORE, S_MENTION);

  	// Mention with a divider
  	S_MENTION.on(TT_SLASH, S_MENTION_DIVIDER).on(TT_DOT, S_MENTION_DIVIDER).on(TT_AT, S_MENTION_DIVIDER);

  	// Mention _ trailing stash plus syms
  	S_MENTION_DIVIDER.on(TT_UNDERSCORE, S_MENTION_DIVIDER_SYMS);
  	S_MENTION_DIVIDER_SYMS.on(TT_UNDERSCORE, S_MENTION_DIVIDER_SYMS);

  	// Once we get a word token, mentions can start up again
  	S_MENTION_DIVIDER.on(TT_DOMAIN, S_MENTION).on(TT_LOCALHOST, S_MENTION).on(TT_TLD, S_MENTION).on(TT_NUM, S_MENTION);

  	S_MENTION_DIVIDER_SYMS.on(TT_DOMAIN, S_MENTION).on(TT_LOCALHOST, S_MENTION).on(TT_TLD, S_MENTION).on(TT_NUM, S_MENTION);
  }

  var mention_1 = /*#__PURE__*/Object.defineProperty({
  	default: _default$1
  }, '__esModule', {value: true});

  var mention = mention_1.default;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  function linkifyHashtag(linkify) {
    var TT = linkify.scanner.TOKENS; // Text tokens

    var MultiToken = linkify.parser.TOKENS.Base; // Base Multi token class

    var S_START = linkify.parser.start;

    function HASHTAG(value) {
      // @ts-expect-error
      this.v = value;
    }

    linkify.inherits(MultiToken, HASHTAG, {
      type: 'hashtag',
      isLink: true
    });
    var S_HASH = S_START.jump(TT.POUND);
    var S_HASHTAG = new linkify.parser.State(HASHTAG);
    S_HASH.on(TT.DOMAIN, S_HASHTAG);
    S_HASH.on(TT.UNDERSCORE, S_HASHTAG);
    S_HASH.on(TT.TLD, S_HASHTAG); // following lines are the diff from original implemention
    // add support for _ in hashtags

    S_HASH.on(TT.LOCALHOST, S_HASHTAG);
    S_HASHTAG.on(TT.UNDERSCORE, S_HASH);
  }

  mention(linkify);
  linkifyHashtag(linkify);

  var CustomAnchor = function CustomAnchor(_ref) {
    var type = _ref.type,
        word = _ref.word,
        parentClass = _ref.parentClass,
        value = _ref.value,
        _ref$clickCallback = _ref.clickCallback,
        clickCallback = _ref$clickCallback === void 0 ? function () {} : _ref$clickCallback;
    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, !word.startsWith(value) && word.slice(0, word.indexOf(value)), /*#__PURE__*/React__default['default'].createElement("a", {
      onClick: function onClick() {
        return clickCallback(value.substring(1));
      },
      className: "".concat(parentClass, "__").concat(type)
    }, value), !word.endsWith(value) && word.slice(word.indexOf(value) + value.length));
  };

  var renderWord = function renderWord(word, key, parentClass, onClickMention, onClickHashtag) {
    var _linkify$find = linkifyjs.find(word),
        _linkify$find2 = _slicedToArray$3(_linkify$find, 1),
        link = _linkify$find2[0];

    if (!link) return word;
    var type = link.type,
        value = link.value,
        href = link.href;

    if (onClickMention && type === 'mention') {
      return /*#__PURE__*/React__default['default'].createElement(CustomAnchor, {
        key: key,
        type: type,
        value: value,
        word: word,
        clickCallback: onClickMention,
        parentClass: parentClass
      });
    }

    if (onClickHashtag && type === 'hashtag') {
      return /*#__PURE__*/React__default['default'].createElement(CustomAnchor, {
        key: key,
        type: type,
        value: value,
        word: word,
        clickCallback: onClickHashtag,
        parentClass: parentClass
      });
    }

    if (type === 'email' || type === 'url') {
      return /*#__PURE__*/React__default['default'].createElement("a", {
        href: encodeURI(href),
        className: "".concat(parentClass, "__link"),
        target: "blank",
        "data-testid": "renderWord-hyperlink",
        rel: "nofollow noreferrer noopener",
        key: key
      }, type === 'email' ? value : truncate_1(value.replace(/(http(s?):\/\/)?(www\.)?/, ''), {
        length: 33
      }));
    }

    return word;
  };

  var textRenderer = function textRenderer(text, parentClass, onClickMention, onClickHashtag) {
    if (!text) return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null);
    var renderedText = text.split(/\r\n|\r|\n/) // first break on line
    .map(function (line, i) {
      return line.split(' ') // break for each word
      .map(function (word, j) {
        return renderWord(word, "item-".concat(i, "-").concat(j), parentClass, onClickMention, onClickHashtag);
      }).reduce(function (acc, elem) {
        return acc.length ? [acc, ' ', elem] : [elem];
      }, []);
    }).reduce(function (acc, elem) {
      return acc.length ? [acc, '\n', elem] : [elem];
    }, []);
    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, renderedText);
  };

  function smartRender(ElementOrComponentOrLiteral, props, fallback) {
    var RenderComponent = ElementOrComponentOrLiteral === undefined ? fallback : ElementOrComponentOrLiteral;
    if ( /*#__PURE__*/React__default['default'].isValidElement(RenderComponent)) return RenderComponent;

    if (typeof RenderComponent === 'string' || typeof RenderComponent === 'number' || typeof RenderComponent === 'boolean' || RenderComponent == null) {
      return RenderComponent;
    }

    return /*#__PURE__*/React.createElement(RenderComponent, props);
  }

  dayjs_min.extend(utc);
  dayjs_min.extend(minMax);
  dayjs_min.extend(relativeTime);
  function isTimezoneAwareTimestamp(timestamp) {
    return /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3,6}(Z$|[+-]\d{2}:\d{2}$)/.test(timestamp);
  }
  function humanizeTimestamp(timestamp, tDateTimeParser) {
    var time; // Following calculation is based on assumption that tDateTimeParser()
    // either returns momentjs or dayjs object.
    // When timestamp is not timezone-aware, we are supposed to take it as UTC time.
    // Ideally we need to adhere to RFC3339. Unfortunately this needs to be fixed on backend.

    if (typeof timestamp === 'string' && isTimezoneAwareTimestamp(timestamp)) {
      time = tDateTimeParser(timestamp);
    } else {
      time = tDateTimeParser(timestamp).add(dayjs_min(timestamp).utcOffset(), 'minute'); // parse time as UTC
    }

    return time.fromNow();
  }

  function isErrorUser(user) {
    return !!user && typeof user.error === 'string';
  }

  function userOrDefault(user) {
    if (!user || typeof user === 'string' || isErrorUser(user)) return {
      id: '!not-found',
      created_at: '',
      updated_at: '',
      data: {
        name: 'Unknown',
        profileImage: ''
      }
    };
    return user;
  } // https://stackoverflow.com/a/6860916/2570866

  function generateRandomId() {
    // prettier-ignore
    return S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4();
  }

  function S4() {
    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);
  }

  function dataTransferItemsHaveFiles(items) {
    if (!items || !items.length) return false;

    for (var i = 0; i < items.length; i += 1) {
      var item = items[i];
      if (item.kind === 'file' || item.type === 'text/html') return true;
    }

    return false;
  }

  function getFileLikes(items) {
    var fileLikes = [];

    for (var i = 0; i < items.length; i += 1) {
      var item = items[i];

      if (item.kind === 'file') {
        var file = item.getAsFile();
        if (file) fileLikes.push(file);
      }
    }

    return fileLikes;
  }

  function dataTransferItemsToFiles(_x) {
    return _dataTransferItemsToFiles.apply(this, arguments);
  }

  function _dataTransferItemsToFiles() {
    _dataTransferItemsToFiles = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee3(items) {
      var fileLikes, blobPromises, parser, _loop, i;

      return regenerator$1.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (!(!items || !items.length)) {
                _context3.next = 2;
                break;
              }

              return _context3.abrupt("return", []);

            case 2:
              fileLikes = getFileLikes(items); // If there are files inside the DataTransferItem prefer those

              if (!fileLikes.length) {
                _context3.next = 5;
                break;
              }

              return _context3.abrupt("return", fileLikes);

            case 5:
              // Otherwise extract images from html
              blobPromises = [];
              parser = new DOMParser();

              _loop = function _loop(i) {
                var item = items[i];

                if (item.type === 'text/html') {
                  blobPromises.push(new Promise(function (accept) {
                    item.getAsString( /*#__PURE__*/function () {
                      var _ref = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee2(s) {
                        var doc, imageTags, imagePromises, _loop2, j, _ret;

                        return regenerator$1.wrap(function _callee2$(_context2) {
                          while (1) {
                            switch (_context2.prev = _context2.next) {
                              case 0:
                                doc = parser.parseFromString(s, 'text/html');
                                imageTags = doc.getElementsByTagName('img');
                                imagePromises = [];

                                _loop2 = function _loop2(j) {
                                  var tag = imageTags[j];

                                  if (!tag.src) {
                                    return "continue";
                                  }

                                  imagePromises.push(_asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee() {
                                    var res, contentType, buf, blob;
                                    return regenerator$1.wrap(function _callee$(_context) {
                                      while (1) {
                                        switch (_context.prev = _context.next) {
                                          case 0:
                                            _context.prev = 0;
                                            _context.next = 3;
                                            return fetch(tag.src);

                                          case 3:
                                            res = _context.sent;
                                            _context.next = 9;
                                            break;

                                          case 6:
                                            _context.prev = 6;
                                            _context.t0 = _context["catch"](0);
                                            return _context.abrupt("return");

                                          case 9:
                                            contentType = res.headers.get('Content-type') || 'application/octet-stream';
                                            _context.next = 12;
                                            return res.arrayBuffer();

                                          case 12:
                                            buf = _context.sent;
                                            blob = new Blob([buf], {
                                              type: contentType
                                            });
                                            fileLikes.push(blob);

                                          case 15:
                                          case "end":
                                            return _context.stop();
                                        }
                                      }
                                    }, _callee, null, [[0, 6]]);
                                  }))());
                                };

                                j = 0;

                              case 5:
                                if (!(j < imageTags.length)) {
                                  _context2.next = 12;
                                  break;
                                }

                                _ret = _loop2(j);

                                if (!(_ret === "continue")) {
                                  _context2.next = 9;
                                  break;
                                }

                                return _context2.abrupt("continue", 9);

                              case 9:
                                j++;
                                _context2.next = 5;
                                break;

                              case 12:
                                _context2.next = 14;
                                return Promise.all(imagePromises);

                              case 14:
                                accept(true);

                              case 15:
                              case "end":
                                return _context2.stop();
                            }
                          }
                        }, _callee2);
                      }));

                      return function (_x2) {
                        return _ref.apply(this, arguments);
                      };
                    }());
                  }));
                }
              };

              for (i = 0; i < items.length; i += 1) {
                _loop(i);
              }

              _context3.next = 11;
              return Promise.all(blobPromises);

            case 11:
              return _context3.abrupt("return", fileLikes);

            case 12:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));
    return _dataTransferItemsToFiles.apply(this, arguments);
  }

  function inputValueFromEvent() {
    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
    var targetFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    try {
      var _event;

      var target = (_event = event === null || event === void 0 ? void 0 : event[targetFirst ? 'target' : 'currentTarget']) !== null && _event !== void 0 ? _event : event === null || event === void 0 ? void 0 : event[targetFirst ? 'currentTarget' : 'target'];
      return target === null || target === void 0 ? void 0 : target.value;
    } catch (error) {
      console.error(error);
      return undefined;
    }
  }
  function sanitizeURL(url) {
    if (!url) return url;
    var proto = urlParse(url).protocol; // allow http, https, ftp
    // IMPORTANT: Don't allow data: protocol because of:
    // <a href="data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk7PC9zY3JpcHQ+" target="_blank">here</a>

    if (proto === 'https:' || proto === 'http:' || proto === 'ftp:') {
      return url;
    }

    return undefined;
  }
  var trimURL = function trimURL(url) {
    return url === null || url === void 0 ? void 0 : url.replace(/^(?:https?:\/\/)?(?:www\.)?/i, '').split('/').shift();
  };
  var useOnClickUser = function useOnClickUser(onClickUser) {
    return React.useMemo(function () {
      return onClickUser ? function (user) {
        return function (event) {
          event.stopPropagation();
          onClickUser(userOrDefault(user));
        };
      } : undefined;
    }, [onClickUser]);
  };

  function _createForOfIteratorHelper$2(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray$4(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$4(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen); }

  function _arrayLikeToArray$4(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function ownKeys$c(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$c(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$c(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var FeedManager = /*#__PURE__*/function () {
    function FeedManager(props) {
      var _this = this;

      _classCallCheck$3(this, FeedManager);

      _defineProperty$5(this, "registeredCallbacks", void 0);

      _defineProperty$5(this, "props", void 0);

      _defineProperty$5(this, "state", {
        activityOrder: [],
        activities: Immutable.Map(),
        activityIdToPath: {},
        activityIdToPaths: {},
        reactionIdToPaths: {},
        reactionActivities: {},
        lastResponse: null,
        lastReverseResponse: null,
        refreshing: false,
        realtimeAdds: [],
        realtimeDeletes: [],
        subscription: null,
        unread: 0,
        unseen: 0,
        numSubscribers: 0,
        reactionsBeingToggled: {},
        childReactionsBeingToggled: {}
      });

      _defineProperty$5(this, "setState", function (changed) {
        _this.state = _objectSpread$f(_objectSpread$f({}, _this.state), typeof changed === 'function' ? changed(_this.state) : changed);

        _this.triggerUpdate();
      });

      _defineProperty$5(this, "trackAnalytics", function (label, activity, track) {
        if (!track) return;
        var _this$props = _this.props,
            client = _this$props.client,
            analyticsClient = _this$props.analyticsClient,
            analyticsLocation = _this$props.analyticsLocation,
            feedGroup = _this$props.feedGroup,
            userId = _this$props.userId;

        if (!analyticsClient) {
          console.warn('trackAnalytics was enabled, but analytics client was not initialized. Please set the analyticsToken prop on StreamApp');
          return;
        }

        analyticsClient.trackEngagement({
          label: label,
          feed_id: client.feed(feedGroup, userId).id,
          content: {
            foreign_id: activity.foreign_id
          },
          location: analyticsLocation
        });
      });

      _defineProperty$5(this, "getActivityPath", function (activity) {
        var activityId = typeof activity === 'string' ? activity : activity.id;
        var activityPath = _this.state.activityIdToPath[activityId];

        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          rest[_key - 1] = arguments[_key];
        }

        if (activityPath === undefined) {
          return [activityId].concat(rest);
        }

        return [].concat(_toConsumableArray$3(activityPath), rest);
      });

      _defineProperty$5(this, "getActivityPaths", function (activity) {
        var activityId = typeof activity === 'string' ? activity : activity.id;
        return _this.state.activityIdToPaths[activityId];
      });

      _defineProperty$5(this, "getReactionPaths", function (reaction) {
        var reactionId = typeof reaction === 'string' ? reaction : reaction.id;
        return _this.state.reactionIdToPaths[reactionId];
      });

      _defineProperty$5(this, "onAddReaction", /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee(kind, activity, data) {
          var _this$props2, _this$props$user;

          var options,
              reaction,
              enrichedReaction,
              _args = arguments;
          return regenerator$1.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};

                  if (!options.userId && (_this$props2 = _this.props) !== null && _this$props2 !== void 0 && _this$props2.client.userId) {
                    options.userId = _this.props.client.userId;
                  }

                  _context.prev = 2;

                  if (!_this.props.doReactionAddRequest) {
                    _context.next = 9;
                    break;
                  }

                  _context.next = 6;
                  return _this.props.doReactionAddRequest(kind, activity, data, options);

                case 6:
                  reaction = _context.sent;
                  _context.next = 12;
                  break;

                case 9:
                  _context.next = 11;
                  return _this.props.client.reactions.add(kind, activity, data, options);

                case 11:
                  reaction = _context.sent;

                case 12:
                  _context.next = 18;
                  break;

                case 14:
                  _context.prev = 14;
                  _context.t0 = _context["catch"](2);

                  _this.props.errorHandler(_context.t0, 'add-reaction', {
                    kind: kind,
                    activity: activity,
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                  return _context.abrupt("return");

                case 18:
                  _this.trackAnalytics(kind, activity, options.trackAnalytics);

                  enrichedReaction = Immutable.fromJS(_objectSpread$f(_objectSpread$f({}, reaction), {}, {
                    user: (_this$props$user = _this.props.user) === null || _this$props$user === void 0 ? void 0 : _this$props$user.full
                  }));

                  _this.setState(function (prevState) {
                    var activities = prevState.activities;
                    var reactionIdToPaths = prevState.reactionIdToPaths;

                    var _iterator = _createForOfIteratorHelper$2(_this.getActivityPaths(activity)),
                        _step;

                    try {
                      for (_iterator.s(); !(_step = _iterator.n()).done;) {
                        var path = _step.value;

                        _this.removeFoundReactionIdPaths(activities.getIn(path).toJS(), reactionIdToPaths, path);

                        activities = activities.updateIn([].concat(_toConsumableArray$3(path), ['reaction_counts', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                          return v + 1;
                        }).updateIn([].concat(_toConsumableArray$3(path), ['own_reactions', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.unshift(enrichedReaction);
                        }).updateIn([].concat(_toConsumableArray$3(path), ['latest_reactions', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.unshift(enrichedReaction);
                        });

                        _this.addFoundReactionIdPaths(activities.getIn(path).toJS(), reactionIdToPaths, path);
                      }
                    } catch (err) {
                      _iterator.e(err);
                    } finally {
                      _iterator.f();
                    }

                    return {
                      activities: activities,
                      reactionIdToPaths: reactionIdToPaths
                    };
                  });

                case 21:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, null, [[2, 14]]);
        }));

        return function (_x, _x2, _x3) {
          return _ref.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "onRemoveReaction", /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee2(kind, activity, id) {
          var options,
              _args2 = arguments;
          return regenerator$1.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};
                  _context2.prev = 1;

                  if (!_this.props.doReactionDeleteRequest) {
                    _context2.next = 7;
                    break;
                  }

                  _context2.next = 5;
                  return _this.props.doReactionDeleteRequest(id);

                case 5:
                  _context2.next = 9;
                  break;

                case 7:
                  _context2.next = 9;
                  return _this.props.client.reactions.delete(id);

                case 9:
                  _context2.next = 15;
                  break;

                case 11:
                  _context2.prev = 11;
                  _context2.t0 = _context2["catch"](1);

                  _this.props.errorHandler(_context2.t0, 'delete-reaction', {
                    kind: kind,
                    activity: activity,
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                  return _context2.abrupt("return");

                case 15:
                  _this.trackAnalytics('un' + kind, activity, options.trackAnalytics);

                  _this.setState(function (prevState) {
                    var activities = prevState.activities;
                    var reactionIdToPaths = prevState.reactionIdToPaths;

                    var _iterator2 = _createForOfIteratorHelper$2(_this.getActivityPaths(activity)),
                        _step2;

                    try {
                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                        var path = _step2.value;

                        _this.removeFoundReactionIdPaths(activities.getIn(path).toJS(), reactionIdToPaths, path);

                        activities = activities.updateIn([].concat(_toConsumableArray$3(path), ['reaction_counts', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                          return v - 1;
                        }).updateIn([].concat(_toConsumableArray$3(path), ['own_reactions', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.remove(v.findIndex(function (r) {
                            return r.get('id') === id;
                          }));
                        }).updateIn([].concat(_toConsumableArray$3(path), ['latest_reactions', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.remove(v.findIndex(function (r) {
                            return r.get('id') === id;
                          }));
                        });

                        _this.addFoundReactionIdPaths(activities.getIn(path).toJS(), reactionIdToPaths, path);
                      }
                    } catch (err) {
                      _iterator2.e(err);
                    } finally {
                      _iterator2.f();
                    }

                    return {
                      activities: activities,
                      reactionIdToPaths: reactionIdToPaths
                    };
                  });

                  if (_this.state.reactionActivities[id]) {
                    _this._removeActivityFromState(_this.state.reactionActivities[id]);
                  }

                case 18:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, null, [[1, 11]]);
        }));

        return function (_x4, _x5, _x6) {
          return _ref2.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "onToggleReaction", /*#__PURE__*/function () {
        var _ref3 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee3(kind, activity, data) {
          var options,
              togglingReactions,
              currentReactions,
              last,
              _args3 = arguments;
          return regenerator$1.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  options = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : {};
                  togglingReactions = _this.state.reactionsBeingToggled[kind] || {};

                  if (!togglingReactions[activity.id]) {
                    _context3.next = 4;
                    break;
                  }

                  return _context3.abrupt("return");

                case 4:
                  togglingReactions[activity.id] = true;
                  _this.state.reactionsBeingToggled[kind] = togglingReactions;
                  currentReactions = _this.state.activities.getIn([].concat(_toConsumableArray$3(_this.getActivityPaths(activity)[0]), ['own_reactions', kind]), Immutable.List());
                  last = currentReactions.last();

                  if (!last) {
                    _context3.next = 13;
                    break;
                  }

                  _context3.next = 11;
                  return _this.onRemoveReaction(kind, activity, last.get('id'), options);

                case 11:
                  _context3.next = 15;
                  break;

                case 13:
                  _context3.next = 15;
                  return _this.onAddReaction(kind, activity, data, options);

                case 15:
                  delete togglingReactions[activity.id];

                case 16:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        return function (_x7, _x8, _x9) {
          return _ref3.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "onAddChildReaction", /*#__PURE__*/function () {
        var _ref4 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee4(kind, reaction, data) {
          var _this$props$user2;

          var options,
              childReaction,
              enrichedReaction,
              _args4 = arguments;
          return regenerator$1.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  options = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};

                  if (!options.userId && _this.props.client && _this.props.client.userId) {
                    options.userId = _this.props.client.userId;
                  }

                  _context4.prev = 2;

                  if (!_this.props.doChildReactionAddRequest) {
                    _context4.next = 9;
                    break;
                  }

                  _context4.next = 6;
                  return _this.props.doChildReactionAddRequest(kind, reaction, data, options);

                case 6:
                  childReaction = _context4.sent;
                  _context4.next = 12;
                  break;

                case 9:
                  _context4.next = 11;
                  return _this.props.client.reactions.addChild(kind, reaction, data, options);

                case 11:
                  childReaction = _context4.sent;

                case 12:
                  _context4.next = 18;
                  break;

                case 14:
                  _context4.prev = 14;
                  _context4.t0 = _context4["catch"](2);

                  _this.props.errorHandler(_context4.t0, 'add-child-reaction', {
                    kind: kind,
                    reaction: reaction,
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                  return _context4.abrupt("return");

                case 18:
                  // this.trackAnalytics(kind, reaction, options.trackAnalytics);
                  enrichedReaction = Immutable.fromJS(_objectSpread$f(_objectSpread$f({}, childReaction), {}, {
                    user: (_this$props$user2 = _this.props.user) === null || _this$props$user2 === void 0 ? void 0 : _this$props$user2.full
                  }));

                  _this.setState(function (prevState) {
                    var activities = prevState.activities;

                    var _iterator3 = _createForOfIteratorHelper$2(_this.getReactionPaths(reaction)),
                        _step3;

                    try {
                      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                        var path = _step3.value;
                        activities = activities.updateIn([].concat(_toConsumableArray$3(path), ['children_counts', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                          return v + 1;
                        }).updateIn([].concat(_toConsumableArray$3(path), ['own_children', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.unshift(enrichedReaction);
                        }).updateIn([].concat(_toConsumableArray$3(path), ['latest_children', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.unshift(enrichedReaction);
                        });
                      }
                    } catch (err) {
                      _iterator3.e(err);
                    } finally {
                      _iterator3.f();
                    }

                    return {
                      activities: activities
                    };
                  });

                case 20:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, null, [[2, 14]]);
        }));

        return function (_x10, _x11, _x12) {
          return _ref4.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "onRemoveChildReaction", /*#__PURE__*/function () {
        var _ref5 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee5(kind, reaction, id) {
          return regenerator$1.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.prev = 0;

                  if (!_this.props.doChildReactionDeleteRequest) {
                    _context5.next = 6;
                    break;
                  }

                  _context5.next = 4;
                  return _this.props.doChildReactionDeleteRequest(id);

                case 4:
                  _context5.next = 8;
                  break;

                case 6:
                  _context5.next = 8;
                  return _this.props.client.reactions.delete(id);

                case 8:
                  _context5.next = 14;
                  break;

                case 10:
                  _context5.prev = 10;
                  _context5.t0 = _context5["catch"](0);

                  _this.props.errorHandler(_context5.t0, 'delete-reaction', {
                    kind: kind,
                    reaction: reaction,
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                  return _context5.abrupt("return");

                case 14:
                  // this.trackAnalytics('un' + kind, reaction, options.trackAnalytics);
                  if (_this.state.reactionActivities[id]) {
                    _this._removeActivityFromState(_this.state.reactionActivities[id]);
                  }

                  return _context5.abrupt("return", _this.setState(function (prevState) {
                    var activities = prevState.activities;

                    var _iterator4 = _createForOfIteratorHelper$2(_this.getReactionPaths(reaction)),
                        _step4;

                    try {
                      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                        var path = _step4.value;
                        activities = activities.updateIn([].concat(_toConsumableArray$3(path), ['children_counts', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                          return v - 1;
                        }).updateIn([].concat(_toConsumableArray$3(path), ['own_children', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.remove(v.findIndex(function (r) {
                            return r.get('id') === id;
                          }));
                        }).updateIn([].concat(_toConsumableArray$3(path), ['latest_children', kind]), function () {
                          var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                          return v.remove(v.findIndex(function (r) {
                            return r.get('id') === id;
                          }));
                        });
                      }
                    } catch (err) {
                      _iterator4.e(err);
                    } finally {
                      _iterator4.f();
                    }

                    return {
                      activities: activities
                    };
                  }));

                case 16:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5, null, [[0, 10]]);
        }));

        return function (_x13, _x14, _x15) {
          return _ref5.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "onToggleChildReaction", /*#__PURE__*/function () {
        var _ref6 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee6(kind, reaction, data) {
          var options,
              togglingReactions,
              currentReactions,
              last,
              _args6 = arguments;
          return regenerator$1.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  options = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : {};
                  togglingReactions = _this.state.childReactionsBeingToggled[kind] || {};

                  if (!togglingReactions[reaction.id]) {
                    _context6.next = 4;
                    break;
                  }

                  return _context6.abrupt("return");

                case 4:
                  togglingReactions[reaction.id] = true;
                  _this.state.childReactionsBeingToggled[kind] = togglingReactions;
                  currentReactions = _this.state.activities.getIn([].concat(_toConsumableArray$3(_this.getReactionPaths(reaction)[0]), ['own_children', kind]), Immutable.List());
                  last = currentReactions.last();

                  if (!last) {
                    _context6.next = 13;
                    break;
                  }

                  _context6.next = 11;
                  return _this.onRemoveChildReaction(kind, reaction, last.get('id'));

                case 11:
                  _context6.next = 15;
                  break;

                case 13:
                  _context6.next = 15;
                  return _this.onAddChildReaction(kind, reaction, data, options);

                case 15:
                  delete togglingReactions[reaction.id];

                case 16:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }));

        return function (_x16, _x17, _x18) {
          return _ref6.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "_removeActivityFromState", function (activityId) {
        return _this.setState(function (_ref7) {
          var activities = _ref7.activities,
              activityOrder = _ref7.activityOrder,
              activityIdToPath = _ref7.activityIdToPath,
              activityIdToPaths = _ref7.activityIdToPaths,
              reactionIdToPaths = _ref7.reactionIdToPaths;

          var path = _this.getActivityPath(activityId);

          var outerId = activityId;

          if (path.length > 1) {
            // It's an aggregated group we should update the paths of everything in
            // the list
            var groupArrayPath = path.slice(0, -1);
            activityIdToPath = _this.removeFoundActivityIdPath(activities.getIn(groupArrayPath).toJS(), activityIdToPath, groupArrayPath);
            activityIdToPaths = _this.removeFoundActivityIdPaths(activities.getIn(groupArrayPath).toJS(), activityIdToPaths, groupArrayPath);
            reactionIdToPaths = _this.removeFoundReactionIdPaths(activities.getIn(groupArrayPath).toJS(), reactionIdToPaths, groupArrayPath);
          } else {
            // Otherwise remove all things inside this activity from the path
            // objects
            // @ts-expect-error
            activityIdToPaths = _this.removeFoundActivityIdPaths(activities.get(activityId).toJS(), activityIdToPaths, [activityId]); // @ts-expect-error

            reactionIdToPaths = _this.removeFoundReactionIdPaths(activities.get(activityId).toJS(), reactionIdToPaths, [activityId]);
          }

          activities = activities.removeIn(path);

          if (path.length > 1) {
            var _groupArrayPath = path.slice(0, -1);

            if (activities.getIn(_groupArrayPath).size === 0) {
              outerId = path[0];
            } else {
              outerId = null;
            }

            activityIdToPath = _this.addFoundActivityIdPath(activities.getIn(_groupArrayPath).toJS(), activityIdToPath, _groupArrayPath);
            activityIdToPaths = _this.addFoundActivityIdPaths(activities.getIn(_groupArrayPath).toJS(), activityIdToPaths, _groupArrayPath);
            reactionIdToPaths = _this.addFoundReactionIdPaths(activities.getIn(_groupArrayPath).toJS(), reactionIdToPaths, _groupArrayPath);
          }

          if (outerId != null) {
            activityOrder = activityOrder.filter(function (id) {
              return id !== outerId;
            });
          }

          return {
            activities: activities,
            activityOrder: activityOrder,
            activityIdToPaths: activityIdToPaths,
            reactionIdToPaths: reactionIdToPaths,
            activityIdToPath: activityIdToPath
          };
        });
      });

      _defineProperty$5(this, "onRemoveActivity", /*#__PURE__*/function () {
        var _ref8 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee7(activityId) {
          return regenerator$1.wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  _context7.prev = 0;

                  if (!_this.props.doActivityDeleteRequest) {
                    _context7.next = 6;
                    break;
                  }

                  _context7.next = 4;
                  return _this.props.doActivityDeleteRequest(activityId);

                case 4:
                  _context7.next = 8;
                  break;

                case 6:
                  _context7.next = 8;
                  return _this.feed().removeActivity(activityId);

                case 8:
                  _context7.next = 14;
                  break;

                case 10:
                  _context7.prev = 10;
                  _context7.t0 = _context7["catch"](0);

                  _this.props.errorHandler(_context7.t0, 'delete-activity', {
                    activityId: _this.props.feedGroup,
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                  return _context7.abrupt("return");

                case 14:
                  return _context7.abrupt("return", _this._removeActivityFromState(activityId));

                case 15:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7, null, [[0, 10]]);
        }));

        return function (_x19) {
          return _ref8.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "onMarkAsRead", function (group) {
        return _this._onMarkAs('read', group);
      });

      _defineProperty$5(this, "onMarkAsSeen", function (group) {
        return _this._onMarkAs('seen', group);
      });

      _defineProperty$5(this, "_onMarkAs", /*#__PURE__*/function () {
        var _ref9 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee8(type, group) {
          var groupArray, markArg;
          return regenerator$1.wrap(function _callee8$(_context8) {
            while (1) {
              switch (_context8.prev = _context8.next) {
                case 0:
                  markArg = group;

                  if (group === true) {
                    groupArray = _this.state.activityOrder;
                  } else if (Array.isArray(group)) {
                    groupArray = group.map(function (g) {
                      return g.id;
                    });
                    markArg = groupArray;
                  } else {
                    markArg = group.id;
                    groupArray = [group.id];
                  }

                  _context8.prev = 2;
                  _context8.next = 5;
                  return _this.doFeedRequest(_defineProperty$5({
                    limit: 1,
                    id_lte: _this.state.activityOrder[0]
                  }, 'mark_' + type, markArg));

                case 5:
                  _context8.next = 10;
                  break;

                case 7:
                  _context8.prev = 7;
                  _context8.t0 = _context8["catch"](2);

                  _this.props.errorHandler(_context8.t0, 'get-notification-counts', {
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                case 10:
                  _this.setState(function (prevState) {
                    var counterKey = "un".concat(type);
                    var activities = prevState.activities;
                    var counter = prevState[counterKey];

                    var _iterator5 = _createForOfIteratorHelper$2(groupArray),
                        _step5;

                    try {
                      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                        var groupId = _step5.value;
                        var markerPath = [groupId, 'is_' + type];

                        if (activities.getIn(markerPath) !== false) {
                          continue;
                        }

                        activities = activities.setIn(markerPath, true);
                        counter--;
                      }
                    } catch (err) {
                      _iterator5.e(err);
                    } finally {
                      _iterator5.f();
                    }

                    return _defineProperty$5({
                      activities: activities
                    }, counterKey, counter);
                  });

                case 11:
                case "end":
                  return _context8.stop();
              }
            }
          }, _callee8, null, [[2, 7]]);
        }));

        return function (_x20, _x21) {
          return _ref9.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "getOptions", function () {
        var extraOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var propOpts = _objectSpread$f({}, _this.props.options);

        var id_gt = extraOptions.id_gt,
            id_gte = extraOptions.id_gte,
            id_lt = extraOptions.id_lt,
            id_lte = extraOptions.id_lte,
            offset = extraOptions.offset;

        if (id_gt || id_gte || id_lt || id_lte || offset != null) {
          delete propOpts.id_gt;
          delete propOpts.id_gte;
          delete propOpts.id_lt;
          delete propOpts.id_lte;
          delete propOpts.offset; // @ts-expect-error

          delete propOpts.refresh;
        }

        return _objectSpread$f(_objectSpread$f({
          withReactionCounts: true,
          withOwnReactions: true,
          limit: 10
        }, propOpts), extraOptions);
      });

      _defineProperty$5(this, "doFeedRequest", /*#__PURE__*/function () {
        var _ref11 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee9(options) {
          return regenerator$1.wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  if (!_this.props.doFeedRequest) {
                    _context9.next = 4;
                    break;
                  }

                  _context9.next = 3;
                  return _this.props.doFeedRequest(_this.props.client, _this.props.feedGroup, _this.props.userId, options);

                case 3:
                  return _context9.abrupt("return", _context9.sent);

                case 4:
                  _context9.next = 6;
                  return _this.feed().get(options);

                case 6:
                  return _context9.abrupt("return", _context9.sent);

                case 7:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9);
        }));

        return function (_x22) {
          return _ref11.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "feed", function () {
        return _this.props.client.feed(_this.props.feedGroup, _this.props.userId);
      });

      _defineProperty$5(this, "responseToActivityMap", function (response) {
        return Immutable.fromJS( // @ts-expect-error
        response.results.reduce(function (map, a) {
          map[a.id] = a;
          return map;
        }, {}));
      });

      _defineProperty$5(this, "responseToActivityIdToPath", function (response) {
        if (response.results.length === 0 || response.results[0].activities === undefined) {
          return {};
        }

        var results = response.results;
        var map = {};

        var _iterator6 = _createForOfIteratorHelper$2(results),
            _step6;

        try {
          var _loop = function _loop() {
            var group = _step6.value;
            group.activities.forEach(function (act, i) {
              map[act.id] = [group.id, 'activities', i];
            });
          };

          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            _loop();
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }

        return map;
      });

      _defineProperty$5(this, "responseToActivityIdToPaths", function (response) {
        var previous = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var map = previous;
        var currentPath = [];

        function addFoundActivities(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              addFoundActivities(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            // @ts-expect-error
            if (obj.id && obj.actor && obj.verb && obj.object) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              map[obj.id].push([].concat(currentPath));
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              addFoundActivities(obj[k]);
              currentPath.pop();
            }
          }
        }

        var _iterator7 = _createForOfIteratorHelper$2(response.results),
            _step7;

        try {
          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
            var a = _step7.value;
            currentPath.push(a.id);
            addFoundActivities(a);
            currentPath.pop();
          }
        } catch (err) {
          _iterator7.e(err);
        } finally {
          _iterator7.f();
        }

        return map;
      });

      _defineProperty$5(this, "feedResponseToReactionIdToPaths", function (response) {
        var previous = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var map = previous;
        var currentPath = [];

        function addFoundReactions(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              addFoundReactions(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            // @ts-expect-error
            if (obj.id && obj.kind && obj.data) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              map[obj.id].push([].concat(currentPath));
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              addFoundReactions(obj[k]);
              currentPath.pop();
            }
          }
        }

        var _iterator8 = _createForOfIteratorHelper$2(response.results),
            _step8;

        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var a = _step8.value;
            currentPath.push(a.id);
            addFoundReactions(a);
            currentPath.pop();
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }

        return map;
      });

      _defineProperty$5(this, "reactionResponseToReactionIdToPaths", function (response, previous, basePath, oldLength) {
        var map = previous;

        var currentPath = _toConsumableArray$3(basePath);

        function addFoundReactions(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              addFoundReactions(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            if (obj.id && obj.kind && obj.data) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              map[obj.id].push(_toConsumableArray$3(currentPath));
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              addFoundReactions(obj[k]);
              currentPath.pop();
            }
          }
        }

        var _iterator9 = _createForOfIteratorHelper$2(response.results),
            _step9;

        try {
          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
            var a = _step9.value;
            currentPath.push(oldLength);
            addFoundReactions(a);
            currentPath.pop();
            oldLength++;
          }
        } catch (err) {
          _iterator9.e(err);
        } finally {
          _iterator9.f();
        }

        return map;
      });

      _defineProperty$5(this, "removeFoundReactionIdPaths", function (data, previous, basePath) {
        var map = previous;

        var currentPath = _toConsumableArray$3(basePath);

        function removeFoundReactions(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              removeFoundReactions(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            if (obj.id && obj.kind && obj.data) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              remove_1(map[obj.id], function (path) {
                return isEqual_1(path, currentPath);
              });
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              removeFoundReactions(obj[k]);
              currentPath.pop();
            }
          }
        }

        removeFoundReactions(data);
        return map;
      });

      _defineProperty$5(this, "removeFoundActivityIdPaths", function (data, previous, basePath) {
        var map = previous;

        var currentPath = _toConsumableArray$3(basePath);

        function addFoundActivities(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              addFoundActivities(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            if (obj.id && obj.actor && obj.verb && obj.object) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              remove_1(map[obj.id], function (path) {
                return isEqual_1(path, currentPath);
              });
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              addFoundActivities(obj[k]);
              currentPath.pop();
            }
          }
        }

        addFoundActivities(data);
        return map;
      });

      _defineProperty$5(this, "removeFoundActivityIdPath", function (data, previous, basePath) {
        var map = previous;

        var currentPath = _toConsumableArray$3(basePath);

        data.forEach(function (obj, i) {
          currentPath.push(i);

          if (isEqual_1(map[obj.id], currentPath)) {
            delete map[obj.id];
          }

          currentPath.pop();
        });
        return map;
      });

      _defineProperty$5(this, "addFoundReactionIdPaths", function (data, previous, basePath) {
        var map = previous;

        var currentPath = _toConsumableArray$3(basePath);

        function addFoundReactions(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              addFoundReactions(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            if (obj.id && obj.kind && obj.data) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              map[obj.id].push(_toConsumableArray$3(currentPath));
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              addFoundReactions(obj[k]);
              currentPath.pop();
            }
          }
        }

        addFoundReactions(data);
        return map;
      });

      _defineProperty$5(this, "addFoundActivityIdPaths", function (data, previous, basePath) {
        var map = previous;

        var currentPath = _toConsumableArray$3(basePath);

        function addFoundActivities(obj) {
          if (Array.isArray(obj)) {
            obj.forEach(function (v, i) {
              currentPath.push(i);
              addFoundActivities(v);
              currentPath.pop();
            });
          } else if (isPlainObject_1(obj)) {
            if (obj.id && obj.actor && obj.verb && obj.object) {
              if (!map[obj.id]) {
                map[obj.id] = [];
              }

              map[obj.id].push(_toConsumableArray$3(currentPath));
            }

            for (var k in obj) {
              currentPath.push(k); // @ts-expect-error

              addFoundActivities(obj[k]);
              currentPath.pop();
            }
          }
        }

        addFoundActivities(data);
        return map;
      });

      _defineProperty$5(this, "addFoundActivityIdPath", function (data, previous, basePath) {
        var map = previous;
        data.forEach(function (obj, i) {
          map[obj.id] = [].concat(_toConsumableArray$3(basePath), [i]);
        });
        return map;
      });

      _defineProperty$5(this, "responseToReactionActivities", function (response) {
        if (response.results.length === 0) {
          return {};
        }

        var map = {};

        function setReactionActivities(activities) {
          var _iterator10 = _createForOfIteratorHelper$2(activities),
              _step10;

          try {
            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
              var a = _step10.value;

              if (a.reaction && a.reaction.id) {
                map[a.reaction.id] = a.id;
              }
            }
          } catch (err) {
            _iterator10.e(err);
          } finally {
            _iterator10.f();
          }
        }

        if (response.results[0].activities === undefined) {
          setReactionActivities(response.results);
        } else {
          var aggregatedResults = response.results;

          var _iterator11 = _createForOfIteratorHelper$2(aggregatedResults),
              _step11;

          try {
            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
              var group = _step11.value;
              setReactionActivities(group.activities);
            }
          } catch (err) {
            _iterator11.e(err);
          } finally {
            _iterator11.f();
          }
        }

        return map;
      });

      _defineProperty$5(this, "refresh", /*#__PURE__*/function () {
        var _ref12 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee10(extraOptions) {
          var options, response, newState;
          return regenerator$1.wrap(function _callee10$(_context10) {
            while (1) {
              switch (_context10.prev = _context10.next) {
                case 0:
                  options = _this.getOptions(extraOptions);
                  _context10.next = 3;
                  return _this.setState({
                    refreshing: true
                  });

                case 3:
                  _context10.prev = 3;
                  _context10.next = 6;
                  return _this.doFeedRequest(options);

                case 6:
                  response = _context10.sent;
                  _context10.next = 14;
                  break;

                case 9:
                  _context10.prev = 9;
                  _context10.t0 = _context10["catch"](3);

                  _this.setState({
                    refreshing: false
                  });

                  _this.props.errorHandler(_context10.t0, 'get-feed', {
                    feedGroup: _this.props.feedGroup,
                    userId: _this.props.userId
                  });

                  return _context10.abrupt("return");

                case 14:
                  newState = _objectSpread$f({
                    activityOrder: response.results.map(function (a) {
                      return a.id;
                    }),
                    activities: _this.responseToActivityMap(response),
                    activityIdToPath: _this.responseToActivityIdToPath(response),
                    activityIdToPaths: _this.responseToActivityIdToPaths(response),
                    reactionIdToPaths: _this.feedResponseToReactionIdToPaths(response),
                    reactionActivities: _this.responseToReactionActivities(response),
                    refreshing: false,
                    lastResponse: response,
                    realtimeAdds: [],
                    realtimeDeletes: []
                  }, _this.unseenUnreadFromResponse(response));

                  if (options.mark_seen === true) {
                    newState.unseen = 0;
                  }

                  if (options.mark_read === true) {
                    newState.unread = 0;
                  }

                  return _context10.abrupt("return", _this.setState(newState));

                case 18:
                case "end":
                  return _context10.stop();
              }
            }
          }, _callee10, null, [[3, 9]]);
        }));

        return function (_x23) {
          return _ref12.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "subscribe", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee11() {
        var feed;
        return regenerator$1.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                if (_this.props.notify) {
                  _context11.next = 2;
                  break;
                }

                return _context11.abrupt("return");

              case 2:
                feed = _this.feed();

                _this.setState(function (prevState) {
                  if (prevState.subscription) return {};
                  var subscription = feed.subscribe(function (data) {
                    _this.setState(function (prevState) {
                      var numActivityDiff = data.new.length - data.deleted.length;
                      return {
                        realtimeAdds: prevState.realtimeAdds.concat(data.new),
                        realtimeDeletes: prevState.realtimeDeletes.concat(data.deleted),
                        unread: prevState.unread + numActivityDiff,
                        unseen: prevState.unseen + numActivityDiff
                      };
                    });
                  });
                  subscription.then(function () {
                    return console.log("now listening to changes in realtime for ".concat(_this.feed().id));
                  }, function (err) {
                    return console.error(err);
                  });
                  return {
                    subscription: subscription
                  };
                });

              case 4:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      })));

      _defineProperty$5(this, "unsubscribe", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee12() {
        var subscription;
        return regenerator$1.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                subscription = _this.state.subscription;

                if (!(!subscription || _this.registeredCallbacks.length)) {
                  _context12.next = 3;
                  break;
                }

                return _context12.abrupt("return");

              case 3:
                _context12.prev = 3;
                _context12.next = 6;
                return subscription;

              case 6:
                _this.setState({
                  subscription: null
                }); // @ts-expect-error


                subscription === null || subscription === void 0 ? void 0 : subscription.cancel();
                console.log("stopped listening to changes in realtime for ".concat(_this.feed().id));
                _context12.next = 14;
                break;

              case 11:
                _context12.prev = 11;
                _context12.t0 = _context12["catch"](3);
                console.error(_context12.t0);

              case 14:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, null, [[3, 11]]);
      })));

      _defineProperty$5(this, "hasNextPage", function () {
        var lastResponse = _this.state.lastResponse;
        return Boolean(lastResponse && lastResponse.next);
      });

      _defineProperty$5(this, "hasReverseNextPage", function () {
        var lastReverseResponse = _this.state.lastReverseResponse;
        return Boolean(lastReverseResponse && lastReverseResponse.next);
      });

      _defineProperty$5(this, "loadNextPage", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee13() {
        var lastResponse, cancel, nextURL, options, response;
        return regenerator$1.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                lastResponse = _this.state.lastResponse;

                if (!(!lastResponse || !lastResponse.next)) {
                  _context13.next = 3;
                  break;
                }

                return _context13.abrupt("return");

              case 3:
                cancel = false;
                _context13.next = 6;
                return _this.setState(function (prevState) {
                  if (prevState.refreshing) {
                    cancel = true;
                    return {};
                  }

                  return {
                    refreshing: true
                  };
                });

              case 6:
                if (!cancel) {
                  _context13.next = 8;
                  break;
                }

                return _context13.abrupt("return");

              case 8:
                nextURL = new urlParse(lastResponse.next, true);
                options = _this.getOptions(nextURL.query);
                _context13.prev = 10;
                _context13.next = 13;
                return _this.doFeedRequest(options);

              case 13:
                response = _context13.sent;
                _context13.next = 21;
                break;

              case 16:
                _context13.prev = 16;
                _context13.t0 = _context13["catch"](10);

                _this.setState({
                  refreshing: false
                });

                _this.props.errorHandler(_context13.t0, 'get-feed-next-page', {
                  feedGroup: _this.props.feedGroup,
                  userId: _this.props.userId
                });

                return _context13.abrupt("return");

              case 21:
                return _context13.abrupt("return", _this.setState(function (prevState) {
                  var activities = prevState.activities.merge(_this.responseToActivityMap(response));

                  var activityIdToPath = _objectSpread$f(_objectSpread$f({}, prevState.activityIdToPath), _this.responseToActivityIdToPath(response));

                  return {
                    activityOrder: prevState.activityOrder.concat(response.results.map(function (a) {
                      return a.id;
                    })),
                    activities: activities,
                    activityIdToPath: activityIdToPath,
                    activityIdToPaths: _this.responseToActivityIdToPaths(response, prevState.activityIdToPaths),
                    reactionIdToPaths: _this.feedResponseToReactionIdToPaths(response, prevState.reactionIdToPaths),
                    reactionActivities: _objectSpread$f(_objectSpread$f({}, prevState.reactionActivities), _this.responseToReactionActivities(response)),
                    refreshing: false,
                    lastResponse: response
                  };
                }));

              case 22:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, null, [[10, 16]]);
      })));

      _defineProperty$5(this, "loadReverseNextPage", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee14() {
        var lastReverseResponse, cancel, nextURL, options, response;
        return regenerator$1.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                lastReverseResponse = _this.state.lastReverseResponse;

                if (!(!lastReverseResponse || !lastReverseResponse.next)) {
                  _context14.next = 3;
                  break;
                }

                return _context14.abrupt("return");

              case 3:
                cancel = false;
                _context14.next = 6;
                return _this.setState(function (prevState) {
                  if (prevState.refreshing) {
                    cancel = true;
                    return {};
                  }

                  return {
                    refreshing: true
                  };
                });

              case 6:
                if (!cancel) {
                  _context14.next = 8;
                  break;
                }

                return _context14.abrupt("return");

              case 8:
                nextURL = new urlParse(lastReverseResponse.next, true);
                options = _this.getOptions(nextURL.query);
                _context14.prev = 10;
                _context14.next = 13;
                return _this.doFeedRequest(options);

              case 13:
                response = _context14.sent;
                _context14.next = 21;
                break;

              case 16:
                _context14.prev = 16;
                _context14.t0 = _context14["catch"](10);

                _this.setState({
                  refreshing: false
                });

                _this.props.errorHandler(_context14.t0, 'get-feed-next-page', {
                  feedGroup: _this.props.feedGroup,
                  userId: _this.props.userId
                });

                return _context14.abrupt("return");

              case 21:
                return _context14.abrupt("return", _this.setState(function (prevState) {
                  var activities = prevState.activities.merge(_this.responseToActivityMap(response));

                  var activityIdToPath = _objectSpread$f(_objectSpread$f({}, prevState.activityIdToPath), _this.responseToActivityIdToPath(response));

                  return {
                    activityOrder: response.results.map(function (a) {
                      return a.id;
                    }).concat(prevState.activityOrder),
                    activities: activities,
                    activityIdToPath: activityIdToPath,
                    activityIdToPaths: _this.responseToActivityIdToPaths(response, prevState.activityIdToPaths),
                    reactionIdToPaths: _this.feedResponseToReactionIdToPaths(response, prevState.reactionIdToPaths),
                    reactionActivities: _objectSpread$f(_objectSpread$f({}, prevState.reactionActivities), _this.responseToReactionActivities(response)),
                    refreshing: false,
                    lastReverseResponse: response
                  };
                }));

              case 22:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, null, [[10, 16]]);
      })));

      _defineProperty$5(this, "loadNextReactions", /*#__PURE__*/function () {
        var _ref17 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee15(activityId, kind, activityPath, oldestToNewest) {
          var options, orderPrefix, latestReactionsPath, nextUrlPath, refreshingPath, reactions_extra, nextUrl, refreshing, response;
          return regenerator$1.wrap(function _callee15$(_context15) {
            while (1) {
              switch (_context15.prev = _context15.next) {
                case 0:
                  options = {
                    activity_id: activityId,
                    kind: kind
                  };
                  orderPrefix = 'latest';

                  if (oldestToNewest) {
                    orderPrefix = 'oldest';
                  }

                  if (!activityPath) {
                    activityPath = _this.getActivityPath(activityId);
                  }

                  latestReactionsPath = [].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions', kind]);
                  nextUrlPath = [].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions_extra', kind, 'next']);
                  refreshingPath = [].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions_extra', kind, 'refreshing']);
                  reactions_extra = _this.state.activities.getIn([].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions_extra']));
                  nextUrl = 'https://api.stream-io-api.com/';

                  if (reactions_extra) {
                    nextUrl = reactions_extra.getIn([kind, 'next'], '');
                  } else if (oldestToNewest) {
                    // If it's the first request and oldest to newest make sure
                    // order is reversed by this trick with a non existant id.
                    options.id_gt = 'non-existant-' + generateRandomId();
                  }

                  refreshing = _this.state.activities.getIn(refreshingPath, false);

                  if (!(!nextUrl || refreshing)) {
                    _context15.next = 13;
                    break;
                  }

                  return _context15.abrupt("return");

                case 13:
                  _this.setState(function (prevState) {
                    return {
                      activities: prevState.activities.setIn(refreshingPath, true)
                    };
                  });

                  options = _objectSpread$f(_objectSpread$f({}, urlParse(nextUrl, true).query), options);
                  _context15.prev = 15;

                  if (!_this.props.doReactionsFilterRequest) {
                    _context15.next = 22;
                    break;
                  }

                  _context15.next = 19;
                  return _this.props.doReactionsFilterRequest(options);

                case 19:
                  response = _context15.sent;
                  _context15.next = 25;
                  break;

                case 22:
                  _context15.next = 24;
                  return _this.props.client.reactions.filter(options);

                case 24:
                  response = _context15.sent;

                case 25:
                  _context15.next = 32;
                  break;

                case 27:
                  _context15.prev = 27;
                  _context15.t0 = _context15["catch"](15);

                  _this.setState({
                    refreshing: false
                  });

                  _this.props.errorHandler(_context15.t0, 'get-reactions-next-page', {
                    options: options
                  });

                  return _context15.abrupt("return");

                case 32:
                  _this.setState(function (prevState) {
                    return {
                      activities: prevState.activities.setIn(refreshingPath, false).setIn(nextUrlPath, response.next).updateIn(latestReactionsPath, function () {
                        var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.List();
                        return v.concat(Immutable.fromJS(response.results));
                      }),
                      reactionIdToPaths: _this.reactionResponseToReactionIdToPaths(response, prevState.reactionIdToPaths, latestReactionsPath, prevState.activities.getIn(latestReactionsPath, Immutable.List()).toJS().length)
                    };
                  });

                case 33:
                case "end":
                  return _context15.stop();
              }
            }
          }, _callee15, null, [[15, 27]]);
        }));

        return function (_x24, _x25, _x26, _x27) {
          return _ref17.apply(this, arguments);
        };
      }());

      _defineProperty$5(this, "refreshUnreadUnseen", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee16() {
        var response;
        return regenerator$1.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.prev = 0;
                _context16.next = 3;
                return _this.doFeedRequest({
                  limit: 0
                });

              case 3:
                response = _context16.sent;
                _context16.next = 10;
                break;

              case 6:
                _context16.prev = 6;
                _context16.t0 = _context16["catch"](0);

                _this.props.errorHandler(_context16.t0, 'get-notification-counts', {
                  feedGroup: _this.props.feedGroup,
                  userId: _this.props.userId
                });

                return _context16.abrupt("return");

              case 10:
                return _context16.abrupt("return", _this.setState(_this.unseenUnreadFromResponse(response)));

              case 11:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, null, [[0, 6]]);
      })));

      this.props = props;
      var initialOptions = this.getOptions();
      this.registeredCallbacks = [];
      var previousUrl = '';

      if (initialOptions.id_gte) {
        previousUrl = "?id_lt=".concat(initialOptions.id_gte);
      } else if (initialOptions.id_gt) {
        previousUrl = "?id_lte=".concat(initialOptions.id_gt);
      } else if (initialOptions.id_lte) {
        previousUrl = "?id_gt=".concat(initialOptions.id_lte);
      } else if (initialOptions.id_lt) {
        previousUrl = "?id_gte=".concat(initialOptions.id_lt);
      }

      this.state.lastReverseResponse = {
        next: previousUrl
      };
    }

    _createClass$3(FeedManager, [{
      key: "register",
      value: function register(callback) {
        this.registeredCallbacks.push(callback);
        this.subscribe();
      }
    }, {
      key: "unregister",
      value: function unregister(callback) {
        this.registeredCallbacks.splice(this.registeredCallbacks.indexOf(callback), 1);
        this.unsubscribe();
      }
    }, {
      key: "triggerUpdate",
      value: function triggerUpdate() {
        var _iterator12 = _createForOfIteratorHelper$2(this.registeredCallbacks),
            _step12;

        try {
          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
            var callback = _step12.value;
            callback();
          }
        } catch (err) {
          _iterator12.e(err);
        } finally {
          _iterator12.f();
        }
      }
    }, {
      key: "unseenUnreadFromResponse",
      value: function unseenUnreadFromResponse(response) {
        var unseen = 0;
        var unread = 0;

        if (typeof response.unseen === 'number') {
          unseen = response.unseen;
        }

        if (typeof response.unread === 'number') {
          unread = response.unread;
        }

        return {
          unseen: unseen,
          unread: unread
        };
      }
    }]);

    return FeedManager;
  }();

  var handleError = function handleError(error, type, detail) {
    console.warn(error, type, detail);
  };

  function _typeof$2(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof$2 = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof$2 = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof$2(obj);
  }

  function _defineProperty$4(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _objectSpread$e(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? Object(arguments[i]) : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty$4(target, key, source[key]);
      });
    }

    return target;
  }

  function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties$2(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass$2(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties$2(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties$2(Constructor, staticProps);
    return Constructor;
  }

  function _assertThisInitialized$2(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn$2(self, call) {
    if (call && (_typeof$2(call) === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized$2(self);
  }

  function _getPrototypeOf$2(o) {
    _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf$2(o);
  }

  function _setPrototypeOf$2(o, p) {
    _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf$2(o, p);
  }

  function _inherits$2(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf$2(subClass, superClass);
  }

  var consoleLogger = {
    type: 'logger',
    log: function log(args) {
      this.output('log', args);
    },
    warn: function warn(args) {
      this.output('warn', args);
    },
    error: function error(args) {
      this.output('error', args);
    },
    output: function output(type, args) {
      if (console && console[type]) console[type].apply(console, args);
    }
  };

  var Logger = function () {
    function Logger(concreteLogger) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      _classCallCheck$2(this, Logger);

      this.init(concreteLogger, options);
    }

    _createClass$2(Logger, [{
      key: "init",
      value: function init(concreteLogger) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        this.prefix = options.prefix || 'i18next:';
        this.logger = concreteLogger || consoleLogger;
        this.options = options;
        this.debug = options.debug;
      }
    }, {
      key: "setDebug",
      value: function setDebug(bool) {
        this.debug = bool;
      }
    }, {
      key: "log",
      value: function log() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return this.forward(args, 'log', '', true);
      }
    }, {
      key: "warn",
      value: function warn() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return this.forward(args, 'warn', '', true);
      }
    }, {
      key: "error",
      value: function error() {
        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        return this.forward(args, 'error', '');
      }
    }, {
      key: "deprecate",
      value: function deprecate() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);
      }
    }, {
      key: "forward",
      value: function forward(args, lvl, prefix, debugOnly) {
        if (debugOnly && !this.debug) return null;
        if (typeof args[0] === 'string') args[0] = "".concat(prefix).concat(this.prefix, " ").concat(args[0]);
        return this.logger[lvl](args);
      }
    }, {
      key: "create",
      value: function create(moduleName) {
        return new Logger(this.logger, _objectSpread$e({}, {
          prefix: "".concat(this.prefix, ":").concat(moduleName, ":")
        }, this.options));
      }
    }]);

    return Logger;
  }();

  var baseLogger = new Logger();

  var EventEmitter = function () {
    function EventEmitter() {
      _classCallCheck$2(this, EventEmitter);

      this.observers = {};
    }

    _createClass$2(EventEmitter, [{
      key: "on",
      value: function on(events, listener) {
        var _this = this;

        events.split(' ').forEach(function (event) {
          _this.observers[event] = _this.observers[event] || [];

          _this.observers[event].push(listener);
        });
        return this;
      }
    }, {
      key: "off",
      value: function off(event, listener) {
        if (!this.observers[event]) return;

        if (!listener) {
          delete this.observers[event];
          return;
        }

        this.observers[event] = this.observers[event].filter(function (l) {
          return l !== listener;
        });
      }
    }, {
      key: "emit",
      value: function emit(event) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        if (this.observers[event]) {
          var cloned = [].concat(this.observers[event]);
          cloned.forEach(function (observer) {
            observer.apply(void 0, args);
          });
        }

        if (this.observers['*']) {
          var _cloned = [].concat(this.observers['*']);

          _cloned.forEach(function (observer) {
            observer.apply(observer, [event].concat(args));
          });
        }
      }
    }]);

    return EventEmitter;
  }();

  function defer() {
    var res;
    var rej;
    var promise = new Promise(function (resolve, reject) {
      res = resolve;
      rej = reject;
    });
    promise.resolve = res;
    promise.reject = rej;
    return promise;
  }
  function makeString(object) {
    if (object == null) return '';
    return '' + object;
  }
  function copy(a, s, t) {
    a.forEach(function (m) {
      if (s[m]) t[m] = s[m];
    });
  }

  function getLastOfPath(object, path, Empty) {
    function cleanKey(key) {
      return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;
    }

    function canNotTraverseDeeper() {
      return !object || typeof object === 'string';
    }

    var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');

    while (stack.length > 1) {
      if (canNotTraverseDeeper()) return {};
      var key = cleanKey(stack.shift());
      if (!object[key] && Empty) object[key] = new Empty();

      if (Object.prototype.hasOwnProperty.call(object, key)) {
        object = object[key];
      } else {
        object = {};
      }
    }

    if (canNotTraverseDeeper()) return {};
    return {
      obj: object,
      k: cleanKey(stack.shift())
    };
  }

  function setPath(object, path, newValue) {
    var _getLastOfPath = getLastOfPath(object, path, Object),
        obj = _getLastOfPath.obj,
        k = _getLastOfPath.k;

    obj[k] = newValue;
  }
  function pushPath(object, path, newValue, concat) {
    var _getLastOfPath2 = getLastOfPath(object, path, Object),
        obj = _getLastOfPath2.obj,
        k = _getLastOfPath2.k;

    obj[k] = obj[k] || [];
    if (concat) obj[k] = obj[k].concat(newValue);
    if (!concat) obj[k].push(newValue);
  }
  function getPath(object, path) {
    var _getLastOfPath3 = getLastOfPath(object, path),
        obj = _getLastOfPath3.obj,
        k = _getLastOfPath3.k;

    if (!obj) return undefined;
    return obj[k];
  }
  function getPathWithDefaults(data, defaultData, key) {
    var value = getPath(data, key);

    if (value !== undefined) {
      return value;
    }

    return getPath(defaultData, key);
  }
  function deepExtend(target, source, overwrite) {
    for (var prop in source) {
      if (prop !== '__proto__' && prop !== 'constructor') {
        if (prop in target) {
          if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {
            if (overwrite) target[prop] = source[prop];
          } else {
            deepExtend(target[prop], source[prop], overwrite);
          }
        } else {
          target[prop] = source[prop];
        }
      }
    }

    return target;
  }
  function regexEscape(str) {
    return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
  }
  var _entityMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;'
  };
  function escape(data) {
    if (typeof data === 'string') {
      return data.replace(/[&<>"'\/]/g, function (s) {
        return _entityMap[s];
      });
    }

    return data;
  }
  var isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;

  function deepFind(obj, path) {
    var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';
    if (!obj) return undefined;
    if (obj[path]) return obj[path];
    var paths = path.split(keySeparator);
    var current = obj;

    for (var i = 0; i < paths.length; ++i) {
      if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {
        return undefined;
      }

      if (current[paths[i]] === undefined) {
        var j = 2;
        var p = paths.slice(i, i + j).join(keySeparator);
        var mix = current[p];

        while (mix === undefined && paths.length > i + j) {
          j++;
          p = paths.slice(i, i + j).join(keySeparator);
          mix = current[p];
        }

        if (mix === undefined) return undefined;
        if (typeof mix === 'string') return mix;
        if (p && typeof mix[p] === 'string') return mix[p];
        var joinedPath = paths.slice(i + j).join(keySeparator);
        if (joinedPath) return deepFind(mix, joinedPath, keySeparator);
        return undefined;
      }

      current = current[paths[i]];
    }

    return current;
  }

  var ResourceStore = function (_EventEmitter) {
    _inherits$2(ResourceStore, _EventEmitter);

    function ResourceStore(data) {
      var _this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        ns: ['translation'],
        defaultNS: 'translation'
      };

      _classCallCheck$2(this, ResourceStore);

      _this = _possibleConstructorReturn$2(this, _getPrototypeOf$2(ResourceStore).call(this));

      if (isIE10) {
        EventEmitter.call(_assertThisInitialized$2(_this));
      }

      _this.data = data || {};
      _this.options = options;

      if (_this.options.keySeparator === undefined) {
        _this.options.keySeparator = '.';
      }

      if (_this.options.ignoreJSONStructure === undefined) {
        _this.options.ignoreJSONStructure = true;
      }

      return _this;
    }

    _createClass$2(ResourceStore, [{
      key: "addNamespaces",
      value: function addNamespaces(ns) {
        if (this.options.ns.indexOf(ns) < 0) {
          this.options.ns.push(ns);
        }
      }
    }, {
      key: "removeNamespaces",
      value: function removeNamespaces(ns) {
        var index = this.options.ns.indexOf(ns);

        if (index > -1) {
          this.options.ns.splice(index, 1);
        }
      }
    }, {
      key: "getResource",
      value: function getResource(lng, ns, key) {
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
        var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
        var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;
        var path = [lng, ns];
        if (key && typeof key !== 'string') path = path.concat(key);
        if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);

        if (lng.indexOf('.') > -1) {
          path = lng.split('.');
        }

        var result = getPath(this.data, path);
        if (result || !ignoreJSONStructure || typeof key !== 'string') return result;
        return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);
      }
    }, {
      key: "addResource",
      value: function addResource(lng, ns, key, value) {
        var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
          silent: false
        };
        var keySeparator = this.options.keySeparator;
        if (keySeparator === undefined) keySeparator = '.';
        var path = [lng, ns];
        if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);

        if (lng.indexOf('.') > -1) {
          path = lng.split('.');
          value = ns;
          ns = path[1];
        }

        this.addNamespaces(ns);
        setPath(this.data, path, value);
        if (!options.silent) this.emit('added', lng, ns, key, value);
      }
    }, {
      key: "addResources",
      value: function addResources(lng, ns, resources) {
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
          silent: false
        };

        for (var m in resources) {
          if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {
            silent: true
          });
        }

        if (!options.silent) this.emit('added', lng, ns, resources);
      }
    }, {
      key: "addResourceBundle",
      value: function addResourceBundle(lng, ns, resources, deep, overwrite) {
        var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {
          silent: false
        };
        var path = [lng, ns];

        if (lng.indexOf('.') > -1) {
          path = lng.split('.');
          deep = resources;
          resources = ns;
          ns = path[1];
        }

        this.addNamespaces(ns);
        var pack = getPath(this.data, path) || {};

        if (deep) {
          deepExtend(pack, resources, overwrite);
        } else {
          pack = _objectSpread$e({}, pack, resources);
        }

        setPath(this.data, path, pack);
        if (!options.silent) this.emit('added', lng, ns, resources);
      }
    }, {
      key: "removeResourceBundle",
      value: function removeResourceBundle(lng, ns) {
        if (this.hasResourceBundle(lng, ns)) {
          delete this.data[lng][ns];
        }

        this.removeNamespaces(ns);
        this.emit('removed', lng, ns);
      }
    }, {
      key: "hasResourceBundle",
      value: function hasResourceBundle(lng, ns) {
        return this.getResource(lng, ns) !== undefined;
      }
    }, {
      key: "getResourceBundle",
      value: function getResourceBundle(lng, ns) {
        if (!ns) ns = this.options.defaultNS;
        if (this.options.compatibilityAPI === 'v1') return _objectSpread$e({}, {}, this.getResource(lng, ns));
        return this.getResource(lng, ns);
      }
    }, {
      key: "getDataByLanguage",
      value: function getDataByLanguage(lng) {
        return this.data[lng];
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return this.data;
      }
    }]);

    return ResourceStore;
  }(EventEmitter);

  var postProcessor = {
    processors: {},
    addPostProcessor: function addPostProcessor(module) {
      this.processors[module.name] = module;
    },
    handle: function handle(processors, value, key, options, translator) {
      var _this = this;

      processors.forEach(function (processor) {
        if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);
      });
      return value;
    }
  };

  var checkedLoadedFor = {};

  var Translator = function (_EventEmitter) {
    _inherits$2(Translator, _EventEmitter);

    function Translator(services) {
      var _this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      _classCallCheck$2(this, Translator);

      _this = _possibleConstructorReturn$2(this, _getPrototypeOf$2(Translator).call(this));

      if (isIE10) {
        EventEmitter.call(_assertThisInitialized$2(_this));
      }

      copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized$2(_this));
      _this.options = options;

      if (_this.options.keySeparator === undefined) {
        _this.options.keySeparator = '.';
      }

      _this.logger = baseLogger.create('translator');
      return _this;
    }

    _createClass$2(Translator, [{
      key: "changeLanguage",
      value: function changeLanguage(lng) {
        if (lng) this.language = lng;
      }
    }, {
      key: "exists",
      value: function exists(key) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
          interpolation: {}
        };
        var resolved = this.resolve(key, options);
        return resolved && resolved.res !== undefined;
      }
    }, {
      key: "extractFromKey",
      value: function extractFromKey(key, options) {
        var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;
        if (nsSeparator === undefined) nsSeparator = ':';
        var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;
        var namespaces = options.ns || this.options.defaultNS;

        if (nsSeparator && key.indexOf(nsSeparator) > -1) {
          var m = key.match(this.interpolator.nestingRegexp);

          if (m && m.length > 0) {
            return {
              key: key,
              namespaces: namespaces
            };
          }

          var parts = key.split(nsSeparator);
          if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();
          key = parts.join(keySeparator);
        }

        if (typeof namespaces === 'string') namespaces = [namespaces];
        return {
          key: key,
          namespaces: namespaces
        };
      }
    }, {
      key: "translate",
      value: function translate(keys, options, lastKey) {
        var _this2 = this;

        if (_typeof$2(options) !== 'object' && this.options.overloadTranslationOptionHandler) {
          options = this.options.overloadTranslationOptionHandler(arguments);
        }

        if (!options) options = {};
        if (keys === undefined || keys === null) return '';
        if (!Array.isArray(keys)) keys = [String(keys)];
        var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;

        var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),
            key = _this$extractFromKey.key,
            namespaces = _this$extractFromKey.namespaces;

        var namespace = namespaces[namespaces.length - 1];
        var lng = options.lng || this.language;
        var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;

        if (lng && lng.toLowerCase() === 'cimode') {
          if (appendNamespaceToCIMode) {
            var nsSeparator = options.nsSeparator || this.options.nsSeparator;
            return namespace + nsSeparator + key;
          }

          return key;
        }

        var resolved = this.resolve(keys, options);
        var res = resolved && resolved.res;
        var resUsedKey = resolved && resolved.usedKey || key;
        var resExactUsedKey = resolved && resolved.exactUsedKey || key;
        var resType = Object.prototype.toString.apply(res);
        var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];
        var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;
        var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;
        var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';

        if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {
          if (!options.returnObjects && !this.options.returnObjects) {
            this.logger.warn('accessing an object - but returnObjects options is not enabled!');
            return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, options) : "key '".concat(key, " (").concat(this.language, ")' returned an object instead of string.");
          }

          if (keySeparator) {
            var resTypeIsArray = resType === '[object Array]';
            var copy = resTypeIsArray ? [] : {};
            var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;

            for (var m in res) {
              if (Object.prototype.hasOwnProperty.call(res, m)) {
                var deepKey = "".concat(newKeyToUse).concat(keySeparator).concat(m);
                copy[m] = this.translate(deepKey, _objectSpread$e({}, options, {
                  joinArrays: false,
                  ns: namespaces
                }));
                if (copy[m] === deepKey) copy[m] = res[m];
              }
            }

            res = copy;
          }
        } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {
          res = res.join(joinArrays);
          if (res) res = this.extendTranslation(res, keys, options, lastKey);
        } else {
          var usedDefault = false;
          var usedKey = false;
          var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';
          var hasDefaultValue = Translator.hasDefaultValue(options);
          var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count) : '';
          var defaultValue = options["defaultValue".concat(defaultValueSuffix)] || options.defaultValue;

          if (!this.isValidLookup(res) && hasDefaultValue) {
            usedDefault = true;
            res = defaultValue;
          }

          if (!this.isValidLookup(res)) {
            usedKey = true;
            res = key;
          }

          var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;

          if (usedKey || usedDefault || updateMissing) {
            this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);

            if (keySeparator) {
              var fk = this.resolve(key, _objectSpread$e({}, options, {
                keySeparator: false
              }));
              if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');
            }

            var lngs = [];
            var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);

            if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {
              for (var i = 0; i < fallbackLngs.length; i++) {
                lngs.push(fallbackLngs[i]);
              }
            } else if (this.options.saveMissingTo === 'all') {
              lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
            } else {
              lngs.push(options.lng || this.language);
            }

            var send = function send(l, k, fallbackValue) {
              if (_this2.options.missingKeyHandler) {
                _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options);
              } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {
                _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options);
              }

              _this2.emit('missingKey', l, namespace, k, res);
            };

            if (this.options.saveMissing) {
              if (this.options.saveMissingPlurals && needsPluralHandling) {
                lngs.forEach(function (language) {
                  _this2.pluralResolver.getSuffixes(language).forEach(function (suffix) {
                    send([language], key + suffix, options["defaultValue".concat(suffix)] || defaultValue);
                  });
                });
              } else {
                send(lngs, key, defaultValue);
              }
            }
          }

          res = this.extendTranslation(res, keys, options, resolved, lastKey);
          if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = "".concat(namespace, ":").concat(key);
          if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);
        }

        return res;
      }
    }, {
      key: "extendTranslation",
      value: function extendTranslation(res, key, options, resolved, lastKey) {
        var _this3 = this;

        if (this.i18nFormat && this.i18nFormat.parse) {
          res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {
            resolved: resolved
          });
        } else if (!options.skipInterpolation) {
          if (options.interpolation) this.interpolator.init(_objectSpread$e({}, options, {
            interpolation: _objectSpread$e({}, this.options.interpolation, options.interpolation)
          }));
          var skipOnVariables = options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;
          var nestBef;

          if (skipOnVariables) {
            var nb = res.match(this.interpolator.nestingRegexp);
            nestBef = nb && nb.length;
          }

          var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;
          if (this.options.interpolation.defaultVariables) data = _objectSpread$e({}, this.options.interpolation.defaultVariables, data);
          res = this.interpolator.interpolate(res, data, options.lng || this.language, options);

          if (skipOnVariables) {
            var na = res.match(this.interpolator.nestingRegexp);
            var nestAft = na && na.length;
            if (nestBef < nestAft) options.nest = false;
          }

          if (options.nest !== false) res = this.interpolator.nest(res, function () {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            if (lastKey && lastKey[0] === args[0] && !options.context) {
              _this3.logger.warn("It seems you are nesting recursively key: ".concat(args[0], " in key: ").concat(key[0]));

              return null;
            }

            return _this3.translate.apply(_this3, args.concat([key]));
          }, options);
          if (options.interpolation) this.interpolator.reset();
        }

        var postProcess = options.postProcess || this.options.postProcess;
        var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;

        if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {
          res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread$e({
            i18nResolved: resolved
          }, options) : options, this);
        }

        return res;
      }
    }, {
      key: "resolve",
      value: function resolve(keys) {
        var _this4 = this;

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var found;
        var usedKey;
        var exactUsedKey;
        var usedLng;
        var usedNS;
        if (typeof keys === 'string') keys = [keys];
        keys.forEach(function (k) {
          if (_this4.isValidLookup(found)) return;

          var extracted = _this4.extractFromKey(k, options);

          var key = extracted.key;
          usedKey = key;
          var namespaces = extracted.namespaces;
          if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);
          var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';
          var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';
          var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);
          namespaces.forEach(function (ns) {
            if (_this4.isValidLookup(found)) return;
            usedNS = ns;

            if (!checkedLoadedFor["".concat(codes[0], "-").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {
              checkedLoadedFor["".concat(codes[0], "-").concat(ns)] = true;

              _this4.logger.warn("key \"".concat(usedKey, "\" for languages \"").concat(codes.join(', '), "\" won't get resolved as namespace \"").concat(usedNS, "\" was not yet loaded"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');
            }

            codes.forEach(function (code) {
              if (_this4.isValidLookup(found)) return;
              usedLng = code;
              var finalKey = key;
              var finalKeys = [finalKey];

              if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {
                _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
              } else {
                var pluralSuffix;
                if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count);
                if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);
                if (needsContextHandling) finalKeys.push(finalKey += "".concat(_this4.options.contextSeparator).concat(options.context));
                if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);
              }

              var possibleKey;

              while (possibleKey = finalKeys.pop()) {
                if (!_this4.isValidLookup(found)) {
                  exactUsedKey = possibleKey;
                  found = _this4.getResource(code, ns, possibleKey, options);
                }
              }
            });
          });
        });
        return {
          res: found,
          usedKey: usedKey,
          exactUsedKey: exactUsedKey,
          usedLng: usedLng,
          usedNS: usedNS
        };
      }
    }, {
      key: "isValidLookup",
      value: function isValidLookup(res) {
        return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');
      }
    }, {
      key: "getResource",
      value: function getResource(code, ns, key) {
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
        if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);
        return this.resourceStore.getResource(code, ns, key, options);
      }
    }], [{
      key: "hasDefaultValue",
      value: function hasDefaultValue(options) {
        var prefix = 'defaultValue';

        for (var option in options) {
          if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {
            return true;
          }
        }

        return false;
      }
    }]);

    return Translator;
  }(EventEmitter);

  function capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

  var LanguageUtil = function () {
    function LanguageUtil(options) {
      _classCallCheck$2(this, LanguageUtil);

      this.options = options;
      this.whitelist = this.options.supportedLngs || false;
      this.supportedLngs = this.options.supportedLngs || false;
      this.logger = baseLogger.create('languageUtils');
    }

    _createClass$2(LanguageUtil, [{
      key: "getScriptPartFromCode",
      value: function getScriptPartFromCode(code) {
        if (!code || code.indexOf('-') < 0) return null;
        var p = code.split('-');
        if (p.length === 2) return null;
        p.pop();
        if (p[p.length - 1].toLowerCase() === 'x') return null;
        return this.formatLanguageCode(p.join('-'));
      }
    }, {
      key: "getLanguagePartFromCode",
      value: function getLanguagePartFromCode(code) {
        if (!code || code.indexOf('-') < 0) return code;
        var p = code.split('-');
        return this.formatLanguageCode(p[0]);
      }
    }, {
      key: "formatLanguageCode",
      value: function formatLanguageCode(code) {
        if (typeof code === 'string' && code.indexOf('-') > -1) {
          var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];
          var p = code.split('-');

          if (this.options.lowerCaseLng) {
            p = p.map(function (part) {
              return part.toLowerCase();
            });
          } else if (p.length === 2) {
            p[0] = p[0].toLowerCase();
            p[1] = p[1].toUpperCase();
            if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());
          } else if (p.length === 3) {
            p[0] = p[0].toLowerCase();
            if (p[1].length === 2) p[1] = p[1].toUpperCase();
            if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();
            if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());
            if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());
          }

          return p.join('-');
        }

        return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
      }
    }, {
      key: "isWhitelisted",
      value: function isWhitelisted(code) {
        this.logger.deprecate('languageUtils.isWhitelisted', 'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.');
        return this.isSupportedCode(code);
      }
    }, {
      key: "isSupportedCode",
      value: function isSupportedCode(code) {
        if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {
          code = this.getLanguagePartFromCode(code);
        }

        return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;
      }
    }, {
      key: "getBestMatchFromCodes",
      value: function getBestMatchFromCodes(codes) {
        var _this = this;

        if (!codes) return null;
        var found;
        codes.forEach(function (code) {
          if (found) return;

          var cleanedLng = _this.formatLanguageCode(code);

          if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;
        });

        if (!found && this.options.supportedLngs) {
          codes.forEach(function (code) {
            if (found) return;

            var lngOnly = _this.getLanguagePartFromCode(code);

            if (_this.isSupportedCode(lngOnly)) return found = lngOnly;
            found = _this.options.supportedLngs.find(function (supportedLng) {
              if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;
            });
          });
        }

        if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];
        return found;
      }
    }, {
      key: "getFallbackCodes",
      value: function getFallbackCodes(fallbacks, code) {
        if (!fallbacks) return [];
        if (typeof fallbacks === 'function') fallbacks = fallbacks(code);
        if (typeof fallbacks === 'string') fallbacks = [fallbacks];
        if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;
        if (!code) return fallbacks["default"] || [];
        var found = fallbacks[code];
        if (!found) found = fallbacks[this.getScriptPartFromCode(code)];
        if (!found) found = fallbacks[this.formatLanguageCode(code)];
        if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];
        if (!found) found = fallbacks["default"];
        return found || [];
      }
    }, {
      key: "toResolveHierarchy",
      value: function toResolveHierarchy(code, fallbackCode) {
        var _this2 = this;

        var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);
        var codes = [];

        var addCode = function addCode(c) {
          if (!c) return;

          if (_this2.isSupportedCode(c)) {
            codes.push(c);
          } else {
            _this2.logger.warn("rejecting language code not found in supportedLngs: ".concat(c));
          }
        };

        if (typeof code === 'string' && code.indexOf('-') > -1) {
          if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));
          if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));
          if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));
        } else if (typeof code === 'string') {
          addCode(this.formatLanguageCode(code));
        }

        fallbackCodes.forEach(function (fc) {
          if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));
        });
        return codes;
      }
    }]);

    return LanguageUtil;
  }();

  var sets = [{
    lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],
    nr: [1, 2],
    fc: 1
  }, {
    lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],
    nr: [1, 2],
    fc: 2
  }, {
    lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],
    nr: [1],
    fc: 3
  }, {
    lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],
    nr: [1, 2, 5],
    fc: 4
  }, {
    lngs: ['ar'],
    nr: [0, 1, 2, 3, 11, 100],
    fc: 5
  }, {
    lngs: ['cs', 'sk'],
    nr: [1, 2, 5],
    fc: 6
  }, {
    lngs: ['csb', 'pl'],
    nr: [1, 2, 5],
    fc: 7
  }, {
    lngs: ['cy'],
    nr: [1, 2, 3, 8],
    fc: 8
  }, {
    lngs: ['fr'],
    nr: [1, 2],
    fc: 9
  }, {
    lngs: ['ga'],
    nr: [1, 2, 3, 7, 11],
    fc: 10
  }, {
    lngs: ['gd'],
    nr: [1, 2, 3, 20],
    fc: 11
  }, {
    lngs: ['is'],
    nr: [1, 2],
    fc: 12
  }, {
    lngs: ['jv'],
    nr: [0, 1],
    fc: 13
  }, {
    lngs: ['kw'],
    nr: [1, 2, 3, 4],
    fc: 14
  }, {
    lngs: ['lt'],
    nr: [1, 2, 10],
    fc: 15
  }, {
    lngs: ['lv'],
    nr: [1, 2, 0],
    fc: 16
  }, {
    lngs: ['mk'],
    nr: [1, 2],
    fc: 17
  }, {
    lngs: ['mnk'],
    nr: [0, 1, 2],
    fc: 18
  }, {
    lngs: ['mt'],
    nr: [1, 2, 11, 20],
    fc: 19
  }, {
    lngs: ['or'],
    nr: [2, 1],
    fc: 2
  }, {
    lngs: ['ro'],
    nr: [1, 2, 20],
    fc: 20
  }, {
    lngs: ['sl'],
    nr: [5, 1, 2, 3],
    fc: 21
  }, {
    lngs: ['he', 'iw'],
    nr: [1, 2, 20, 21],
    fc: 22
  }];
  var _rulesPluralsTypes = {
    1: function _(n) {
      return Number(n > 1);
    },
    2: function _(n) {
      return Number(n != 1);
    },
    3: function _(n) {
      return 0;
    },
    4: function _(n) {
      return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
    },
    5: function _(n) {
      return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);
    },
    6: function _(n) {
      return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);
    },
    7: function _(n) {
      return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
    },
    8: function _(n) {
      return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);
    },
    9: function _(n) {
      return Number(n >= 2);
    },
    10: function _(n) {
      return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);
    },
    11: function _(n) {
      return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);
    },
    12: function _(n) {
      return Number(n % 10 != 1 || n % 100 == 11);
    },
    13: function _(n) {
      return Number(n !== 0);
    },
    14: function _(n) {
      return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);
    },
    15: function _(n) {
      return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);
    },
    16: function _(n) {
      return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);
    },
    17: function _(n) {
      return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);
    },
    18: function _(n) {
      return Number(n == 0 ? 0 : n == 1 ? 1 : 2);
    },
    19: function _(n) {
      return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);
    },
    20: function _(n) {
      return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);
    },
    21: function _(n) {
      return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);
    },
    22: function _(n) {
      return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);
    }
  };

  function createRules() {
    var rules = {};
    sets.forEach(function (set) {
      set.lngs.forEach(function (l) {
        rules[l] = {
          numbers: set.nr,
          plurals: _rulesPluralsTypes[set.fc]
        };
      });
    });
    return rules;
  }

  var PluralResolver = function () {
    function PluralResolver(languageUtils) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      _classCallCheck$2(this, PluralResolver);

      this.languageUtils = languageUtils;
      this.options = options;
      this.logger = baseLogger.create('pluralResolver');
      this.rules = createRules();
    }

    _createClass$2(PluralResolver, [{
      key: "addRule",
      value: function addRule(lng, obj) {
        this.rules[lng] = obj;
      }
    }, {
      key: "getRule",
      value: function getRule(code) {
        return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];
      }
    }, {
      key: "needsPlural",
      value: function needsPlural(code) {
        var rule = this.getRule(code);
        return rule && rule.numbers.length > 1;
      }
    }, {
      key: "getPluralFormsOfKey",
      value: function getPluralFormsOfKey(code, key) {
        return this.getSuffixes(code).map(function (suffix) {
          return key + suffix;
        });
      }
    }, {
      key: "getSuffixes",
      value: function getSuffixes(code) {
        var _this = this;

        var rule = this.getRule(code);

        if (!rule) {
          return [];
        }

        return rule.numbers.map(function (number) {
          return _this.getSuffix(code, number);
        });
      }
    }, {
      key: "getSuffix",
      value: function getSuffix(code, count) {
        var _this2 = this;

        var rule = this.getRule(code);

        if (rule) {
          var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));
          var suffix = rule.numbers[idx];

          if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
            if (suffix === 2) {
              suffix = 'plural';
            } else if (suffix === 1) {
              suffix = '';
            }
          }

          var returnSuffix = function returnSuffix() {
            return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();
          };

          if (this.options.compatibilityJSON === 'v1') {
            if (suffix === 1) return '';
            if (typeof suffix === 'number') return "_plural_".concat(suffix.toString());
            return returnSuffix();
          } else if (this.options.compatibilityJSON === 'v2') {
            return returnSuffix();
          } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {
            return returnSuffix();
          }

          return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();
        }

        this.logger.warn("no plural rule found for: ".concat(code));
        return '';
      }
    }]);

    return PluralResolver;
  }();

  var Interpolator = function () {
    function Interpolator() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      _classCallCheck$2(this, Interpolator);

      this.logger = baseLogger.create('interpolator');
      this.options = options;

      this.format = options.interpolation && options.interpolation.format || function (value) {
        return value;
      };

      this.init(options);
    }

    _createClass$2(Interpolator, [{
      key: "init",
      value: function init() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        if (!options.interpolation) options.interpolation = {
          escapeValue: true
        };
        var iOpts = options.interpolation;
        this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;
        this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;
        this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;
        this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';
        this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';
        this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';
        this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';
        this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';
        this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');
        this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');
        this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';
        this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;
        this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;
        this.resetRegExp();
      }
    }, {
      key: "reset",
      value: function reset() {
        if (this.options) this.init(this.options);
      }
    }, {
      key: "resetRegExp",
      value: function resetRegExp() {
        var regexpStr = "".concat(this.prefix, "(.+?)").concat(this.suffix);
        this.regexp = new RegExp(regexpStr, 'g');
        var regexpUnescapeStr = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
        this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');
        var nestingRegexpStr = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
        this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');
      }
    }, {
      key: "interpolate",
      value: function interpolate(str, data, lng, options) {
        var _this = this;

        var match;
        var value;
        var replaces;
        var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};

        function regexSafe(val) {
          return val.replace(/\$/g, '$$$$');
        }

        var handleFormat = function handleFormat(key) {
          if (key.indexOf(_this.formatSeparator) < 0) {
            var path = getPathWithDefaults(data, defaultData, key);
            return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread$e({}, options, data, {
              interpolationkey: key
            })) : path;
          }

          var p = key.split(_this.formatSeparator);
          var k = p.shift().trim();
          var f = p.join(_this.formatSeparator).trim();
          return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread$e({}, options, data, {
            interpolationkey: k
          }));
        };

        this.resetRegExp();
        var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;
        var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;
        var todos = [{
          regex: this.regexpUnescape,
          safeValue: function safeValue(val) {
            return regexSafe(val);
          }
        }, {
          regex: this.regexp,
          safeValue: function safeValue(val) {
            return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);
          }
        }];
        todos.forEach(function (todo) {
          replaces = 0;

          while (match = todo.regex.exec(str)) {
            value = handleFormat(match[1].trim());

            if (value === undefined) {
              if (typeof missingInterpolationHandler === 'function') {
                var temp = missingInterpolationHandler(str, match, options);
                value = typeof temp === 'string' ? temp : '';
              } else if (skipOnVariables) {
                value = match[0];
                continue;
              } else {
                _this.logger.warn("missed to pass in variable ".concat(match[1], " for interpolating ").concat(str));

                value = '';
              }
            } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {
              value = makeString(value);
            }

            var safeValue = todo.safeValue(value);
            str = str.replace(match[0], safeValue);

            if (skipOnVariables) {
              todo.regex.lastIndex += safeValue.length;
              todo.regex.lastIndex -= match[0].length;
            } else {
              todo.regex.lastIndex = 0;
            }

            replaces++;

            if (replaces >= _this.maxReplaces) {
              break;
            }
          }
        });
        return str;
      }
    }, {
      key: "nest",
      value: function nest(str, fc) {
        var _this2 = this;

        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var match;
        var value;

        var clonedOptions = _objectSpread$e({}, options);

        clonedOptions.applyPostProcessor = false;
        delete clonedOptions.defaultValue;

        function handleHasOptions(key, inheritedOptions) {
          var sep = this.nestingOptionsSeparator;
          if (key.indexOf(sep) < 0) return key;
          var c = key.split(new RegExp("".concat(sep, "[ ]*{")));
          var optionsString = "{".concat(c[1]);
          key = c[0];
          optionsString = this.interpolate(optionsString, clonedOptions);
          optionsString = optionsString.replace(/'/g, '"');

          try {
            clonedOptions = JSON.parse(optionsString);
            if (inheritedOptions) clonedOptions = _objectSpread$e({}, inheritedOptions, clonedOptions);
          } catch (e) {
            this.logger.warn("failed parsing options string in nesting for key ".concat(key), e);
            return "".concat(key).concat(sep).concat(optionsString);
          }

          delete clonedOptions.defaultValue;
          return key;
        }

        while (match = this.nestingRegexp.exec(str)) {
          var formatters = [];
          var doReduce = false;

          if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {
            var r = match[1].split(this.formatSeparator).map(function (elem) {
              return elem.trim();
            });
            match[1] = r.shift();
            formatters = r;
            doReduce = true;
          }

          value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);
          if (value && match[0] === str && typeof value !== 'string') return value;
          if (typeof value !== 'string') value = makeString(value);

          if (!value) {
            this.logger.warn("missed to resolve ".concat(match[1], " for nesting ").concat(str));
            value = '';
          }

          if (doReduce) {
            value = formatters.reduce(function (v, f) {
              return _this2.format(v, f, options.lng, _objectSpread$e({}, options, {
                interpolationkey: match[1].trim()
              }));
            }, value.trim());
          }

          str = str.replace(match[0], value);
          this.regexp.lastIndex = 0;
        }

        return str;
      }
    }]);

    return Interpolator;
  }();

  function remove(arr, what) {
    var found = arr.indexOf(what);

    while (found !== -1) {
      arr.splice(found, 1);
      found = arr.indexOf(what);
    }
  }

  var Connector = function (_EventEmitter) {
    _inherits$2(Connector, _EventEmitter);

    function Connector(backend, store, services) {
      var _this;

      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      _classCallCheck$2(this, Connector);

      _this = _possibleConstructorReturn$2(this, _getPrototypeOf$2(Connector).call(this));

      if (isIE10) {
        EventEmitter.call(_assertThisInitialized$2(_this));
      }

      _this.backend = backend;
      _this.store = store;
      _this.services = services;
      _this.languageUtils = services.languageUtils;
      _this.options = options;
      _this.logger = baseLogger.create('backendConnector');
      _this.state = {};
      _this.queue = [];

      if (_this.backend && _this.backend.init) {
        _this.backend.init(services, options.backend, options);
      }

      return _this;
    }

    _createClass$2(Connector, [{
      key: "queueLoad",
      value: function queueLoad(languages, namespaces, options, callback) {
        var _this2 = this;

        var toLoad = [];
        var pending = [];
        var toLoadLanguages = [];
        var toLoadNamespaces = [];
        languages.forEach(function (lng) {
          var hasAllNamespaces = true;
          namespaces.forEach(function (ns) {
            var name = "".concat(lng, "|").concat(ns);

            if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {
              _this2.state[name] = 2;
            } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {
              if (pending.indexOf(name) < 0) pending.push(name);
            } else {
              _this2.state[name] = 1;
              hasAllNamespaces = false;
              if (pending.indexOf(name) < 0) pending.push(name);
              if (toLoad.indexOf(name) < 0) toLoad.push(name);
              if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);
            }
          });
          if (!hasAllNamespaces) toLoadLanguages.push(lng);
        });

        if (toLoad.length || pending.length) {
          this.queue.push({
            pending: pending,
            loaded: {},
            errors: [],
            callback: callback
          });
        }

        return {
          toLoad: toLoad,
          pending: pending,
          toLoadLanguages: toLoadLanguages,
          toLoadNamespaces: toLoadNamespaces
        };
      }
    }, {
      key: "loaded",
      value: function loaded(name, err, data) {
        var s = name.split('|');
        var lng = s[0];
        var ns = s[1];
        if (err) this.emit('failedLoading', lng, ns, err);

        if (data) {
          this.store.addResourceBundle(lng, ns, data);
        }

        this.state[name] = err ? -1 : 2;
        var loaded = {};
        this.queue.forEach(function (q) {
          pushPath(q.loaded, [lng], ns);
          remove(q.pending, name);
          if (err) q.errors.push(err);

          if (q.pending.length === 0 && !q.done) {
            Object.keys(q.loaded).forEach(function (l) {
              if (!loaded[l]) loaded[l] = [];

              if (q.loaded[l].length) {
                q.loaded[l].forEach(function (ns) {
                  if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);
                });
              }
            });
            q.done = true;

            if (q.errors.length) {
              q.callback(q.errors);
            } else {
              q.callback();
            }
          }
        });
        this.emit('loaded', loaded);
        this.queue = this.queue.filter(function (q) {
          return !q.done;
        });
      }
    }, {
      key: "read",
      value: function read(lng, ns, fcName) {
        var _this3 = this;

        var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;
        var callback = arguments.length > 5 ? arguments[5] : undefined;
        if (!lng.length) return callback(null, {});
        return this.backend[fcName](lng, ns, function (err, data) {
          if (err && data && tried < 5) {
            setTimeout(function () {
              _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);
            }, wait);
            return;
          }

          callback(err, data);
        });
      }
    }, {
      key: "prepareLoading",
      value: function prepareLoading(languages, namespaces) {
        var _this4 = this;

        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var callback = arguments.length > 3 ? arguments[3] : undefined;

        if (!this.backend) {
          this.logger.warn('No backend was added via i18next.use. Will not load resources.');
          return callback && callback();
        }

        if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);
        if (typeof namespaces === 'string') namespaces = [namespaces];
        var toLoad = this.queueLoad(languages, namespaces, options, callback);

        if (!toLoad.toLoad.length) {
          if (!toLoad.pending.length) callback();
          return null;
        }

        toLoad.toLoad.forEach(function (name) {
          _this4.loadOne(name);
        });
      }
    }, {
      key: "load",
      value: function load(languages, namespaces, callback) {
        this.prepareLoading(languages, namespaces, {}, callback);
      }
    }, {
      key: "reload",
      value: function reload(languages, namespaces, callback) {
        this.prepareLoading(languages, namespaces, {
          reload: true
        }, callback);
      }
    }, {
      key: "loadOne",
      value: function loadOne(name) {
        var _this5 = this;

        var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var s = name.split('|');
        var lng = s[0];
        var ns = s[1];
        this.read(lng, ns, 'read', undefined, undefined, function (err, data) {
          if (err) _this5.logger.warn("".concat(prefix, "loading namespace ").concat(ns, " for language ").concat(lng, " failed"), err);
          if (!err && data) _this5.logger.log("".concat(prefix, "loaded namespace ").concat(ns, " for language ").concat(lng), data);

          _this5.loaded(name, err, data);
        });
      }
    }, {
      key: "saveMissing",
      value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {
        var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};

        if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {
          this.logger.warn("did not save key \"".concat(key, "\" as the namespace \"").concat(namespace, "\" was not yet loaded"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');
          return;
        }

        if (key === undefined || key === null || key === '') return;

        if (this.backend && this.backend.create) {
          this.backend.create(languages, namespace, key, fallbackValue, null, _objectSpread$e({}, options, {
            isUpdate: isUpdate
          }));
        }

        if (!languages || !languages[0]) return;
        this.store.addResource(languages[0], namespace, key, fallbackValue);
      }
    }]);

    return Connector;
  }(EventEmitter);

  function get() {
    return {
      debug: false,
      initImmediate: true,
      ns: ['translation'],
      defaultNS: ['translation'],
      fallbackLng: ['dev'],
      fallbackNS: false,
      whitelist: false,
      nonExplicitWhitelist: false,
      supportedLngs: false,
      nonExplicitSupportedLngs: false,
      load: 'all',
      preload: false,
      simplifyPluralSuffix: true,
      keySeparator: '.',
      nsSeparator: ':',
      pluralSeparator: '_',
      contextSeparator: '_',
      partialBundledLanguages: false,
      saveMissing: false,
      updateMissing: false,
      saveMissingTo: 'fallback',
      saveMissingPlurals: true,
      missingKeyHandler: false,
      missingInterpolationHandler: false,
      postProcess: false,
      postProcessPassResolved: false,
      returnNull: true,
      returnEmptyString: true,
      returnObjects: false,
      joinArrays: false,
      returnedObjectHandler: false,
      parseMissingKeyHandler: false,
      appendNamespaceToMissingKey: false,
      appendNamespaceToCIMode: false,
      overloadTranslationOptionHandler: function handle(args) {
        var ret = {};
        if (_typeof$2(args[1]) === 'object') ret = args[1];
        if (typeof args[1] === 'string') ret.defaultValue = args[1];
        if (typeof args[2] === 'string') ret.tDescription = args[2];

        if (_typeof$2(args[2]) === 'object' || _typeof$2(args[3]) === 'object') {
          var options = args[3] || args[2];
          Object.keys(options).forEach(function (key) {
            ret[key] = options[key];
          });
        }

        return ret;
      },
      interpolation: {
        escapeValue: true,
        format: function format(value, _format, lng, options) {
          return value;
        },
        prefix: '{{',
        suffix: '}}',
        formatSeparator: ',',
        unescapePrefix: '-',
        nestingPrefix: '$t(',
        nestingSuffix: ')',
        nestingOptionsSeparator: ',',
        maxReplaces: 1000,
        skipOnVariables: false
      }
    };
  }
  function transformOptions(options) {
    if (typeof options.ns === 'string') options.ns = [options.ns];
    if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];
    if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];

    if (options.whitelist) {
      if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {
        options.whitelist = options.whitelist.concat(['cimode']);
      }

      options.supportedLngs = options.whitelist;
    }

    if (options.nonExplicitWhitelist) {
      options.nonExplicitSupportedLngs = options.nonExplicitWhitelist;
    }

    if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {
      options.supportedLngs = options.supportedLngs.concat(['cimode']);
    }

    return options;
  }

  function noop$1() {}

  var I18n = function (_EventEmitter) {
    _inherits$2(I18n, _EventEmitter);

    function I18n() {
      var _this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : undefined;

      _classCallCheck$2(this, I18n);

      _this = _possibleConstructorReturn$2(this, _getPrototypeOf$2(I18n).call(this));

      if (isIE10) {
        EventEmitter.call(_assertThisInitialized$2(_this));
      }

      _this.options = transformOptions(options);
      _this.services = {};
      _this.logger = baseLogger;
      _this.modules = {
        external: []
      };

      if (callback && !_this.isInitialized && !options.isClone) {
        if (!_this.options.initImmediate) {
          _this.init(options, callback);

          return _possibleConstructorReturn$2(_this, _assertThisInitialized$2(_this));
        }

        setTimeout(function () {
          _this.init(options, callback);
        }, 0);
      }

      return _this;
    }

    _createClass$2(I18n, [{
      key: "init",
      value: function init() {
        var _this2 = this;

        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var callback = arguments.length > 1 ? arguments[1] : undefined;

        if (typeof options === 'function') {
          callback = options;
          options = {};
        }

        if (options.whitelist && !options.supportedLngs) {
          this.logger.deprecate('whitelist', 'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.');
        }

        if (options.nonExplicitWhitelist && !options.nonExplicitSupportedLngs) {
          this.logger.deprecate('whitelist', 'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.');
        }

        this.options = _objectSpread$e({}, get(), this.options, transformOptions(options));
        this.format = this.options.interpolation.format;
        if (!callback) callback = noop$1;

        function createClassOnDemand(ClassOrObject) {
          if (!ClassOrObject) return null;
          if (typeof ClassOrObject === 'function') return new ClassOrObject();
          return ClassOrObject;
        }

        if (!this.options.isClone) {
          if (this.modules.logger) {
            baseLogger.init(createClassOnDemand(this.modules.logger), this.options);
          } else {
            baseLogger.init(null, this.options);
          }

          var lu = new LanguageUtil(this.options);
          this.store = new ResourceStore(this.options.resources, this.options);
          var s = this.services;
          s.logger = baseLogger;
          s.resourceStore = this.store;
          s.languageUtils = lu;
          s.pluralResolver = new PluralResolver(lu, {
            prepend: this.options.pluralSeparator,
            compatibilityJSON: this.options.compatibilityJSON,
            simplifyPluralSuffix: this.options.simplifyPluralSuffix
          });
          s.interpolator = new Interpolator(this.options);
          s.utils = {
            hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
          };
          s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);
          s.backendConnector.on('*', function (event) {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }

            _this2.emit.apply(_this2, [event].concat(args));
          });

          if (this.modules.languageDetector) {
            s.languageDetector = createClassOnDemand(this.modules.languageDetector);
            s.languageDetector.init(s, this.options.detection, this.options);
          }

          if (this.modules.i18nFormat) {
            s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);
            if (s.i18nFormat.init) s.i18nFormat.init(this);
          }

          this.translator = new Translator(this.services, this.options);
          this.translator.on('*', function (event) {
            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }

            _this2.emit.apply(_this2, [event].concat(args));
          });
          this.modules.external.forEach(function (m) {
            if (m.init) m.init(_this2);
          });
        }

        if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
          var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
          if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];
        }

        if (!this.services.languageDetector && !this.options.lng) {
          this.logger.warn('init: no languageDetector is used and no lng is defined');
        }

        var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];
        storeApi.forEach(function (fcName) {
          _this2[fcName] = function () {
            var _this2$store;

            return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);
          };
        });
        var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];
        storeApiChained.forEach(function (fcName) {
          _this2[fcName] = function () {
            var _this2$store2;

            (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);

            return _this2;
          };
        });
        var deferred = defer();

        var load = function load() {
          var finish = function finish(err, t) {
            if (_this2.isInitialized) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');
            _this2.isInitialized = true;
            if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);

            _this2.emit('initialized', _this2.options);

            deferred.resolve(t);
            callback(err, t);
          };

          if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));

          _this2.changeLanguage(_this2.options.lng, finish);
        };

        if (this.options.resources || !this.options.initImmediate) {
          load();
        } else {
          setTimeout(load, 0);
        }

        return deferred;
      }
    }, {
      key: "loadResources",
      value: function loadResources(language) {
        var _this3 = this;

        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop$1;
        var usedCallback = callback;
        var usedLng = typeof language === 'string' ? language : this.language;
        if (typeof language === 'function') usedCallback = language;

        if (!this.options.resources || this.options.partialBundledLanguages) {
          if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();
          var toLoad = [];

          var append = function append(lng) {
            if (!lng) return;

            var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);

            lngs.forEach(function (l) {
              if (toLoad.indexOf(l) < 0) toLoad.push(l);
            });
          };

          if (!usedLng) {
            var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
            fallbacks.forEach(function (l) {
              return append(l);
            });
          } else {
            append(usedLng);
          }

          if (this.options.preload) {
            this.options.preload.forEach(function (l) {
              return append(l);
            });
          }

          this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);
        } else {
          usedCallback(null);
        }
      }
    }, {
      key: "reloadResources",
      value: function reloadResources(lngs, ns, callback) {
        var deferred = defer();
        if (!lngs) lngs = this.languages;
        if (!ns) ns = this.options.ns;
        if (!callback) callback = noop$1;
        this.services.backendConnector.reload(lngs, ns, function (err) {
          deferred.resolve();
          callback(err);
        });
        return deferred;
      }
    }, {
      key: "use",
      value: function use(module) {
        if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');
        if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');

        if (module.type === 'backend') {
          this.modules.backend = module;
        }

        if (module.type === 'logger' || module.log && module.warn && module.error) {
          this.modules.logger = module;
        }

        if (module.type === 'languageDetector') {
          this.modules.languageDetector = module;
        }

        if (module.type === 'i18nFormat') {
          this.modules.i18nFormat = module;
        }

        if (module.type === 'postProcessor') {
          postProcessor.addPostProcessor(module);
        }

        if (module.type === '3rdParty') {
          this.modules.external.push(module);
        }

        return this;
      }
    }, {
      key: "changeLanguage",
      value: function changeLanguage(lng, callback) {
        var _this4 = this;

        this.isLanguageChangingTo = lng;
        var deferred = defer();
        this.emit('languageChanging', lng);

        var done = function done(err, l) {
          if (l) {
            _this4.language = l;
            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);

            _this4.translator.changeLanguage(l);

            _this4.isLanguageChangingTo = undefined;

            _this4.emit('languageChanged', l);

            _this4.logger.log('languageChanged', l);
          } else {
            _this4.isLanguageChangingTo = undefined;
          }

          deferred.resolve(function () {
            return _this4.t.apply(_this4, arguments);
          });
          if (callback) callback(err, function () {
            return _this4.t.apply(_this4, arguments);
          });
        };

        var setLng = function setLng(lngs) {
          var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);

          if (l) {
            if (!_this4.language) {
              _this4.language = l;
              _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);
            }

            if (!_this4.translator.language) _this4.translator.changeLanguage(l);
            if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);
          }

          _this4.loadResources(l, function (err) {
            done(err, l);
          });
        };

        if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {
          setLng(this.services.languageDetector.detect());
        } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {
          this.services.languageDetector.detect(setLng);
        } else {
          setLng(lng);
        }

        return deferred;
      }
    }, {
      key: "getFixedT",
      value: function getFixedT(lng, ns) {
        var _this5 = this;

        var fixedT = function fixedT(key, opts) {
          var options;

          if (_typeof$2(opts) !== 'object') {
            for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
              rest[_key3 - 2] = arguments[_key3];
            }

            options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));
          } else {
            options = _objectSpread$e({}, opts);
          }

          options.lng = options.lng || fixedT.lng;
          options.lngs = options.lngs || fixedT.lngs;
          options.ns = options.ns || fixedT.ns;
          return _this5.t(key, options);
        };

        if (typeof lng === 'string') {
          fixedT.lng = lng;
        } else {
          fixedT.lngs = lng;
        }

        fixedT.ns = ns;
        return fixedT;
      }
    }, {
      key: "t",
      value: function t() {
        var _this$translator;

        return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);
      }
    }, {
      key: "exists",
      value: function exists() {
        var _this$translator2;

        return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);
      }
    }, {
      key: "setDefaultNamespace",
      value: function setDefaultNamespace(ns) {
        this.options.defaultNS = ns;
      }
    }, {
      key: "hasLoadedNamespace",
      value: function hasLoadedNamespace(ns) {
        var _this6 = this;

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!this.isInitialized) {
          this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);
          return false;
        }

        if (!this.languages || !this.languages.length) {
          this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);
          return false;
        }

        var lng = this.languages[0];
        var fallbackLng = this.options ? this.options.fallbackLng : false;
        var lastLng = this.languages[this.languages.length - 1];
        if (lng.toLowerCase() === 'cimode') return true;

        var loadNotPending = function loadNotPending(l, n) {
          var loadState = _this6.services.backendConnector.state["".concat(l, "|").concat(n)];

          return loadState === -1 || loadState === 2;
        };

        if (options.precheck) {
          var preResult = options.precheck(this, loadNotPending);
          if (preResult !== undefined) return preResult;
        }

        if (this.hasResourceBundle(lng, ns)) return true;
        if (!this.services.backendConnector.backend) return true;
        if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
        return false;
      }
    }, {
      key: "loadNamespaces",
      value: function loadNamespaces(ns, callback) {
        var _this7 = this;

        var deferred = defer();

        if (!this.options.ns) {
          callback && callback();
          return Promise.resolve();
        }

        if (typeof ns === 'string') ns = [ns];
        ns.forEach(function (n) {
          if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);
        });
        this.loadResources(function (err) {
          deferred.resolve();
          if (callback) callback(err);
        });
        return deferred;
      }
    }, {
      key: "loadLanguages",
      value: function loadLanguages(lngs, callback) {
        var deferred = defer();
        if (typeof lngs === 'string') lngs = [lngs];
        var preloaded = this.options.preload || [];
        var newLngs = lngs.filter(function (lng) {
          return preloaded.indexOf(lng) < 0;
        });

        if (!newLngs.length) {
          if (callback) callback();
          return Promise.resolve();
        }

        this.options.preload = preloaded.concat(newLngs);
        this.loadResources(function (err) {
          deferred.resolve();
          if (callback) callback(err);
        });
        return deferred;
      }
    }, {
      key: "dir",
      value: function dir(lng) {
        if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;
        if (!lng) return 'rtl';
        var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];
        return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';
      }
    }, {
      key: "createInstance",
      value: function createInstance() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var callback = arguments.length > 1 ? arguments[1] : undefined;
        return new I18n(options, callback);
      }
    }, {
      key: "cloneInstance",
      value: function cloneInstance() {
        var _this8 = this;

        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop$1;

        var mergedOptions = _objectSpread$e({}, this.options, options, {
          isClone: true
        });

        var clone = new I18n(mergedOptions);
        var membersToCopy = ['store', 'services', 'language'];
        membersToCopy.forEach(function (m) {
          clone[m] = _this8[m];
        });
        clone.services = _objectSpread$e({}, this.services);
        clone.services.utils = {
          hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
        };
        clone.translator = new Translator(clone.services, clone.options);
        clone.translator.on('*', function (event) {
          for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
            args[_key4 - 1] = arguments[_key4];
          }

          clone.emit.apply(clone, [event].concat(args));
        });
        clone.init(mergedOptions, callback);
        clone.translator.options = clone.options;
        clone.translator.backendConnector.services.utils = {
          hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
        };
        return clone;
      }
    }]);

    return I18n;
  }(EventEmitter);

  var i18next = new I18n();

  var calendar = createCommonjsModule(function (module, exports) {
  !function(e,t){module.exports=t();}(commonjsGlobal,function(){return function(e,t,a){var n="h:mm A",d={lastDay:"[Yesterday at] "+n,sameDay:"[Today at] "+n,nextDay:"[Tomorrow at] "+n,nextWeek:"dddd [at] "+n,lastWeek:"[Last] dddd [at] "+n,sameElse:"MM/DD/YYYY"};t.prototype.calendar=function(e,t){var n=t||this.$locale().calendar||d,s=a(e||void 0).startOf("d"),o=this.diff(s,"d",!0),i=o<-6?"sameElse":o<-1?"lastWeek":o<0?"lastDay":o<1?"sameDay":o<2?"nextDay":o<7?"nextWeek":"sameElse",f=n[i]||d[i];return "function"==typeof f?f.call(this,a()):this.format(f)};}});
  });

  var updateLocale = createCommonjsModule(function (module, exports) {
  !function(e,n){module.exports=n();}(commonjsGlobal,function(){return function(e,n,t){t.updateLocale=function(e,n){var o=t.Ls[e];if(o)return (n?Object.keys(n):[]).forEach(function(e){o[e]=n[e];}),o};}});
  });

  var localizedFormat = createCommonjsModule(function (module, exports) {
  !function(e,t){module.exports=t();}(commonjsGlobal,function(){var e={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};return function(t,n,o){var r=n.prototype,M=r.format;o.en.formats=e,r.format=function(t){void 0===t&&(t="YYYY-MM-DDTHH:mm:ssZ");var n=this.$locale().formats,o=function(t,n){return t.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,function(t,o,r){var M=r&&r.toUpperCase();return o||n[r]||e[r]||n[M].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(e,t,n){return t||n.slice(1)})})}(t,void 0===n?{}:n);return M.call(this,o)};}});
  });

  var localeData = createCommonjsModule(function (module, exports) {
  !function(n,t){module.exports=t();}(commonjsGlobal,function(){return function(n,t,e){var r=function(n){return n&&(n.indexOf?n:n.s)},o=function(n,t,e,o,u){var a=n.name?n:n.$locale(),i=r(a[t]),s=r(a[e]),d=i||s.map(function(n){return n.substr(0,o)});if(!u)return d;var f=a.weekStart;return d.map(function(n,t){return d[(t+(f||0))%7]})},u=function(){return e.Ls[e.locale()]},a=function(n,t){return n.formats[t]||function(n){return n.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(n,t,e){return t||e.slice(1)})}(n.formats[t.toUpperCase()])};t.prototype.localeData=function(){return function(){var n=this;return {months:function(t){return t?t.format("MMMM"):o(n,"months")},monthsShort:function(t){return t?t.format("MMM"):o(n,"monthsShort","months",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(t){return t?t.format("dddd"):o(n,"weekdays")},weekdaysMin:function(t){return t?t.format("dd"):o(n,"weekdaysMin","weekdays",2)},weekdaysShort:function(t){return t?t.format("ddd"):o(n,"weekdaysShort","weekdays",3)},longDateFormat:function(t){return a(n.$locale(),t)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}}.bind(this)()},e.localeData=function(){var n=u();return {firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return e.weekdays()},weekdaysShort:function(){return e.weekdaysShort()},weekdaysMin:function(){return e.weekdaysMin()},months:function(){return e.months()},monthsShort:function(){return e.monthsShort()},longDateFormat:function(t){return a(n,t)},meridiem:n.meridiem,ordinal:n.ordinal}},e.months=function(){return o(u(),"months")},e.monthsShort=function(){return o(u(),"monthsShort","months",3)},e.weekdays=function(n){return o(u(),"weekdays",null,null,n)},e.weekdaysShort=function(n){return o(u(),"weekdaysShort","weekdays",3,n)},e.weekdaysMin=function(n){return o(u(),"weekdaysMin","weekdays",2,n)};}});
  });

  var Activity$8 = "Activity";
  var Clear$7 = "Clear";
  var Custom$7 = "Custom";
  var Details$7 = "Details";
  var Flags$7 = "Flags";
  var Objects$7 = "Objects";
  var Post$7 = "Post";
  var Search$7 = "Search";
  var Symbols$7 = "Symbols";
  var enTranslations = {
  	"1 comment": "1 comment",
  	"1 like": "1 like",
  	"1 repost": "1 repost",
  	Activity: Activity$8,
  	"Animals & Nature": "Animals & Nature",
  	"Choose your default skin tone": "Choose your default skin tone",
  	Clear: Clear$7,
  	Custom: Custom$7,
  	Details: Details$7,
  	"Emoji categories": "Emoji categories",
  	Flags: Flags$7,
  	"Food & Drink": "Food & Drink",
  	"Frequently Used": "Frequently Used",
  	"Getting website data...": "Getting website data...",
  	"Load activities": "Load activities",
  	"Load more": "Load more",
  	"New Post": "New Post",
  	"No data to display...": "No data to display...",
  	"No emoji found": "No emoji found",
  	Objects: Objects$7,
  	"Pick your emoji": "Pick your emoji",
  	Post: Post$7,
  	Search: Search$7,
  	"Search Results": "Search Results",
  	"Smileys & Emotion": "Smileys & Emotion",
  	"Start Typing...": "Start Typing...",
  	Symbols: Symbols$7,
  	"Travel & Places": "Travel & Places",
  	"Type your post...": "Type your post...",
  	"You have 1 new notification": "You have 1 new notification",
  	"You have {{ notificationCount }} new notifications": "You have {{ notificationCount }} new notifications",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} and 1 other commented on your {{ activityVerb }}",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} and 1 other followed you",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} and 1 other liked your {{ activityVerb }}",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} and 1 other reposted your {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} and {{ countOtherActors }} others followed you",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} commented on your {{ activityVerb }}",
  	"{{ actorName }} followed you": "{{ actorName }} followed you",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} liked your {{ activityVerb }}",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} reposted your {{ activityVerb }}",
  	"{{ countComments }} comments": "{{ countComments }} comments",
  	"{{ countLikes }} likes": "{{ countLikes }} likes",
  	"{{ countReposts }} reposts": "{{ countReposts }} reposts"
  };

  var Activity$7 = "Werkzaamheid";
  var Clear$6 = "Wissen";
  var Custom$6 = "Op maat";
  var Details$6 = "Details";
  var Flags$6 = "Vlaggen";
  var Objects$6 = "Voorwerpen";
  var Post$6 = "Verstuur";
  var Search$6 = "Zoeken";
  var Symbols$6 = "Symbolen";
  var nlTranslations = {
  	"1 comment": "1 reactie",
  	"1 like": "1 vind-ik-leuk",
  	"1 repost": "1 keer gedeeld",
  	Activity: Activity$7,
  	"Animals & Nature": "Dieren en natuur",
  	"Choose your default skin tone": "Kies je standaard huidskleur",
  	Clear: Clear$6,
  	Custom: Custom$6,
  	Details: Details$6,
  	"Emoji categories": "Emoji-categorieën",
  	Flags: Flags$6,
  	"Food & Drink": "Voedsel en drankjes",
  	"Frequently Used": "Vaak gebruikt",
  	"Getting website data...": "Websitegegevens ophalen ...",
  	"Load activities": "Laad activiteiten",
  	"Load more": "Meer laden",
  	"New Post": "New Bericht",
  	"No data to display...": "Geen data om weer te geven...",
  	"No emoji found": "Geen emoji gevonden",
  	Objects: Objects$6,
  	"Pick your emoji": "Kies je emoji",
  	Post: Post$6,
  	Search: Search$6,
  	"Search Results": "Zoekresultaten",
  	"Smileys & Emotion": "Smileys en emotie",
  	"Start Typing...": "Begin met typen...",
  	Symbols: Symbols$6,
  	"Travel & Places": "Reizen en plaatsen",
  	"Type your post...": "Type je bericht...",
  	"You have 1 new notification": "Je hebt 1 nieuw melding",
  	"You have {{ notificationCount }} new notifications": "Je hebt {{ notificationCount }} nieuwe meldingen",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} en 1 ander reageerden op je {{ activityVerb }}",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} en 1 ander volgen je",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} en 1 ander vinden je {{ activityVerb }} leuk",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} en 1 ander hebben je {{ activityVerb }} gedeeld",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} en {{ countOtherActors }} anderen hebben op je {{ activityVerb }} gereageerd",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} en {{ countOtherActors }} anderen volgen je",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} en {{ countOtherActors }} anderen vinden je {{ activityVerb }} leuk",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} en {{ countOtherActors }} anderen hebben je {{ activityVerb }} bericht gedeeld",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} heeft op je {{ activityVerb }} gereageerd",
  	"{{ actorName }} followed you": "{{ actorName }} volgt je",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} vindt je {{ activityVerb }} leuk",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} heeft je {{ activityVerb }} gedeeld",
  	"{{ countComments }} comments": "{{ countComments }} reacties",
  	"{{ countLikes }} likes": "{{ countLikes }} vind-ik-leuks",
  	"{{ countReposts }} reposts": "{{ countReposts }} keer gedeeld"
  };

  var Activity$6 = "Занятие";
  var Clear$5 = "Очистить";
  var Custom$5 = "Кастомныe";
  var Details$5 = "Детали";
  var Flags$5 = "Флаги";
  var Objects$5 = "Объекты";
  var Post$5 = "Отправить";
  var Search$5 = "Поиск";
  var Symbols$5 = "Символы";
  var ruTranslations = {
  	"1 comment": "1 комментарий",
  	"1 like": "1 лайк",
  	"1 repost": "1 репост",
  	Activity: Activity$6,
  	"Animals & Nature": "Животные и природа",
  	"Choose your default skin tone": "Выберите оттенок кожи по умолчанию",
  	Clear: Clear$5,
  	Custom: Custom$5,
  	Details: Details$5,
  	"Emoji categories": "Категории эмодзи",
  	Flags: Flags$5,
  	"Food & Drink": "Еда и напитки",
  	"Frequently Used": "Часто используемый",
  	"Getting website data...": "Получение данных веб-сайта...",
  	"Load activities": "Загрузка активити",
  	"Load more": "Загрузить еще",
  	"New Post": "Новая публикация",
  	"No data to display...": "Нет данных для отображения...",
  	"No emoji found": "Эмодзи не найдено",
  	Objects: Objects$5,
  	"Pick your emoji": "Выберите эмодзи",
  	Post: Post$5,
  	Search: Search$5,
  	"Search Results": "Результаты поиска",
  	"Smileys & Emotion": "Смайлы и эмоции",
  	"Start Typing...": "Начните набирать...",
  	Symbols: Symbols$5,
  	"Travel & Places": "Путешествия и места",
  	"Type your post...": "Напишите ваш пост...",
  	"You have 1 new notification": "У вас одно уведомление",
  	"You have {{ notificationCount }} new notifications": "У вас {{ notificationCount }} новых уведомлений",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} и еще 1 пользователь оставили комментарий на вашем {{ activityVerb }}",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} и еще 1 пользователь зафоловили вас",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} и еще 1 пользователю понравилась ваше {{ activityVerb }}",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} и еще 1 пользоватль зарепостил ваше {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} и {{ countOtherActors }} других пользователе оставили комментарии на вашем {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} и {{ countOtherActors }} других пользователей зафоловили вас",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} и {{ countOtherActors }} другим пользователям понравилась ваше {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} и {{ countOtherActors }} других пользователей зарепостили ваше {{ activityVerb }}",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} оставил комментарий на вашем {{ activityVerb }}",
  	"{{ actorName }} followed you": "{{ actorName }} зафоловили вас",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} понравилось ваше {{ activityVerb }}",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} зарепостил ваше {{ activityVerb }}",
  	"{{ countComments }} comments": "{{ countComments }} комментариев",
  	"{{ countLikes }} likes": "{{ countLikes }} лайков",
  	"{{ countReposts }} reposts": "{{ countReposts }} репостов"
  };

  var Activity$5 = "Aktivite";
  var Clear$4 = "Silmek";
  var Custom$4 = "Özelleştirilmiş";
  var Details$4 = "Detaylar";
  var Flags$4 = "Bayraklar";
  var Objects$4 = "Nesneler";
  var Post$4 = "Yolla";
  var Search$4 = "Arama";
  var Symbols$4 = "Semboller";
  var trTranslations = {
  	"1 comment": "1 yorum",
  	"1 like": "1 beğeni",
  	"1 repost": "1 paylaşım",
  	Activity: Activity$5,
  	"Animals & Nature": "Hayvanlar ve Doğa",
  	"Choose your default skin tone": "Varsayılan cilt tonunuzu seçin",
  	Clear: Clear$4,
  	Custom: Custom$4,
  	Details: Details$4,
  	"Emoji categories": "Emoji kategorileri",
  	Flags: Flags$4,
  	"Food & Drink": "Gıda ve Içecekler",
  	"Frequently Used": "Sıklıkla kullanılan",
  	"Getting website data...": "Web sitesi verileri alınıyor ...",
  	"Load activities": "Aktiviteleri yükle",
  	"Load more": "Daha fazla yükle",
  	"New Post": "Yeni İleti",
  	"No data to display...": "Gösterilecek veri yok...",
  	"No emoji found": "Emoji bulunamadı",
  	Objects: Objects$4,
  	"Pick your emoji": "Emoji seç",
  	Post: Post$4,
  	Search: Search$4,
  	"Search Results": "Arama Sonuçları",
  	"Smileys & Emotion": "Suratlar ve Duygu",
  	"Start Typing...": "Yazmaya Başla...",
  	Symbols: Symbols$4,
  	"Travel & Places": "Seyahat ve Yerler",
  	"Type your post...": "İletini yaz...",
  	"You have 1 new notification": "1 yeni bildirimin var",
  	"You have {{ notificationCount }} new notifications": "{{ notificationCount }} yeni bildirimin var",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} ve biri daha {{ activityVerb }} üzerine yorum yaptı",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} ve biri daha seni takip etti",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} ve biri daha senin {{ activityVerb }}'ini beğendi",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} ve biri daha senin {{ activityVerb }}'ini beğendi",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} ve {{ countOtherActors }} kişi daha {{ activityVerb }} üzerine yorum yaptı",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} ve {{ countOtherActors }} kişi daha seni takip etti",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} ve {{ countOtherActors }} kişi daha senin {{ activityVerb }}'ini beğendi",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} ve {{ countOtherActors }} kişi daha senin {{ activityVerb }}'ini paylaştı",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} {{ activityVerb }}'ine yorum yaptı",
  	"{{ actorName }} followed you": "{{ actorName }} seni takip etti",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} senin {{ activityVerb }}'ini beğendi",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} senin {{ activityVerb }}'ini paylaştı",
  	"{{ countComments }} comments": "{{ countComments }} yorum",
  	"{{ countLikes }} likes": "{{ countLikes }} beğeni",
  	"{{ countReposts }} reposts": "{{ countReposts }} paylaşım"
  };

  var Activity$4 = "Activité";
  var Clear$3 = "Effacer";
  var Custom$3 = "Personnalisé";
  var Details$3 = "Voir les commentaires";
  var Flags$3 = "Drapeaux";
  var Objects$3 = "Objets";
  var Post$3 = "Publier";
  var Search$3 = "Rechercher";
  var Symbols$3 = "Symboles";
  var frTranslations = {
  	"1 comment": "1 commentaire",
  	"1 like": "1 J'aime",
  	"1 repost": "1 partage",
  	Activity: Activity$4,
  	"Animals & Nature": "Animaux & Nature",
  	"Choose your default skin tone": "Choisissez votre couleur de peau par défaut",
  	Clear: Clear$3,
  	Custom: Custom$3,
  	Details: Details$3,
  	"Emoji categories": "Catégories d'émojis",
  	Flags: Flags$3,
  	"Food & Drink": "Nourriture et boissons",
  	"Frequently Used": "Fréquemment utilisé",
  	"Getting website data...": "Obtention des données du site Web...",
  	"Load activities": "Voir les nouvelles publications",
  	"Load more": "voir plus",
  	"New Post": "Nouvelle publication",
  	"No data to display...": "Aucune donnée à afficher",
  	"No emoji found": "Aucun emoji trouvé",
  	Objects: Objects$3,
  	"Pick your emoji": "Choisissez votre emoji",
  	Post: Post$3,
  	Search: Search$3,
  	"Search Results": "Résultats de recherche",
  	"Smileys & Emotion": "Smileys & Émotion",
  	"Start Typing...": "Démarrez la saisie...",
  	Symbols: Symbols$3,
  	"Travel & Places": "Voyages et lieux",
  	"Type your post...": "Tapez votre message",
  	"You have 1 new notification": "Vous avez reçu 1 nouvelle notification",
  	"You have {{ notificationCount }} new notifications": "Vous avez reçu {{ notificationCount }} nouvelles notifications",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} et 1 autre ont commenté votre {{ activityVerb }}",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} et 1 autre vous suivent désormais",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} et 1 autre ont aimé votre {{ activityVerb }}",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} et 1 autre ont partagé votre {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} et {{ countOtherActors }} autres ont commenté votre {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} et {{ countOtherActors }} autres vous suivent désormais",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} et {{ countOtherActors }} autres ont aimé votre {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} et {{ countOtherActors }} autres ont partagé votre {{ activityVerb }}",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} a commenté votre {{ activityVerb }}",
  	"{{ actorName }} followed you": "{{ actorName }} vous suit désormais",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} a aimé votre {{ activityVerb }}",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} a partagé votre {{ activityVerb }}",
  	"{{ countComments }} comments": "{{ countComments }} commentaires",
  	"{{ countLikes }} likes": "{{ countLikes }} J'aime",
  	"{{ countReposts }} reposts": "{{ countReposts }} partages"
  };

  var Activity$3 = "गतिविधि";
  var Clear$2 = "हटाएं";
  var Custom$2 = "कस्टम";
  var Details$2 = "डिटेल्स";
  var Flags$2 = "झंडे";
  var Objects$2 = "चीज़ें";
  var Post$2 = "पोस्ट करे";
  var Search$2 = "खोजें";
  var Symbols$2 = "चिन्ह";
  var hiTranslations = {
  	"1 comment": "1 कमेंट",
  	"1 like": "1 लाइक",
  	"1 repost": "1 रिपोस्ट",
  	Activity: Activity$3,
  	"Animals & Nature": "जानवर और प्रकृति",
  	"Choose your default skin tone": "अपना डिफ़ॉल्ट स्किन टोन चुनें",
  	Clear: Clear$2,
  	Custom: Custom$2,
  	Details: Details$2,
  	"Emoji categories": "इमोजी श्रेणियां",
  	Flags: Flags$2,
  	"Food & Drink": "खाने-पीने की चीज़ें",
  	"Frequently Used": "अधिकतर इस्तेमाल हुए",
  	"Getting website data...": "वेबसाइट डेटा प्राप्त कर रहा है ...",
  	"Load activities": "एक्टिविटीज को लोड करें",
  	"Load more": "एक्टिविटीज को लोड करें",
  	"New Post": "नया पोस्ट",
  	"No data to display...": "कोई डेटा उपलब्ध नहीं है",
  	"No emoji found": "कोई इमोजी नहीं मिला",
  	Objects: Objects$2,
  	"Pick your emoji": "अपनी इमोजी चुनिए",
  	Post: Post$2,
  	Search: Search$2,
  	"Search Results": "परिणाम",
  	"Smileys & Emotion": "स्माइली और भावनाएं",
  	"Start Typing...": "टाइप करना शुरू करें ...",
  	Symbols: Symbols$2,
  	"Travel & Places": "यात्रा और जगहें",
  	"Type your post...": "अपनी पोस्ट लिखें ...",
  	"You have 1 new notification": "आपके पास 1 नई नोटिफिकेशन है",
  	"You have {{ notificationCount }} new notifications": "आपके पास {{ notificationCount }} नई नोटिफिकेशन्स है",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} और १ और यूजर ने आपके {{ activityVerb }} के ऊपर कमेंट किया ",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} और १ और यूजर ने आपको फॉलो किया",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} और १ और यूजर ने आपके {{ activityVerb }} को लाइक किया",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} और १ और यूजर ने आपके {{ activityVerb }} को रिपोस्ट किया",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} और {{ countOtherActors }} और यूजर ने आपके {{ activityVerb }} पे कमेंट किया ",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} और {{ countOtherActors }} और यूजर ने आपको फॉलो किया",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} और {{ countOtherActors }} और यूजर ने आपके {{ activityVerb }} को लाइक किया",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} और {{ countOtherActors }} और यूजर ने आपके {{ activityVerb }} को रिपोस्ट किया ",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} ने आपके {{ activityVerb }} के ऊपर कमेंट किया",
  	"{{ actorName }} followed you": "{{ actorName }} ने आपको फॉलो किया",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} ने आपके {{ activityVerb }} को लाइक किया",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} ने आपके {{ activityVerb }} को रिपोस्ट किया",
  	"{{ countComments }} comments": "{{ countComments }} कमैंट्स",
  	"{{ countLikes }} likes": "{{ countLikes }} लाइक्स",
  	"{{ countReposts }} reposts": "{{ countReposts }} रेपोस्टस"
  };

  var Activity$2 = "Attività";
  var Clear$1 = "Cancellare";
  var Custom$1 = "Personalizzato";
  var Details$1 = "Dettagli";
  var Flags$1 = "Contrassegni";
  var Objects$1 = "Oggetti";
  var Post$1 = "Invia";
  var Search$1 = "Ricerca";
  var Symbols$1 = "Simboli";
  var itTranslations = {
  	"1 comment": "1 commento",
  	"1 like": "1 mi piace",
  	"1 repost": "1 condivisione",
  	Activity: Activity$2,
  	"Animals & Nature": "Animali e natura",
  	"Choose your default skin tone": "Scegli il tuo tono di pelle predefinito",
  	Clear: Clear$1,
  	Custom: Custom$1,
  	Details: Details$1,
  	"Emoji categories": "Categorie di emoji",
  	Flags: Flags$1,
  	"Food & Drink": "Cibo e bevande",
  	"Frequently Used": "Usato frequentemente",
  	"Getting website data...": "Recupero dei dati del sito Web ...",
  	"Load activities": "Carica attivitá",
  	"Load more": "Carica altro",
  	"New Post": "Nuovo post",
  	"No data to display...": "Nessun dato da mostrare...",
  	"No emoji found": "Nessuna emoji trovata",
  	Objects: Objects$1,
  	"Pick your emoji": "Scegli la tua emoji",
  	Post: Post$1,
  	Search: Search$1,
  	"Search Results": "Risultati di ricerca",
  	"Smileys & Emotion": "Faccine ed emozione",
  	"Start Typing...": "Inizia a scrivere...",
  	Symbols: Symbols$1,
  	"Travel & Places": "Viaggi e luoghi",
  	"Type your post...": "Scrivi il tuo post...",
  	"You have 1 new notification": "Hai una nuova notifica",
  	"You have {{ notificationCount }} new notifications": "Hai {{ notificationCount }} nuove notifiche",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} e 1 altro hanno commentato il tuo {{ activityVerb }}",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} e 1 altro hanno iniziato a seguirti",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "A {{ actorName }} e 1 altro piace il tuo {{ activityVerb }}",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }} e 1 altro hanno condiviso il tuo {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} e altri {{ countOtherActors }} hanno commentato il tuo {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} e altri {{ countOtherActors }} hanno iniziato a seguirti",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "A {{ actorName }} e altri {{ countOtherActors }} piace il tuo {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} e altri {{ countOtherActors }} hanno condiviso il tuo {{ activityVerb }}",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} ha commentato il tuo {{ activityVerb }}",
  	"{{ actorName }} followed you": "{{ actorName }} ha iniziato a seguirti",
  	"{{ actorName }} liked your {{ activityVerb }}": "A {{ actorName }} piace il tuo {{ activityVerb }}",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} ha condiviso il tuo {{ activityVerb }}",
  	"{{ countComments }} comments": "{{ countComments }} commenti",
  	"{{ countLikes }} likes": "{{ countLikes }} mi piace",
  	"{{ countReposts }} reposts": "{{ countReposts }} condivisioni"
  };

  var Activity$1 = "Actividad";
  var Clear = "Claro";
  var Custom = "Personalizado";
  var Details = "Detalles";
  var Flags = "Banderas";
  var Objects = "Objetos";
  var Post = "Post";
  var Search = "Buscar";
  var Symbols = "Símbolos";
  var esTranslations = {
  	"1 comment": "1 comentario",
  	"1 like": "1 me gusta",
  	"1 repost": "1 repost",
  	Activity: Activity$1,
  	"Animals & Nature": "Animales y naturaleza",
  	"Choose your default skin tone": "Elige tu tono de piel por defecto",
  	Clear: Clear,
  	Custom: Custom,
  	Details: Details,
  	"Emoji categories": "Categorías de emoji",
  	Flags: Flags,
  	"Food & Drink": "Alimentación y Bebidas",
  	"Frequently Used": "Usado frecuentemente",
  	"Getting website data...": "Obtención de datos del sitio web...",
  	"Load activities": "Cargar actividades",
  	"Load more": "Cargar más",
  	"New Post": "Nuevo post",
  	"No data to display...": "No hay datos que mostrar...",
  	"No emoji found": "No se ha encontrado ningún emoji",
  	Objects: Objects,
  	"Pick your emoji": "Elige un emoji",
  	Post: Post,
  	Search: Search,
  	"Search Results": "Resultados de la búsqueda",
  	"Smileys & Emotion": "Sonrisas y emociones",
  	"Start Typing...": "Empieza a escribir...",
  	Symbols: Symbols,
  	"Travel & Places": "Viajes y lugares",
  	"Type your post...": "Escribe tu post...",
  	"You have 1 new notification": "Tienes 1 notificación nueva",
  	"You have {{ notificationCount }} new notifications": "Tienes {{ notificationCount }} nuevas notificaciones",
  	"{{ actorName }} and 1 other commented on your {{ activityVerb }}": "{{ actorName }} y 1 han comentado tu {{ activityVerb }}",
  	"{{ actorName }} and 1 other followed you": "{{ actorName }} y 1 más te han seguido",
  	"{{ actorName }} and 1 other liked your {{ activityVerb }}": "{{ actorName }} y 1 más te les ha gustado tu {{ activityVerb }}",
  	"{{ actorName }} and 1 other reposted your {{ activityVerb }}": "{{ actorName }}  y 1 más te han reposteado tu {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}": "{{ actorName }} y {{ countOtherActors }}  más te han comentado en {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others followed you": "{{ actorName }} y {{ countOtherActors }} más te han seguido",
  	"{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}": "{{ actorName }} y {{ countOtherActors }} más les ha gustado tu {{ activityVerb }}",
  	"{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}": "{{ actorName }} y {{ countOtherActors }}  más han reposteado tu { activityVerb }}",
  	"{{ actorName }} commented on your {{ activityVerb }}": "{{ actorName }} ha comentado en tu {{ activityVerb }}",
  	"{{ actorName }} followed you": "{{ actorName }} te ha seguido",
  	"{{ actorName }} liked your {{ activityVerb }}": "{{ actorName }} le gusta tu {{ activityVerb }}",
  	"{{ actorName }} reposted your {{ activityVerb }}": "{{ actorName }} ha reposteado tu {{ activityVerb }}",
  	"{{ countComments }} comments": "{{ countComments }} comentarios",
  	"{{ countLikes }} likes": "{{ countLikes }} me gusta",
  	"{{ countReposts }} reposts": "{{ countReposts }} reposteos"
  };

  createCommonjsModule(function (module, exports) {
  !function(e,a){module.exports=a(dayjs_min);}(commonjsGlobal,function(e){e=e&&e.hasOwnProperty("default")?e.default:e;var a={name:"nl",weekdays:"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),weekdaysShort:"zo._ma._di._wo._do._vr._za.".split("_"),weekdaysMin:"zo_ma_di_wo_do_vr_za".split("_"),months:"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),monthsShort:"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),ordinal:function(e){return e+"."},weekStart:1,yearStart:4,formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},relativeTime:{future:"over %s",past:"%s geleden",s:"een paar seconden",m:"een minuut",mm:"%d minuten",h:"een uur",hh:"%d uur",d:"een dag",dd:"%d dagen",M:"een maand",MM:"%d maanden",y:"een jaar",yy:"%d jaar"}};return e.locale(a,null,!0),a});
  });

  createCommonjsModule(function (module, exports) {
  !function(_,t){module.exports=t(dayjs_min);}(commonjsGlobal,function(_){_=_&&_.hasOwnProperty("default")?_.default:_;var t="января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),e="январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),n="янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),s="янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_"),r=/D[oD]?(\[[^[\]]*\]|\s)+MMMM?/;function o(_,t,e){var n,s;return "m"===e?t?"минута":"минуту":_+" "+(n=+_,s={mm:t?"минута_минуты_минут":"минуту_минуты_минут",hh:"час_часа_часов",dd:"день_дня_дней",MM:"месяц_месяца_месяцев",yy:"год_года_лет"}[e].split("_"),n%10==1&&n%100!=11?s[0]:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?s[1]:s[2])}var d=function(_,n){return r.test(n)?t[_.month()]:e[_.month()]};d.s=e,d.f=t;var i=function(_,t){return r.test(t)?n[_.month()]:s[_.month()]};i.s=s,i.f=n;var m={name:"ru",weekdays:"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),weekdaysShort:"вск_пнд_втр_срд_чтв_птн_сбт".split("_"),weekdaysMin:"вс_пн_вт_ср_чт_пт_сб".split("_"),months:d,monthsShort:i,weekStart:1,formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., H:mm",LLLL:"dddd, D MMMM YYYY г., H:mm"},relativeTime:{future:"через %s",past:"%s назад",s:"несколько секунд",m:o,mm:o,h:"час",hh:o,d:"день",dd:o,M:"месяц",MM:o,y:"год",yy:o},ordinal:function(_){return _}};return _.locale(m,null,!0),m});
  });

  createCommonjsModule(function (module, exports) {
  !function(a,e){module.exports=e(dayjs_min);}(commonjsGlobal,function(a){a=a&&a.hasOwnProperty("default")?a.default:a;var e={name:"tr",weekdays:"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),weekdaysShort:"Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),weekdaysMin:"Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),months:"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),monthsShort:"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),weekStart:1,formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},relativeTime:{future:"%s sonra",past:"%s önce",s:"birkaç saniye",m:"bir dakika",mm:"%d dakika",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",M:"bir ay",MM:"%d ay",y:"bir yıl",yy:"%d yıl"},ordinal:function(a){return a+"."}};return a.locale(e,null,!0),e});
  });

  createCommonjsModule(function (module, exports) {
  !function(e,_){module.exports=_(dayjs_min);}(commonjsGlobal,function(e){e=e&&e.hasOwnProperty("default")?e.default:e;var _={name:"fr",weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),weekStart:1,yearStart:4,formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},ordinal:function(e){return ""+e+(1===e?"er":"")}};return e.locale(_,null,!0),_});
  });

  createCommonjsModule(function (module, exports) {
  !function(_,e){module.exports=e(dayjs_min);}(commonjsGlobal,function(_){_=_&&_.hasOwnProperty("default")?_.default:_;var e={name:"hi",weekdays:"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),months:"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),weekdaysShort:"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),monthsShort:"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),weekdaysMin:"र_सो_मं_बु_गु_शु_श".split("_"),ordinal:function(_){return _},formats:{LT:"A h:mm बजे",LTS:"A h:mm:ss बजे",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm बजे",LLLL:"dddd, D MMMM YYYY, A h:mm बजे"},relativeTime:{future:"%s में",past:"%s पहले",s:"कुछ ही क्षण",m:"एक मिनट",mm:"%d मिनट",h:"एक घंटा",hh:"%d घंटे",d:"एक दिन",dd:"%d दिन",M:"एक महीने",MM:"%d महीने",y:"एक वर्ष",yy:"%d वर्ष"}};return _.locale(e,null,!0),e});
  });

  createCommonjsModule(function (module, exports) {
  !function(e,o){module.exports=o(dayjs_min);}(commonjsGlobal,function(e){e=e&&e.hasOwnProperty("default")?e.default:e;var o={name:"it",weekdays:"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),weekdaysShort:"dom_lun_mar_mer_gio_ven_sab".split("_"),weekdaysMin:"do_lu_ma_me_gi_ve_sa".split("_"),months:"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),weekStart:1,monthsShort:"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},relativeTime:{future:"tra %s",past:"%s fa",s:"qualche secondo",m:"un minuto",mm:"%d minuti",h:"un' ora",hh:"%d ore",d:"un giorno",dd:"%d giorni",M:"un mese",MM:"%d mesi",y:"un anno",yy:"%d anni"},ordinal:function(e){return e+"º"}};return e.locale(o,null,!0),o});
  });

  createCommonjsModule(function (module, exports) {
  !function(e,s){module.exports=s(dayjs_min);}(commonjsGlobal,function(e){e=e&&e.hasOwnProperty("default")?e.default:e;var s={name:"es",monthsShort:"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),months:"Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre".split("_"),weekStart:1,formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},ordinal:function(e){return e+"º"}};return e.locale(s,null,!0),s});
  });

  createCommonjsModule(function (module, exports) {
  !function(e,n){module.exports=n();}(commonjsGlobal,function(){return {name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")}});
  });

  function ownKeys$b(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$b(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$b(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var defaultNS = 'translation';
  var defaultLng = 'en';
  dayjs_min.extend(updateLocale);
  dayjs_min.updateLocale('nl', {
    calendar: {
      sameDay: '[vandaag om] LT',
      nextDay: '[morgen om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[gisteren om] LT',
      lastWeek: '[afgelopen] dddd [om] LT',
      sameElse: 'L'
    }
  });
  dayjs_min.updateLocale('it', {
    calendar: {
      sameDay: '[Oggi alle] LT',
      nextDay: '[Domani alle] LT',
      nextWeek: 'dddd [alle] LT',
      lastDay: '[Ieri alle] LT',
      lastWeek: '[lo scorso] dddd [alle] LT',
      sameElse: 'L'
    }
  });
  dayjs_min.updateLocale('hi', {
    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[कल] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[कल] LT',
      lastWeek: '[पिछले] dddd, LT',
      sameElse: 'L'
    },
    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
    meridiemParse: /रात|सुबह|दोपहर|शाम/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }

      if (meridiem === 'रात') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'सुबह') {
        return hour;
      } else if (meridiem === 'दोपहर') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'शाम') {
        return hour + 12;
      }

      return hour;
    },
    meridiem: function meridiem(hour) {
      if (hour < 4) {
        return 'रात';
      } else if (hour < 10) {
        return 'सुबह';
      } else if (hour < 17) {
        return 'दोपहर';
      } else if (hour < 20) {
        return 'शाम';
      } else {
        return 'रात';
      }
    }
  });
  dayjs_min.updateLocale('fr', {
    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L'
    }
  });
  dayjs_min.updateLocale('tr', {
    calendar: {
      sameDay: '[bugün saat] LT',
      nextDay: '[yarın saat] LT',
      nextWeek: '[gelecek] dddd [saat] LT',
      lastDay: '[dün] LT',
      lastWeek: '[geçen] dddd [saat] LT',
      sameElse: 'L'
    }
  });
  dayjs_min.updateLocale('ru', {
    calendar: {
      sameDay: '[Сегодня, в] LT',
      nextDay: '[Завтра, в] LT',
      lastDay: '[Вчера, в] LT'
    }
  });
  dayjs_min.updateLocale('es', {
    calendar: {
      sameDay: '[Hoy a] LT',
      nextDay: '[Mañana a] LT',
      lastDay: '[Ayer a] LT'
    }
  });
  var en_locale = {
    formats: {},
    months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
    relativeTime: {},
    weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
  };
  var defaultStreami18nOptions = {
    language: 'en',
    disableDateTimeTranslations: false,
    debug: false,
    logger: function logger(msg) {
      return console.warn(msg);
    },
    dayjsLocaleConfigForLanguage: null,
    DateTimeParser: dayjs_min
  }; // Type guards to check DayJs

  var isDayJs = function isDayJs(dateTimeParser) {
    return dateTimeParser.extend !== undefined;
  };

  var Streami18n = /*#__PURE__*/function () {
    // eslint-disable-line @typescript-eslint/no-empty-function

    /**
     * dayjs.updateLocale('nl') also changes the global locale. We don't want to do that
     * when user calls registerTranslation() function. So intead we will store the locale configs
     * given to registerTranslation() function in `dayjsLocales` object, and register the required locale
     * with moment, when setLanguage is called.
     * */

    /**
     * Initialize properties used in constructor
     */

    /**
     * Contructor accepts following options:
     *  - language (String) default: 'en'
     *    Language code e.g., en, tr
     *
     *  - translationsForLanguage (object)
     *    Translations object. Please check src/i18n/en.json for example.
     *
     *  - disableDateTimeTranslations (boolean) default: false
     *    Disable translations for datetimes
     *
     *  - debug (boolean) default: false
     *    Enable debug mode in internal i18n class
     *
     *  - logger (function) default: () => {}
     *    Logger function to log warnings/errors from this class
     *
     *  - dayjsLocaleConfigForLanguage (object) default: 'enConfig'
     *    [Config object](https://momentjs.com/docs/#/i18n/changing-locale/) for internal moment object,
     *    corresponding to language (param)
     *
     *  - DateTimeParser (function) Moment or Dayjs instance/function.
     *    Make sure to load all the required locales in this Moment or Dayjs instance that you will be provide to Streami18n
     *
     * @param {*} options
     */
    function Streami18n() {
      var _this = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      _classCallCheck$3(this, Streami18n);

      _defineProperty$5(this, "i18nInstance", i18next.createInstance());

      _defineProperty$5(this, "Dayjs", null);

      _defineProperty$5(this, "setLanguageCallback", function () {});

      _defineProperty$5(this, "initialized", false);

      _defineProperty$5(this, "t", function (key) {
        return key;
      });

      _defineProperty$5(this, "tDateTimeParser", void 0);

      _defineProperty$5(this, "translations", {
        en: _defineProperty$5({}, defaultNS, enTranslations),
        nl: _defineProperty$5({}, defaultNS, nlTranslations),
        ru: _defineProperty$5({}, defaultNS, ruTranslations),
        tr: _defineProperty$5({}, defaultNS, trTranslations),
        fr: _defineProperty$5({}, defaultNS, frTranslations),
        hi: _defineProperty$5({}, defaultNS, hiTranslations),
        it: _defineProperty$5({}, defaultNS, itTranslations),
        es: _defineProperty$5({}, defaultNS, esTranslations)
      });

      _defineProperty$5(this, "dayjsLocales", {});

      _defineProperty$5(this, "logger", void 0);

      _defineProperty$5(this, "currentLanguage", void 0);

      _defineProperty$5(this, "DateTimeParser", void 0);

      _defineProperty$5(this, "isCustomDateTimeParser", void 0);

      _defineProperty$5(this, "i18nextConfig", void 0);

      _defineProperty$5(this, "localeExists", function (language) {
        if (_this.isCustomDateTimeParser) return true;
        return Object.keys(dayjs_min.Ls).indexOf(language) > -1;
      });

      _defineProperty$5(this, "validateCurrentLanguage", function () {
        var availableLanguages = Object.keys(_this.translations);

        if (availableLanguages.indexOf(_this.currentLanguage) === -1) {
          _this.logger("Streami18n: '".concat(_this.currentLanguage, "' language is not registered.") + " Please make sure to call streami18n.registerTranslation('".concat(_this.currentLanguage, "', {...}) or ") + "use one the built-in supported languages - ".concat(_this.getAvailableLanguages()));

          _this.currentLanguage = defaultLng;
        }
      });

      _defineProperty$5(this, "geti18Instance", function () {
        return _this.i18nInstance;
      });

      _defineProperty$5(this, "getAvailableLanguages", function () {
        return Object.keys(_this.translations);
      });

      _defineProperty$5(this, "getTranslations", function () {
        return _this.translations;
      });

      var finalOptions = _objectSpread$d(_objectSpread$d({}, defaultStreami18nOptions), options); // Prepare the i18next configuration.


      this.logger = finalOptions.logger;
      this.currentLanguage = finalOptions.language;
      this.DateTimeParser = finalOptions.DateTimeParser;

      try {
        // This is a shallow check to see if given parser is instance of Dayjs.
        // For some reason Dayjs.isDayjs(this.DateTimeParser()) doesn't work.
        if (this.DateTimeParser && isDayJs(this.DateTimeParser)) {
          this.DateTimeParser.extend(localizedFormat);
          this.DateTimeParser.extend(calendar);
          this.DateTimeParser.extend(localeData);
          this.DateTimeParser.extend(relativeTime);
        }
      } catch (error) {
        throw Error("Streami18n: Looks like you wanted to provide Dayjs instance, but something went wrong while adding plugins ".concat(error));
      }

      this.isCustomDateTimeParser = !!options.DateTimeParser;
      var translationsForLanguage = finalOptions.translationsForLanguage;

      if (translationsForLanguage) {
        this.translations[this.currentLanguage] = _defineProperty$5({}, defaultNS, translationsForLanguage);
      } // If translations don't exist for given language, then set it as empty object.


      if (!this.translations[this.currentLanguage]) {
        this.translations[this.currentLanguage] = _defineProperty$5({}, defaultNS, {});
      }

      this.i18nextConfig = {
        nsSeparator: false,
        keySeparator: false,
        fallbackLng: false,
        debug: finalOptions.debug,
        lng: this.currentLanguage,
        interpolation: {
          escapeValue: false
        },
        parseMissingKeyHandler: function parseMissingKeyHandler(key) {
          _this.logger("Streami18n: Missing translation for key: ".concat(key));

          return key;
        }
      };
      this.validateCurrentLanguage();
      var dayjsLocaleConfigForLanguage = finalOptions.dayjsLocaleConfigForLanguage;

      if (dayjsLocaleConfigForLanguage) {
        this.addOrUpdateLocale(this.currentLanguage, _objectSpread$d({}, dayjsLocaleConfigForLanguage));
      } else if (!this.localeExists(this.currentLanguage)) {
        this.logger("Streami18n: Streami18n(...) - Locale config for ".concat(this.currentLanguage, " does not exist in momentjs.") + "Please import the locale file using \"import 'moment/locale/".concat(this.currentLanguage, "';\" in your app or ") + "register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)");
      }

      this.tDateTimeParser = function (timestamp) {
        if (finalOptions.disableDateTimeTranslations || !_this.localeExists(_this.currentLanguage)) {
          return _this.DateTimeParser(timestamp).locale(defaultLng);
        }

        return _this.DateTimeParser(timestamp).locale(_this.currentLanguage);
      };
    }
    /**
     * Initializes the i18next instance with configuration (which enables natural language as default keys)
     */


    _createClass$3(Streami18n, [{
      key: "init",
      value: function () {
        var _init = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee() {
          return regenerator$1.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  this.validateCurrentLanguage();
                  _context.prev = 1;
                  _context.next = 4;
                  return this.i18nInstance.init(_objectSpread$d(_objectSpread$d({}, this.i18nextConfig), {}, {
                    resources: this.translations,
                    lng: this.currentLanguage
                  }));

                case 4:
                  this.t = _context.sent;
                  this.initialized = true;
                  _context.next = 11;
                  break;

                case 8:
                  _context.prev = 8;
                  _context.t0 = _context["catch"](1);
                  this.logger("Something went wrong with init: ".concat(_context.t0));

                case 11:
                  return _context.abrupt("return", {
                    t: this.t,
                    tDateTimeParser: this.tDateTimeParser
                  });

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this, [[1, 8]]);
        }));

        function init() {
          return _init.apply(this, arguments);
        }

        return init;
      }()
    }, {
      key: "getTranslators",
      value:
      /**
       * Returns current version translator function.
       */
      function () {
        var _getTranslators = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee2() {
          return regenerator$1.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  if (this.initialized) {
                    _context2.next = 7;
                    break;
                  }

                  if (this.dayjsLocales[this.currentLanguage]) {
                    this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);
                  }

                  _context2.next = 4;
                  return this.init();

                case 4:
                  return _context2.abrupt("return", _context2.sent);

                case 7:
                  return _context2.abrupt("return", {
                    t: this.t,
                    tDateTimeParser: this.tDateTimeParser
                  });

                case 8:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, this);
        }));

        function getTranslators() {
          return _getTranslators.apply(this, arguments);
        }

        return getTranslators;
      }()
      /**
       * Register translation
       */

    }, {
      key: "registerTranslation",
      value: function registerTranslation(language, translation, customDayjsLocale) {
        if (!translation) {
          this.logger("Streami18n: registerTranslation(language, translation, customDayjsLocale) called without translation");
          return;
        }

        if (!this.translations[language]) {
          this.translations[language] = _defineProperty$5({}, defaultNS, translation);
        } else {
          this.translations[language][defaultNS] = translation;
        }

        if (customDayjsLocale) {
          this.dayjsLocales[language] = _objectSpread$d({}, customDayjsLocale);
        } else if (!this.localeExists(language)) {
          this.logger("Streami18n: registerTranslation(language, translation, customDayjsLocale) - " + "Locale config for ".concat(language, " does not exist in Dayjs.") + "Please import the locale file using \"import 'dayjs/locale/".concat(language, "';\" in your app or ") + "register the locale config with Streami18n using registerTranslation(language, translation, customDayjsLocale)");
        }

        if (this.initialized) {
          this.i18nInstance.addResources(language, defaultNS, translation);
        }
      }
    }, {
      key: "addOrUpdateLocale",
      value: function addOrUpdateLocale(key, config) {
        if (this.localeExists(key)) {
          dayjs_min.updateLocale(key, _objectSpread$d({}, config));
        } else {
          // Merging the custom locale config with en config, so missing keys can default to english.
          dayjs_min.locale(_objectSpread$d(_objectSpread$d({
            name: key
          }, en_locale), config), undefined, true);
        }
      }
      /**
       * Changes the language.
       */

    }, {
      key: "setLanguage",
      value: function () {
        var _setLanguage = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee3(language) {
          var _t;

          return regenerator$1.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  this.currentLanguage = language;

                  if (this.initialized) {
                    _context3.next = 3;
                    break;
                  }

                  return _context3.abrupt("return");

                case 3:
                  _context3.prev = 3;
                  _context3.next = 6;
                  return this.i18nInstance.changeLanguage(language);

                case 6:
                  _t = _context3.sent;

                  if (this.dayjsLocales[language]) {
                    this.addOrUpdateLocale(this.currentLanguage, this.dayjsLocales[this.currentLanguage]);
                  }

                  this.setLanguageCallback(_t);
                  return _context3.abrupt("return", _t);

                case 12:
                  _context3.prev = 12;
                  _context3.t0 = _context3["catch"](3);
                  this.logger("Failed to set language: ".concat(_context3.t0));
                  return _context3.abrupt("return", this.t);

                case 16:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3, this, [[3, 12]]);
        }));

        function setLanguage(_x) {
          return _setLanguage.apply(this, arguments);
        }

        return setLanguage;
      }()
    }, {
      key: "registerSetLanguageCallback",
      value: function registerSetLanguageCallback(callback) {
        this.setLanguageCallback = callback;
      }
    }]);

    return Streami18n;
  }();

  function _extends$1() {
    _extends$1 = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends$1.apply(this, arguments);
  }

  var TranslationContext = /*#__PURE__*/React.createContext({
    t: function t(key) {
      return key;
    },
    tDateTimeParser: function tDateTimeParser(input) {
      return dayjs_min(input);
    }
  });
  var TranslationProvider = function TranslationProvider(_ref) {
    var children = _ref.children,
        value = _ref.value;
    return /*#__PURE__*/React__default['default'].createElement(TranslationContext.Provider, {
      value: value
    }, children);
  };
  var useTranslationContext = function useTranslationContext() {
    return React.useContext(TranslationContext);
  };
  var withTranslationContext = function withTranslationContext(Component) {
    var WithTranslationContextComponent = function WithTranslationContextComponent(props) {
      var translationContext = useTranslationContext();
      return /*#__PURE__*/React__default['default'].createElement(Component, _extends$1({}, props, translationContext));
    };

    WithTranslationContextComponent.displayName = (Component.displayName || Component.name || 'Component').replace('Base', '');
    return WithTranslationContextComponent;
  };

  function _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray$3(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$3(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }

  function _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function ownKeys$a(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$a(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$a(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var StreamContext = /*#__PURE__*/React__default['default'].createContext({
    analyticsClient: null,
    client: null,
    errorHandler: handleError,
    sharedFeedManagers: {}
  });
  var StreamAppProvider = function StreamAppProvider(_ref) {
    var children = _ref.children,
        value = _ref.value;
    return /*#__PURE__*/React__default['default'].createElement(StreamContext.Provider, {
      value: value
    }, children);
  };
  var useStreamContext = function useStreamContext() {
    return React.useContext(StreamContext);
  };
  /**
   * Manages the connection with Stream. Any components that should talk to
   * Stream should be a child of this component.
   */

  function StreamApp(_ref2) {
    var apiKey = _ref2.apiKey,
        appId = _ref2.appId,
        _ref2$errorHandler = _ref2.errorHandler,
        errorHandler = _ref2$errorHandler === void 0 ? handleError : _ref2$errorHandler,
        i18nInstance = _ref2.i18nInstance,
        token = _ref2.token,
        analyticsToken = _ref2.analyticsToken,
        children = _ref2.children,
        defaultUserData = _ref2.defaultUserData,
        options = _ref2.options,
        _ref2$sharedFeeds = _ref2.sharedFeeds,
        sharedFeeds = _ref2$sharedFeeds === void 0 ? [{
      feedGroup: 'notification',
      notify: true,
      options: {
        mark_seen: true
      }
    }] : _ref2$sharedFeeds;

    var _useState = React.useState(null),
        _useState2 = _slicedToArray$3(_useState, 2),
        client = _useState2[0],
        setClient = _useState2[1];

    var _useState3 = React.useState(),
        _useState4 = _slicedToArray$3(_useState3, 2),
        user = _useState4[0],
        setUser = _useState4[1];

    var _useState5 = React.useState(null),
        _useState6 = _slicedToArray$3(_useState5, 2),
        analyticsClient = _useState6[0],
        setAnalyticsClient = _useState6[1];

    var _useState7 = React.useState(),
        _useState8 = _slicedToArray$3(_useState7, 2),
        userData = _useState8[0],
        setUserDate = _useState8[1];

    var _useState9 = React.useState(),
        _useState10 = _slicedToArray$3(_useState9, 2),
        translator = _useState10[0],
        setTranslator = _useState10[1];

    var _useState11 = React.useState({}),
        _useState12 = _slicedToArray$3(_useState11, 2),
        sharedFeedManagers = _useState12[0],
        setSharedFeedManagers = _useState12[1];

    React.useEffect(function () {
      var streami18n = i18nInstance && i18nInstance instanceof Streami18n ? i18nInstance : new Streami18n({
        language: 'en'
      });
      streami18n.getTranslators().then(setTranslator);
      streami18n.registerSetLanguageCallback(function (t) {
        return setTranslator(function (prevState) {
          return _objectSpread$c(_objectSpread$c({}, prevState), {}, {
            t: t
          });
        });
      });
    }, [i18nInstance]);

    var getUserInfo = /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee(user) {
        var _yield$user$getOrCrea, data;

        return regenerator$1.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return user.getOrCreate(defaultUserData || {
                  name: 'Unknown'
                });

              case 3:
                _yield$user$getOrCrea = _context.sent;
                data = _yield$user$getOrCrea.data;
                setUserDate(data);
                _context.next = 11;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](0);
                errorHandler(_context.t0, 'get-user-info', {
                  userId: user.id
                });

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[0, 8]]);
      }));

      return function getUserInfo(_x) {
        return _ref3.apply(this, arguments);
      };
    }();

    React.useEffect(function () {
      var client = lib$1.connect(apiKey, token, appId, options || {});
      var analyticsClient = null;

      if (analyticsToken) {
        analyticsClient = new streamAnalytics({
          apiKey: apiKey,
          token: analyticsToken
        });
        analyticsClient.setUser(client.userId);
      }

      var feeds = {};

      var _iterator = _createForOfIteratorHelper$1(sharedFeeds),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var feedProps = _step.value;
          var manager = new FeedManager(_objectSpread$c(_objectSpread$c({}, feedProps), {}, {
            client: client,
            analyticsClient: analyticsClient,
            errorHandler: errorHandler,
            user: user
          }));
          feeds[manager.feed().id] = manager;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      setClient(client);
      setUser(client.currentUser);
      setAnalyticsClient(analyticsClient);
      setSharedFeedManagers(feeds);
      getUserInfo(client.currentUser);
      return function () {
        var _client$fayeClient;

        return (_client$fayeClient = client.fayeClient) === null || _client$fayeClient === void 0 ? void 0 : _client$fayeClient.disconnect();
      };
    }, [apiKey, token, appId, analyticsClient]);
    if (!(translator !== null && translator !== void 0 && translator.t)) return null;
    return /*#__PURE__*/React__default['default'].createElement(StreamAppProvider, {
      value: {
        client: client,
        analyticsClient: analyticsClient,
        errorHandler: errorHandler,
        userData: userData,
        user: user,
        sharedFeedManagers: sharedFeedManagers
      }
    }, /*#__PURE__*/React__default['default'].createElement(TranslationProvider, {
      value: translator
    }, /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, children || 'You are connected to Stream, Throw some components in here!')));
  }

  function ownKeys$9(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$9(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$9(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var FeedContext = /*#__PURE__*/React__default['default'].createContext({});
  var FeedProvider = function FeedProvider(_ref) {
    var children = _ref.children,
        value = _ref.value;
    return /*#__PURE__*/React__default['default'].createElement(FeedContext.Provider, {
      value: value
    }, children);
  };
  var useFeedContext = function useFeedContext() {
    return React.useContext(FeedContext);
  };
  function Feed(props) {
    var _useStreamContext = useStreamContext(),
        analyticsClient = _useStreamContext.analyticsClient,
        client = _useStreamContext.client,
        user = _useStreamContext.user,
        errorHandler = _useStreamContext.errorHandler,
        sharedFeedManagers = _useStreamContext.sharedFeedManagers;

    var feedGroup = props.feedGroup,
        userId = props.userId,
        children = props.children,
        options = props.options,
        notify = props.notify;

    var _useState = React.useState(0),
        _useState2 = _slicedToArray$3(_useState, 2),
        setForceUpdateState = _useState2[1];

    var optionsReference = React.useRef();
    if (!isEqual_1(optionsReference.current, options)) optionsReference.current = options;
    var feedId = client === null || client === void 0 ? void 0 : client.feed(feedGroup, userId).id;
    var manager = React.useMemo(function () {
      if (!feedId) return null; // TODO: check if any of the clients changed

      return sharedFeedManagers[feedId] || new FeedManager(_objectSpread$b(_objectSpread$b({}, props), {}, {
        analyticsClient: analyticsClient,
        client: client,
        user: user,
        errorHandler: errorHandler
      }));
    }, [feedId]);
    React.useEffect(function () {
      var forceUpdate = function forceUpdate() {
        return setForceUpdateState(function (prevState) {
          return prevState + 1;
        });
      };

      if (manager) manager.props.notify = notify;
      manager === null || manager === void 0 ? void 0 : manager.register(forceUpdate);
      return function () {
        return manager === null || manager === void 0 ? void 0 : manager.unregister(forceUpdate);
      };
    }, [manager, notify]);
    React.useEffect(function () {
      if (!manager) return;

      if (optionsReference.current) {
        manager.props.options = optionsReference.current;
      }

      manager.refresh();
    }, [manager, optionsReference.current]);
    if (!manager) return null;
    var ctx = {
      feedGroup: feedGroup,
      userId: userId,
      feedManager: manager,
      getActivityPath: manager.getActivityPath,
      onToggleReaction: manager.onToggleReaction,
      onAddReaction: manager.onAddReaction,
      onRemoveReaction: manager.onRemoveReaction,
      onToggleChildReaction: manager.onToggleChildReaction,
      onAddChildReaction: manager.onAddChildReaction,
      onRemoveChildReaction: manager.onRemoveChildReaction,
      onRemoveActivity: manager.onRemoveActivity,
      onMarkAsRead: manager.onMarkAsRead,
      onMarkAsSeen: manager.onMarkAsSeen,
      refresh: manager.refresh,
      refreshUnreadUnseen: manager.refreshUnreadUnseen,
      loadNextReactions: manager.loadNextReactions,
      loadNextPage: manager.loadNextPage,
      hasNextPage: manager.hasNextPage(),
      loadReverseNextPage: manager.loadReverseNextPage,
      hasReverseNextPage: manager.hasReverseNextPage(),
      activityOrder: manager.state.activityOrder,
      activities: manager.state.activities,
      realtimeAdds: manager.state.realtimeAdds,
      realtimeDeletes: manager.state.realtimeDeletes,
      refreshing: manager.state.refreshing,
      unread: manager.state.unread,
      unseen: manager.state.unseen,
      hasDoneRequest: manager.state.lastResponse != null
    };
    return /*#__PURE__*/React__default['default'].createElement(FeedProvider, {
      value: ctx
    }, children);
  }

  /**
   * An icon of a paperclip, which is used as the default icon for FileUploadButton
   */
  var AttachmentIcon = function () { return (React__default['default'].createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "24", height: "20", viewBox: "0 0 24 24" },
      React__default['default'].createElement("path", { d: "M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 0 1 5 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 0 0 5 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z" }),
      React__default['default'].createElement("path", { d: "M0 0h24v24H0z", fill: "none" }))); };

  var wordMimeTypes = [
      // Microsoft Word
      // .doc .dot
      'application/msword',
      // .doc .dot
      'application/msword-template',
      // .docx
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
      // .dotx (no test)
      'application/vnd.openxmlformats-officedocument.wordprocessingml.template',
      // .docm
      'application/vnd.ms-word.document.macroEnabled.12',
      // .dotm (no test)
      'application/vnd.ms-word.template.macroEnabled.12',
      // LibreOffice/OpenOffice Writer
      // .odt
      'application/vnd.oasis.opendocument.text',
      // .ott
      'application/vnd.oasis.opendocument.text-template',
      // .fodt
      'application/vnd.oasis.opendocument.text-flat-xml',
      // .uot
      // NOTE: firefox doesn't know mimetype so maybe ignore
  ];
  var excelMimeTypes = [
      // .csv
      'text/csv',
      // TODO: maybe more data files
      // Microsoft Excel
      // .xls .xlt .xla (no test for .xla)
      'application/vnd.ms-excel',
      // .xlsx
      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
      // .xltx (no test)
      'application/vnd.openxmlformats-officedocument.spreadsheetml.template',
      // .xlsm
      'application/vnd.ms-excel.sheet.macroEnabled.12',
      // .xltm (no test)
      'application/vnd.ms-excel.template.macroEnabled.12',
      // .xlam (no test)
      'application/vnd.ms-excel.addin.macroEnabled.12',
      // .xlsb (no test)
      'application/vnd.ms-excel.addin.macroEnabled.12',
      // LibreOffice/OpenOffice Calc
      // .ods
      'application/vnd.oasis.opendocument.spreadsheet',
      // .ots
      'application/vnd.oasis.opendocument.spreadsheet-template',
      // .fods
      'application/vnd.oasis.opendocument.spreadsheet-flat-xml',
      // .uos
      // NOTE: firefox doesn't know mimetype so maybe ignore
  ];
  var powerpointMimeTypes = [
      // Microsoft Word
      // .ppt .pot .pps .ppa (no test for .ppa)
      'application/vnd.ms-powerpoint',
      // .pptx
      'application/vnd.openxmlformats-officedocument.presentationml.presentation',
      // .potx (no test)
      'application/vnd.openxmlformats-officedocument.presentationml.template',
      // .ppsx
      'application/vnd.openxmlformats-officedocument.presentationml.slideshow',
      // .ppam
      'application/vnd.ms-powerpoint.addin.macroEnabled.12',
      // .pptm
      'application/vnd.ms-powerpoint.presentation.macroEnabled.12',
      // .potm
      'application/vnd.ms-powerpoint.template.macroEnabled.12',
      // .ppsm
      'application/vnd.ms-powerpoint.slideshow.macroEnabled.12',
      // LibreOffice/OpenOffice Writer
      // .odp
      'application/vnd.oasis.opendocument.presentation',
      // .otp
      'application/vnd.oasis.opendocument.presentation-template',
      // .fodp
      'application/vnd.oasis.opendocument.presentation-flat-xml',
      // .uop
      // NOTE: firefox doesn't know mimetype so maybe ignore
  ];
  var archiveFileTypes = [
      // .zip
      'application/zip',
      // .z7
      'application/x-7z-compressed',
      // .ar
      'application/x-archive',
      // .tar
      'application/x-tar',
      // .tar.gz
      'application/gzip',
      // .tar.Z
      'application/x-compress',
      // .tar.bz2
      'application/x-bzip',
      // .tar.lz
      'application/x-lzip',
      // .tar.lz4
      'application/x-lz4',
      // .tar.lzma
      'application/x-lzma',
      // .tar.lzo (no test)
      'application/x-lzop',
      // .tar.xz
      'application/x-xz',
      // .war
      'application/x-webarchive',
      // .rar
      'application/vnd.rar',
  ];
  var codeFileTypes = [
      // .html .htm
      'text/html',
      // .css
      'text/css',
      // .js
      'application/x-javascript',
      // .json
      'application/json',
      // .py
      'text/x-python',
      // .go
      'text/x-go',
      // .c
      'text/x-csrc',
      // .cpp
      'text/x-c++src',
      // .rb
      'application/x-ruby',
      // .rust
      'text/rust',
      // .java
      'text/x-java',
      // .php
      'application/x-php',
      // .cs
      'text/x-csharp',
      // .scala
      'text/x-scala',
      // .erl
      'text/x-erlang',
      // .sh
      'application/x-shellscript',
  ];

  /**
   * Font Awesome Free 5.15.3 by @fontawesome - https://fontawesome.com
   * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
   */
  var FilePdfIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-pdf", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm250.2-143.7c-12.2-12-47-8.7-64.4-6.5-17.2-10.5-28.7-25-36.8-46.3 3.9-16.1 10.1-40.6 5.4-56-4.2-26.2-37.8-23.6-42.6-5.9-4.4 16.1-.4 38.5 7 67.1-10 23.9-24.9 56-35.4 74.4-20 10.3-47 26.2-51 46.2-3.3 15.8 26 55.2 76.1-31.2 22.4-7.4 46.8-16.5 68.4-20.1 18.9 10.2 41 17 55.8 17 25.5 0 28-28.2 17.5-38.7zm-198.1 77.8c5.1-13.7 24.5-29.5 30.4-35-19 30.3-30.4 35.7-30.4 35zm81.6-190.6c7.4 0 6.7 32.1 1.8 40.8-4.4-13.9-4.3-40.8-1.8-40.8zm-24.4 136.6c9.7-16.9 18-37 24.7-54.7 8.3 15.1 18.9 27.2 30.1 35.5-20.8 4.3-38.9 13.1-54.8 19.2zm131.6-5s-5 6-37.3-7.8c35.1-2.6 40.9 5.4 37.3 7.8z", fill: "#f82903" })));
  };
  var FileWordIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-word", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm220.1-208c-5.7 0-10.6 4-11.7 9.5-20.6 97.7-20.4 95.4-21 103.5-.2-1.2-.4-2.6-.7-4.3-.8-5.1.3.2-23.6-99.5-1.3-5.4-6.1-9.2-11.7-9.2h-13.3c-5.5 0-10.3 3.8-11.7 9.1-24.4 99-24 96.2-24.8 103.7-.1-1.1-.2-2.5-.5-4.2-.7-5.2-14.1-73.3-19.1-99-1.1-5.6-6-9.7-11.8-9.7h-16.8c-7.8 0-13.5 7.3-11.7 14.8 8 32.6 26.7 109.5 33.2 136 1.3 5.4 6.1 9.1 11.7 9.1h25.2c5.5 0 10.3-3.7 11.6-9.1l17.9-71.4c1.5-6.2 2.5-12 3-17.3l2.9 17.3c.1.4 12.6 50.5 17.9 71.4 1.3 5.3 6.1 9.1 11.6 9.1h24.7c5.5 0 10.3-3.7 11.6-9.1 20.8-81.9 30.2-119 34.5-136 1.9-7.6-3.8-14.9-11.6-14.9h-15.8z", fill: "#2c599d" })));
  };
  var FilePowerPointIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-powerpoint", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm72-60V236c0-6.6 5.4-12 12-12h69.2c36.7 0 62.8 27 62.8 66.3 0 74.3-68.7 66.5-95.5 66.5V404c0 6.6-5.4 12-12 12H132c-6.6 0-12-5.4-12-12zm48.5-87.4h23c7.9 0 13.9-2.4 18.1-7.2 8.5-9.8 8.4-28.5.1-37.8-4.1-4.6-9.9-7-17.4-7h-23.9v52z", fill: "#cb4a32" })));
  };
  var FileExcelIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-excel", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm212-240h-28.8c-4.4 0-8.4 2.4-10.5 6.3-18 33.1-22.2 42.4-28.6 57.7-13.9-29.1-6.9-17.3-28.6-57.7-2.1-3.9-6.2-6.3-10.6-6.3H124c-9.3 0-15 10-10.4 18l46.3 78-46.3 78c-4.7 8 1.1 18 10.4 18h28.9c4.4 0 8.4-2.4 10.5-6.3 21.7-40 23-45 28.6-57.7 14.9 30.2 5.9 15.9 28.6 57.7 2.1 3.9 6.2 6.3 10.6 6.3H260c9.3 0 15-10 10.4-18L224 320c.7-1.1 30.3-50.5 46.3-78 4.7-8-1.1-18-10.3-18z", fill: "#207245" })));
  };
  var FileArchiveIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-archive", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M128.3 160v32h32v-32zm64-96h-32v32h32zm-64 32v32h32V96zm64 32h-32v32h32zm177.6-30.1L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h79.7v16h32V48H208v104c0 13.3 10.7 24 24 24h104zM194.2 265.7c-1.1-5.6-6-9.7-11.8-9.7h-22.1v-32h-32v32l-19.7 97.1C102 385.6 126.8 416 160 416c33.1 0 57.9-30.2 51.5-62.6zm-33.9 124.4c-17.9 0-32.4-12.1-32.4-27s14.5-27 32.4-27 32.4 12.1 32.4 27-14.5 27-32.4 27zm32-198.1h-32v32h32z", fill: "#414D54" })));
  };
  var FileCodeIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-code", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M149.9 349.1l-.2-.2-32.8-28.9 32.8-28.9c3.6-3.2 4-8.8.8-12.4l-.2-.2-17.4-18.6c-3.4-3.6-9-3.7-12.4-.4l-57.7 54.1c-3.7 3.5-3.7 9.4 0 12.8l57.7 54.1c1.6 1.5 3.8 2.4 6 2.4 2.4 0 4.8-1 6.4-2.8l17.4-18.6c3.3-3.5 3.1-9.1-.4-12.4zm220-251.2L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM256 51.9l76.1 76.1H256zM336 464H48V48h160v104c0 13.3 10.7 24 24 24h104zM209.6 214c-4.7-1.4-9.5 1.3-10.9 6L144 408.1c-1.4 4.7 1.3 9.6 6 10.9l24.4 7.1c4.7 1.4 9.6-1.4 10.9-6L240 231.9c1.4-4.7-1.3-9.6-6-10.9zm24.5 76.9l.2.2 32.8 28.9-32.8 28.9c-3.6 3.2-4 8.8-.8 12.4l.2.2 17.4 18.6c3.3 3.5 8.9 3.7 12.4.4l57.7-54.1c3.7-3.5 3.7-9.4 0-12.8l-57.7-54.1c-3.5-3.3-9.1-3.2-12.4.4l-17.4 18.6c-3.3 3.5-3.1 9.1.4 12.4z", fill: "#414D54" })));
  };
  var FileAudioIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-audio", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm144-76.024c0 10.691-12.926 16.045-20.485 8.485L136 360.486h-28c-6.627 0-12-5.373-12-12v-56c0-6.627 5.373-12 12-12h28l35.515-36.947c7.56-7.56 20.485-2.206 20.485 8.485v135.952zm41.201-47.13c9.051-9.297 9.06-24.133.001-33.439-22.149-22.752 12.235-56.246 34.395-33.481 27.198 27.94 27.212 72.444.001 100.401-21.793 22.386-56.947-10.315-34.397-33.481z", fill: "#414D54" })));
  };
  var FileVideoIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-video", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm228.687-211.303L224 305.374V268c0-11.046-8.954-20-20-20H100c-11.046 0-20 8.954-20 20v104c0 11.046 8.954 20 20 20h104c11.046 0 20-8.954 20-20v-37.374l52.687 52.674C286.704 397.318 304 390.28 304 375.986V264.011c0-14.311-17.309-21.319-27.313-11.314z", fill: "#414D54" })));
  };
  var FileImageIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-image", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z", fill: "#414D54" })));
  };
  var FileAltIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-alt", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z", fill: "#414D54" })));
  };
  var FileFallbackIcon = function (_a) {
      var _b = _a.size, size = _b === void 0 ? 20 : _b;
      return (React__default['default'].createElement("svg", { className: "rfu-file-icon--small fa-file-fallback", height: size, width: size, xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512" },
          React__default['default'].createElement("path", { d: "M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48z", fill: "#414D54" })));
  };

  // Partially based on: https://stackoverflow.com/a/4212908/2570866
  var mimeTypeToIconMap = {
      'application/pdf': FilePdfIcon,
  };
  for (var _i = 0, wordMimeTypes_1 = wordMimeTypes; _i < wordMimeTypes_1.length; _i++) {
      var type = wordMimeTypes_1[_i];
      mimeTypeToIconMap[type] = FileWordIcon;
  }
  for (var _a = 0, excelMimeTypes_1 = excelMimeTypes; _a < excelMimeTypes_1.length; _a++) {
      var type = excelMimeTypes_1[_a];
      mimeTypeToIconMap[type] = FileExcelIcon;
  }
  for (var _b = 0, powerpointMimeTypes_1 = powerpointMimeTypes; _b < powerpointMimeTypes_1.length; _b++) {
      var type = powerpointMimeTypes_1[_b];
      mimeTypeToIconMap[type] = FilePowerPointIcon;
  }
  for (var _c = 0, archiveFileTypes_1 = archiveFileTypes; _c < archiveFileTypes_1.length; _c++) {
      var type = archiveFileTypes_1[_c];
      mimeTypeToIconMap[type] = FileArchiveIcon;
  }
  for (var _d = 0, codeFileTypes_1 = codeFileTypes; _d < codeFileTypes_1.length; _d++) {
      var type = codeFileTypes_1[_d];
      mimeTypeToIconMap[type] = FileCodeIcon;
  }
  function mimeTypeToIcon(mimeType) {
      if (mimeType == null)
          return FileFallbackIcon;
      var icon = mimeTypeToIconMap[mimeType];
      if (icon)
          return icon;
      if (mimeType.startsWith('audio/'))
          return FileAudioIcon;
      if (mimeType.startsWith('video/'))
          return FileVideoIcon;
      if (mimeType.startsWith('image/'))
          return FileImageIcon;
      if (mimeType.startsWith('text/'))
          return FileAltIcon;
      return FileFallbackIcon;
  }
  var FileIcon = function (props) {
      var _a = props.big, big = _a === void 0 ? false : _a, mimeType = props.mimeType, _b = props.size, size = _b === void 0 ? 50 : _b, _c = props.sizeSmall, sizeSmall = _c === void 0 ? 20 : _c;
      var Icon = mimeTypeToIcon(mimeType);
      return React__default['default'].createElement(Icon, { size: big ? size : sizeSmall });
  };

  var LoadingIndicator = function (props) {
      var _a = props.size, size = _a === void 0 ? 20 : _a, _b = props.width, width = _b === void 0 ? 2 : _b, backgroundColor = props.backgroundColor, color = props.color;
      return (React__default['default'].createElement("div", { className: "rfu-loading-indicator__spinner", style: {
              margin: '0 auto',
              borderColor: backgroundColor ? backgroundColor : '',
              borderTopColor: color ? color : '',
              width: size ? size : '',
              height: size ? size : '',
              borderWidth: width ? width : '',
          } }));
  };

  /**
   * Component that displays files which are being uploaded
   */
  var FilePreviewer = function (_a) {
      var uploads = _a.uploads, handleRemove = _a.handleRemove, handleRetry = _a.handleRetry;
      return (React__default['default'].createElement("div", { className: "rfu-file-previewer" },
          React__default['default'].createElement("ol", null, uploads &&
              uploads.map(function (upload) { return (React__default['default'].createElement("li", { key: upload.id, className: "rfu-file-previewer__file " + (upload.state === 'uploading'
                      ? 'rfu-file-previewer__file--uploading'
                      : '') + " " + (upload.state === 'failed'
                      ? 'rfu-file-previewer__file--failed'
                      : '') },
                  React__default['default'].createElement(FileIcon, { mimeType: upload.file.type, filename: upload.file.name }),
                  React__default['default'].createElement("a", { href: upload.url, download: true },
                      upload.file.name,
                      upload.state === 'failed' && (React__default['default'].createElement(React__default['default'].Fragment, null,
                          React__default['default'].createElement("div", { className: "rfu-file-previewer__failed", onClick: handleRetry && (function () { return handleRetry(upload.id); }) }, "failed"),
                          React__default['default'].createElement("div", { className: "rfu-file-previewer__retry", onClick: handleRetry && (function () { return handleRetry(upload.id); }) }, "retry")))),
                  React__default['default'].createElement("span", { className: "rfu-file-previewer__close-button", onClick: handleRemove && (function () { return handleRemove(upload.id); }) }, "\u2718"),
                  upload.state === 'uploading' && (React__default['default'].createElement("div", { className: "rfu-file-previewer__loading-indicator" },
                      React__default['default'].createElement(LoadingIndicator, null))))); }))));
  };

  (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
      function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
      return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
          function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
          function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
  };
  (undefined && undefined.__generator) || function (thisArg, body) {
      var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
      function verb(n) { return function (v) { return step([n, v]); }; }
      function step(op) {
          if (f) throw new TypeError("Generator is already executing.");
          while (_) try {
              if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
              if (y = 0, t) op = [op[0] & 2, t.value];
              switch (op[0]) {
                  case 0: case 1: t = op; break;
                  case 4: _.label++; return { value: op[1], done: false };
                  case 5: _.label++; y = op[1]; op = [0]; continue;
                  case 7: op = _.ops.pop(); _.trys.pop(); continue;
                  default:
                      if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                      if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                      if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                      if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                      if (t[2]) _.ops.pop();
                      _.trys.pop(); continue;
              }
              op = body.call(thisArg, _);
          } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
          if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
      }
  };
  var useHandleFileChangeWrapper = function (resetOnChange, handler) {
      if (resetOnChange === void 0) { resetOnChange = false; }
      return function (_a) {
          var currentTarget = _a.currentTarget;
          var files = currentTarget.files;
          if (!files)
              return;
          try {
              handler === null || handler === void 0 ? void 0 : handler(Array.from(files));
          }
          catch (error) {
              console.error(error);
          }
          if (resetOnChange)
              currentTarget.value = '';
      };
  };

  var FileUploadButton = function (_a) {
      var _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.multiple, multiple = _c === void 0 ? false : _c, _d = _a.children, children = _d === void 0 ? React__default['default'].createElement(AttachmentIcon, null) : _d, handleFiles = _a.handleFiles, accepts = _a.accepts, _e = _a.resetOnChange, resetOnChange = _e === void 0 ? true : _e;
      var className = 'rfu-file-upload-button';
      if (disabled) {
          className = className + " rfu-file-upload-button--disabled";
      }
      var onFileChange = useHandleFileChangeWrapper(resetOnChange, handleFiles);
      return (React__default['default'].createElement("div", { className: className },
          React__default['default'].createElement("label", null,
              React__default['default'].createElement("input", { type: "file", className: "rfu-file-input", onChange: onFileChange, multiple: multiple, disabled: disabled, accept: Array.isArray(accepts) ? accepts.join(',') : accepts }),
              children)));
  };

  /**
   * This is simply a button wrapper, add's a div with `role="button"` and a onClick
   */
  var IconButton = function (_a) {
      var onClick = _a.onClick, children = _a.children;
      return (React__default['default'].createElement("div", { className: "rfu-icon-button", role: "button", onClick: onClick }, children));
  };

  /** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
  Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
  function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}var AsyncMode=l;var ConcurrentMode=m;var ContextConsumer=k;var ContextProvider=h;var Element=c;var ForwardRef=n;var Fragment=e;var Lazy=t;var Memo=r;var Portal=d;
  var Profiler=g;var StrictMode=f;var Suspense=p;var isAsyncMode=function(a){return A(a)||z(a)===l};var isConcurrentMode=A;var isContextConsumer=function(a){return z(a)===k};var isContextProvider=function(a){return z(a)===h};var isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};var isForwardRef=function(a){return z(a)===n};var isFragment=function(a){return z(a)===e};var isLazy=function(a){return z(a)===t};
  var isMemo=function(a){return z(a)===r};var isPortal=function(a){return z(a)===d};var isProfiler=function(a){return z(a)===g};var isStrictMode=function(a){return z(a)===f};var isSuspense=function(a){return z(a)===p};
  var isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};var typeOf=z;

  var reactIs_production_min = {
  	AsyncMode: AsyncMode,
  	ConcurrentMode: ConcurrentMode,
  	ContextConsumer: ContextConsumer,
  	ContextProvider: ContextProvider,
  	Element: Element,
  	ForwardRef: ForwardRef,
  	Fragment: Fragment,
  	Lazy: Lazy,
  	Memo: Memo,
  	Portal: Portal,
  	Profiler: Profiler,
  	StrictMode: StrictMode,
  	Suspense: Suspense,
  	isAsyncMode: isAsyncMode,
  	isConcurrentMode: isConcurrentMode,
  	isContextConsumer: isContextConsumer,
  	isContextProvider: isContextProvider,
  	isElement: isElement,
  	isForwardRef: isForwardRef,
  	isFragment: isFragment,
  	isLazy: isLazy,
  	isMemo: isMemo,
  	isPortal: isPortal,
  	isProfiler: isProfiler,
  	isStrictMode: isStrictMode,
  	isSuspense: isSuspense,
  	isValidElementType: isValidElementType,
  	typeOf: typeOf
  };

  var reactIs_development = createCommonjsModule(function (module, exports) {



  if (process.env.NODE_ENV !== "production") {
    (function() {

  // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.
  var hasSymbol = typeof Symbol === 'function' && Symbol.for;
  var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
  var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
  var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
  var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
  var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
  var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
  var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
  // (unstable) APIs that have been removed. Can we remove the symbols?

  var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
  var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
  var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
  var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
  var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
  var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
  var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
  var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
  var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
  var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
  var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

  function isValidElementType(type) {
    return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
    type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
  }

  function typeOf(object) {
    if (typeof object === 'object' && object !== null) {
      var $$typeof = object.$$typeof;

      switch ($$typeof) {
        case REACT_ELEMENT_TYPE:
          var type = object.type;

          switch (type) {
            case REACT_ASYNC_MODE_TYPE:
            case REACT_CONCURRENT_MODE_TYPE:
            case REACT_FRAGMENT_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_SUSPENSE_TYPE:
              return type;

            default:
              var $$typeofType = type && type.$$typeof;

              switch ($$typeofType) {
                case REACT_CONTEXT_TYPE:
                case REACT_FORWARD_REF_TYPE:
                case REACT_LAZY_TYPE:
                case REACT_MEMO_TYPE:
                case REACT_PROVIDER_TYPE:
                  return $$typeofType;

                default:
                  return $$typeof;
              }

          }

        case REACT_PORTAL_TYPE:
          return $$typeof;
      }
    }

    return undefined;
  } // AsyncMode is deprecated along with isAsyncMode

  var AsyncMode = REACT_ASYNC_MODE_TYPE;
  var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
  var ContextConsumer = REACT_CONTEXT_TYPE;
  var ContextProvider = REACT_PROVIDER_TYPE;
  var Element = REACT_ELEMENT_TYPE;
  var ForwardRef = REACT_FORWARD_REF_TYPE;
  var Fragment = REACT_FRAGMENT_TYPE;
  var Lazy = REACT_LAZY_TYPE;
  var Memo = REACT_MEMO_TYPE;
  var Portal = REACT_PORTAL_TYPE;
  var Profiler = REACT_PROFILER_TYPE;
  var StrictMode = REACT_STRICT_MODE_TYPE;
  var Suspense = REACT_SUSPENSE_TYPE;
  var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

  function isAsyncMode(object) {
    {
      if (!hasWarnedAboutDeprecatedIsAsyncMode) {
        hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

        console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
      }
    }

    return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
  }
  function isConcurrentMode(object) {
    return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
  }
  function isContextConsumer(object) {
    return typeOf(object) === REACT_CONTEXT_TYPE;
  }
  function isContextProvider(object) {
    return typeOf(object) === REACT_PROVIDER_TYPE;
  }
  function isElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
  function isForwardRef(object) {
    return typeOf(object) === REACT_FORWARD_REF_TYPE;
  }
  function isFragment(object) {
    return typeOf(object) === REACT_FRAGMENT_TYPE;
  }
  function isLazy(object) {
    return typeOf(object) === REACT_LAZY_TYPE;
  }
  function isMemo(object) {
    return typeOf(object) === REACT_MEMO_TYPE;
  }
  function isPortal(object) {
    return typeOf(object) === REACT_PORTAL_TYPE;
  }
  function isProfiler(object) {
    return typeOf(object) === REACT_PROFILER_TYPE;
  }
  function isStrictMode(object) {
    return typeOf(object) === REACT_STRICT_MODE_TYPE;
  }
  function isSuspense(object) {
    return typeOf(object) === REACT_SUSPENSE_TYPE;
  }

  exports.AsyncMode = AsyncMode;
  exports.ConcurrentMode = ConcurrentMode;
  exports.ContextConsumer = ContextConsumer;
  exports.ContextProvider = ContextProvider;
  exports.Element = Element;
  exports.ForwardRef = ForwardRef;
  exports.Fragment = Fragment;
  exports.Lazy = Lazy;
  exports.Memo = Memo;
  exports.Portal = Portal;
  exports.Profiler = Profiler;
  exports.StrictMode = StrictMode;
  exports.Suspense = Suspense;
  exports.isAsyncMode = isAsyncMode;
  exports.isConcurrentMode = isConcurrentMode;
  exports.isContextConsumer = isContextConsumer;
  exports.isContextProvider = isContextProvider;
  exports.isElement = isElement;
  exports.isForwardRef = isForwardRef;
  exports.isFragment = isFragment;
  exports.isLazy = isLazy;
  exports.isMemo = isMemo;
  exports.isPortal = isPortal;
  exports.isProfiler = isProfiler;
  exports.isStrictMode = isStrictMode;
  exports.isSuspense = isSuspense;
  exports.isValidElementType = isValidElementType;
  exports.typeOf = typeOf;
    })();
  }
  });

  var reactIs = createCommonjsModule(function (module) {

  if (process.env.NODE_ENV === 'production') {
    module.exports = reactIs_production_min;
  } else {
    module.exports = reactIs_development;
  }
  });

  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
  /* eslint-disable no-unused-vars */
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
  	if (val === null || val === undefined) {
  		throw new TypeError('Object.assign cannot be called with null or undefined');
  	}

  	return Object(val);
  }

  function shouldUseNative() {
  	try {
  		if (!Object.assign) {
  			return false;
  		}

  		// Detect buggy property enumeration order in older V8 versions.

  		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
  		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
  		test1[5] = 'de';
  		if (Object.getOwnPropertyNames(test1)[0] === '5') {
  			return false;
  		}

  		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
  		var test2 = {};
  		for (var i = 0; i < 10; i++) {
  			test2['_' + String.fromCharCode(i)] = i;
  		}
  		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
  			return test2[n];
  		});
  		if (order2.join('') !== '0123456789') {
  			return false;
  		}

  		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
  		var test3 = {};
  		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
  			test3[letter] = letter;
  		});
  		if (Object.keys(Object.assign({}, test3)).join('') !==
  				'abcdefghijklmnopqrst') {
  			return false;
  		}

  		return true;
  	} catch (err) {
  		// We don't expect any of the above to throw, but better to be safe.
  		return false;
  	}
  }

  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
  	var from;
  	var to = toObject(target);
  	var symbols;

  	for (var s = 1; s < arguments.length; s++) {
  		from = Object(arguments[s]);

  		for (var key in from) {
  			if (hasOwnProperty.call(from, key)) {
  				to[key] = from[key];
  			}
  		}

  		if (getOwnPropertySymbols) {
  			symbols = getOwnPropertySymbols(from);
  			for (var i = 0; i < symbols.length; i++) {
  				if (propIsEnumerable.call(from, symbols[i])) {
  					to[symbols[i]] = from[symbols[i]];
  				}
  			}
  		}
  	}

  	return to;
  };

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;

  var printWarning$2 = function() {};

  if (process.env.NODE_ENV !== 'production') {
    var ReactPropTypesSecret = ReactPropTypesSecret_1;
    var loggedTypeFailures = {};
    var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);

    printWarning$2 = function(text) {
      var message = 'Warning: ' + text;
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };
  }

  /**
   * Assert that the values match with the type specs.
   * Error messages are memorized and will only be shown once.
   *
   * @param {object} typeSpecs Map of name to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @param {string} componentName Name of the component for error messages.
   * @param {?Function} getStack Returns the component stack.
   * @private
   */
  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    if (process.env.NODE_ENV !== 'production') {
      for (var typeSpecName in typeSpecs) {
        if (has$1(typeSpecs, typeSpecName)) {
          var error;
          // Prop type validation may throw. In case they do, we don't want to
          // fail the render phase where it didn't fail before. So we log it.
          // After these have been cleaned up, we'll let them throw.
          try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
              var err = Error(
                (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
                'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
              );
              err.name = 'Invariant Violation';
              throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          if (error && !(error instanceof Error)) {
            printWarning$2(
              (componentName || 'React class') + ': type specification of ' +
              location + ' `' + typeSpecName + '` is invalid; the type checker ' +
              'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
              'You may have forgotten to pass an argument to the type checker ' +
              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
              'shape all require an argument).'
            );
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;

            var stack = getStack ? getStack() : '';

            printWarning$2(
              'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
            );
          }
        }
      }
    }
  }

  /**
   * Resets warning cache when testing.
   *
   * @private
   */
  checkPropTypes.resetWarningCache = function() {
    if (process.env.NODE_ENV !== 'production') {
      loggedTypeFailures = {};
    }
  };

  var checkPropTypes_1 = checkPropTypes;

  var has = Function.call.bind(Object.prototype.hasOwnProperty);
  var printWarning$1 = function() {};

  if (process.env.NODE_ENV !== 'production') {
    printWarning$1 = function(text) {
      var message = 'Warning: ' + text;
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };
  }

  function emptyFunctionThatReturnsNull() {
    return null;
  }

  var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */
    var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

    /**
     * Returns the iterator method function contained on the iterable object.
     *
     * Be sure to invoke the function with the iterable as context:
     *
     *     var iteratorFn = getIteratorFn(myIterable);
     *     if (iteratorFn) {
     *       var iterator = iteratorFn.call(myIterable);
     *       ...
     *     }
     *
     * @param {?object} maybeIterable
     * @return {?function}
     */
    function getIteratorFn(maybeIterable) {
      var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
      if (typeof iteratorFn === 'function') {
        return iteratorFn;
      }
    }

    /**
     * Collection of methods that allow declaration and validation of props that are
     * supplied to React components. Example usage:
     *
     *   var Props = require('ReactPropTypes');
     *   var MyArticle = React.createClass({
     *     propTypes: {
     *       // An optional string prop named "description".
     *       description: Props.string,
     *
     *       // A required enum prop named "category".
     *       category: Props.oneOf(['News','Photos']).isRequired,
     *
     *       // A prop named "dialog" that requires an instance of Dialog.
     *       dialog: Props.instanceOf(Dialog).isRequired
     *     },
     *     render: function() { ... }
     *   });
     *
     * A more formal specification of how these methods are used:
     *
     *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
     *   decl := ReactPropTypes.{type}(.isRequired)?
     *
     * Each and every declaration produces a function with the same signature. This
     * allows the creation of custom validation functions. For example:
     *
     *  var MyLink = React.createClass({
     *    propTypes: {
     *      // An optional string or URI prop named "href".
     *      href: function(props, propName, componentName) {
     *        var propValue = props[propName];
     *        if (propValue != null && typeof propValue !== 'string' &&
     *            !(propValue instanceof URI)) {
     *          return new Error(
     *            'Expected a string or an URI for ' + propName + ' in ' +
     *            componentName
     *          );
     *        }
     *      }
     *    },
     *    render: function() {...}
     *  });
     *
     * @internal
     */

    var ANONYMOUS = '<<anonymous>>';

    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
      array: createPrimitiveTypeChecker('array'),
      bool: createPrimitiveTypeChecker('boolean'),
      func: createPrimitiveTypeChecker('function'),
      number: createPrimitiveTypeChecker('number'),
      object: createPrimitiveTypeChecker('object'),
      string: createPrimitiveTypeChecker('string'),
      symbol: createPrimitiveTypeChecker('symbol'),

      any: createAnyTypeChecker(),
      arrayOf: createArrayOfTypeChecker,
      element: createElementTypeChecker(),
      elementType: createElementTypeTypeChecker(),
      instanceOf: createInstanceTypeChecker,
      node: createNodeChecker(),
      objectOf: createObjectOfTypeChecker,
      oneOf: createEnumTypeChecker,
      oneOfType: createUnionTypeChecker,
      shape: createShapeTypeChecker,
      exact: createStrictShapeTypeChecker,
    };

    /**
     * inlined Object.is polyfill to avoid requiring consumers ship their own
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
     */
    /*eslint-disable no-self-compare*/
    function is(x, y) {
      // SameValue algorithm
      if (x === y) {
        // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
      } else {
        // Step 6.a: NaN == NaN
        return x !== x && y !== y;
      }
    }
    /*eslint-enable no-self-compare*/

    /**
     * We use an Error-like object for backward compatibility as people may call
     * PropTypes directly and inspect their output. However, we don't use real
     * Errors anymore. We don't inspect their stack anyway, and creating them
     * is prohibitively expensive if they are created too often, such as what
     * happens in oneOfType() for any type before the one that matched.
     */
    function PropTypeError(message) {
      this.message = message;
      this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;

    function createChainableTypeChecker(validate) {
      if (process.env.NODE_ENV !== 'production') {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
      }
      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
        componentName = componentName || ANONYMOUS;
        propFullName = propFullName || propName;

        if (secret !== ReactPropTypesSecret_1) {
          if (throwOnDirectAccess) {
            // New behavior only for users of `prop-types` package
            var err = new Error(
              'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
              'Use `PropTypes.checkPropTypes()` to call them. ' +
              'Read more at http://fb.me/use-check-prop-types'
            );
            err.name = 'Invariant Violation';
            throw err;
          } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
            // Old behavior for people using React.PropTypes
            var cacheKey = componentName + ':' + propName;
            if (
              !manualPropTypeCallCache[cacheKey] &&
              // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3
            ) {
              printWarning$1(
                'You are manually calling a React.PropTypes validation ' +
                'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
                'and will throw in the standalone `prop-types` package. ' +
                'You may be seeing this warning due to a third-party PropTypes ' +
                'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
              );
              manualPropTypeCallCache[cacheKey] = true;
              manualPropTypeWarningCount++;
            }
          }
        }
        if (props[propName] == null) {
          if (isRequired) {
            if (props[propName] === null) {
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
            }
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
          }
          return null;
        } else {
          return validate(props, propName, componentName, location, propFullName);
        }
      }

      var chainedCheckType = checkType.bind(null, false);
      chainedCheckType.isRequired = checkType.bind(null, true);

      return chainedCheckType;
    }

    function createPrimitiveTypeChecker(expectedType) {
      function validate(props, propName, componentName, location, propFullName, secret) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== expectedType) {
          // `propValue` being instance of, say, date/regexp, pass the 'object'
          // check, but we can offer a more precise error message here rather than
          // 'of type `object`'.
          var preciseType = getPreciseType(propValue);

          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createAnyTypeChecker() {
      return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }

    function createArrayOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== 'function') {
          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
        }
        var propValue = props[propName];
        if (!Array.isArray(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
        }
        for (var i = 0; i < propValue.length; i++) {
          var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);
          if (error instanceof Error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createElementTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        if (!isValidElement(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createElementTypeTypeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        if (!reactIs.isValidElementType(propValue)) {
          var propType = getPropType(propValue);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createInstanceTypeChecker(expectedClass) {
      function validate(props, propName, componentName, location, propFullName) {
        if (!(props[propName] instanceof expectedClass)) {
          var expectedClassName = expectedClass.name || ANONYMOUS;
          var actualClassName = getClassName(props[propName]);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createEnumTypeChecker(expectedValues) {
      if (!Array.isArray(expectedValues)) {
        if (process.env.NODE_ENV !== 'production') {
          if (arguments.length > 1) {
            printWarning$1(
              'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
              'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
            );
          } else {
            printWarning$1('Invalid argument supplied to oneOf, expected an array.');
          }
        }
        return emptyFunctionThatReturnsNull;
      }

      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        for (var i = 0; i < expectedValues.length; i++) {
          if (is(propValue, expectedValues[i])) {
            return null;
          }
        }

        var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
          var type = getPreciseType(value);
          if (type === 'symbol') {
            return String(value);
          }
          return value;
        });
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
      }
      return createChainableTypeChecker(validate);
    }

    function createObjectOfTypeChecker(typeChecker) {
      function validate(props, propName, componentName, location, propFullName) {
        if (typeof typeChecker !== 'function') {
          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
        }
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== 'object') {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
        }
        for (var key in propValue) {
          if (has(propValue, key)) {
            var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
            if (error instanceof Error) {
              return error;
            }
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createUnionTypeChecker(arrayOfTypeCheckers) {
      if (!Array.isArray(arrayOfTypeCheckers)) {
        process.env.NODE_ENV !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
        return emptyFunctionThatReturnsNull;
      }

      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (typeof checker !== 'function') {
          printWarning$1(
            'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
            'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
          );
          return emptyFunctionThatReturnsNull;
        }
      }

      function validate(props, propName, componentName, location, propFullName) {
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
            return null;
          }
        }

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
      }
      return createChainableTypeChecker(validate);
    }

    function createNodeChecker() {
      function validate(props, propName, componentName, location, propFullName) {
        if (!isNode(props[propName])) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== 'object') {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
        }
        for (var key in shapeTypes) {
          var checker = shapeTypes[key];
          if (!checker) {
            continue;
          }
          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error) {
            return error;
          }
        }
        return null;
      }
      return createChainableTypeChecker(validate);
    }

    function createStrictShapeTypeChecker(shapeTypes) {
      function validate(props, propName, componentName, location, propFullName) {
        var propValue = props[propName];
        var propType = getPropType(propValue);
        if (propType !== 'object') {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
        }
        // We need to check all keys in case some are required but missing from
        // props.
        var allKeys = objectAssign({}, props[propName], shapeTypes);
        for (var key in allKeys) {
          var checker = shapeTypes[key];
          if (!checker) {
            return new PropTypeError(
              'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
              '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
              '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
            );
          }
          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);
          if (error) {
            return error;
          }
        }
        return null;
      }

      return createChainableTypeChecker(validate);
    }

    function isNode(propValue) {
      switch (typeof propValue) {
        case 'number':
        case 'string':
        case 'undefined':
          return true;
        case 'boolean':
          return !propValue;
        case 'object':
          if (Array.isArray(propValue)) {
            return propValue.every(isNode);
          }
          if (propValue === null || isValidElement(propValue)) {
            return true;
          }

          var iteratorFn = getIteratorFn(propValue);
          if (iteratorFn) {
            var iterator = iteratorFn.call(propValue);
            var step;
            if (iteratorFn !== propValue.entries) {
              while (!(step = iterator.next()).done) {
                if (!isNode(step.value)) {
                  return false;
                }
              }
            } else {
              // Iterator will provide entry [k,v] tuples rather than values.
              while (!(step = iterator.next()).done) {
                var entry = step.value;
                if (entry) {
                  if (!isNode(entry[1])) {
                    return false;
                  }
                }
              }
            }
          } else {
            return false;
          }

          return true;
        default:
          return false;
      }
    }

    function isSymbol(propType, propValue) {
      // Native Symbol.
      if (propType === 'symbol') {
        return true;
      }

      // falsy value can't be a Symbol
      if (!propValue) {
        return false;
      }

      // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
      if (propValue['@@toStringTag'] === 'Symbol') {
        return true;
      }

      // Fallback for non-spec compliant Symbols which are polyfilled.
      if (typeof Symbol === 'function' && propValue instanceof Symbol) {
        return true;
      }

      return false;
    }

    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
      var propType = typeof propValue;
      if (Array.isArray(propValue)) {
        return 'array';
      }
      if (propValue instanceof RegExp) {
        // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
      }
      if (isSymbol(propType, propValue)) {
        return 'symbol';
      }
      return propType;
    }

    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
      if (typeof propValue === 'undefined' || propValue === null) {
        return '' + propValue;
      }
      var propType = getPropType(propValue);
      if (propType === 'object') {
        if (propValue instanceof Date) {
          return 'date';
        } else if (propValue instanceof RegExp) {
          return 'regexp';
        }
      }
      return propType;
    }

    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
      var type = getPreciseType(value);
      switch (type) {
        case 'array':
        case 'object':
          return 'an ' + type;
        case 'boolean':
        case 'date':
        case 'regexp':
          return 'a ' + type;
        default:
          return type;
      }
    }

    // Returns class name of the object, if any.
    function getClassName(propValue) {
      if (!propValue.constructor || !propValue.constructor.name) {
        return ANONYMOUS;
      }
      return propValue.constructor.name;
    }

    ReactPropTypes.checkPropTypes = checkPropTypes_1;
    ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;

    return ReactPropTypes;
  };

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */



  function emptyFunction() {}
  function emptyFunctionWithReset() {}
  emptyFunctionWithReset.resetWarningCache = emptyFunction;

  var factoryWithThrowingShims = function() {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret_1) {
        // It is still safe when called from React.
        return;
      }
      var err = new Error(
        'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
        'Use PropTypes.checkPropTypes() to call them. ' +
        'Read more at http://fb.me/use-check-prop-types'
      );
      err.name = 'Invariant Violation';
      throw err;
    }  shim.isRequired = shim;
    function getShim() {
      return shim;
    }  // Important!
    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,

      any: shim,
      arrayOf: getShim,
      element: shim,
      elementType: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim,

      checkPropTypes: emptyFunctionWithReset,
      resetWarningCache: emptyFunction
    };

    ReactPropTypes.PropTypes = ReactPropTypes;

    return ReactPropTypes;
  };

  var propTypes = createCommonjsModule(function (module) {
  if (process.env.NODE_ENV !== 'production') {
    var ReactIs = reactIs;

    // By explicitly using `prop-types` you are opting into new development behavior.
    // http://fb.me/prop-types-in-prod
    var throwOnDirectAccess = true;
    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
  } else {
    // By explicitly using `prop-types` you are opting into new production behavior.
    // http://fb.me/prop-types-in-prod
    module.exports = factoryWithThrowingShims();
  }
  });

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
      return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
          function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
          function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
  }

  function __generator(thisArg, body) {
      var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
      function verb(n) { return function (v) { return step([n, v]); }; }
      function step(op) {
          if (f) throw new TypeError("Generator is already executing.");
          while (_) try {
              if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
              if (y = 0, t) op = [op[0] & 2, t.value];
              switch (op[0]) {
                  case 0: case 1: t = op; break;
                  case 4: _.label++; return { value: op[1], done: false };
                  case 5: _.label++; y = op[1]; op = [0]; continue;
                  case 7: op = _.ops.pop(); _.trys.pop(); continue;
                  default:
                      if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                      if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                      if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                      if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                      if (t[2]) _.ops.pop();
                      _.trys.pop(); continue;
              }
              op = body.call(thisArg, _);
          } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
          if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
      }
  }

  function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o), r, ar = [], e;
      try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
      }
      catch (error) { e = { error: error }; }
      finally {
          try {
              if (r && !r.done && (m = i["return"])) m.call(i);
          }
          finally { if (e) throw e.error; }
      }
      return ar;
  }

  /** @deprecated */
  function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++)
          ar = ar.concat(__read(arguments[i]));
      return ar;
  }

  var COMMON_MIME_TYPES = new Map([
      ['avi', 'video/avi'],
      ['gif', 'image/gif'],
      ['ico', 'image/x-icon'],
      ['jpeg', 'image/jpeg'],
      ['jpg', 'image/jpeg'],
      ['mkv', 'video/x-matroska'],
      ['mov', 'video/quicktime'],
      ['mp4', 'video/mp4'],
      ['pdf', 'application/pdf'],
      ['png', 'image/png'],
      ['zip', 'application/zip'],
      ['doc', 'application/msword'],
      ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']
  ]);
  function toFileWithPath(file, path) {
      var f = withMimeType(file);
      if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path
          var webkitRelativePath = file.webkitRelativePath;
          Object.defineProperty(f, 'path', {
              value: typeof path === 'string'
                  ? path
                  // If <input webkitdirectory> is set,
                  // the File will have a {webkitRelativePath} property
                  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory
                  : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0
                      ? webkitRelativePath
                      : file.name,
              writable: false,
              configurable: false,
              enumerable: true
          });
      }
      return f;
  }
  function withMimeType(file) {
      var name = file.name;
      var hasExtension = name && name.lastIndexOf('.') !== -1;
      if (hasExtension && !file.type) {
          var ext = name.split('.')
              .pop().toLowerCase();
          var type = COMMON_MIME_TYPES.get(ext);
          if (type) {
              Object.defineProperty(file, 'type', {
                  value: type,
                  writable: false,
                  configurable: false,
                  enumerable: true
              });
          }
      }
      return file;
  }

  var FILES_TO_IGNORE = [
      // Thumbnail cache files for macOS and Windows
      '.DS_Store',
      'Thumbs.db' // Windows
  ];
  /**
   * Convert a DragEvent's DataTrasfer object to a list of File objects
   * NOTE: If some of the items are folders,
   * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.
   * @param evt
   */
  function fromEvent(evt) {
      return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
              return [2 /*return*/, isDragEvt(evt) && evt.dataTransfer
                      ? getDataTransferFiles(evt.dataTransfer, evt.type)
                      : getInputFiles(evt)];
          });
      });
  }
  function isDragEvt(value) {
      return !!value.dataTransfer;
  }
  function getInputFiles(evt) {
      var files = isInput(evt.target)
          ? evt.target.files
              ? fromList(evt.target.files)
              : []
          : [];
      return files.map(function (file) { return toFileWithPath(file); });
  }
  function isInput(value) {
      return value !== null;
  }
  function getDataTransferFiles(dt, type) {
      return __awaiter(this, void 0, void 0, function () {
          var items, files;
          return __generator(this, function (_a) {
              switch (_a.label) {
                  case 0:
                      if (!dt.items) return [3 /*break*/, 2];
                      items = fromList(dt.items)
                          .filter(function (item) { return item.kind === 'file'; });
                      // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,
                      // only 'dragstart' and 'drop' has access to the data (source node)
                      if (type !== 'drop') {
                          return [2 /*return*/, items];
                      }
                      return [4 /*yield*/, Promise.all(items.map(toFilePromises))];
                  case 1:
                      files = _a.sent();
                      return [2 /*return*/, noIgnoredFiles(flatten(files))];
                  case 2: return [2 /*return*/, noIgnoredFiles(fromList(dt.files)
                          .map(function (file) { return toFileWithPath(file); }))];
              }
          });
      });
  }
  function noIgnoredFiles(files) {
      return files.filter(function (file) { return FILES_TO_IGNORE.indexOf(file.name) === -1; });
  }
  // IE11 does not support Array.from()
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility
  // https://developer.mozilla.org/en-US/docs/Web/API/FileList
  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList
  function fromList(items) {
      var files = [];
      // tslint:disable: prefer-for-of
      for (var i = 0; i < items.length; i++) {
          var file = items[i];
          files.push(file);
      }
      return files;
  }
  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem
  function toFilePromises(item) {
      if (typeof item.webkitGetAsEntry !== 'function') {
          return fromDataTransferItem(item);
      }
      var entry = item.webkitGetAsEntry();
      // Safari supports dropping an image node from a different window and can be retrieved using
      // the DataTransferItem.getAsFile() API
      // NOTE: FileSystemEntry.file() throws if trying to get the file
      if (entry && entry.isDirectory) {
          return fromDirEntry(entry);
      }
      return fromDataTransferItem(item);
  }
  function flatten(items) {
      return items.reduce(function (acc, files) { return __spread(acc, (Array.isArray(files) ? flatten(files) : [files])); }, []);
  }
  function fromDataTransferItem(item) {
      var file = item.getAsFile();
      if (!file) {
          return Promise.reject(item + " is not a File");
      }
      var fwp = toFileWithPath(file);
      return Promise.resolve(fwp);
  }
  // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry
  function fromEntry(entry) {
      return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
              return [2 /*return*/, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
          });
      });
  }
  // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry
  function fromDirEntry(entry) {
      var reader = entry.createReader();
      return new Promise(function (resolve, reject) {
          var entries = [];
          function readEntries() {
              var _this = this;
              // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader
              // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries
              reader.readEntries(function (batch) { return __awaiter(_this, void 0, void 0, function () {
                  var files, err_1, items;
                  return __generator(this, function (_a) {
                      switch (_a.label) {
                          case 0:
                              if (!!batch.length) return [3 /*break*/, 5];
                              _a.label = 1;
                          case 1:
                              _a.trys.push([1, 3, , 4]);
                              return [4 /*yield*/, Promise.all(entries)];
                          case 2:
                              files = _a.sent();
                              resolve(files);
                              return [3 /*break*/, 4];
                          case 3:
                              err_1 = _a.sent();
                              reject(err_1);
                              return [3 /*break*/, 4];
                          case 4: return [3 /*break*/, 6];
                          case 5:
                              items = Promise.all(batch.map(fromEntry));
                              entries.push(items);
                              // Continue reading
                              readEntries();
                              _a.label = 6;
                          case 6: return [2 /*return*/];
                      }
                  });
              }); }, function (err) {
                  reject(err);
              });
          }
          readEntries();
      });
  }
  // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry
  function fromFileEntry(entry) {
      return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
              return [2 /*return*/, new Promise(function (resolve, reject) {
                      entry.file(function (file) {
                          var fwp = toFileWithPath(file, entry.fullPath);
                          resolve(fwp);
                      }, function (err) {
                          reject(err);
                      });
                  })];
          });
      });
  }

  var _default = function (file, acceptedFiles) {
    if (file && acceptedFiles) {
      var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');
      var fileName = file.name || '';
      var mimeType = (file.type || '').toLowerCase();
      var baseMimeType = mimeType.replace(/\/.*$/, '');
      return acceptedFilesArray.some(function (type) {
        var validType = type.trim().toLowerCase();

        if (validType.charAt(0) === '.') {
          return fileName.toLowerCase().endsWith(validType);
        } else if (validType.endsWith('/*')) {
          // This is something like a image/* mime type
          return baseMimeType === validType.replace(/\/.*$/, '');
        }

        return mimeType === validType;
      });
    }

    return true;
  };

  function _slicedToArray$2(arr, i) { return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest$2(); }

  function _nonIterableRest$2() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }

  function _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit$2(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles$2(arr) { if (Array.isArray(arr)) return arr; }

  var FILE_INVALID_TYPE = 'file-invalid-type';
  var FILE_TOO_LARGE = 'file-too-large';
  var FILE_TOO_SMALL = 'file-too-small';
  var TOO_MANY_FILES = 'too-many-files'; // File Errors

  var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr(accept) {
    accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
    var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(', ')) : accept;
    return {
      code: FILE_INVALID_TYPE,
      message: "File type must be ".concat(messageSuffix)
    };
  };
  var getTooLargeRejectionErr = function getTooLargeRejectionErr(maxSize) {
    return {
      code: FILE_TOO_LARGE,
      message: "File is larger than ".concat(maxSize, " bytes")
    };
  };
  var getTooSmallRejectionErr = function getTooSmallRejectionErr(minSize) {
    return {
      code: FILE_TOO_SMALL,
      message: "File is smaller than ".concat(minSize, " bytes")
    };
  };
  var TOO_MANY_FILES_REJECTION = {
    code: TOO_MANY_FILES,
    message: 'Too many files'
  }; // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with
  // that MIME type will always be accepted

  function fileAccepted(file, accept) {
    var isAcceptable = file.type === 'application/x-moz-file' || _default(file, accept);
    return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
  }
  function fileMatchSize(file, minSize, maxSize) {
    if (isDefined(file.size)) {
      if (isDefined(minSize) && isDefined(maxSize)) {
        if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
        if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];
      } else if (isDefined(minSize) && file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];else if (isDefined(maxSize) && file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
    }

    return [true, null];
  }

  function isDefined(value) {
    return value !== undefined && value !== null;
  }

  function allFilesAccepted(_ref) {
    var files = _ref.files,
        accept = _ref.accept,
        minSize = _ref.minSize,
        maxSize = _ref.maxSize,
        multiple = _ref.multiple,
        maxFiles = _ref.maxFiles;

    if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
      return false;
    }

    return files.every(function (file) {
      var _fileAccepted = fileAccepted(file, accept),
          _fileAccepted2 = _slicedToArray$2(_fileAccepted, 1),
          accepted = _fileAccepted2[0];

      var _fileMatchSize = fileMatchSize(file, minSize, maxSize),
          _fileMatchSize2 = _slicedToArray$2(_fileMatchSize, 1),
          sizeMatch = _fileMatchSize2[0];

      return accepted && sizeMatch;
    });
  } // React's synthetic events has event.isPropagationStopped,
  // but to remain compatibility with other libs (Preact) fall back
  // to check event.cancelBubble

  function isPropagationStopped(event) {
    if (typeof event.isPropagationStopped === 'function') {
      return event.isPropagationStopped();
    } else if (typeof event.cancelBubble !== 'undefined') {
      return event.cancelBubble;
    }

    return false;
  }
  function isEvtWithFiles(event) {
    if (!event.dataTransfer) {
      return !!event.target && !!event.target.files;
    } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types
    // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file


    return Array.prototype.some.call(event.dataTransfer.types, function (type) {
      return type === 'Files' || type === 'application/x-moz-file';
    });
  }

  function onDocumentDragOver(event) {
    event.preventDefault();
  }

  function isIe(userAgent) {
    return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;
  }

  function isEdge(userAgent) {
    return userAgent.indexOf('Edge/') !== -1;
  }

  function isIeOrEdge() {
    var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;
    return isIe(userAgent) || isEdge(userAgent);
  }
  /**
   * This is intended to be used to compose event handlers
   * They are executed in order until one of them calls `event.isPropagationStopped()`.
   * Note that the check is done on the first invoke too,
   * meaning that if propagation was stopped before invoking the fns,
   * no handlers will be executed.
   *
   * @param {Function} fns the event hanlder functions
   * @return {Function} the event handler to add to an element
   */

  function composeEventHandlers() {
    for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
      fns[_key] = arguments[_key];
    }

    return function (event) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      return fns.some(function (fn) {
        if (!isPropagationStopped(event) && fn) {
          fn.apply(void 0, [event].concat(args));
        }

        return isPropagationStopped(event);
      });
    };
  }

  function _toConsumableArray$2(arr) { return _arrayWithoutHoles$2(arr) || _iterableToArray$2(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$2(); }

  function _nonIterableSpread$2() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _iterableToArray$2(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles$2(arr) { if (Array.isArray(arr)) return _arrayLikeToArray$1(arr); }

  function _slicedToArray$1(arr, i) { return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest$1(); }

  function _nonIterableRest$1() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

  function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _iterableToArrayLimit$1(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

  function _arrayWithHoles$1(arr) { if (Array.isArray(arr)) return arr; }

  function ownKeys$8(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$8(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$8(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _defineProperty$3(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _objectWithoutProperties$1(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose$1(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

  function _objectWithoutPropertiesLoose$1(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
  /**
   * Convenience wrapper component for the `useDropzone` hook
   *
   * ```jsx
   * <Dropzone>
   *   {({getRootProps, getInputProps}) => (
   *     <div {...getRootProps()}>
   *       <input {...getInputProps()} />
   *       <p>Drag 'n' drop some files here, or click to select files</p>
   *     </div>
   *   )}
   * </Dropzone>
   * ```
   */

  var Dropzone = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
    var children = _ref.children,
        params = _objectWithoutProperties$1(_ref, ["children"]);

    var _useDropzone = useDropzone(params),
        open = _useDropzone.open,
        props = _objectWithoutProperties$1(_useDropzone, ["open"]);

    React.useImperativeHandle(ref, function () {
      return {
        open: open
      };
    }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element

    return /*#__PURE__*/React__default['default'].createElement(React.Fragment, null, children(_objectSpread$a(_objectSpread$a({}, props), {}, {
      open: open
    })));
  });
  Dropzone.displayName = 'Dropzone'; // Add default props for react-docgen

  var defaultProps = {
    disabled: false,
    getFilesFromEvent: fromEvent,
    maxSize: Infinity,
    minSize: 0,
    multiple: true,
    maxFiles: 0,
    preventDropOnDocument: true,
    noClick: false,
    noKeyboard: false,
    noDrag: false,
    noDragEventsBubbling: false,
    validator: null
  };
  Dropzone.defaultProps = defaultProps;
  Dropzone.propTypes = {
    /**
     * Render function that exposes the dropzone state and prop getter fns
     *
     * @param {object} params
     * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
     * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
     * @param {Function} params.open Open the native file selection dialog
     * @param {boolean} params.isFocused Dropzone area is in focus
     * @param {boolean} params.isFileDialogActive File dialog is opened
     * @param {boolean} params.isDragActive Active drag is in progress
     * @param {boolean} params.isDragAccept Dragged files are accepted
     * @param {boolean} params.isDragReject Some dragged files are rejected
     * @param {File[]} params.draggedFiles Files in active drag
     * @param {File[]} params.acceptedFiles Accepted files
     * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
     */
    children: propTypes.func,

    /**
     * Set accepted file types.
     * See https://github.com/okonet/attr-accept for more information.
     * Keep in mind that mime type determination is not reliable across platforms. CSV files,
     * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
     * Windows. In some cases there might not be a mime type set at all.
     * See: https://github.com/react-dropzone/react-dropzone/issues/276
     */
    accept: propTypes.oneOfType([propTypes.string, propTypes.arrayOf(propTypes.string)]),

    /**
     * Allow drag 'n' drop (or selection from the file dialog) of multiple files
     */
    multiple: propTypes.bool,

    /**
     * If false, allow dropped items to take over the current browser window
     */
    preventDropOnDocument: propTypes.bool,

    /**
     * If true, disables click to open the native file selection dialog
     */
    noClick: propTypes.bool,

    /**
     * If true, disables SPACE/ENTER to open the native file selection dialog.
     * Note that it also stops tracking the focus state.
     */
    noKeyboard: propTypes.bool,

    /**
     * If true, disables drag 'n' drop
     */
    noDrag: propTypes.bool,

    /**
     * If true, stops drag event propagation to parents
     */
    noDragEventsBubbling: propTypes.bool,

    /**
     * Minimum file size (in bytes)
     */
    minSize: propTypes.number,

    /**
     * Maximum file size (in bytes)
     */
    maxSize: propTypes.number,

    /**
     * Maximum accepted number of files
     * The default value is 0 which means there is no limitation to how many files are accepted.
     */
    maxFiles: propTypes.number,

    /**
     * Enable/disable the dropzone
     */
    disabled: propTypes.bool,

    /**
     * Use this to provide a custom file aggregator
     *
     * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
     */
    getFilesFromEvent: propTypes.func,

    /**
     * Cb for when closing the file dialog with no selection
     */
    onFileDialogCancel: propTypes.func,

    /**
     * Cb for when the `dragenter` event occurs.
     *
     * @param {DragEvent} event
     */
    onDragEnter: propTypes.func,

    /**
     * Cb for when the `dragleave` event occurs
     *
     * @param {DragEvent} event
     */
    onDragLeave: propTypes.func,

    /**
     * Cb for when the `dragover` event occurs
     *
     * @param {DragEvent} event
     */
    onDragOver: propTypes.func,

    /**
     * Cb for when the `drop` event occurs.
     * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
     *
     * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
     * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
     * If `multiple` is set to false and additional files are dropped,
     * all files besides the first will be rejected.
     * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
     *
     * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
     * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
     *
     * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
     * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
     *
     * ```js
     * function onDrop(acceptedFiles) {
     *   const req = request.post('/upload')
     *   acceptedFiles.forEach(file => {
     *     req.attach(file.name, file)
     *   })
     *   req.end(callback)
     * }
     * ```
     *
     * @param {File[]} acceptedFiles
     * @param {FileRejection[]} fileRejections
     * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
     */
    onDrop: propTypes.func,

    /**
     * Cb for when the `drop` event occurs.
     * Note that if no files are accepted, this callback is not invoked.
     *
     * @param {File[]} files
     * @param {(DragEvent|Event)} event
     */
    onDropAccepted: propTypes.func,

    /**
     * Cb for when the `drop` event occurs.
     * Note that if no files are rejected, this callback is not invoked.
     *
     * @param {FileRejection[]} fileRejections
     * @param {(DragEvent|Event)} event
     */
    onDropRejected: propTypes.func,

    /**
     * Custom validation function 
     * @param {File} file
     * @returns {FileError|FileError[]}
     */
    validator: propTypes.func
  };
  /**
   * A function that is invoked for the `dragenter`,
   * `dragover` and `dragleave` events.
   * It is not invoked if the items are not files (such as link, text, etc.).
   *
   * @callback dragCb
   * @param {DragEvent} event
   */

  /**
   * A function that is invoked for the `drop` or input change event.
   * It is not invoked if the items are not files (such as link, text, etc.).
   *
   * @callback dropCb
   * @param {File[]} acceptedFiles List of accepted files
   * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */

  /**
   * A function that is invoked for the `drop` or input change event.
   * It is not invoked if the items are files (such as link, text, etc.).
   *
   * @callback dropAcceptedCb
   * @param {File[]} files List of accepted files that meet the given criteria
   * (`accept`, `multiple`, `minSize`, `maxSize`)
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */

  /**
   * A function that is invoked for the `drop` or input change event.
   *
   * @callback dropRejectedCb
   * @param {File[]} files List of rejected files that do not meet the given criteria
   * (`accept`, `multiple`, `minSize`, `maxSize`)
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */

  /**
   * A function that is used aggregate files,
   * in a asynchronous fashion, from drag or input change events.
   *
   * @callback getFilesFromEvent
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   * @returns {(File[]|Promise<File[]>)}
   */

  /**
   * An object with the current dropzone state and some helper functions.
   *
   * @typedef {object} DropzoneState
   * @property {Function} getRootProps Returns the props you should apply to the root drop container you render
   * @property {Function} getInputProps Returns the props you should apply to hidden file input you render
   * @property {Function} open Open the native file selection dialog
   * @property {boolean} isFocused Dropzone area is in focus
   * @property {boolean} isFileDialogActive File dialog is opened
   * @property {boolean} isDragActive Active drag is in progress
   * @property {boolean} isDragAccept Dragged files are accepted
   * @property {boolean} isDragReject Some dragged files are rejected
   * @property {File[]} draggedFiles Files in active drag
   * @property {File[]} acceptedFiles Accepted files
   * @property {FileRejection[]} fileRejections Rejected files and why they were rejected
   */

  var initialState = {
    isFocused: false,
    isFileDialogActive: false,
    isDragActive: false,
    isDragAccept: false,
    isDragReject: false,
    draggedFiles: [],
    acceptedFiles: [],
    fileRejections: []
  };
  /**
   * A React hook that creates a drag 'n' drop area.
   *
   * ```jsx
   * function MyDropzone(props) {
   *   const {getRootProps, getInputProps} = useDropzone({
   *     onDrop: acceptedFiles => {
   *       // do something with the File objects, e.g. upload to some server
   *     }
   *   });
   *   return (
   *     <div {...getRootProps()}>
   *       <input {...getInputProps()} />
   *       <p>Drag and drop some files here, or click to select files</p>
   *     </div>
   *   )
   * }
   * ```
   *
   * @function useDropzone
   *
   * @param {object} props
   * @param {string|string[]} [props.accept] Set accepted file types.
   * See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files
   * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window
   * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog
   * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop
   * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents
   * @param {number} [props.minSize=0] Minimum file size (in bytes)
   * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)
   * @param {boolean} [props.disabled=false] Enable/disable the dropzone
   * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator
   * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection
   * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.
   * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs
   * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs
   * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   * @param {dropAcceptedCb} [props.onDropAccepted]
   * @param {dropRejectedCb} [props.onDropRejected]
   *
   * @returns {DropzoneState}
   */

  function useDropzone() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var _defaultProps$options = _objectSpread$a(_objectSpread$a({}, defaultProps), options),
        accept = _defaultProps$options.accept,
        disabled = _defaultProps$options.disabled,
        getFilesFromEvent = _defaultProps$options.getFilesFromEvent,
        maxSize = _defaultProps$options.maxSize,
        minSize = _defaultProps$options.minSize,
        multiple = _defaultProps$options.multiple,
        maxFiles = _defaultProps$options.maxFiles,
        onDragEnter = _defaultProps$options.onDragEnter,
        onDragLeave = _defaultProps$options.onDragLeave,
        onDragOver = _defaultProps$options.onDragOver,
        onDrop = _defaultProps$options.onDrop,
        onDropAccepted = _defaultProps$options.onDropAccepted,
        onDropRejected = _defaultProps$options.onDropRejected,
        onFileDialogCancel = _defaultProps$options.onFileDialogCancel,
        preventDropOnDocument = _defaultProps$options.preventDropOnDocument,
        noClick = _defaultProps$options.noClick,
        noKeyboard = _defaultProps$options.noKeyboard,
        noDrag = _defaultProps$options.noDrag,
        noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling,
        validator = _defaultProps$options.validator;

    var rootRef = React.useRef(null);
    var inputRef = React.useRef(null);

    var _useReducer = React.useReducer(reducer, initialState),
        _useReducer2 = _slicedToArray$1(_useReducer, 2),
        state = _useReducer2[0],
        dispatch = _useReducer2[1];

    var isFocused = state.isFocused,
        isFileDialogActive = state.isFileDialogActive,
        draggedFiles = state.draggedFiles; // Fn for opening the file dialog programmatically

    var openFileDialog = React.useCallback(function () {
      if (inputRef.current) {
        dispatch({
          type: 'openDialog'
        });
        inputRef.current.value = null;
        inputRef.current.click();
      }
    }, [dispatch]); // Update file dialog active state when the window is focused on

    var onWindowFocus = function onWindowFocus() {
      // Execute the timeout only if the file dialog is opened in the browser
      if (isFileDialogActive) {
        setTimeout(function () {
          if (inputRef.current) {
            var files = inputRef.current.files;

            if (!files.length) {
              dispatch({
                type: 'closeDialog'
              });

              if (typeof onFileDialogCancel === 'function') {
                onFileDialogCancel();
              }
            }
          }
        }, 300);
      }
    };

    React.useEffect(function () {
      window.addEventListener('focus', onWindowFocus, false);
      return function () {
        window.removeEventListener('focus', onWindowFocus, false);
      };
    }, [inputRef, isFileDialogActive, onFileDialogCancel]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone

    var onKeyDownCb = React.useCallback(function (event) {
      // Ignore keyboard events bubbling up the DOM tree
      if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
        return;
      }

      if (event.keyCode === 32 || event.keyCode === 13) {
        event.preventDefault();
        openFileDialog();
      }
    }, [rootRef, inputRef]); // Update focus state for the dropzone

    var onFocusCb = React.useCallback(function () {
      dispatch({
        type: 'focus'
      });
    }, []);
    var onBlurCb = React.useCallback(function () {
      dispatch({
        type: 'blur'
      });
    }, []); // Cb to open the file dialog when click occurs on the dropzone

    var onClickCb = React.useCallback(function () {
      if (noClick) {
        return;
      } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()
      // to ensure React can handle state changes
      // See: https://github.com/react-dropzone/react-dropzone/issues/450


      if (isIeOrEdge()) {
        setTimeout(openFileDialog, 0);
      } else {
        openFileDialog();
      }
    }, [inputRef, noClick]);
    var dragTargetsRef = React.useRef([]);

    var onDocumentDrop = function onDocumentDrop(event) {
      if (rootRef.current && rootRef.current.contains(event.target)) {
        // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler
        return;
      }

      event.preventDefault();
      dragTargetsRef.current = [];
    };

    React.useEffect(function () {
      if (preventDropOnDocument) {
        document.addEventListener('dragover', onDocumentDragOver, false);
        document.addEventListener('drop', onDocumentDrop, false);
      }

      return function () {
        if (preventDropOnDocument) {
          document.removeEventListener('dragover', onDocumentDragOver);
          document.removeEventListener('drop', onDocumentDrop);
        }
      };
    }, [rootRef, preventDropOnDocument]);
    var onDragEnterCb = React.useCallback(function (event) {
      event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done

      event.persist();
      stopPropagation(event);
      dragTargetsRef.current = [].concat(_toConsumableArray$2(dragTargetsRef.current), [event.target]);

      if (isEvtWithFiles(event)) {
        Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {
          if (isPropagationStopped(event) && !noDragEventsBubbling) {
            return;
          }

          dispatch({
            draggedFiles: draggedFiles,
            isDragActive: true,
            type: 'setDraggedFiles'
          });

          if (onDragEnter) {
            onDragEnter(event);
          }
        });
      }
    }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);
    var onDragOverCb = React.useCallback(function (event) {
      event.preventDefault();
      event.persist();
      stopPropagation(event);
      var hasFiles = isEvtWithFiles(event);

      if (hasFiles && event.dataTransfer) {
        try {
          event.dataTransfer.dropEffect = 'copy';
        } catch (_unused) {}
        /* eslint-disable-line no-empty */

      }

      if (hasFiles && onDragOver) {
        onDragOver(event);
      }

      return false;
    }, [onDragOver, noDragEventsBubbling]);
    var onDragLeaveCb = React.useCallback(function (event) {
      event.preventDefault();
      event.persist();
      stopPropagation(event); // Only deactivate once the dropzone and all children have been left

      var targets = dragTargetsRef.current.filter(function (target) {
        return rootRef.current && rootRef.current.contains(target);
      }); // Make sure to remove a target present multiple times only once
      // (Firefox may fire dragenter/dragleave multiple times on the same element)

      var targetIdx = targets.indexOf(event.target);

      if (targetIdx !== -1) {
        targets.splice(targetIdx, 1);
      }

      dragTargetsRef.current = targets;

      if (targets.length > 0) {
        return;
      }

      dispatch({
        isDragActive: false,
        type: 'setDraggedFiles',
        draggedFiles: []
      });

      if (isEvtWithFiles(event) && onDragLeave) {
        onDragLeave(event);
      }
    }, [rootRef, onDragLeave, noDragEventsBubbling]);
    var onDropCb = React.useCallback(function (event) {
      event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done

      event.persist();
      stopPropagation(event);
      dragTargetsRef.current = [];

      if (isEvtWithFiles(event)) {
        Promise.resolve(getFilesFromEvent(event)).then(function (files) {
          if (isPropagationStopped(event) && !noDragEventsBubbling) {
            return;
          }

          var acceptedFiles = [];
          var fileRejections = [];
          files.forEach(function (file) {
            var _fileAccepted = fileAccepted(file, accept),
                _fileAccepted2 = _slicedToArray$1(_fileAccepted, 2),
                accepted = _fileAccepted2[0],
                acceptError = _fileAccepted2[1];

            var _fileMatchSize = fileMatchSize(file, minSize, maxSize),
                _fileMatchSize2 = _slicedToArray$1(_fileMatchSize, 2),
                sizeMatch = _fileMatchSize2[0],
                sizeError = _fileMatchSize2[1];

            var customErrors = validator ? validator(file) : null;

            if (accepted && sizeMatch && !customErrors) {
              acceptedFiles.push(file);
            } else {
              var errors = [acceptError, sizeError];

              if (customErrors) {
                errors = errors.concat(customErrors);
              }

              fileRejections.push({
                file: file,
                errors: errors.filter(function (e) {
                  return e;
                })
              });
            }
          });

          if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
            // Reject everything and empty accepted files
            acceptedFiles.forEach(function (file) {
              fileRejections.push({
                file: file,
                errors: [TOO_MANY_FILES_REJECTION]
              });
            });
            acceptedFiles.splice(0);
          }

          dispatch({
            acceptedFiles: acceptedFiles,
            fileRejections: fileRejections,
            type: 'setFiles'
          });

          if (onDrop) {
            onDrop(acceptedFiles, fileRejections, event);
          }

          if (fileRejections.length > 0 && onDropRejected) {
            onDropRejected(fileRejections, event);
          }

          if (acceptedFiles.length > 0 && onDropAccepted) {
            onDropAccepted(acceptedFiles, event);
          }
        });
      }

      dispatch({
        type: 'reset'
      });
    }, [multiple, accept, minSize, maxSize, maxFiles, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected, noDragEventsBubbling, validator]);

    var composeHandler = function composeHandler(fn) {
      return disabled ? null : fn;
    };

    var composeKeyboardHandler = function composeKeyboardHandler(fn) {
      return noKeyboard ? null : composeHandler(fn);
    };

    var composeDragHandler = function composeDragHandler(fn) {
      return noDrag ? null : composeHandler(fn);
    };

    var stopPropagation = function stopPropagation(event) {
      if (noDragEventsBubbling) {
        event.stopPropagation();
      }
    };

    var getRootProps = React.useMemo(function () {
      return function () {
        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref2$refKey = _ref2.refKey,
            refKey = _ref2$refKey === void 0 ? 'ref' : _ref2$refKey,
            onKeyDown = _ref2.onKeyDown,
            onFocus = _ref2.onFocus,
            onBlur = _ref2.onBlur,
            onClick = _ref2.onClick,
            onDragEnter = _ref2.onDragEnter,
            onDragOver = _ref2.onDragOver,
            onDragLeave = _ref2.onDragLeave,
            onDrop = _ref2.onDrop,
            rest = _objectWithoutProperties$1(_ref2, ["refKey", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"]);

        return _objectSpread$a(_objectSpread$a(_defineProperty$3({
          onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
          onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
          onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
          onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
          onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),
          onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),
          onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),
          onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb))
        }, refKey, rootRef), !disabled && !noKeyboard ? {
          tabIndex: 0
        } : {}), rest);
      };
    }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
    var onInputElementClick = React.useCallback(function (event) {
      event.stopPropagation();
    }, []);
    var getInputProps = React.useMemo(function () {
      return function () {
        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref3$refKey = _ref3.refKey,
            refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,
            onChange = _ref3.onChange,
            onClick = _ref3.onClick,
            rest = _objectWithoutProperties$1(_ref3, ["refKey", "onChange", "onClick"]);

        var inputProps = _defineProperty$3({
          accept: accept,
          multiple: multiple,
          type: 'file',
          style: {
            display: 'none'
          },
          onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
          onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
          autoComplete: 'off',
          tabIndex: -1
        }, refKey, inputRef);

        return _objectSpread$a(_objectSpread$a({}, inputProps), rest);
      };
    }, [inputRef, accept, multiple, onDropCb, disabled]);
    var fileCount = draggedFiles.length;
    var isDragAccept = fileCount > 0 && allFilesAccepted({
      files: draggedFiles,
      accept: accept,
      minSize: minSize,
      maxSize: maxSize,
      multiple: multiple,
      maxFiles: maxFiles
    });
    var isDragReject = fileCount > 0 && !isDragAccept;
    return _objectSpread$a(_objectSpread$a({}, state), {}, {
      isDragAccept: isDragAccept,
      isDragReject: isDragReject,
      isFocused: isFocused && !disabled,
      getRootProps: getRootProps,
      getInputProps: getInputProps,
      rootRef: rootRef,
      inputRef: inputRef,
      open: composeHandler(openFileDialog)
    });
  }

  function reducer(state, action) {
    /* istanbul ignore next */
    switch (action.type) {
      case 'focus':
        return _objectSpread$a(_objectSpread$a({}, state), {}, {
          isFocused: true
        });

      case 'blur':
        return _objectSpread$a(_objectSpread$a({}, state), {}, {
          isFocused: false
        });

      case 'openDialog':
        return _objectSpread$a(_objectSpread$a({}, state), {}, {
          isFileDialogActive: true
        });

      case 'closeDialog':
        return _objectSpread$a(_objectSpread$a({}, state), {}, {
          isFileDialogActive: false
        });

      case 'setDraggedFiles':
        /* eslint no-case-declarations: 0 */
        var isDragActive = action.isDragActive,
            draggedFiles = action.draggedFiles;
        return _objectSpread$a(_objectSpread$a({}, state), {}, {
          draggedFiles: draggedFiles,
          isDragActive: isDragActive
        });

      case 'setFiles':
        return _objectSpread$a(_objectSpread$a({}, state), {}, {
          acceptedFiles: action.acceptedFiles,
          fileRejections: action.fileRejections
        });

      case 'reset':
        return _objectSpread$a({}, initialState);

      default:
        return state;
    }
  }

  var __assign$1 = (undefined && undefined.__assign) || function () {
      __assign$1 = Object.assign || function(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                  t[p] = s[p];
          }
          return t;
      };
      return __assign$1.apply(this, arguments);
  };
  var ImageDropzone = function (_a) {
      var handleFiles = _a.handleFiles, maxNumberOfFiles = _a.maxNumberOfFiles, children = _a.children, accept = _a.accept, multiple = _a.multiple, disabled = _a.disabled;
      var handleDrop = React.useCallback(function (accepted) {
          if (!handleFiles) {
              return;
          }
          if (accepted && accepted.length) {
              handleFiles(accepted);
          }
      }, [handleFiles]);
      return (React__default['default'].createElement(Dropzone, { onDrop: handleDrop, maxFiles: maxNumberOfFiles, accept: accept, multiple: multiple, disabled: disabled }, function (_a) {
          var getRootProps = _a.getRootProps, isDragAccept = _a.isDragAccept, isDragReject = _a.isDragReject;
          return (React__default['default'].createElement("div", __assign$1({}, getRootProps({
              style: { position: 'relative' },
              className: "\n          rfu-dropzone\n          " + (isDragAccept ? 'rfu-dropzone--accept' : '') + "\n          " + (isDragReject ? 'rfu-dropzone--reject' : '') + "\n        ",
          })),
              React__default['default'].createElement("div", { className: "rfu-dropzone__notifier" },
                  React__default['default'].createElement("div", { className: "rfu-dropzone__inner" },
                      React__default['default'].createElement("svg", { width: "41", height: "41", viewBox: "0 0 41 41", xmlns: "http://www.w3.org/2000/svg" },
                          React__default['default'].createElement("path", { d: "M40.517 28.002V3.997c0-2.197-1.808-3.992-4.005-3.992H12.507a4.004 4.004 0 0 0-3.992 3.993v24.004a4.004 4.004 0 0 0 3.992 3.993h24.005c2.197 0 4.005-1.795 4.005-3.993zm-22.002-7.997l4.062 5.42 5.937-7.423 7.998 10H12.507l6.008-7.997zM.517 8.003V36c0 2.198 1.795 4.005 3.993 4.005h27.997V36H4.51V8.002H.517z", fill: "#000", fillRule: "nonzero" })),
                      React__default['default'].createElement("p", null, "Drag your files here to add to your post"))),
              children));
      }));
  };

  var __assign = (undefined && undefined.__assign) || function () {
      __assign = Object.assign || function(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                  t[p] = s[p];
          }
          return t;
      };
      return __assign.apply(this, arguments);
  };
  var FilePlaceholder = function (props) { return (React__default['default'].createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", role: "img", viewBox: "0 0 400 400" }, props),
      React__default['default'].createElement("g", null,
          React__default['default'].createElement("path", { d: "M0.000 200.000 L 0.000 400.000 200.000 400.000 L 400.000 400.000 400.000 200.000 L 400.000 0.000 200.000 0.000 L 0.000 0.000 0.000 200.000 M243.085 68.180 C 251.168 72.240,252.758 82.164,246.332 88.456 C 242.609 92.102,249.072 91.774,176.600 92.000 L 112.600 92.200 111.000 93.165 C 107.620 95.203,105.382 98.131,104.780 101.304 C 104.548 102.526,104.400 132.258,104.400 177.461 C 104.400 261.065,104.646 254.561,101.340 258.340 C 95.134 265.435,84.540 263.898,80.562 255.326 L 79.600 253.251 79.600 170.356 L 79.600 87.460 80.613 84.526 C 83.246 76.897,91.469 68.511,96.439 68.386 C 96.747 68.378,97.450 68.114,98.000 67.800 C 98.856 67.311,109.214 67.226,170.067 67.214 L 241.134 67.200 243.085 68.180 M230.400 116.002 C 236.845 117.273,237.603 117.566,242.024 120.500 C 243.269 121.327,256.977 134.788,274.002 151.902 C 299.664 177.700,305.143 183.306,307.142 185.815 C 307.838 186.688,309.600 190.497,309.602 191.133 C 309.604 191.500,309.919 192.340,310.302 193.000 C 310.956 194.125,311.007 197.998,311.108 254.600 L 311.215 315.000 310.241 318.000 C 307.327 326.967,302.400 332.072,293.800 335.031 L 291.000 335.994 219.630 335.997 L 148.260 336.000 145.430 335.018 C 140.319 333.244,139.684 332.841,134.862 328.318 C 132.616 326.212,129.907 321.565,129.427 318.997 C 129.263 318.118,128.920 317.147,128.664 316.839 C 128.315 316.416,128.200 294.170,128.200 227.039 L 128.200 137.800 129.067 134.600 C 129.543 132.840,130.393 130.590,130.954 129.600 C 131.515 128.610,132.247 127.320,132.580 126.733 C 134.155 123.961,138.478 120.313,143.000 117.940 C 144.003 117.414,146.644 116.725,151.000 115.853 C 152.661 115.520,228.681 115.664,230.400 116.002 M226.250 137.650 C 225.849 139.656,225.987 187.508,226.403 190.713 C 227.174 196.647,230.700 200.107,237.136 201.245 C 239.519 201.666,290.972 201.562,291.398 201.135 C 291.727 200.807,227.629 136.400,226.974 136.400 C 226.713 136.400,226.388 136.963,226.250 137.650", stroke: "none", fill: "#fcfcfc", fillRule: "evenodd" }),
          React__default['default'].createElement("path", { d: "M98.000 67.800 C 97.450 68.114,96.747 68.378,96.439 68.386 C 91.469 68.511,83.246 76.897,80.613 84.526 L 79.600 87.460 79.600 170.356 L 79.600 253.251 80.562 255.326 C 84.540 263.898,95.134 265.435,101.340 258.340 C 104.646 254.561,104.400 261.065,104.400 177.461 C 104.400 132.258,104.548 102.526,104.780 101.304 C 105.382 98.131,107.620 95.203,111.000 93.165 L 112.600 92.200 176.600 92.000 C 249.072 91.774,242.609 92.102,246.332 88.456 C 252.758 82.164,251.168 72.240,243.085 68.180 L 241.134 67.200 170.067 67.214 C 109.214 67.226,98.856 67.311,98.000 67.800 M151.000 115.853 C 146.644 116.725,144.003 117.414,143.000 117.940 C 138.478 120.313,134.155 123.961,132.580 126.733 C 132.247 127.320,131.515 128.610,130.954 129.600 C 130.393 130.590,129.543 132.840,129.067 134.600 L 128.200 137.800 128.200 227.039 C 128.200 294.170,128.315 316.416,128.664 316.839 C 128.920 317.147,129.263 318.118,129.427 318.997 C 129.907 321.565,132.616 326.212,134.862 328.318 C 139.684 332.841,140.319 333.244,145.430 335.018 L 148.260 336.000 219.630 335.997 L 291.000 335.994 293.800 335.031 C 302.400 332.072,307.327 326.967,310.241 318.000 L 311.215 315.000 311.108 254.600 C 311.007 197.998,310.956 194.125,310.302 193.000 C 309.919 192.340,309.604 191.500,309.602 191.133 C 309.600 190.497,307.838 186.688,307.142 185.815 C 305.143 183.306,299.664 177.700,274.002 151.902 C 238.906 116.622,240.594 118.012,230.400 116.002 C 228.681 115.664,152.661 115.520,151.000 115.853 M259.556 168.635 C 277.215 186.364,291.544 200.989,291.398 201.135 C 290.972 201.562,239.519 201.666,237.136 201.245 C 230.700 200.107,227.174 196.647,226.403 190.713 C 225.460 183.450,225.955 136.400,226.974 136.400 C 227.235 136.400,241.897 150.906,259.556 168.635", stroke: "none", fill: "#e4e4e4", fillRule: "evenodd" })))); };

  var svg = '<svg width="28" height="28" viewBox="0 0 28 28" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path d="M465 5c5.53 0 10 4.47 10 10s-4.47 10-10 10-10-4.47-10-10 4.47-10 10-10zm3.59 5L465 13.59 461.41 10 460 11.41l3.59 3.59-3.59 3.59 1.41 1.41 3.59-3.59 3.59 3.59 1.41-1.41-3.59-3.59 3.59-3.59-1.41-1.41z" id="b"/><filter x="-30%" y="-30%" width="160%" height="160%" filterUnits="objectBoundingBox" id="a"><feOffset in="SourceAlpha" result="shadowOffsetOuter1"/><feGaussianBlur stdDeviation="2" in="shadowOffsetOuter1" result="shadowBlurOuter1"/><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0" in="shadowBlurOuter1"/></filter></defs><g transform="translate(-451 -1)" fill-rule="nonzero" fill="none"><use fill="#000" filter="url(#a)" xlink:href="#b"/><use fill="#FFF" fill-rule="evenodd" xlink:href="#b"/></g></svg>';
  var Thumbnail = function (props) {
      var id = props.id, image = props.image, _a = props.size, size = _a === void 0 ? 100 : _a, handleClose = props.handleClose, alt = props.alt;
      var onClose = React.useCallback(function () { return handleClose === null || handleClose === void 0 ? void 0 : handleClose(id); }, [id, handleClose]);
      return (React__default['default'].createElement("div", { className: "rfu-thumbnail__wrapper", style: { width: size, height: size } },
          React__default['default'].createElement("div", { className: "rfu-thumbnail__overlay" }, handleClose ? (React__default['default'].createElement(IconButton, { onClick: onClose },
              React__default['default'].createElement("div", { dangerouslySetInnerHTML: { __html: svg } }))) : null),
          image ? (React__default['default'].createElement("img", { src: image, className: "rfu-thumbnail__image", alt: alt !== null && alt !== void 0 ? alt : '' })) : (React__default['default'].createElement(FilePlaceholder, { preserveAspectRatio: "xMinYMin slice", className: "rfu-thumbnail__image" }))));
  };

  /**
   * An icon of a picture, which is used as the default icon for ImageUploadButton
   */
  var PictureIcon = function () { return (React__default['default'].createElement("svg", { width: "20", height: "20", viewBox: "0 0 20 20", xmlns: "http://www.w3.org/2000/svg" },
      React__default['default'].createElement("path", { d: "M2 0h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm3 2a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM2 16v2h16v-6l-3-3-6 6-3-3-4 4z", fillRule: "nonzero" }))); };

  var ImageUploadButton = function (props) {
      var _a = props.multiple, multiple = _a === void 0 ? false : _a, _b = props.disabled, disabled = _b === void 0 ? false : _b, handleFiles = props.handleFiles, _c = props.children, children = _c === void 0 ? React__default['default'].createElement(PictureIcon, null) : _c, _d = props.resetOnChange, resetOnChange = _d === void 0 ? false : _d;
      var onFileChange = useHandleFileChangeWrapper(resetOnChange, handleFiles);
      return (React__default['default'].createElement("div", { className: "rfu-image-upload-button" },
          React__default['default'].createElement("label", null,
              React__default['default'].createElement("input", { type: "file", className: "rfu-image-input", onChange: onFileChange, accept: "image/*", multiple: multiple, disabled: disabled }),
              children)));
  };

  var ThumbnailPlaceholder = function (props) {
      var _a = props.multiple, multiple = _a === void 0 ? false : _a, handleFiles = props.handleFiles;
      return (React__default['default'].createElement(ImageUploadButton, { handleFiles: handleFiles, multiple: multiple },
          React__default['default'].createElement("div", { role: "button", className: "rfu-thumbnail-placeholder" },
              React__default['default'].createElement("svg", { width: "14", height: "15", viewBox: "0 0 14 15", xmlns: "http://www.w3.org/2000/svg" },
                  React__default['default'].createElement("path", { d: "M14 8.998H8v6H6v-6H0v-2h6v-6h2v6h6z", fill: "#A0B2B8", fillRule: "nonzero" })))));
  };

  var ImagePreviewer = function (props) {
      var _a = props.multiple, multiple = _a === void 0 ? true : _a, _b = props.disabled, disabled = _b === void 0 ? false : _b, imageUploads = props.imageUploads, handleRemove = props.handleRemove, handleRetry = props.handleRetry, handleFiles = props.handleFiles;
      var onClose = React.useCallback(function (id) {
          if (handleRemove) {
              if (id == null) {
                  console.warn("id of closed image was undefined, this shouldn't happen");
                  return;
              }
              handleRemove(id);
          }
      }, [handleRemove]);
      return (React__default['default'].createElement("div", { className: "rfu-image-previewer" }, imageUploads === null || imageUploads === void 0 ? void 0 :
          imageUploads.map(function (image) {
              var url = image.url || image.previewUri;
              return (React__default['default'].createElement("div", { key: image.id, className: "rfu-image-previewer__image" + (image.state === 'finished'
                      ? ' rfu-image-previewer__image--loaded'
                      : '') },
                  image.state === 'failed' && (React__default['default'].createElement("div", { className: "rfu-image-previewer__retry", dangerouslySetInnerHTML: {
                          __html: '<svg width="22" height="20" viewBox="0 0 22 20" xmlns="http://www.w3.org/2000/svg"><path d="M20 5.535V2a1 1 0 0 1 2 0v6a1 1 0 0 1-1 1h-6a1 1 0 0 1 0-2h3.638l-2.975-2.653a8 8 0 1 0 1.884 8.32 1 1 0 1 1 1.886.666A10 10 0 1 1 5.175 1.245c3.901-2.15 8.754-1.462 11.88 1.667L20 5.535z" fill="#FFF" fill-rule="nonzero"/></svg>',
                      }, onClick: handleRetry && (function () { return handleRetry(image.id); }) })),
                  url !== undefined && (React__default['default'].createElement(Thumbnail, { handleClose: onClose, image: url, id: image.id })),
                  image.state === 'uploading' && (React__default['default'].createElement(LoadingIndicator, { backgroundColor: "rgba(255,255,255,0.1)", color: "rgba(255,255,255,0.7)" }))));
          }),
          handleFiles && !disabled && (React__default['default'].createElement(ThumbnailPlaceholder, { handleFiles: handleFiles, multiple: multiple }))));
  };

  /*!
    Copyright (c) 2018 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  */

  var classnames = createCommonjsModule(function (module) {
  /* global define */

  (function () {

  	var hasOwn = {}.hasOwnProperty;

  	function classNames() {
  		var classes = [];

  		for (var i = 0; i < arguments.length; i++) {
  			var arg = arguments[i];
  			if (!arg) continue;

  			var argType = typeof arg;

  			if (argType === 'string' || argType === 'number') {
  				classes.push(arg);
  			} else if (Array.isArray(arg)) {
  				if (arg.length) {
  					var inner = classNames.apply(null, arg);
  					if (inner) {
  						classes.push(inner);
  					}
  				}
  			} else if (argType === 'object') {
  				if (arg.toString === Object.prototype.toString) {
  					for (var key in arg) {
  						if (hasOwn.call(arg, key) && arg[key]) {
  							classes.push(key);
  						}
  					}
  				} else {
  					classes.push(arg.toString());
  				}
  			}
  		}

  		return classes.join(' ');
  	}

  	if (module.exports) {
  		classNames.default = classNames;
  		module.exports = classNames;
  	} else {
  		window.classNames = classNames;
  	}
  }());
  });

  function _typeof$1(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof$1 = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof$1 = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof$1(obj);
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  var Color;

  (function (Color) {
    Color["Active"] = "#0ba8e0";
    Color["Inactive"] = "#7a8287";
  })(Color || (Color = {}));

  var ThumbsUpIcon = function ThumbsUpIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      className: "raf-reaction-icon__image",
      "data-icon": "thumbs-up",
      role: "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      fill: "currentColor",
      d: "M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z"
    }));
  };
  var RepostIcon = function RepostIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      className: "raf-reaction-icon__image",
      "data-icon": "retweet",
      role: "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 640 512"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      fill: "currentColor",
      d: "M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z"
    }));
  };
  var AvatarIcon = function AvatarIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      enableBackground: "new 312.809 0 401 401",
      version: "1.1",
      viewBox: "312.809 0 401 401",
      xmlSpace: "preserve",
      xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/React__default['default'].createElement("g", {
      transform: "matrix(1.223 0 0 1.223 -467.5 -843.44)"
    }, /*#__PURE__*/React__default['default'].createElement("rect", {
      x: "601.45",
      y: "653.07",
      width: "401",
      height: "401",
      fill: "#E4E6E7"
    }), /*#__PURE__*/React__default['default'].createElement("path", {
      d: "m802.38 908.08c-84.515 0-153.52 48.185-157.38 108.62h314.79c-3.87-60.44-72.9-108.62-157.41-108.62z",
      fill: "#AEB4B7"
    }), /*#__PURE__*/React__default['default'].createElement("path", {
      d: "m881.37 818.86c0 46.746-35.106 84.641-78.41 84.641s-78.41-37.895-78.41-84.641 35.106-84.641 78.41-84.641c43.31 0 78.41 37.9 78.41 84.64z",
      fill: "#AEB4B7"
    })));
  };
  var CloseIcon = function CloseIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      width: "28",
      height: "28",
      viewBox: "0 0 28 28",
      xmlns: "http://www.w3.org/2000/svg",
      xmlnsXlink: "http://www.w3.org/1999/xlink"
    }, props), /*#__PURE__*/React__default['default'].createElement("defs", null, /*#__PURE__*/React__default['default'].createElement("path", {
      d: "M465 5c5.53 0 10 4.47 10 10s-4.47 10-10 10-10-4.47-10-10 4.47-10 10-10zm3.59 5L465 13.59 461.41 10 460 11.41l3.59 3.59-3.59 3.59 1.41 1.41 3.59-3.59 3.59 3.59 1.41-1.41-3.59-3.59 3.59-3.59-1.41-1.41z",
      id: "b"
    }), /*#__PURE__*/React__default['default'].createElement("filter", {
      x: "-30%",
      y: "-30%",
      width: "160%",
      height: "160%",
      filterUnits: "objectBoundingBox",
      id: "a"
    }, /*#__PURE__*/React__default['default'].createElement("feOffset", {
      in: "SourceAlpha",
      result: "shadowOffsetOuter1"
    }), /*#__PURE__*/React__default['default'].createElement("feGaussianBlur", {
      stdDeviation: "2",
      in: "shadowOffsetOuter1",
      result: "shadowBlurOuter1"
    }), /*#__PURE__*/React__default['default'].createElement("feColorMatrix", {
      values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0",
      in: "shadowBlurOuter1"
    }))), /*#__PURE__*/React__default['default'].createElement("g", {
      transform: "translate(-451 -1)",
      fillRule: "nonzero",
      fill: "none"
    }, /*#__PURE__*/React__default['default'].createElement("use", {
      fill: "#000",
      filter: "url(#a)",
      xlinkHref: "#b"
    }), /*#__PURE__*/React__default['default'].createElement("use", {
      fill: "#FFF",
      fillRule: "evenodd",
      xlinkHref: "#b"
    })));
  };
  var EmojiIcon = function EmojiIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      d: "M10 15.498c2.33 0 4.304-1.456 5.106-3.5H4.892c.802 2.044 2.777 3.5 5.107 3.5zm-3.5-6.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm7 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm-3.5 9a8 8 0 0 1-8-8 8 8 0 0 1 8-8 8 8 0 0 1 8 8 8 8 0 0 1-8 8zm-.006-18C4.467-.002 0 4.475 0 9.998s4.468 10 9.995 10c5.526 0 10.005-4.477 10.005-10s-4.479-10-10.005-10z",
      fill: "#A0B2B8",
      fillRule: "nonzero"
    }));
  };
  var BellIcon = function BellIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      width: "17",
      height: "20",
      viewBox: "0 0 17 20",
      xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      d: "M8.5 20c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6.5-6V8.5c0-3.07-2.13-5.64-5-6.32V1.5C10 .67 9.33 0 8.5 0S7 .67 7 1.5v.68c-2.87.68-5 3.25-5 6.32V14l-2 2v1h17v-1l-2-2zm-2 1H4V8.5C4 6.01 6.01 4 8.5 4S13 6.01 13 8.5V15z",
      fillRule: "evenodd"
    }));
  };
  var BookmarkIcon = function BookmarkIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      "data-icon": "bookmark",
      role: "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 384 512"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      fill: "currentColor",
      d: "M336 0H48C21.49 0 0 21.49 0 48v464l192-112 192 112V48c0-26.51-21.49-48-48-48zm0 428.43l-144-84-144 84V54a6 6 0 0 1 6-6h276c3.314 0 6 2.683 6 5.996V428.43z"
    }));
  };
  var PlayCircleIcon = function PlayCircleIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      "data-icon": "play-circle",
      role: "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      fill: "currentColor",
      d: "M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z"
    }));
  };
  var PauseCircleIcon = function PauseCircleIcon(props) {
    return /*#__PURE__*/React__default['default'].createElement("svg", _extends$1({
      "data-icon": "pause-circle",
      role: "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512"
    }, props), /*#__PURE__*/React__default['default'].createElement("path", {
      fill: "currentColor",
      d: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm96-280v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16zm-112 0v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16z"
    }));
  };

  var Audio = function Audio(_ref) {
    var _ref$og = _ref.og,
        _ref$og$audios = _ref$og.audios,
        audios = _ref$og$audios === void 0 ? [] : _ref$og$audios,
        _ref$og$images = _ref$og.images,
        images = _ref$og$images === void 0 ? [] : _ref$og$images,
        description = _ref$og.description,
        title = _ref$og.title,
        handleClose = _ref.handleClose,
        className = _ref.className,
        style = _ref.style;
    var audioReference = React.useRef(null);
    var intervalReference = React.useRef();

    var _useState = React.useState(0),
        _useState2 = _slicedToArray$3(_useState, 2),
        progress = _useState2[0],
        setProgress = _useState2[1];

    var _useState3 = React.useState(false),
        _useState4 = _slicedToArray$3(_useState3, 2),
        playing = _useState4[0],
        setPlaying = _useState4[1];

    var handleProgressBarClick = function handleProgressBarClick(_ref2) {
      var target = _ref2.currentTarget,
          clientX = _ref2.clientX;
      if (!audioReference.current) return;

      var _target$getBoundingCl = target.getBoundingClientRect(),
          width = _target$getBoundingCl.width,
          x = _target$getBoundingCl.x;

      var ratio = (clientX - x) / width;
      if (!playing) setProgress(ratio * 100);
      audioReference.current.currentTime = ratio * audioReference.current.duration;
    };

    React.useEffect(function () {
      if (!audioReference.current || !playing) return;
      intervalReference.current = window.setInterval(function () {
        if (!audioReference.current) return;
        var _audioReference$curre = audioReference.current,
            currentTime = _audioReference$curre.currentTime,
            duration = _audioReference$curre.duration;
        setProgress(currentTime / duration * 100);
        if (currentTime === duration) setPlaying(false);
      }, 100);
      audioReference.current.play();
      return function () {
        var _audioReference$curre2;

        (_audioReference$curre2 = audioReference.current) === null || _audioReference$curre2 === void 0 ? void 0 : _audioReference$curre2.pause();
        if (!intervalReference.current) return;
        window.clearInterval(intervalReference.current);
        intervalReference.current = undefined;
      };
    }, [playing]);

    var _audios = _slicedToArray$3(audios, 1),
        audio = _audios[0];

    var audioURL = sanitizeURL(audio.secure_url || audio.audio);

    var _images = _slicedToArray$3(images, 1),
        imageURL = _images[0].image;

    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-audio', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-audio__wrapper"
    }, /*#__PURE__*/React__default['default'].createElement("audio", {
      ref: audioReference
    }, /*#__PURE__*/React__default['default'].createElement("source", {
      src: audioURL,
      type: "audio/mp3"
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-audio__image"
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-audio__image--overlay"
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      role: "button",
      onClick: function onClick() {
        return setPlaying(function (pv) {
          return !pv;
        });
      },
      className: "raf-audio__image--button"
    }, smartRender(playing ? PauseCircleIcon : PlayCircleIcon, {
      style: {
        width: '1em'
      }
    }))), /*#__PURE__*/React__default['default'].createElement("img", {
      src: imageURL,
      alt: description !== null && description !== void 0 ? description : ''
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-audio__content"
    }, /*#__PURE__*/React__default['default'].createElement("span", {
      className: "raf-audio__content--title"
    }, /*#__PURE__*/React__default['default'].createElement("strong", null, title)), /*#__PURE__*/React__default['default'].createElement("span", {
      className: "raf-audio__content--subtitle"
    }, description !== null && description !== void 0 ? description : ''), /*#__PURE__*/React__default['default'].createElement("div", {
      role: "progressbar",
      style: {
        cursor: 'pointer'
      },
      onClick: handleProgressBarClick,
      className: "raf-audio__content--progress"
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        width: "".concat(progress, "%")
      }
    }))), handleClose && /*#__PURE__*/React__default['default'].createElement(IconButton, {
      onClick: handleClose
    }, /*#__PURE__*/React__default['default'].createElement(CloseIcon, null))));
  };

  var Video = function Video(_ref) {
    var _image$secure_url;

    var _ref$og = _ref.og,
        _ref$og$videos = _ref$og.videos,
        videos = _ref$og$videos === void 0 ? [] : _ref$og$videos,
        _ref$og$images = _ref$og.images,
        images = _ref$og$images === void 0 ? [] : _ref$og$images,
        ogURL = _ref$og.url,
        title = _ref$og.title,
        description = _ref$og.description,
        siteName = _ref$og.site_name,
        handleClose = _ref.handleClose,
        _ref$urlsThatAreGifs = _ref.urlsThatAreGifs,
        gifHosts = _ref$urlsThatAreGifs === void 0 ? ['i.giphy.com', 'i.imgur.com', 'media.giphy.com'] : _ref$urlsThatAreGifs;
    var video = React.useMemo(function () {
      return videos.find(function (_ref2) {
        var type = _ref2.type;
        return type === 'text/html' || type === 'video/mp4';
      });
    }, [videos]);
    if (!video) return null;
    var videoURL = sanitizeURL(video.secure_url || video.video);

    var _useMemo = React.useMemo(function () {
      return new urlParse(videoURL !== null && videoURL !== void 0 ? videoURL : '');
    }, [videoURL]),
        host = _useMemo.host;

    var isGif = React.useMemo(function () {
      return gifHosts.some(function (gifHost) {
        return gifHost === host;
      });
    }, [host, gifHosts]);

    var _images = _slicedToArray$3(images, 1),
        image = _images[0];

    var videoProps = isGif ? {
      controls: false,
      preload: 'auto',
      // load the video right away
      autoPlay: true,
      // display it like it's a gif
      muted: true,
      loop: true,
      playsInline: true // don't open video in fullscreen on mobile
      // 'webkit-playsinline': 'webkit-playsinline',

    } : {
      controls: true,
      preload: 'metadata',
      // try fetching length of video etc.
      poster: (_image$secure_url = image === null || image === void 0 ? void 0 : image.secure_url) !== null && _image$secure_url !== void 0 ? _image$secure_url : image === null || image === void 0 ? void 0 : image.image
    };
    var closeButton = handleClose && /*#__PURE__*/React__default['default'].createElement(IconButton, {
      onClick: handleClose
    }, /*#__PURE__*/React__default['default'].createElement(CloseIcon, null));

    if (video.type === 'text/html') {
      var newVideoURL = videoURL === null || videoURL === void 0 ? void 0 : videoURL.split('/watch?v=').join('/embed/');
      return /*#__PURE__*/React__default['default'].createElement("div", {
        className: "raf-video__frame"
      }, closeButton, /*#__PURE__*/React__default['default'].createElement("iframe", {
        title: 'embedded player',
        id: "ytplayer",
        width: video.width,
        height: video.height,
        src: newVideoURL,
        frameBorder: "0"
      }));
    }

    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-video__video"
    }, /*#__PURE__*/React__default['default'].createElement("video", _extends$1({
      className: "raf-video__video--video"
    }, videoProps), /*#__PURE__*/React__default['default'].createElement("source", {
      src: videoURL,
      type: video.type
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-video__video--content"
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-video__video--title"
    }, title), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-video__video--description"
    }, description), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-video__video--link"
    }, /*#__PURE__*/React__default['default'].createElement("a", {
      href: sanitizeURL(ogURL),
      target: "blank"
    }, siteName))), closeButton);
  };

  var Card = function Card(_ref) {
    var alt = _ref.alt,
        _ref$images = _ref.images,
        images = _ref$images === void 0 ? [] : _ref$images,
        imageURL = _ref.image,
        handleClose = _ref.handleClose,
        description = _ref.description,
        nolink = _ref.nolink,
        url = _ref.url,
        title = _ref.title,
        className = _ref.className,
        style = _ref.style;
    var sanitizedURL = React.useMemo(function () {
      return sanitizeURL(url);
    }, [url]);
    var trimmedURL = React.useMemo(function () {
      return trimURL(sanitizedURL);
    }, [sanitizedURL]);

    var _ref2 = !imageURL && images.length ? images : [{
      image: imageURL
    }],
        _ref3 = _slicedToArray$3(_ref2, 1),
        image = _ref3[0].image;

    return /*#__PURE__*/React__default['default'].createElement("a", {
      href: nolink ? undefined : sanitizedURL,
      target: "blank",
      rel: "nofollow noreferrer noopener",
      className: className !== null && className !== void 0 ? className : "raf-card ".concat(image !== undefined ? 'raf-card--with-image' : ''),
      style: style
    }, handleClose && image ? /*#__PURE__*/React__default['default'].createElement(IconButton, {
      onClick: handleClose
    }, /*#__PURE__*/React__default['default'].createElement(CloseIcon, null)) : null, image !== undefined && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-card__image"
    }, image === null ? /*#__PURE__*/React__default['default'].createElement(AvatarIcon, {
      preserveAspectRatio: "xMinYMin slice"
    }) : /*#__PURE__*/React__default['default'].createElement("img", {
      src: image,
      alt: alt || title || description || ''
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-card__content"
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-card__content-left"
    }, /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-card__title"
    }, title), /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-card__url"
    }, trimmedURL), /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-card__description"
    }, description)), handleClose && image === undefined && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-card__content-right"
    }, /*#__PURE__*/React__default['default'].createElement(IconButton, {
      onClick: handleClose
    }, /*#__PURE__*/React__default['default'].createElement(CloseIcon, null)))));
  };

  var tabbable_1 = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = findTabbableDescendants;
  /*!
   * Adapted from jQuery UI core
   *
   * http://jqueryui.com
   *
   * Copyright 2014 jQuery Foundation and other contributors
   * Released under the MIT license.
   * http://jquery.org/license
   *
   * http://api.jqueryui.com/category/ui-core/
   */

  var tabbableNode = /input|select|textarea|button|object/;

  function hidesContents(element) {
    var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;

    // If the node is empty, this is good enough
    if (zeroSize && !element.innerHTML) return true;

    // Otherwise we need to check some styles
    var style = window.getComputedStyle(element);
    return zeroSize ? style.getPropertyValue("overflow") !== "visible" ||
    // if 'overflow: visible' set, check if there is actually any overflow
    element.scrollWidth <= 0 && element.scrollHeight <= 0 : style.getPropertyValue("display") == "none";
  }

  function visible(element) {
    var parentElement = element;
    while (parentElement) {
      if (parentElement === document.body) break;
      if (hidesContents(parentElement)) return false;
      parentElement = parentElement.parentNode;
    }
    return true;
  }

  function focusable(element, isTabIndexNotNaN) {
    var nodeName = element.nodeName.toLowerCase();
    var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === "a" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
    return res && visible(element);
  }

  function tabbable(element) {
    var tabIndex = element.getAttribute("tabindex");
    if (tabIndex === null) tabIndex = undefined;
    var isTabIndexNaN = isNaN(tabIndex);
    return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
  }

  function findTabbableDescendants(element) {
    return [].slice.call(element.querySelectorAll("*"), 0).filter(tabbable);
  }
  module.exports = exports["default"];
  });

  var handleBlur_1 = handleBlur;
  var handleFocus_1 = handleFocus;
  var markForFocusLater_1 = markForFocusLater;
  var returnFocus_1 = returnFocus;
  var popWithoutFocus_1 = popWithoutFocus;
  var setupScopedFocus_1 = setupScopedFocus;
  var teardownScopedFocus_1 = teardownScopedFocus;



  var _tabbable2 = _interopRequireDefault$2(tabbable_1);

  function _interopRequireDefault$2(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var focusLaterElements = [];
  var modalElement = null;
  var needToFocus = false;

  function handleBlur() {
    needToFocus = true;
  }

  function handleFocus() {
    if (needToFocus) {
      needToFocus = false;
      if (!modalElement) {
        return;
      }
      // need to see how jQuery shims document.on('focusin') so we don't need the
      // setTimeout, firefox doesn't support focusin, if it did, we could focus
      // the element outside of a setTimeout. Side-effect of this implementation
      // is that the document.body gets focus, and then we focus our element right
      // after, seems fine.
      setTimeout(function () {
        if (modalElement.contains(document.activeElement)) {
          return;
        }
        var el = (0, _tabbable2.default)(modalElement)[0] || modalElement;
        el.focus();
      }, 0);
    }
  }

  function markForFocusLater() {
    focusLaterElements.push(document.activeElement);
  }

  /* eslint-disable no-console */
  function returnFocus() {
    var preventScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    var toFocus = null;
    try {
      if (focusLaterElements.length !== 0) {
        toFocus = focusLaterElements.pop();
        toFocus.focus({ preventScroll: preventScroll });
      }
      return;
    } catch (e) {
      console.warn(["You tried to return focus to", toFocus, "but it is not in the DOM anymore"].join(" "));
    }
  }
  /* eslint-enable no-console */

  function popWithoutFocus() {
    focusLaterElements.length > 0 && focusLaterElements.pop();
  }

  function setupScopedFocus(element) {
    modalElement = element;

    if (window.addEventListener) {
      window.addEventListener("blur", handleBlur, false);
      document.addEventListener("focus", handleFocus, true);
    } else {
      window.attachEvent("onBlur", handleBlur);
      document.attachEvent("onFocus", handleFocus);
    }
  }

  function teardownScopedFocus() {
    modalElement = null;

    if (window.addEventListener) {
      window.removeEventListener("blur", handleBlur);
      document.removeEventListener("focus", handleFocus);
    } else {
      window.detachEvent("onBlur", handleBlur);
      document.detachEvent("onFocus", handleFocus);
    }
  }

  var focusManager = /*#__PURE__*/Object.defineProperty({
  	handleBlur: handleBlur_1,
  	handleFocus: handleFocus_1,
  	markForFocusLater: markForFocusLater_1,
  	returnFocus: returnFocus_1,
  	popWithoutFocus: popWithoutFocus_1,
  	setupScopedFocus: setupScopedFocus_1,
  	teardownScopedFocus: teardownScopedFocus_1
  }, '__esModule', {value: true});

  var scopeTab_1 = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = scopeTab;



  var _tabbable2 = _interopRequireDefault(tabbable_1);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function scopeTab(node, event) {
    var tabbable = (0, _tabbable2.default)(node);

    if (!tabbable.length) {
      // Do nothing, since there are no elements that can receive focus.
      event.preventDefault();
      return;
    }

    var target = void 0;

    var shiftKey = event.shiftKey;
    var head = tabbable[0];
    var tail = tabbable[tabbable.length - 1];

    // proceed with default browser behavior on tab.
    // Focus on last element on shift + tab.
    if (node === document.activeElement) {
      if (!shiftKey) return;
      target = tail;
    }

    if (tail === document.activeElement && !shiftKey) {
      target = head;
    }

    if (head === document.activeElement && shiftKey) {
      target = tail;
    }

    if (target) {
      event.preventDefault();
      target.focus();
      return;
    }

    // Safari radio issue.
    //
    // Safari does not move the focus to the radio button,
    // so we need to force it to really walk through all elements.
    //
    // This is very error prone, since we are trying to guess
    // if it is a safari browser from the first occurence between
    // chrome or safari.
    //
    // The chrome user agent contains the first ocurrence
    // as the 'chrome/version' and later the 'safari/version'.
    var checkSafari = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent);
    var isSafariDesktop = checkSafari != null && checkSafari[1] != "Chrome" && /\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null;

    // If we are not in safari desktop, let the browser control
    // the focus
    if (!isSafariDesktop) return;

    var x = tabbable.indexOf(document.activeElement);

    if (x > -1) {
      x += shiftKey ? -1 : 1;
    }

    target = tabbable[x];

    // If the tabbable element does not exist,
    // focus head/tail based on shiftKey
    if (typeof target === "undefined") {
      event.preventDefault();
      target = shiftKey ? tail : head;
      target.focus();
      return;
    }

    event.preventDefault();

    target.focus();
  }
  module.exports = exports["default"];
  });

  /**
   * Similar to invariant but only logs a warning if the condition is not met.
   * This can be used to log issues in development environments in critical
   * paths. Removing the logging code for production environments will keep the
   * same logic and follow the same code paths.
   */

  var __DEV__ = process.env.NODE_ENV !== 'production';

  var warning = function() {};

  if (__DEV__) {
    var printWarning = function printWarning(format, args) {
      var len = arguments.length;
      args = new Array(len > 1 ? len - 1 : 0);
      for (var key = 1; key < len; key++) {
        args[key - 1] = arguments[key];
      }
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function(condition, format, args) {
      var len = arguments.length;
      args = new Array(len > 2 ? len - 2 : 0);
      for (var key = 2; key < len; key++) {
        args[key - 2] = arguments[key];
      }
      if (format === undefined) {
        throw new Error(
            '`warning(condition, format, ...args)` requires a warning ' +
            'message argument'
        );
      }
      if (!condition) {
        printWarning.apply(null, [format].concat(args));
      }
    };
  }

  var warning_1 = warning;

  /*!
    Copyright (c) 2015 Jed Watson.
    Based on code that is Copyright 2013-2015, Facebook, Inc.
    All rights reserved.
  */

  var exenv = createCommonjsModule(function (module) {
  /* global define */

  (function () {

  	var canUseDOM = !!(
  		typeof window !== 'undefined' &&
  		window.document &&
  		window.document.createElement
  	);

  	var ExecutionEnvironment = {

  		canUseDOM: canUseDOM,

  		canUseWorkers: typeof Worker !== 'undefined',

  		canUseEventListeners:
  			canUseDOM && !!(window.addEventListener || window.attachEvent),

  		canUseViewport: canUseDOM && !!window.screen

  	};

  	if (module.exports) {
  		module.exports = ExecutionEnvironment;
  	} else {
  		window.ExecutionEnvironment = ExecutionEnvironment;
  	}

  }());
  });

  var safeHTMLElement = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.canUseDOM = exports.SafeNodeList = exports.SafeHTMLCollection = undefined;



  var _exenv2 = _interopRequireDefault(exenv);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var EE = _exenv2.default;

  var SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};

  exports.SafeHTMLCollection = EE.canUseDOM ? window.HTMLCollection : {};

  exports.SafeNodeList = EE.canUseDOM ? window.NodeList : {};

  exports.canUseDOM = EE.canUseDOM;

  exports.default = SafeHTMLElement;
  });

  var assertNodeList_1 = assertNodeList;
  var setElement_1 = setElement;
  var validateElement_1 = validateElement;
  var hide_1 = hide;
  var show_1 = show;
  var documentNotReadyOrSSRTesting_1 = documentNotReadyOrSSRTesting;
  var resetForTesting_1 = resetForTesting;



  var _warning2 = _interopRequireDefault$1(warning_1);



  function _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var globalElement = null;

  function assertNodeList(nodeList, selector) {
    if (!nodeList || !nodeList.length) {
      throw new Error("react-modal: No elements were found for selector " + selector + ".");
    }
  }

  function setElement(element) {
    var useElement = element;
    if (typeof useElement === "string" && safeHTMLElement.canUseDOM) {
      var el = document.querySelectorAll(useElement);
      assertNodeList(el, useElement);
      useElement = el;
    }
    globalElement = useElement || globalElement;
    return globalElement;
  }

  function validateElement(appElement) {
    var el = appElement || globalElement;
    if (el) {
      return Array.isArray(el) || el instanceof HTMLCollection || el instanceof NodeList ? el : [el];
    } else {
      (0, _warning2.default)(false, ["react-modal: App element is not defined.", "Please use `Modal.setAppElement(el)` or set `appElement={el}`.", "This is needed so screen readers don't see main content", "when modal is opened. It is not recommended, but you can opt-out", "by setting `ariaHideApp={false}`."].join(" "));

      return [];
    }
  }

  function hide(appElement) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = validateElement(appElement)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var el = _step.value;

        el.setAttribute("aria-hidden", "true");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  function show(appElement) {
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = validateElement(appElement)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var el = _step2.value;

        el.removeAttribute("aria-hidden");
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  }

  function documentNotReadyOrSSRTesting() {
    globalElement = null;
  }

  function resetForTesting() {
    globalElement = null;
  }

  var ariaAppHider = /*#__PURE__*/Object.defineProperty({
  	assertNodeList: assertNodeList_1,
  	setElement: setElement_1,
  	validateElement: validateElement_1,
  	hide: hide_1,
  	show: show_1,
  	documentNotReadyOrSSRTesting: documentNotReadyOrSSRTesting_1,
  	resetForTesting: resetForTesting_1
  }, '__esModule', {value: true});

  var classList = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.dumpClassLists = dumpClassLists;
  var htmlClassList = {};
  var docBodyClassList = {};

  function dumpClassLists() {
    if (process.env.NODE_ENV !== "production") {
      var classes = document.getElementsByTagName("html")[0].className;
      var buffer = "Show tracked classes:\n\n";

      buffer += "<html /> (" + classes + "):\n";
      for (var x in htmlClassList) {
        buffer += "  " + x + " " + htmlClassList[x] + "\n";
      }

      classes = document.body.className;

      // eslint-disable-next-line max-len
      buffer += "\n\ndoc.body (" + classes + "):\n";
      for (var _x in docBodyClassList) {
        buffer += "  " + _x + " " + docBodyClassList[_x] + "\n";
      }

      buffer += "\n";

      // eslint-disable-next-line no-console
      console.log(buffer);
    }
  }

  /**
   * Track the number of reference of a class.
   * @param {object} poll The poll to receive the reference.
   * @param {string} className The class name.
   * @return {string}
   */
  var incrementReference = function incrementReference(poll, className) {
    if (!poll[className]) {
      poll[className] = 0;
    }
    poll[className] += 1;
    return className;
  };

  /**
   * Drop the reference of a class.
   * @param {object} poll The poll to receive the reference.
   * @param {string} className The class name.
   * @return {string}
   */
  var decrementReference = function decrementReference(poll, className) {
    if (poll[className]) {
      poll[className] -= 1;
    }
    return className;
  };

  /**
   * Track a class and add to the given class list.
   * @param {Object} classListRef A class list of an element.
   * @param {Object} poll         The poll to be used.
   * @param {Array}  classes      The list of classes to be tracked.
   */
  var trackClass = function trackClass(classListRef, poll, classes) {
    classes.forEach(function (className) {
      incrementReference(poll, className);
      classListRef.add(className);
    });
  };

  /**
   * Untrack a class and remove from the given class list if the reference
   * reaches 0.
   * @param {Object} classListRef A class list of an element.
   * @param {Object} poll         The poll to be used.
   * @param {Array}  classes      The list of classes to be untracked.
   */
  var untrackClass = function untrackClass(classListRef, poll, classes) {
    classes.forEach(function (className) {
      decrementReference(poll, className);
      poll[className] === 0 && classListRef.remove(className);
    });
  };

  /**
   * Public inferface to add classes to the document.body.
   * @param {string} bodyClass The class string to be added.
   *                           It may contain more then one class
   *                           with ' ' as separator.
   */
  exports.add = function add(element, classString) {
    return trackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
  };

  /**
   * Public inferface to remove classes from the document.body.
   * @param {string} bodyClass The class string to be added.
   *                           It may contain more then one class
   *                           with ' ' as separator.
   */
  exports.remove = function remove(element, classString) {
    return untrackClass(element.classList, element.nodeName.toLowerCase() == "html" ? htmlClassList : docBodyClassList, classString.split(" "));
  };
  });

  var portalOpenInstances_1 = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  // Tracks portals that are open and emits events to subscribers

  var PortalOpenInstances = function PortalOpenInstances() {
    var _this = this;

    _classCallCheck(this, PortalOpenInstances);

    this.register = function (openInstance) {
      if (_this.openInstances.indexOf(openInstance) !== -1) {
        if (process.env.NODE_ENV !== "production") {
          // eslint-disable-next-line no-console
          console.warn("React-Modal: Cannot register modal instance that's already open");
        }
        return;
      }
      _this.openInstances.push(openInstance);
      _this.emit("register");
    };

    this.deregister = function (openInstance) {
      var index = _this.openInstances.indexOf(openInstance);
      if (index === -1) {
        if (process.env.NODE_ENV !== "production") {
          // eslint-disable-next-line no-console
          console.warn("React-Modal: Unable to deregister " + openInstance + " as " + "it was never registered");
        }
        return;
      }
      _this.openInstances.splice(index, 1);
      _this.emit("deregister");
    };

    this.subscribe = function (callback) {
      _this.subscribers.push(callback);
    };

    this.emit = function (eventType) {
      _this.subscribers.forEach(function (subscriber) {
        return subscriber(eventType,
        // shallow copy to avoid accidental mutation
        _this.openInstances.slice());
      });
    };

    this.openInstances = [];
    this.subscribers = [];
  };

  var portalOpenInstances = new PortalOpenInstances();

  exports.default = portalOpenInstances;
  module.exports = exports["default"];
  });

  var _portalOpenInstances2 = _interopRequireDefault(portalOpenInstances_1);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  // Body focus trap see Issue #742

  var before = void 0,
      after = void 0,
      instances = [];

  function focusContent() {
    if (instances.length === 0) {
      if (process.env.NODE_ENV !== "production") {
        // eslint-disable-next-line no-console
        console.warn("React-Modal: Open instances > 0 expected");
      }
      return;
    }
    instances[instances.length - 1].focusContent();
  }

  function bodyTrap(eventType, openInstances) {
    if (!before || !after) {
      before = document.createElement("div");
      before.setAttribute("data-react-modal-body-trap", "");
      before.style.position = "absolute";
      before.style.opacity = "0";
      before.setAttribute("tabindex", "0");
      before.addEventListener("focus", focusContent);
      after = before.cloneNode();
      after.addEventListener("focus", focusContent);
    }

    instances = openInstances;

    if (instances.length > 0) {
      // Add focus trap
      if (document.body.firstChild !== before) {
        document.body.insertBefore(before, document.body.firstChild);
      }
      if (document.body.lastChild !== after) {
        document.body.appendChild(after);
      }
    } else {
      // Remove focus trap
      if (before.parentElement) {
        before.parentElement.removeChild(before);
      }
      if (after.parentElement) {
        after.parentElement.removeChild(after);
      }
    }
  }

  _portalOpenInstances2.default.subscribe(bodyTrap);

  var ModalPortal_1 = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();





  var _propTypes2 = _interopRequireDefault(propTypes);



  var focusManager$1 = _interopRequireWildcard(focusManager);



  var _scopeTab2 = _interopRequireDefault(scopeTab_1);



  var ariaAppHider$1 = _interopRequireWildcard(ariaAppHider);



  var classList$1 = _interopRequireWildcard(classList);



  var _safeHTMLElement2 = _interopRequireDefault(safeHTMLElement);



  var _portalOpenInstances2 = _interopRequireDefault(portalOpenInstances_1);



  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  // so that our CSS is statically analyzable
  var CLASS_NAMES = {
    overlay: "ReactModal__Overlay",
    content: "ReactModal__Content"
  };

  var TAB_KEY = 9;
  var ESC_KEY = 27;

  var ariaHiddenInstances = 0;

  var ModalPortal = function (_Component) {
    _inherits(ModalPortal, _Component);

    function ModalPortal(props) {
      _classCallCheck(this, ModalPortal);

      var _this = _possibleConstructorReturn(this, (ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)).call(this, props));

      _this.setOverlayRef = function (overlay) {
        _this.overlay = overlay;
        _this.props.overlayRef && _this.props.overlayRef(overlay);
      };

      _this.setContentRef = function (content) {
        _this.content = content;
        _this.props.contentRef && _this.props.contentRef(content);
      };

      _this.afterClose = function () {
        var _this$props = _this.props,
            appElement = _this$props.appElement,
            ariaHideApp = _this$props.ariaHideApp,
            htmlOpenClassName = _this$props.htmlOpenClassName,
            bodyOpenClassName = _this$props.bodyOpenClassName;

        // Remove classes.

        bodyOpenClassName && classList$1.remove(document.body, bodyOpenClassName);

        htmlOpenClassName && classList$1.remove(document.getElementsByTagName("html")[0], htmlOpenClassName);

        // Reset aria-hidden attribute if all modals have been removed
        if (ariaHideApp && ariaHiddenInstances > 0) {
          ariaHiddenInstances -= 1;

          if (ariaHiddenInstances === 0) {
            ariaAppHider$1.show(appElement);
          }
        }

        if (_this.props.shouldFocusAfterRender) {
          if (_this.props.shouldReturnFocusAfterClose) {
            focusManager$1.returnFocus(_this.props.preventScroll);
            focusManager$1.teardownScopedFocus();
          } else {
            focusManager$1.popWithoutFocus();
          }
        }

        if (_this.props.onAfterClose) {
          _this.props.onAfterClose();
        }

        _portalOpenInstances2.default.deregister(_this);
      };

      _this.open = function () {
        _this.beforeOpen();
        if (_this.state.afterOpen && _this.state.beforeClose) {
          clearTimeout(_this.closeTimer);
          _this.setState({ beforeClose: false });
        } else {
          if (_this.props.shouldFocusAfterRender) {
            focusManager$1.setupScopedFocus(_this.node);
            focusManager$1.markForFocusLater();
          }

          _this.setState({ isOpen: true }, function () {
            _this.setState({ afterOpen: true });

            if (_this.props.isOpen && _this.props.onAfterOpen) {
              _this.props.onAfterOpen({
                overlayEl: _this.overlay,
                contentEl: _this.content
              });
            }
          });
        }
      };

      _this.close = function () {
        if (_this.props.closeTimeoutMS > 0) {
          _this.closeWithTimeout();
        } else {
          _this.closeWithoutTimeout();
        }
      };

      _this.focusContent = function () {
        return _this.content && !_this.contentHasFocus() && _this.content.focus({ preventScroll: true });
      };

      _this.closeWithTimeout = function () {
        var closesAt = Date.now() + _this.props.closeTimeoutMS;
        _this.setState({ beforeClose: true, closesAt: closesAt }, function () {
          _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());
        });
      };

      _this.closeWithoutTimeout = function () {
        _this.setState({
          beforeClose: false,
          isOpen: false,
          afterOpen: false,
          closesAt: null
        }, _this.afterClose);
      };

      _this.handleKeyDown = function (event) {
        if (event.keyCode === TAB_KEY) {
          (0, _scopeTab2.default)(_this.content, event);
        }

        if (_this.props.shouldCloseOnEsc && event.keyCode === ESC_KEY) {
          event.stopPropagation();
          _this.requestClose(event);
        }
      };

      _this.handleOverlayOnClick = function (event) {
        if (_this.shouldClose === null) {
          _this.shouldClose = true;
        }

        if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {
          if (_this.ownerHandlesClose()) {
            _this.requestClose(event);
          } else {
            _this.focusContent();
          }
        }
        _this.shouldClose = null;
      };

      _this.handleContentOnMouseUp = function () {
        _this.shouldClose = false;
      };

      _this.handleOverlayOnMouseDown = function (event) {
        if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {
          event.preventDefault();
        }
      };

      _this.handleContentOnClick = function () {
        _this.shouldClose = false;
      };

      _this.handleContentOnMouseDown = function () {
        _this.shouldClose = false;
      };

      _this.requestClose = function (event) {
        return _this.ownerHandlesClose() && _this.props.onRequestClose(event);
      };

      _this.ownerHandlesClose = function () {
        return _this.props.onRequestClose;
      };

      _this.shouldBeClosed = function () {
        return !_this.state.isOpen && !_this.state.beforeClose;
      };

      _this.contentHasFocus = function () {
        return document.activeElement === _this.content || _this.content.contains(document.activeElement);
      };

      _this.buildClassName = function (which, additional) {
        var classNames = (typeof additional === "undefined" ? "undefined" : _typeof(additional)) === "object" ? additional : {
          base: CLASS_NAMES[which],
          afterOpen: CLASS_NAMES[which] + "--after-open",
          beforeClose: CLASS_NAMES[which] + "--before-close"
        };
        var className = classNames.base;
        if (_this.state.afterOpen) {
          className = className + " " + classNames.afterOpen;
        }
        if (_this.state.beforeClose) {
          className = className + " " + classNames.beforeClose;
        }
        return typeof additional === "string" && additional ? className + " " + additional : className;
      };

      _this.attributesFromObject = function (prefix, items) {
        return Object.keys(items).reduce(function (acc, name) {
          acc[prefix + "-" + name] = items[name];
          return acc;
        }, {});
      };

      _this.state = {
        afterOpen: false,
        beforeClose: false
      };

      _this.shouldClose = null;
      _this.moveFromContentToOverlay = null;
      return _this;
    }

    _createClass(ModalPortal, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.isOpen) {
          this.open();
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (process.env.NODE_ENV !== "production") {
          if (prevProps.bodyOpenClassName !== this.props.bodyOpenClassName) {
            // eslint-disable-next-line no-console
            console.warn('React-Modal: "bodyOpenClassName" prop has been modified. ' + "This may cause unexpected behavior when multiple modals are open.");
          }
          if (prevProps.htmlOpenClassName !== this.props.htmlOpenClassName) {
            // eslint-disable-next-line no-console
            console.warn('React-Modal: "htmlOpenClassName" prop has been modified. ' + "This may cause unexpected behavior when multiple modals are open.");
          }
        }

        if (this.props.isOpen && !prevProps.isOpen) {
          this.open();
        } else if (!this.props.isOpen && prevProps.isOpen) {
          this.close();
        }

        // Focus only needs to be set once when the modal is being opened
        if (this.props.shouldFocusAfterRender && this.state.isOpen && !prevState.isOpen) {
          this.focusContent();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.state.isOpen) {
          this.afterClose();
        }
        clearTimeout(this.closeTimer);
      }
    }, {
      key: "beforeOpen",
      value: function beforeOpen() {
        var _props = this.props,
            appElement = _props.appElement,
            ariaHideApp = _props.ariaHideApp,
            htmlOpenClassName = _props.htmlOpenClassName,
            bodyOpenClassName = _props.bodyOpenClassName;

        // Add classes.

        bodyOpenClassName && classList$1.add(document.body, bodyOpenClassName);

        htmlOpenClassName && classList$1.add(document.getElementsByTagName("html")[0], htmlOpenClassName);

        if (ariaHideApp) {
          ariaHiddenInstances += 1;
          ariaAppHider$1.hide(appElement);
        }

        _portalOpenInstances2.default.register(this);
      }

      // Don't steal focus from inner elements

    }, {
      key: "render",
      value: function render() {
        var _props2 = this.props,
            id = _props2.id,
            className = _props2.className,
            overlayClassName = _props2.overlayClassName,
            defaultStyles = _props2.defaultStyles,
            children = _props2.children;

        var contentStyles = className ? {} : defaultStyles.content;
        var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;

        if (this.shouldBeClosed()) {
          return null;
        }

        var overlayProps = {
          ref: this.setOverlayRef,
          className: this.buildClassName("overlay", overlayClassName),
          style: _extends({}, overlayStyles, this.props.style.overlay),
          onClick: this.handleOverlayOnClick,
          onMouseDown: this.handleOverlayOnMouseDown
        };

        var contentProps = _extends({
          id: id,
          ref: this.setContentRef,
          style: _extends({}, contentStyles, this.props.style.content),
          className: this.buildClassName("content", className),
          tabIndex: "-1",
          onKeyDown: this.handleKeyDown,
          onMouseDown: this.handleContentOnMouseDown,
          onMouseUp: this.handleContentOnMouseUp,
          onClick: this.handleContentOnClick,
          role: this.props.role,
          "aria-label": this.props.contentLabel
        }, this.attributesFromObject("aria", _extends({ modal: true }, this.props.aria)), this.attributesFromObject("data", this.props.data || {}), {
          "data-testid": this.props.testId
        });

        var contentElement = this.props.contentElement(contentProps, children);
        return this.props.overlayElement(overlayProps, contentElement);
      }
    }]);

    return ModalPortal;
  }(React__default['default'].Component);

  ModalPortal.defaultProps = {
    style: {
      overlay: {},
      content: {}
    },
    defaultStyles: {}
  };
  ModalPortal.propTypes = {
    isOpen: _propTypes2.default.bool.isRequired,
    defaultStyles: _propTypes2.default.shape({
      content: _propTypes2.default.object,
      overlay: _propTypes2.default.object
    }),
    style: _propTypes2.default.shape({
      content: _propTypes2.default.object,
      overlay: _propTypes2.default.object
    }),
    className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
    overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
    bodyOpenClassName: _propTypes2.default.string,
    htmlOpenClassName: _propTypes2.default.string,
    ariaHideApp: _propTypes2.default.bool,
    appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),
    onAfterOpen: _propTypes2.default.func,
    onAfterClose: _propTypes2.default.func,
    onRequestClose: _propTypes2.default.func,
    closeTimeoutMS: _propTypes2.default.number,
    shouldFocusAfterRender: _propTypes2.default.bool,
    shouldCloseOnOverlayClick: _propTypes2.default.bool,
    shouldReturnFocusAfterClose: _propTypes2.default.bool,
    preventScroll: _propTypes2.default.bool,
    role: _propTypes2.default.string,
    contentLabel: _propTypes2.default.string,
    aria: _propTypes2.default.object,
    data: _propTypes2.default.object,
    children: _propTypes2.default.node,
    shouldCloseOnEsc: _propTypes2.default.bool,
    overlayRef: _propTypes2.default.func,
    contentRef: _propTypes2.default.func,
    id: _propTypes2.default.string,
    overlayElement: _propTypes2.default.func,
    contentElement: _propTypes2.default.func,
    testId: _propTypes2.default.string
  };
  exports.default = ModalPortal;
  module.exports = exports["default"];
  });

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  function componentWillMount() {
    // Call this.constructor.gDSFP to support sub-classes.
    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
    if (state !== null && state !== undefined) {
      this.setState(state);
    }
  }

  function componentWillReceiveProps(nextProps) {
    // Call this.constructor.gDSFP to support sub-classes.
    // Use the setState() updater to ensure state isn't stale in certain edge cases.
    function updater(prevState) {
      var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
      return state !== null && state !== undefined ? state : null;
    }
    // Binding "this" is important for shallow renderer support.
    this.setState(updater.bind(this));
  }

  function componentWillUpdate(nextProps, nextState) {
    try {
      var prevProps = this.props;
      var prevState = this.state;
      this.props = nextProps;
      this.state = nextState;
      this.__reactInternalSnapshotFlag = true;
      this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
        prevProps,
        prevState
      );
    } finally {
      this.props = prevProps;
      this.state = prevState;
    }
  }

  // React may warn about cWM/cWRP/cWU methods being deprecated.
  // Add a flag to suppress these warnings for this special case.
  componentWillMount.__suppressDeprecationWarning = true;
  componentWillReceiveProps.__suppressDeprecationWarning = true;
  componentWillUpdate.__suppressDeprecationWarning = true;

  function polyfill(Component) {
    var prototype = Component.prototype;

    if (!prototype || !prototype.isReactComponent) {
      throw new Error('Can only polyfill class components');
    }

    if (
      typeof Component.getDerivedStateFromProps !== 'function' &&
      typeof prototype.getSnapshotBeforeUpdate !== 'function'
    ) {
      return Component;
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Error if any of these lifecycles are present,
    // Because they would work differently between older and newer (16.3+) versions of React.
    var foundWillMountName = null;
    var foundWillReceivePropsName = null;
    var foundWillUpdateName = null;
    if (typeof prototype.componentWillMount === 'function') {
      foundWillMountName = 'componentWillMount';
    } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
      foundWillMountName = 'UNSAFE_componentWillMount';
    }
    if (typeof prototype.componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'componentWillReceiveProps';
    } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
    }
    if (typeof prototype.componentWillUpdate === 'function') {
      foundWillUpdateName = 'componentWillUpdate';
    } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
      foundWillUpdateName = 'UNSAFE_componentWillUpdate';
    }
    if (
      foundWillMountName !== null ||
      foundWillReceivePropsName !== null ||
      foundWillUpdateName !== null
    ) {
      var componentName = Component.displayName || Component.name;
      var newApiName =
        typeof Component.getDerivedStateFromProps === 'function'
          ? 'getDerivedStateFromProps()'
          : 'getSnapshotBeforeUpdate()';

      throw Error(
        'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
          componentName +
          ' uses ' +
          newApiName +
          ' but also contains the following legacy lifecycles:' +
          (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
          (foundWillReceivePropsName !== null
            ? '\n  ' + foundWillReceivePropsName
            : '') +
          (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
          '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
          'https://fb.me/react-async-component-lifecycle-hooks'
      );
    }

    // React <= 16.2 does not support static getDerivedStateFromProps.
    // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
    // Newer versions of React will ignore these lifecycles if gDSFP exists.
    if (typeof Component.getDerivedStateFromProps === 'function') {
      prototype.componentWillMount = componentWillMount;
      prototype.componentWillReceiveProps = componentWillReceiveProps;
    }

    // React <= 16.2 does not support getSnapshotBeforeUpdate.
    // As a workaround, use cWU to invoke the new lifecycle.
    // Newer versions of React will ignore that lifecycle if gSBU exists.
    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
      if (typeof prototype.componentDidUpdate !== 'function') {
        throw new Error(
          'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
        );
      }

      prototype.componentWillUpdate = componentWillUpdate;

      var componentDidUpdate = prototype.componentDidUpdate;

      prototype.componentDidUpdate = function componentDidUpdatePolyfill(
        prevProps,
        prevState,
        maybeSnapshot
      ) {
        // 16.3+ will not execute our will-update method;
        // It will pass a snapshot value to did-update though.
        // Older versions will require our polyfilled will-update value.
        // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
        // Because for <= 15.x versions this might be a "prevContext" object.
        // We also can't just check "__reactInternalSnapshot",
        // Because get-snapshot might return a falsy value.
        // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
        var snapshot = this.__reactInternalSnapshotFlag
          ? this.__reactInternalSnapshot
          : maybeSnapshot;

        componentDidUpdate.call(this, prevProps, prevState, snapshot);
      };
    }

    return Component;
  }

  var reactLifecyclesCompat_es = /*#__PURE__*/Object.freeze({
    __proto__: null,
    polyfill: polyfill
  });

  var _reactLifecyclesCompat = /*@__PURE__*/getAugmentedNamespace(reactLifecyclesCompat_es);

  var Modal_1 = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.bodyOpenClassName = exports.portalClassName = undefined;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();



  var _react2 = _interopRequireDefault(React__default['default']);



  var _reactDom2 = _interopRequireDefault(_reactDom__default['default']);



  var _propTypes2 = _interopRequireDefault(propTypes);



  var _ModalPortal2 = _interopRequireDefault(ModalPortal_1);



  var ariaAppHider$1 = _interopRequireWildcard(ariaAppHider);



  var _safeHTMLElement2 = _interopRequireDefault(safeHTMLElement);



  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var portalClassName = exports.portalClassName = "ReactModalPortal";
  var bodyOpenClassName = exports.bodyOpenClassName = "ReactModal__Body--open";

  var isReact16 = safeHTMLElement.canUseDOM && _reactDom2.default.createPortal !== undefined;

  var getCreatePortal = function getCreatePortal() {
    return isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;
  };

  function getParentElement(parentSelector) {
    return parentSelector();
  }

  var Modal = function (_Component) {
    _inherits(Modal, _Component);

    function Modal() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Modal);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function () {
        !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);
        var parent = getParentElement(_this.props.parentSelector);
        if (parent && parent.contains(_this.node)) {
          parent.removeChild(_this.node);
        } else {
          // eslint-disable-next-line no-console
          console.warn('React-Modal: "parentSelector" prop did not returned any DOM ' + "element. Make sure that the parent element is unmounted to " + "avoid any memory leaks.");
        }
      }, _this.portalRef = function (ref) {
        _this.portal = ref;
      }, _this.renderPortal = function (props) {
        var createPortal = getCreatePortal();
        var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends({ defaultStyles: Modal.defaultStyles }, props)), _this.node);
        _this.portalRef(portal);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Modal, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!safeHTMLElement.canUseDOM) return;

        if (!isReact16) {
          this.node = document.createElement("div");
        }
        this.node.className = this.props.portalClassName;

        var parent = getParentElement(this.props.parentSelector);
        parent.appendChild(this.node);

        !isReact16 && this.renderPortal(this.props);
      }
    }, {
      key: "getSnapshotBeforeUpdate",
      value: function getSnapshotBeforeUpdate(prevProps) {
        var prevParent = getParentElement(prevProps.parentSelector);
        var nextParent = getParentElement(this.props.parentSelector);
        return { prevParent: prevParent, nextParent: nextParent };
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, _, snapshot) {
        if (!safeHTMLElement.canUseDOM) return;
        var _props = this.props,
            isOpen = _props.isOpen,
            portalClassName = _props.portalClassName;


        if (prevProps.portalClassName !== portalClassName) {
          this.node.className = portalClassName;
        }

        var prevParent = snapshot.prevParent,
            nextParent = snapshot.nextParent;

        if (nextParent !== prevParent) {
          prevParent.removeChild(this.node);
          nextParent.appendChild(this.node);
        }

        // Stop unnecessary renders if modal is remaining closed
        if (!prevProps.isOpen && !isOpen) return;

        !isReact16 && this.renderPortal(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (!safeHTMLElement.canUseDOM || !this.node || !this.portal) return;

        var state = this.portal.state;
        var now = Date.now();
        var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);

        if (closesAt) {
          if (!state.beforeClose) {
            this.portal.closeWithTimeout();
          }

          setTimeout(this.removePortal, closesAt - now);
        } else {
          this.removePortal();
        }
      }
    }, {
      key: "render",
      value: function render() {
        if (!safeHTMLElement.canUseDOM || !isReact16) {
          return null;
        }

        if (!this.node && isReact16) {
          this.node = document.createElement("div");
        }

        var createPortal = getCreatePortal();
        return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends({
          ref: this.portalRef,
          defaultStyles: Modal.defaultStyles
        }, this.props)), this.node);
      }
    }], [{
      key: "setAppElement",
      value: function setAppElement(element) {
        ariaAppHider$1.setElement(element);
      }

      /* eslint-disable react/no-unused-prop-types */

      /* eslint-enable react/no-unused-prop-types */

    }]);

    return Modal;
  }(React__default['default'].Component);

  Modal.propTypes = {
    isOpen: _propTypes2.default.bool.isRequired,
    style: _propTypes2.default.shape({
      content: _propTypes2.default.object,
      overlay: _propTypes2.default.object
    }),
    portalClassName: _propTypes2.default.string,
    bodyOpenClassName: _propTypes2.default.string,
    htmlOpenClassName: _propTypes2.default.string,
    className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
      base: _propTypes2.default.string.isRequired,
      afterOpen: _propTypes2.default.string.isRequired,
      beforeClose: _propTypes2.default.string.isRequired
    })]),
    overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
      base: _propTypes2.default.string.isRequired,
      afterOpen: _propTypes2.default.string.isRequired,
      beforeClose: _propTypes2.default.string.isRequired
    })]),
    appElement: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_safeHTMLElement2.default), _propTypes2.default.instanceOf(safeHTMLElement.SafeHTMLCollection), _propTypes2.default.instanceOf(safeHTMLElement.SafeNodeList), _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_safeHTMLElement2.default))]),
    onAfterOpen: _propTypes2.default.func,
    onRequestClose: _propTypes2.default.func,
    closeTimeoutMS: _propTypes2.default.number,
    ariaHideApp: _propTypes2.default.bool,
    shouldFocusAfterRender: _propTypes2.default.bool,
    shouldCloseOnOverlayClick: _propTypes2.default.bool,
    shouldReturnFocusAfterClose: _propTypes2.default.bool,
    preventScroll: _propTypes2.default.bool,
    parentSelector: _propTypes2.default.func,
    aria: _propTypes2.default.object,
    data: _propTypes2.default.object,
    role: _propTypes2.default.string,
    contentLabel: _propTypes2.default.string,
    shouldCloseOnEsc: _propTypes2.default.bool,
    overlayRef: _propTypes2.default.func,
    contentRef: _propTypes2.default.func,
    id: _propTypes2.default.string,
    overlayElement: _propTypes2.default.func,
    contentElement: _propTypes2.default.func
  };
  Modal.defaultProps = {
    isOpen: false,
    portalClassName: portalClassName,
    bodyOpenClassName: bodyOpenClassName,
    role: "dialog",
    ariaHideApp: true,
    closeTimeoutMS: 0,
    shouldFocusAfterRender: true,
    shouldCloseOnEsc: true,
    shouldCloseOnOverlayClick: true,
    shouldReturnFocusAfterClose: true,
    preventScroll: false,
    parentSelector: function parentSelector() {
      return document.body;
    },
    overlayElement: function overlayElement(props, contentEl) {
      return _react2.default.createElement(
        "div",
        props,
        contentEl
      );
    },
    contentElement: function contentElement(props, children) {
      return _react2.default.createElement(
        "div",
        props,
        children
      );
    }
  };
  Modal.defaultStyles = {
    overlay: {
      position: "fixed",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: "rgba(255, 255, 255, 0.75)"
    },
    content: {
      position: "absolute",
      top: "40px",
      left: "40px",
      right: "40px",
      bottom: "40px",
      border: "1px solid #ccc",
      background: "#fff",
      overflow: "auto",
      WebkitOverflowScrolling: "touch",
      borderRadius: "4px",
      outline: "none",
      padding: "20px"
    }
  };


  (0, _reactLifecyclesCompat.polyfill)(Modal);

  exports.default = Modal;
  });

  var lib = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });



  var _Modal2 = _interopRequireDefault(Modal_1);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Modal2.default;
  module.exports = exports["default"];
  });

  var Modal = /*@__PURE__*/getDefaultExportFromCjs(lib);

  function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties$1(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass$1(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties$1(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties$1(Constructor, staticProps);
    return Constructor;
  }

  function _defineProperty$2(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectSpread$9(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty$2(target, key, source[key]);
      });
    }

    return target;
  }

  function _inherits$1(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf$1(subClass, superClass);
  }

  function _getPrototypeOf$1(o) {
    _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf$1(o);
  }

  function _setPrototypeOf$1(o, p) {
    _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf$1(o, p);
  }

  function _assertThisInitialized$1(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn$1(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized$1(self);
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _toConsumableArray$1(arr) {
    return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _nonIterableSpread$1();
  }

  function _arrayWithoutHoles$1(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray$1(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _nonIterableSpread$1() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  /**
   * Placeholder for future translate functionality
   */
  function translate(str) {
    var replaceStrings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (!str) {
      return '';
    }

    var translated = str;

    if (replaceStrings) {
      Object.keys(replaceStrings).forEach(function (placeholder) {
        translated = translated.replace(placeholder, replaceStrings[placeholder]);
      });
    }

    return translated;
  }
  function getWindowWidth() {
    return typeof global$1.window !== 'undefined' ? global$1.window.innerWidth : 0;
  }
  function getWindowHeight() {
    return typeof global$1.window !== 'undefined' ? global$1.window.innerHeight : 0;
  } // Get the highest window context that isn't cross-origin
  // (When in an iframe)

  function getHighestSafeWindowContext() {
    var self = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : global$1.window.self;
    var referrer = self.document.referrer; // If we reached the top level, return self

    if (self === global$1.window.top || !referrer) {
      return self;
    }

    var getOrigin = function getOrigin(href) {
      return href.match(/(.*\/\/.*?)(\/|$)/)[1];
    }; // If parent is the same origin, we can move up one context
    // Reference: https://stackoverflow.com/a/21965342/1601953


    if (getOrigin(self.location.href) === getOrigin(referrer)) {
      return getHighestSafeWindowContext(self.parent);
    } // If a different origin, we consider the current level
    // as the top reachable one


    return self;
  }

  // Min image zoom level
  var MIN_ZOOM_LEVEL = 0; // Max image zoom level

  var MAX_ZOOM_LEVEL = 300; // Size ratio between previous and next zoom levels

  var ZOOM_RATIO = 1.007; // How much to increase/decrease the zoom level when the zoom buttons are clicked

  var ZOOM_BUTTON_INCREMENT_SIZE = 100; // Used to judge the amount of horizontal scroll needed to initiate a image move

  var WHEEL_MOVE_X_THRESHOLD = 200; // Used to judge the amount of vertical scroll needed to initiate a zoom action

  var WHEEL_MOVE_Y_THRESHOLD = 1;
  var KEYS = {
    ESC: 27,
    LEFT_ARROW: 37,
    RIGHT_ARROW: 39
  }; // Actions

  var ACTION_NONE = 0;
  var ACTION_MOVE = 1;
  var ACTION_SWIPE = 2;
  var ACTION_PINCH = 3;

  var SOURCE_ANY = 0;
  var SOURCE_MOUSE = 1;
  var SOURCE_TOUCH = 2;
  var SOURCE_POINTER = 3; // Minimal swipe distance

  var MIN_SWIPE_DISTANCE = 200;

  var ReactImageLightbox =
  /*#__PURE__*/
  function (_Component) {
    _inherits$1(ReactImageLightbox, _Component);

    _createClass$1(ReactImageLightbox, null, [{
      key: "isTargetMatchImage",
      value: function isTargetMatchImage(target) {
        return target && /ril-image-current/.test(target.className);
      }
    }, {
      key: "parseMouseEvent",
      value: function parseMouseEvent(mouseEvent) {
        return {
          id: 'mouse',
          source: SOURCE_MOUSE,
          x: parseInt(mouseEvent.clientX, 10),
          y: parseInt(mouseEvent.clientY, 10)
        };
      }
    }, {
      key: "parseTouchPointer",
      value: function parseTouchPointer(touchPointer) {
        return {
          id: touchPointer.identifier,
          source: SOURCE_TOUCH,
          x: parseInt(touchPointer.clientX, 10),
          y: parseInt(touchPointer.clientY, 10)
        };
      }
    }, {
      key: "parsePointerEvent",
      value: function parsePointerEvent(pointerEvent) {
        return {
          id: pointerEvent.pointerId,
          source: SOURCE_POINTER,
          x: parseInt(pointerEvent.clientX, 10),
          y: parseInt(pointerEvent.clientY, 10)
        };
      } // Request to transition to the previous image

    }, {
      key: "getTransform",
      value: function getTransform(_ref) {
        var _ref$x = _ref.x,
            x = _ref$x === void 0 ? 0 : _ref$x,
            _ref$y = _ref.y,
            y = _ref$y === void 0 ? 0 : _ref$y,
            _ref$zoom = _ref.zoom,
            zoom = _ref$zoom === void 0 ? 1 : _ref$zoom,
            width = _ref.width,
            targetWidth = _ref.targetWidth;
        var nextX = x;
        var windowWidth = getWindowWidth();

        if (width > windowWidth) {
          nextX += (windowWidth - width) / 2;
        }

        var scaleFactor = zoom * (targetWidth / width);
        return {
          transform: "translate3d(".concat(nextX, "px,").concat(y, "px,0) scale3d(").concat(scaleFactor, ",").concat(scaleFactor, ",1)")
        };
      }
    }]);

    function ReactImageLightbox(props) {
      var _this;

      _classCallCheck$1(this, ReactImageLightbox);

      _this = _possibleConstructorReturn$1(this, _getPrototypeOf$1(ReactImageLightbox).call(this, props));
      _this.state = {
        //-----------------------------
        // Animation
        //-----------------------------
        // Lightbox is closing
        // When Lightbox is mounted, if animation is enabled it will open with the reverse of the closing animation
        isClosing: !props.animationDisabled,
        // Component parts should animate (e.g., when images are moving, or image is being zoomed)
        shouldAnimate: false,
        //-----------------------------
        // Zoom settings
        //-----------------------------
        // Zoom level of image
        zoomLevel: MIN_ZOOM_LEVEL,
        //-----------------------------
        // Image position settings
        //-----------------------------
        // Horizontal offset from center
        offsetX: 0,
        // Vertical offset from center
        offsetY: 0,
        // image load error for srcType
        loadErrorStatus: {}
      }; // Refs

      _this.outerEl = React__default['default'].createRef();
      _this.zoomInBtn = React__default['default'].createRef();
      _this.zoomOutBtn = React__default['default'].createRef();
      _this.caption = React__default['default'].createRef();
      _this.closeIfClickInner = _this.closeIfClickInner.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleImageDoubleClick = _this.handleImageDoubleClick.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleImageMouseWheel = _this.handleImageMouseWheel.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleKeyInput = _this.handleKeyInput.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleMouseUp = _this.handleMouseUp.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleMouseDown = _this.handleMouseDown.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleMouseMove = _this.handleMouseMove.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleOuterMousewheel = _this.handleOuterMousewheel.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleTouchStart = _this.handleTouchStart.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleTouchMove = _this.handleTouchMove.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleTouchEnd = _this.handleTouchEnd.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handlePointerEvent = _this.handlePointerEvent.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleCaptionMousewheel = _this.handleCaptionMousewheel.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleWindowResize = _this.handleWindowResize.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleZoomInButtonClick = _this.handleZoomInButtonClick.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.handleZoomOutButtonClick = _this.handleZoomOutButtonClick.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.requestClose = _this.requestClose.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.requestMoveNext = _this.requestMoveNext.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      _this.requestMovePrev = _this.requestMovePrev.bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)));
      return _this;
    }

    _createClass$1(ReactImageLightbox, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        // Timeouts - always clear it before umount
        this.timeouts = []; // Current action

        this.currentAction = ACTION_NONE; // Events source

        this.eventsSource = SOURCE_ANY; // Empty pointers list

        this.pointerList = []; // Prevent inner close

        this.preventInnerClose = false;
        this.preventInnerCloseTimeout = null; // Used to disable animation when changing props.mainSrc|nextSrc|prevSrc

        this.keyPressed = false; // Used to store load state / dimensions of images

        this.imageCache = {}; // Time the last keydown event was called (used in keyboard action rate limiting)

        this.lastKeyDownTime = 0; // Used for debouncing window resize event

        this.resizeTimeout = null; // Used to determine when actions are triggered by the scroll wheel

        this.wheelActionTimeout = null;
        this.resetScrollTimeout = null;
        this.scrollX = 0;
        this.scrollY = 0; // Used in panning zoomed images

        this.moveStartX = 0;
        this.moveStartY = 0;
        this.moveStartOffsetX = 0;
        this.moveStartOffsetY = 0; // Used to swipe

        this.swipeStartX = 0;
        this.swipeStartY = 0;
        this.swipeEndX = 0;
        this.swipeEndY = 0; // Used to pinch

        this.pinchTouchList = null;
        this.pinchDistance = 0; // Used to differentiate between images with identical src

        this.keyCounter = 0; // Used to detect a move when all src's remain unchanged (four or more of the same image in a row)

        this.moveRequested = false;

        if (!this.props.animationDisabled) {
          // Make opening animation play
          this.setState({
            isClosing: false
          });
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        // Prevents cross-origin errors when using a cross-origin iframe
        this.windowContext = getHighestSafeWindowContext();
        this.listeners = {
          resize: this.handleWindowResize,
          mouseup: this.handleMouseUp,
          touchend: this.handleTouchEnd,
          touchcancel: this.handleTouchEnd,
          pointerdown: this.handlePointerEvent,
          pointermove: this.handlePointerEvent,
          pointerup: this.handlePointerEvent,
          pointercancel: this.handlePointerEvent
        };
        Object.keys(this.listeners).forEach(function (type) {
          _this2.windowContext.addEventListener(type, _this2.listeners[type]);
        });
        this.loadAllImages();
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var _this3 = this;

        // Iterate through the source types for prevProps and nextProps to
        //  determine if any of the sources changed
        var sourcesChanged = false;
        var prevSrcDict = {};
        var nextSrcDict = {};
        this.getSrcTypes().forEach(function (srcType) {
          if (_this3.props[srcType.name] !== nextProps[srcType.name]) {
            sourcesChanged = true;
            prevSrcDict[_this3.props[srcType.name]] = true;
            nextSrcDict[nextProps[srcType.name]] = true;
          }
        });

        if (sourcesChanged || this.moveRequested) {
          // Reset the loaded state for images not rendered next
          Object.keys(prevSrcDict).forEach(function (prevSrc) {
            if (!(prevSrc in nextSrcDict) && prevSrc in _this3.imageCache) {
              _this3.imageCache[prevSrc].loaded = false;
            }
          });
          this.moveRequested = false; // Load any new images

          this.loadAllImages(nextProps);
        }
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate() {
        // Wait for move...
        return !this.moveRequested;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        var _this4 = this;

        this.didUnmount = true;
        Object.keys(this.listeners).forEach(function (type) {
          _this4.windowContext.removeEventListener(type, _this4.listeners[type]);
        });
        this.timeouts.forEach(function (tid) {
          return clearTimeout(tid);
        });
      }
    }, {
      key: "setTimeout",
      value: function (_setTimeout) {
        function setTimeout(_x, _x2) {
          return _setTimeout.apply(this, arguments);
        }

        setTimeout.toString = function () {
          return _setTimeout.toString();
        };

        return setTimeout;
      }(function (func, time) {
        var _this5 = this;

        var id = setTimeout(function () {
          _this5.timeouts = _this5.timeouts.filter(function (tid) {
            return tid !== id;
          });
          func();
        }, time);
        this.timeouts.push(id);
        return id;
      })
    }, {
      key: "setPreventInnerClose",
      value: function setPreventInnerClose() {
        var _this6 = this;

        if (this.preventInnerCloseTimeout) {
          this.clearTimeout(this.preventInnerCloseTimeout);
        }

        this.preventInnerClose = true;
        this.preventInnerCloseTimeout = this.setTimeout(function () {
          _this6.preventInnerClose = false;
          _this6.preventInnerCloseTimeout = null;
        }, 100);
      } // Get info for the best suited image to display with the given srcType

    }, {
      key: "getBestImageForType",
      value: function getBestImageForType(srcType) {
        var imageSrc = this.props[srcType];
        var fitSizes = {};

        if (this.isImageLoaded(imageSrc)) {
          // Use full-size image if available
          fitSizes = this.getFitSizes(this.imageCache[imageSrc].width, this.imageCache[imageSrc].height);
        } else if (this.isImageLoaded(this.props["".concat(srcType, "Thumbnail")])) {
          // Fall back to using thumbnail if the image has not been loaded
          imageSrc = this.props["".concat(srcType, "Thumbnail")];
          fitSizes = this.getFitSizes(this.imageCache[imageSrc].width, this.imageCache[imageSrc].height, true);
        } else {
          return null;
        }

        return {
          src: imageSrc,
          height: this.imageCache[imageSrc].height,
          width: this.imageCache[imageSrc].width,
          targetHeight: fitSizes.height,
          targetWidth: fitSizes.width
        };
      } // Get sizing for when an image is larger than the window

    }, {
      key: "getFitSizes",
      value: function getFitSizes(width, height, stretch) {
        var boxSize = this.getLightboxRect();
        var maxHeight = boxSize.height - this.props.imagePadding * 2;
        var maxWidth = boxSize.width - this.props.imagePadding * 2;

        if (!stretch) {
          maxHeight = Math.min(maxHeight, height);
          maxWidth = Math.min(maxWidth, width);
        }

        var maxRatio = maxWidth / maxHeight;
        var srcRatio = width / height;

        if (maxRatio > srcRatio) {
          // height is the constraining dimension of the photo
          return {
            width: width * maxHeight / height,
            height: maxHeight
          };
        }

        return {
          width: maxWidth,
          height: height * maxWidth / width
        };
      }
    }, {
      key: "getMaxOffsets",
      value: function getMaxOffsets() {
        var zoomLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.zoomLevel;
        var currentImageInfo = this.getBestImageForType('mainSrc');

        if (currentImageInfo === null) {
          return {
            maxX: 0,
            minX: 0,
            maxY: 0,
            minY: 0
          };
        }

        var boxSize = this.getLightboxRect();
        var zoomMultiplier = this.getZoomMultiplier(zoomLevel);
        var maxX = 0;

        if (zoomMultiplier * currentImageInfo.width - boxSize.width < 0) {
          // if there is still blank space in the X dimension, don't limit except to the opposite edge
          maxX = (boxSize.width - zoomMultiplier * currentImageInfo.width) / 2;
        } else {
          maxX = (zoomMultiplier * currentImageInfo.width - boxSize.width) / 2;
        }

        var maxY = 0;

        if (zoomMultiplier * currentImageInfo.height - boxSize.height < 0) {
          // if there is still blank space in the Y dimension, don't limit except to the opposite edge
          maxY = (boxSize.height - zoomMultiplier * currentImageInfo.height) / 2;
        } else {
          maxY = (zoomMultiplier * currentImageInfo.height - boxSize.height) / 2;
        }

        return {
          maxX: maxX,
          maxY: maxY,
          minX: -1 * maxX,
          minY: -1 * maxY
        };
      } // Get image src types

    }, {
      key: "getSrcTypes",
      value: function getSrcTypes() {
        return [{
          name: 'mainSrc',
          keyEnding: "i".concat(this.keyCounter)
        }, {
          name: 'mainSrcThumbnail',
          keyEnding: "t".concat(this.keyCounter)
        }, {
          name: 'nextSrc',
          keyEnding: "i".concat(this.keyCounter + 1)
        }, {
          name: 'nextSrcThumbnail',
          keyEnding: "t".concat(this.keyCounter + 1)
        }, {
          name: 'prevSrc',
          keyEnding: "i".concat(this.keyCounter - 1)
        }, {
          name: 'prevSrcThumbnail',
          keyEnding: "t".concat(this.keyCounter - 1)
        }];
      }
      /**
       * Get sizing when the image is scaled
       */

    }, {
      key: "getZoomMultiplier",
      value: function getZoomMultiplier() {
        var zoomLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.zoomLevel;
        return Math.pow(ZOOM_RATIO, zoomLevel);
      }
      /**
       * Get the size of the lightbox in pixels
       */

    }, {
      key: "getLightboxRect",
      value: function getLightboxRect() {
        if (this.outerEl.current) {
          return this.outerEl.current.getBoundingClientRect();
        }

        return {
          width: getWindowWidth(),
          height: getWindowHeight(),
          top: 0,
          right: 0,
          bottom: 0,
          left: 0
        };
      }
    }, {
      key: "clearTimeout",
      value: function (_clearTimeout) {
        function clearTimeout(_x3) {
          return _clearTimeout.apply(this, arguments);
        }

        clearTimeout.toString = function () {
          return _clearTimeout.toString();
        };

        return clearTimeout;
      }(function (id) {
        this.timeouts = this.timeouts.filter(function (tid) {
          return tid !== id;
        });
        clearTimeout(id);
      }) // Change zoom level

    }, {
      key: "changeZoom",
      value: function changeZoom(zoomLevel, clientX, clientY) {
        // Ignore if zoom disabled
        if (!this.props.enableZoom) {
          return;
        } // Constrain zoom level to the set bounds


        var nextZoomLevel = Math.max(MIN_ZOOM_LEVEL, Math.min(MAX_ZOOM_LEVEL, zoomLevel)); // Ignore requests that don't change the zoom level

        if (nextZoomLevel === this.state.zoomLevel) {
          return;
        }

        if (nextZoomLevel === MIN_ZOOM_LEVEL) {
          // Snap back to center if zoomed all the way out
          this.setState({
            zoomLevel: nextZoomLevel,
            offsetX: 0,
            offsetY: 0
          });
          return;
        }

        var imageBaseSize = this.getBestImageForType('mainSrc');

        if (imageBaseSize === null) {
          return;
        }

        var currentZoomMultiplier = this.getZoomMultiplier();
        var nextZoomMultiplier = this.getZoomMultiplier(nextZoomLevel); // Default to the center of the image to zoom when no mouse position specified

        var boxRect = this.getLightboxRect();
        var pointerX = typeof clientX !== 'undefined' ? clientX - boxRect.left : boxRect.width / 2;
        var pointerY = typeof clientY !== 'undefined' ? clientY - boxRect.top : boxRect.height / 2;
        var currentImageOffsetX = (boxRect.width - imageBaseSize.width * currentZoomMultiplier) / 2;
        var currentImageOffsetY = (boxRect.height - imageBaseSize.height * currentZoomMultiplier) / 2;
        var currentImageRealOffsetX = currentImageOffsetX - this.state.offsetX;
        var currentImageRealOffsetY = currentImageOffsetY - this.state.offsetY;
        var currentPointerXRelativeToImage = (pointerX - currentImageRealOffsetX) / currentZoomMultiplier;
        var currentPointerYRelativeToImage = (pointerY - currentImageRealOffsetY) / currentZoomMultiplier;
        var nextImageRealOffsetX = pointerX - currentPointerXRelativeToImage * nextZoomMultiplier;
        var nextImageRealOffsetY = pointerY - currentPointerYRelativeToImage * nextZoomMultiplier;
        var nextImageOffsetX = (boxRect.width - imageBaseSize.width * nextZoomMultiplier) / 2;
        var nextImageOffsetY = (boxRect.height - imageBaseSize.height * nextZoomMultiplier) / 2;
        var nextOffsetX = nextImageOffsetX - nextImageRealOffsetX;
        var nextOffsetY = nextImageOffsetY - nextImageRealOffsetY; // When zooming out, limit the offset so things don't get left askew

        if (this.currentAction !== ACTION_PINCH) {
          var maxOffsets = this.getMaxOffsets();

          if (this.state.zoomLevel > nextZoomLevel) {
            nextOffsetX = Math.max(maxOffsets.minX, Math.min(maxOffsets.maxX, nextOffsetX));
            nextOffsetY = Math.max(maxOffsets.minY, Math.min(maxOffsets.maxY, nextOffsetY));
          }
        }

        this.setState({
          zoomLevel: nextZoomLevel,
          offsetX: nextOffsetX,
          offsetY: nextOffsetY
        });
      }
    }, {
      key: "closeIfClickInner",
      value: function closeIfClickInner(event) {
        if (!this.preventInnerClose && event.target.className.search(/\bril-inner\b/) > -1) {
          this.requestClose(event);
        }
      }
      /**
       * Handle user keyboard actions
       */

    }, {
      key: "handleKeyInput",
      value: function handleKeyInput(event) {
        event.stopPropagation(); // Ignore key input during animations

        if (this.isAnimating()) {
          return;
        } // Allow slightly faster navigation through the images when user presses keys repeatedly


        if (event.type === 'keyup') {
          this.lastKeyDownTime -= this.props.keyRepeatKeyupBonus;
          return;
        }

        var keyCode = event.which || event.keyCode; // Ignore key presses that happen too close to each other (when rapid fire key pressing or holding down the key)
        // But allow it if it's a lightbox closing action

        var currentTime = new Date();

        if (currentTime.getTime() - this.lastKeyDownTime < this.props.keyRepeatLimit && keyCode !== KEYS.ESC) {
          return;
        }

        this.lastKeyDownTime = currentTime.getTime();

        switch (keyCode) {
          // ESC key closes the lightbox
          case KEYS.ESC:
            event.preventDefault();
            this.requestClose(event);
            break;
          // Left arrow key moves to previous image

          case KEYS.LEFT_ARROW:
            if (!this.props.prevSrc) {
              return;
            }

            event.preventDefault();
            this.keyPressed = true;
            this.requestMovePrev(event);
            break;
          // Right arrow key moves to next image

          case KEYS.RIGHT_ARROW:
            if (!this.props.nextSrc) {
              return;
            }

            event.preventDefault();
            this.keyPressed = true;
            this.requestMoveNext(event);
            break;
        }
      }
      /**
       * Handle a mouse wheel event over the lightbox container
       */

    }, {
      key: "handleOuterMousewheel",
      value: function handleOuterMousewheel(event) {
        var _this7 = this;

        // Prevent scrolling of the background
        event.stopPropagation();
        var xThreshold = WHEEL_MOVE_X_THRESHOLD;
        var actionDelay = 0;
        var imageMoveDelay = 500;
        this.clearTimeout(this.resetScrollTimeout);
        this.resetScrollTimeout = this.setTimeout(function () {
          _this7.scrollX = 0;
          _this7.scrollY = 0;
        }, 300); // Prevent rapid-fire zoom behavior

        if (this.wheelActionTimeout !== null || this.isAnimating()) {
          return;
        }

        if (Math.abs(event.deltaY) < Math.abs(event.deltaX)) {
          // handle horizontal scrolls with image moves
          this.scrollY = 0;
          this.scrollX += event.deltaX;
          var bigLeapX = xThreshold / 2; // If the scroll amount has accumulated sufficiently, or a large leap was taken

          if (this.scrollX >= xThreshold || event.deltaX >= bigLeapX) {
            // Scroll right moves to next
            this.requestMoveNext(event);
            actionDelay = imageMoveDelay;
            this.scrollX = 0;
          } else if (this.scrollX <= -1 * xThreshold || event.deltaX <= -1 * bigLeapX) {
            // Scroll left moves to previous
            this.requestMovePrev(event);
            actionDelay = imageMoveDelay;
            this.scrollX = 0;
          }
        } // Allow successive actions after the set delay


        if (actionDelay !== 0) {
          this.wheelActionTimeout = this.setTimeout(function () {
            _this7.wheelActionTimeout = null;
          }, actionDelay);
        }
      }
    }, {
      key: "handleImageMouseWheel",
      value: function handleImageMouseWheel(event) {
        var yThreshold = WHEEL_MOVE_Y_THRESHOLD;

        if (Math.abs(event.deltaY) >= Math.abs(event.deltaX)) {
          event.stopPropagation(); // If the vertical scroll amount was large enough, perform a zoom

          if (Math.abs(event.deltaY) < yThreshold) {
            return;
          }

          this.scrollX = 0;
          this.scrollY += event.deltaY;
          this.changeZoom(this.state.zoomLevel - event.deltaY, event.clientX, event.clientY);
        }
      }
      /**
       * Handle a double click on the current image
       */

    }, {
      key: "handleImageDoubleClick",
      value: function handleImageDoubleClick(event) {
        if (this.state.zoomLevel > MIN_ZOOM_LEVEL) {
          // A double click when zoomed in zooms all the way out
          this.changeZoom(MIN_ZOOM_LEVEL, event.clientX, event.clientY);
        } else {
          // A double click when zoomed all the way out zooms in
          this.changeZoom(this.state.zoomLevel + ZOOM_BUTTON_INCREMENT_SIZE, event.clientX, event.clientY);
        }
      }
    }, {
      key: "shouldHandleEvent",
      value: function shouldHandleEvent(source) {
        if (this.eventsSource === source) {
          return true;
        }

        if (this.eventsSource === SOURCE_ANY) {
          this.eventsSource = source;
          return true;
        }

        switch (source) {
          case SOURCE_MOUSE:
            return false;

          case SOURCE_TOUCH:
            this.eventsSource = SOURCE_TOUCH;
            this.filterPointersBySource();
            return true;

          case SOURCE_POINTER:
            if (this.eventsSource === SOURCE_MOUSE) {
              this.eventsSource = SOURCE_POINTER;
              this.filterPointersBySource();
              return true;
            }

            return false;

          default:
            return false;
        }
      }
    }, {
      key: "addPointer",
      value: function addPointer(pointer) {
        this.pointerList.push(pointer);
      }
    }, {
      key: "removePointer",
      value: function removePointer(pointer) {
        this.pointerList = this.pointerList.filter(function (_ref2) {
          var id = _ref2.id;
          return id !== pointer.id;
        });
      }
    }, {
      key: "filterPointersBySource",
      value: function filterPointersBySource() {
        var _this8 = this;

        this.pointerList = this.pointerList.filter(function (_ref3) {
          var source = _ref3.source;
          return source === _this8.eventsSource;
        });
      }
    }, {
      key: "handleMouseDown",
      value: function handleMouseDown(event) {
        if (this.shouldHandleEvent(SOURCE_MOUSE) && ReactImageLightbox.isTargetMatchImage(event.target)) {
          this.addPointer(ReactImageLightbox.parseMouseEvent(event));
          this.multiPointerStart(event);
        }
      }
    }, {
      key: "handleMouseMove",
      value: function handleMouseMove(event) {
        if (this.shouldHandleEvent(SOURCE_MOUSE)) {
          this.multiPointerMove(event, [ReactImageLightbox.parseMouseEvent(event)]);
        }
      }
    }, {
      key: "handleMouseUp",
      value: function handleMouseUp(event) {
        if (this.shouldHandleEvent(SOURCE_MOUSE)) {
          this.removePointer(ReactImageLightbox.parseMouseEvent(event));
          this.multiPointerEnd(event);
        }
      }
    }, {
      key: "handlePointerEvent",
      value: function handlePointerEvent(event) {
        if (this.shouldHandleEvent(SOURCE_POINTER)) {
          switch (event.type) {
            case 'pointerdown':
              if (ReactImageLightbox.isTargetMatchImage(event.target)) {
                this.addPointer(ReactImageLightbox.parsePointerEvent(event));
                this.multiPointerStart(event);
              }

              break;

            case 'pointermove':
              this.multiPointerMove(event, [ReactImageLightbox.parsePointerEvent(event)]);
              break;

            case 'pointerup':
            case 'pointercancel':
              this.removePointer(ReactImageLightbox.parsePointerEvent(event));
              this.multiPointerEnd(event);
              break;
          }
        }
      }
    }, {
      key: "handleTouchStart",
      value: function handleTouchStart(event) {
        var _this9 = this;

        if (this.shouldHandleEvent(SOURCE_TOUCH) && ReactImageLightbox.isTargetMatchImage(event.target)) {
          [].forEach.call(event.changedTouches, function (eventTouch) {
            return _this9.addPointer(ReactImageLightbox.parseTouchPointer(eventTouch));
          });
          this.multiPointerStart(event);
        }
      }
    }, {
      key: "handleTouchMove",
      value: function handleTouchMove(event) {
        if (this.shouldHandleEvent(SOURCE_TOUCH)) {
          this.multiPointerMove(event, [].map.call(event.changedTouches, function (eventTouch) {
            return ReactImageLightbox.parseTouchPointer(eventTouch);
          }));
        }
      }
    }, {
      key: "handleTouchEnd",
      value: function handleTouchEnd(event) {
        var _this10 = this;

        if (this.shouldHandleEvent(SOURCE_TOUCH)) {
          [].map.call(event.changedTouches, function (touch) {
            return _this10.removePointer(ReactImageLightbox.parseTouchPointer(touch));
          });
          this.multiPointerEnd(event);
        }
      }
    }, {
      key: "decideMoveOrSwipe",
      value: function decideMoveOrSwipe(pointer) {
        if (this.state.zoomLevel <= MIN_ZOOM_LEVEL) {
          this.handleSwipeStart(pointer);
        } else {
          this.handleMoveStart(pointer);
        }
      }
    }, {
      key: "multiPointerStart",
      value: function multiPointerStart(event) {
        this.handleEnd(null);

        switch (this.pointerList.length) {
          case 1:
            {
              event.preventDefault();
              this.decideMoveOrSwipe(this.pointerList[0]);
              break;
            }

          case 2:
            {
              event.preventDefault();
              this.handlePinchStart(this.pointerList);
              break;
            }
        }
      }
    }, {
      key: "multiPointerMove",
      value: function multiPointerMove(event, pointerList) {
        switch (this.currentAction) {
          case ACTION_MOVE:
            {
              event.preventDefault();
              this.handleMove(pointerList[0]);
              break;
            }

          case ACTION_SWIPE:
            {
              event.preventDefault();
              this.handleSwipe(pointerList[0]);
              break;
            }

          case ACTION_PINCH:
            {
              event.preventDefault();
              this.handlePinch(pointerList);
              break;
            }
        }
      }
    }, {
      key: "multiPointerEnd",
      value: function multiPointerEnd(event) {
        if (this.currentAction !== ACTION_NONE) {
          this.setPreventInnerClose();
          this.handleEnd(event);
        }

        switch (this.pointerList.length) {
          case 0:
            {
              this.eventsSource = SOURCE_ANY;
              break;
            }

          case 1:
            {
              event.preventDefault();
              this.decideMoveOrSwipe(this.pointerList[0]);
              break;
            }

          case 2:
            {
              event.preventDefault();
              this.handlePinchStart(this.pointerList);
              break;
            }
        }
      }
    }, {
      key: "handleEnd",
      value: function handleEnd(event) {
        switch (this.currentAction) {
          case ACTION_MOVE:
            this.handleMoveEnd(event);
            break;

          case ACTION_SWIPE:
            this.handleSwipeEnd(event);
            break;

          case ACTION_PINCH:
            this.handlePinchEnd(event);
            break;
        }
      } // Handle move start over the lightbox container
      // This happens:
      // - On a mouseDown event
      // - On a touchstart event

    }, {
      key: "handleMoveStart",
      value: function handleMoveStart(_ref4) {
        var clientX = _ref4.x,
            clientY = _ref4.y;

        if (!this.props.enableZoom) {
          return;
        }

        this.currentAction = ACTION_MOVE;
        this.moveStartX = clientX;
        this.moveStartY = clientY;
        this.moveStartOffsetX = this.state.offsetX;
        this.moveStartOffsetY = this.state.offsetY;
      } // Handle dragging over the lightbox container
      // This happens:
      // - After a mouseDown and before a mouseUp event
      // - After a touchstart and before a touchend event

    }, {
      key: "handleMove",
      value: function handleMove(_ref5) {
        var clientX = _ref5.x,
            clientY = _ref5.y;
        var newOffsetX = this.moveStartX - clientX + this.moveStartOffsetX;
        var newOffsetY = this.moveStartY - clientY + this.moveStartOffsetY;

        if (this.state.offsetX !== newOffsetX || this.state.offsetY !== newOffsetY) {
          this.setState({
            offsetX: newOffsetX,
            offsetY: newOffsetY
          });
        }
      }
    }, {
      key: "handleMoveEnd",
      value: function handleMoveEnd() {
        var _this11 = this;

        this.currentAction = ACTION_NONE;
        this.moveStartX = 0;
        this.moveStartY = 0;
        this.moveStartOffsetX = 0;
        this.moveStartOffsetY = 0; // Snap image back into frame if outside max offset range

        var maxOffsets = this.getMaxOffsets();
        var nextOffsetX = Math.max(maxOffsets.minX, Math.min(maxOffsets.maxX, this.state.offsetX));
        var nextOffsetY = Math.max(maxOffsets.minY, Math.min(maxOffsets.maxY, this.state.offsetY));

        if (nextOffsetX !== this.state.offsetX || nextOffsetY !== this.state.offsetY) {
          this.setState({
            offsetX: nextOffsetX,
            offsetY: nextOffsetY,
            shouldAnimate: true
          });
          this.setTimeout(function () {
            _this11.setState({
              shouldAnimate: false
            });
          }, this.props.animationDuration);
        }
      }
    }, {
      key: "handleSwipeStart",
      value: function handleSwipeStart(_ref6) {
        var clientX = _ref6.x,
            clientY = _ref6.y;
        this.currentAction = ACTION_SWIPE;
        this.swipeStartX = clientX;
        this.swipeStartY = clientY;
        this.swipeEndX = clientX;
        this.swipeEndY = clientY;
      }
    }, {
      key: "handleSwipe",
      value: function handleSwipe(_ref7) {
        var clientX = _ref7.x,
            clientY = _ref7.y;
        this.swipeEndX = clientX;
        this.swipeEndY = clientY;
      }
    }, {
      key: "handleSwipeEnd",
      value: function handleSwipeEnd(event) {
        var xDiff = this.swipeEndX - this.swipeStartX;
        var xDiffAbs = Math.abs(xDiff);
        var yDiffAbs = Math.abs(this.swipeEndY - this.swipeStartY);
        this.currentAction = ACTION_NONE;
        this.swipeStartX = 0;
        this.swipeStartY = 0;
        this.swipeEndX = 0;
        this.swipeEndY = 0;

        if (!event || this.isAnimating() || xDiffAbs < yDiffAbs * 1.5) {
          return;
        }

        if (xDiffAbs < MIN_SWIPE_DISTANCE) {
          var boxRect = this.getLightboxRect();

          if (xDiffAbs < boxRect.width / 4) {
            return;
          }
        }

        if (xDiff > 0 && this.props.prevSrc) {
          event.preventDefault();
          this.requestMovePrev();
        } else if (xDiff < 0 && this.props.nextSrc) {
          event.preventDefault();
          this.requestMoveNext();
        }
      }
    }, {
      key: "calculatePinchDistance",
      value: function calculatePinchDistance() {
        var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.pinchTouchList,
            _ref9 = _slicedToArray(_ref8, 2),
            a = _ref9[0],
            b = _ref9[1];

        return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));
      }
    }, {
      key: "calculatePinchCenter",
      value: function calculatePinchCenter() {
        var _ref10 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.pinchTouchList,
            _ref11 = _slicedToArray(_ref10, 2),
            a = _ref11[0],
            b = _ref11[1];

        return {
          x: a.x - (a.x - b.x) / 2,
          y: a.y - (a.y - b.y) / 2
        };
      }
    }, {
      key: "handlePinchStart",
      value: function handlePinchStart(pointerList) {
        if (!this.props.enableZoom) {
          return;
        }

        this.currentAction = ACTION_PINCH;
        this.pinchTouchList = pointerList.map(function (_ref12) {
          var id = _ref12.id,
              x = _ref12.x,
              y = _ref12.y;
          return {
            id: id,
            x: x,
            y: y
          };
        });
        this.pinchDistance = this.calculatePinchDistance();
      }
    }, {
      key: "handlePinch",
      value: function handlePinch(pointerList) {
        this.pinchTouchList = this.pinchTouchList.map(function (oldPointer) {
          for (var i = 0; i < pointerList.length; i += 1) {
            if (pointerList[i].id === oldPointer.id) {
              return pointerList[i];
            }
          }

          return oldPointer;
        });
        var newDistance = this.calculatePinchDistance();
        var zoomLevel = this.state.zoomLevel + newDistance - this.pinchDistance;
        this.pinchDistance = newDistance;

        var _this$calculatePinchC = this.calculatePinchCenter(this.pinchTouchList),
            clientX = _this$calculatePinchC.x,
            clientY = _this$calculatePinchC.y;

        this.changeZoom(zoomLevel, clientX, clientY);
      }
    }, {
      key: "handlePinchEnd",
      value: function handlePinchEnd() {
        this.currentAction = ACTION_NONE;
        this.pinchTouchList = null;
        this.pinchDistance = 0;
      } // Handle the window resize event

    }, {
      key: "handleWindowResize",
      value: function handleWindowResize() {
        this.clearTimeout(this.resizeTimeout);
        this.resizeTimeout = this.setTimeout(this.forceUpdate.bind(this), 100);
      }
    }, {
      key: "handleZoomInButtonClick",
      value: function handleZoomInButtonClick() {
        var nextZoomLevel = this.state.zoomLevel + ZOOM_BUTTON_INCREMENT_SIZE;
        this.changeZoom(nextZoomLevel);

        if (nextZoomLevel === MAX_ZOOM_LEVEL) {
          this.zoomOutBtn.current.focus();
        }
      }
    }, {
      key: "handleZoomOutButtonClick",
      value: function handleZoomOutButtonClick() {
        var nextZoomLevel = this.state.zoomLevel - ZOOM_BUTTON_INCREMENT_SIZE;
        this.changeZoom(nextZoomLevel);

        if (nextZoomLevel === MIN_ZOOM_LEVEL) {
          this.zoomInBtn.current.focus();
        }
      }
    }, {
      key: "handleCaptionMousewheel",
      value: function handleCaptionMousewheel(event) {
        event.stopPropagation();

        if (!this.caption.current) {
          return;
        }

        var _this$caption$current = this.caption.current.getBoundingClientRect(),
            height = _this$caption$current.height;

        var _this$caption$current2 = this.caption.current,
            scrollHeight = _this$caption$current2.scrollHeight,
            scrollTop = _this$caption$current2.scrollTop;

        if (event.deltaY > 0 && height + scrollTop >= scrollHeight || event.deltaY < 0 && scrollTop <= 0) {
          event.preventDefault();
        }
      } // Detach key and mouse input events

    }, {
      key: "isAnimating",
      value: function isAnimating() {
        return this.state.shouldAnimate || this.state.isClosing;
      } // Check if image is loaded

    }, {
      key: "isImageLoaded",
      value: function isImageLoaded(imageSrc) {
        return imageSrc && imageSrc in this.imageCache && this.imageCache[imageSrc].loaded;
      } // Load image from src and call callback with image width and height on load

    }, {
      key: "loadImage",
      value: function loadImage(srcType, imageSrc, done) {
        var _this12 = this;

        // Return the image info if it is already cached
        if (this.isImageLoaded(imageSrc)) {
          this.setTimeout(function () {
            done();
          }, 1);
          return;
        }

        var inMemoryImage = new global$1.Image();

        if (this.props.imageCrossOrigin) {
          inMemoryImage.crossOrigin = this.props.imageCrossOrigin;
        }

        inMemoryImage.onerror = function (errorEvent) {
          _this12.props.onImageLoadError(imageSrc, srcType, errorEvent); // failed to load so set the state loadErrorStatus


          _this12.setState(function (prevState) {
            return {
              loadErrorStatus: _objectSpread$9({}, prevState.loadErrorStatus, _defineProperty$2({}, srcType, true))
            };
          });

          done(errorEvent);
        };

        inMemoryImage.onload = function () {
          _this12.props.onImageLoad(imageSrc, srcType, inMemoryImage);

          _this12.imageCache[imageSrc] = {
            loaded: true,
            width: inMemoryImage.width,
            height: inMemoryImage.height
          };
          done();
        };

        inMemoryImage.src = imageSrc;
      } // Load all images and their thumbnails

    }, {
      key: "loadAllImages",
      value: function loadAllImages() {
        var _this13 = this;

        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

        var generateLoadDoneCallback = function generateLoadDoneCallback(srcType, imageSrc) {
          return function (err) {
            // Give up showing image on error
            if (err) {
              return;
            } // Don't rerender if the src is not the same as when the load started
            // or if the component has unmounted


            if (_this13.props[srcType] !== imageSrc || _this13.didUnmount) {
              return;
            } // Force rerender with the new image


            _this13.forceUpdate();
          };
        }; // Load the images


        this.getSrcTypes().forEach(function (srcType) {
          var type = srcType.name; // there is no error when we try to load it initially

          if (props[type] && _this13.state.loadErrorStatus[type]) {
            _this13.setState(function (prevState) {
              return {
                loadErrorStatus: _objectSpread$9({}, prevState.loadErrorStatus, _defineProperty$2({}, type, false))
              };
            });
          } // Load unloaded images


          if (props[type] && !_this13.isImageLoaded(props[type])) {
            _this13.loadImage(type, props[type], generateLoadDoneCallback(type, props[type]));
          }
        });
      } // Request that the lightbox be closed

    }, {
      key: "requestClose",
      value: function requestClose(event) {
        var _this14 = this;

        // Call the parent close request
        var closeLightbox = function closeLightbox() {
          return _this14.props.onCloseRequest(event);
        };

        if (this.props.animationDisabled || event.type === 'keydown' && !this.props.animationOnKeyInput) {
          // No animation
          closeLightbox();
          return;
        } // With animation
        // Start closing animation


        this.setState({
          isClosing: true
        }); // Perform the actual closing at the end of the animation

        this.setTimeout(closeLightbox, this.props.animationDuration);
      }
    }, {
      key: "requestMove",
      value: function requestMove(direction, event) {
        var _this15 = this;

        // Reset the zoom level on image move
        var nextState = {
          zoomLevel: MIN_ZOOM_LEVEL,
          offsetX: 0,
          offsetY: 0
        }; // Enable animated states

        if (!this.props.animationDisabled && (!this.keyPressed || this.props.animationOnKeyInput)) {
          nextState.shouldAnimate = true;
          this.setTimeout(function () {
            return _this15.setState({
              shouldAnimate: false
            });
          }, this.props.animationDuration);
        }

        this.keyPressed = false;
        this.moveRequested = true;

        if (direction === 'prev') {
          this.keyCounter -= 1;
          this.setState(nextState);
          this.props.onMovePrevRequest(event);
        } else {
          this.keyCounter += 1;
          this.setState(nextState);
          this.props.onMoveNextRequest(event);
        }
      } // Request to transition to the next image

    }, {
      key: "requestMoveNext",
      value: function requestMoveNext(event) {
        this.requestMove('next', event);
      } // Request to transition to the previous image

    }, {
      key: "requestMovePrev",
      value: function requestMovePrev(event) {
        this.requestMove('prev', event);
      }
    }, {
      key: "render",
      value: function render() {
        var _this16 = this;

        var _this$props = this.props,
            animationDisabled = _this$props.animationDisabled,
            animationDuration = _this$props.animationDuration,
            clickOutsideToClose = _this$props.clickOutsideToClose,
            discourageDownloads = _this$props.discourageDownloads,
            enableZoom = _this$props.enableZoom,
            imageTitle = _this$props.imageTitle,
            nextSrc = _this$props.nextSrc,
            prevSrc = _this$props.prevSrc,
            toolbarButtons = _this$props.toolbarButtons,
            reactModalStyle = _this$props.reactModalStyle,
            _onAfterOpen = _this$props.onAfterOpen,
            imageCrossOrigin = _this$props.imageCrossOrigin,
            reactModalProps = _this$props.reactModalProps;
        var _this$state = this.state,
            zoomLevel = _this$state.zoomLevel,
            offsetX = _this$state.offsetX,
            offsetY = _this$state.offsetY,
            isClosing = _this$state.isClosing,
            loadErrorStatus = _this$state.loadErrorStatus;
        var boxSize = this.getLightboxRect();
        var transitionStyle = {}; // Transition settings for sliding animations

        if (!animationDisabled && this.isAnimating()) {
          transitionStyle = _objectSpread$9({}, transitionStyle, {
            transition: "transform ".concat(animationDuration, "ms")
          });
        } // Key endings to differentiate between images with the same src


        var keyEndings = {};
        this.getSrcTypes().forEach(function (_ref13) {
          var name = _ref13.name,
              keyEnding = _ref13.keyEnding;
          keyEndings[name] = keyEnding;
        }); // Images to be displayed

        var images = [];

        var addImage = function addImage(srcType, imageClass, transforms) {
          // Ignore types that have no source defined for their full size image
          if (!_this16.props[srcType]) {
            return;
          }

          var bestImageInfo = _this16.getBestImageForType(srcType);

          var imageStyle = _objectSpread$9({}, transitionStyle, ReactImageLightbox.getTransform(_objectSpread$9({}, transforms, bestImageInfo)));

          if (zoomLevel > MIN_ZOOM_LEVEL) {
            imageStyle.cursor = 'move';
          } // support IE 9 and 11


          var hasTrueValue = function hasTrueValue(object) {
            return Object.keys(object).some(function (key) {
              return object[key];
            });
          }; // when error on one of the loads then push custom error stuff


          if (bestImageInfo === null && hasTrueValue(loadErrorStatus)) {
            images.push(React__default['default'].createElement("div", {
              className: "".concat(imageClass, " ril__image ril-errored"),
              style: imageStyle,
              key: _this16.props[srcType] + keyEndings[srcType]
            }, React__default['default'].createElement("div", {
              className: "ril__errorContainer"
            }, _this16.props.imageLoadErrorMessage)));
            return;
          }

          if (bestImageInfo === null) {
            var loadingIcon = React__default['default'].createElement("div", {
              className: "ril-loading-circle ril__loadingCircle ril__loadingContainer__icon"
            }, _toConsumableArray$1(new Array(12)).map(function (_, index) {
              return React__default['default'].createElement("div", {
                // eslint-disable-next-line react/no-array-index-key
                key: index,
                className: "ril-loading-circle-point ril__loadingCirclePoint"
              });
            })); // Fall back to loading icon if the thumbnail has not been loaded

            images.push(React__default['default'].createElement("div", {
              className: "".concat(imageClass, " ril__image ril-not-loaded"),
              style: imageStyle,
              key: _this16.props[srcType] + keyEndings[srcType]
            }, React__default['default'].createElement("div", {
              className: "ril__loadingContainer"
            }, loadingIcon)));
            return;
          }

          var imageSrc = bestImageInfo.src;

          if (discourageDownloads) {
            imageStyle.backgroundImage = "url('".concat(imageSrc, "')");
            images.push(React__default['default'].createElement("div", {
              className: "".concat(imageClass, " ril__image ril__imageDiscourager"),
              onDoubleClick: _this16.handleImageDoubleClick,
              onWheel: _this16.handleImageMouseWheel,
              style: imageStyle,
              key: imageSrc + keyEndings[srcType]
            }, React__default['default'].createElement("div", {
              className: "ril-download-blocker ril__downloadBlocker"
            })));
          } else {
            images.push(React__default['default'].createElement("img", _extends({}, imageCrossOrigin ? {
              crossOrigin: imageCrossOrigin
            } : {}, {
              className: "".concat(imageClass, " ril__image"),
              onDoubleClick: _this16.handleImageDoubleClick,
              onWheel: _this16.handleImageMouseWheel,
              onDragStart: function onDragStart(e) {
                return e.preventDefault();
              },
              style: imageStyle,
              src: imageSrc,
              key: imageSrc + keyEndings[srcType],
              alt: typeof imageTitle === 'string' ? imageTitle : translate('Image'),
              draggable: false
            })));
          }
        };

        var zoomMultiplier = this.getZoomMultiplier(); // Next Image (displayed on the right)

        addImage('nextSrc', 'ril-image-next ril__imageNext', {
          x: boxSize.width
        }); // Main Image

        addImage('mainSrc', 'ril-image-current', {
          x: -1 * offsetX,
          y: -1 * offsetY,
          zoom: zoomMultiplier
        }); // Previous Image (displayed on the left)

        addImage('prevSrc', 'ril-image-prev ril__imagePrev', {
          x: -1 * boxSize.width
        });
        var modalStyle = {
          overlay: _objectSpread$9({
            zIndex: 1000,
            backgroundColor: 'transparent'
          }, reactModalStyle.overlay),
          content: _objectSpread$9({
            backgroundColor: 'transparent',
            overflow: 'hidden',
            // Needed, otherwise keyboard shortcuts scroll the page
            border: 'none',
            borderRadius: 0,
            padding: 0,
            top: 0,
            left: 0,
            right: 0,
            bottom: 0
          }, reactModalStyle.content)
        };
        return React__default['default'].createElement(Modal, _extends({
          isOpen: true,
          onRequestClose: clickOutsideToClose ? this.requestClose : undefined,
          onAfterOpen: function onAfterOpen() {
            // Focus on the div with key handlers
            if (_this16.outerEl.current) {
              _this16.outerEl.current.focus();
            }

            _onAfterOpen();
          },
          style: modalStyle,
          contentLabel: translate('Lightbox'),
          appElement: typeof global$1.window !== 'undefined' ? global$1.window.document.body : undefined
        }, reactModalProps), React__default['default'].createElement("div", {
          // eslint-disable-line jsx-a11y/no-static-element-interactions
          // Floating modal with closing animations
          className: "ril-outer ril__outer ril__outerAnimating ".concat(this.props.wrapperClassName, " ").concat(isClosing ? 'ril-closing ril__outerClosing' : ''),
          style: {
            transition: "opacity ".concat(animationDuration, "ms"),
            animationDuration: "".concat(animationDuration, "ms"),
            animationDirection: isClosing ? 'normal' : 'reverse'
          },
          ref: this.outerEl,
          onWheel: this.handleOuterMousewheel,
          onMouseMove: this.handleMouseMove,
          onMouseDown: this.handleMouseDown,
          onTouchStart: this.handleTouchStart,
          onTouchMove: this.handleTouchMove,
          tabIndex: "-1" // Enables key handlers on div
          ,
          onKeyDown: this.handleKeyInput,
          onKeyUp: this.handleKeyInput
        }, React__default['default'].createElement("div", {
          // eslint-disable-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events
          // Image holder
          className: "ril-inner ril__inner",
          onClick: clickOutsideToClose ? this.closeIfClickInner : undefined
        }, images), prevSrc && React__default['default'].createElement("button", {
          // Move to previous image button
          type: "button",
          className: "ril-prev-button ril__navButtons ril__navButtonPrev",
          key: "prev",
          "aria-label": this.props.prevLabel,
          onClick: !this.isAnimating() ? this.requestMovePrev : undefined // Ignore clicks during animation

        }), nextSrc && React__default['default'].createElement("button", {
          // Move to next image button
          type: "button",
          className: "ril-next-button ril__navButtons ril__navButtonNext",
          key: "next",
          "aria-label": this.props.nextLabel,
          onClick: !this.isAnimating() ? this.requestMoveNext : undefined // Ignore clicks during animation

        }), React__default['default'].createElement("div", {
          // Lightbox toolbar
          className: "ril-toolbar ril__toolbar"
        }, React__default['default'].createElement("ul", {
          className: "ril-toolbar-left ril__toolbarSide ril__toolbarLeftSide"
        }, React__default['default'].createElement("li", {
          className: "ril-toolbar__item ril__toolbarItem"
        }, React__default['default'].createElement("span", {
          className: "ril-toolbar__item__child ril__toolbarItemChild"
        }, imageTitle))), React__default['default'].createElement("ul", {
          className: "ril-toolbar-right ril__toolbarSide ril__toolbarRightSide"
        }, toolbarButtons && toolbarButtons.map(function (button, i) {
          return React__default['default'].createElement("li", {
            key: "button_".concat(i + 1),
            className: "ril-toolbar__item ril__toolbarItem"
          }, button);
        }), enableZoom && React__default['default'].createElement("li", {
          className: "ril-toolbar__item ril__toolbarItem"
        }, React__default['default'].createElement("button", {
          // Lightbox zoom in button
          type: "button",
          key: "zoom-in",
          "aria-label": this.props.zoomInLabel,
          className: ['ril-zoom-in', 'ril__toolbarItemChild', 'ril__builtinButton', 'ril__zoomInButton'].concat(_toConsumableArray$1(zoomLevel === MAX_ZOOM_LEVEL ? ['ril__builtinButtonDisabled'] : [])).join(' '),
          ref: this.zoomInBtn,
          disabled: this.isAnimating() || zoomLevel === MAX_ZOOM_LEVEL,
          onClick: !this.isAnimating() && zoomLevel !== MAX_ZOOM_LEVEL ? this.handleZoomInButtonClick : undefined
        })), enableZoom && React__default['default'].createElement("li", {
          className: "ril-toolbar__item ril__toolbarItem"
        }, React__default['default'].createElement("button", {
          // Lightbox zoom out button
          type: "button",
          key: "zoom-out",
          "aria-label": this.props.zoomOutLabel,
          className: ['ril-zoom-out', 'ril__toolbarItemChild', 'ril__builtinButton', 'ril__zoomOutButton'].concat(_toConsumableArray$1(zoomLevel === MIN_ZOOM_LEVEL ? ['ril__builtinButtonDisabled'] : [])).join(' '),
          ref: this.zoomOutBtn,
          disabled: this.isAnimating() || zoomLevel === MIN_ZOOM_LEVEL,
          onClick: !this.isAnimating() && zoomLevel !== MIN_ZOOM_LEVEL ? this.handleZoomOutButtonClick : undefined
        })), React__default['default'].createElement("li", {
          className: "ril-toolbar__item ril__toolbarItem"
        }, React__default['default'].createElement("button", {
          // Lightbox close button
          type: "button",
          key: "close",
          "aria-label": this.props.closeLabel,
          className: "ril-close ril-toolbar__item__child ril__toolbarItemChild ril__builtinButton ril__closeButton",
          onClick: !this.isAnimating() ? this.requestClose : undefined // Ignore clicks during animation

        })))), this.props.imageCaption && // eslint-disable-next-line jsx-a11y/no-static-element-interactions
        React__default['default'].createElement("div", {
          // Image caption
          onWheel: this.handleCaptionMousewheel,
          onMouseDown: function onMouseDown(event) {
            return event.stopPropagation();
          },
          className: "ril-caption ril__caption",
          ref: this.caption
        }, React__default['default'].createElement("div", {
          className: "ril-caption-content ril__captionContent"
        }, this.props.imageCaption))));
      }
    }]);

    return ReactImageLightbox;
  }(React.Component);

  ReactImageLightbox.propTypes = {
    //-----------------------------
    // Image sources
    //-----------------------------
    // Main display image url
    mainSrc: propTypes.string.isRequired,
    // eslint-disable-line react/no-unused-prop-types
    // Previous display image url (displayed to the left)
    // If left undefined, movePrev actions will not be performed, and the button not displayed
    prevSrc: propTypes.string,
    // Next display image url (displayed to the right)
    // If left undefined, moveNext actions will not be performed, and the button not displayed
    nextSrc: propTypes.string,
    //-----------------------------
    // Image thumbnail sources
    //-----------------------------
    // Thumbnail image url corresponding to props.mainSrc
    mainSrcThumbnail: propTypes.string,
    // eslint-disable-line react/no-unused-prop-types
    // Thumbnail image url corresponding to props.prevSrc
    prevSrcThumbnail: propTypes.string,
    // eslint-disable-line react/no-unused-prop-types
    // Thumbnail image url corresponding to props.nextSrc
    nextSrcThumbnail: propTypes.string,
    // eslint-disable-line react/no-unused-prop-types
    //-----------------------------
    // Event Handlers
    //-----------------------------
    // Close window event
    // Should change the parent state such that the lightbox is not rendered
    onCloseRequest: propTypes.func.isRequired,
    // Move to previous image event
    // Should change the parent state such that props.prevSrc becomes props.mainSrc,
    //  props.mainSrc becomes props.nextSrc, etc.
    onMovePrevRequest: propTypes.func,
    // Move to next image event
    // Should change the parent state such that props.nextSrc becomes props.mainSrc,
    //  props.mainSrc becomes props.prevSrc, etc.
    onMoveNextRequest: propTypes.func,
    // Called when an image fails to load
    // (imageSrc: string, srcType: string, errorEvent: object): void
    onImageLoadError: propTypes.func,
    // Called when image successfully loads
    onImageLoad: propTypes.func,
    // Open window event
    onAfterOpen: propTypes.func,
    //-----------------------------
    // Download discouragement settings
    //-----------------------------
    // Enable download discouragement (prevents [right-click -> Save Image As...])
    discourageDownloads: propTypes.bool,
    //-----------------------------
    // Animation settings
    //-----------------------------
    // Disable all animation
    animationDisabled: propTypes.bool,
    // Disable animation on actions performed with keyboard shortcuts
    animationOnKeyInput: propTypes.bool,
    // Animation duration (ms)
    animationDuration: propTypes.number,
    //-----------------------------
    // Keyboard shortcut settings
    //-----------------------------
    // Required interval of time (ms) between key actions
    // (prevents excessively fast navigation of images)
    keyRepeatLimit: propTypes.number,
    // Amount of time (ms) restored after each keyup
    // (makes rapid key presses slightly faster than holding down the key to navigate images)
    keyRepeatKeyupBonus: propTypes.number,
    //-----------------------------
    // Image info
    //-----------------------------
    // Image title
    imageTitle: propTypes.node,
    // Image caption
    imageCaption: propTypes.node,
    // Optional crossOrigin attribute
    imageCrossOrigin: propTypes.string,
    //-----------------------------
    // Lightbox style
    //-----------------------------
    // Set z-index style, etc., for the parent react-modal (format: https://github.com/reactjs/react-modal#styles )
    reactModalStyle: propTypes.shape({}),
    // Padding (px) between the edge of the window and the lightbox
    imagePadding: propTypes.number,
    wrapperClassName: propTypes.string,
    //-----------------------------
    // Other
    //-----------------------------
    // Array of custom toolbar buttons
    toolbarButtons: propTypes.arrayOf(propTypes.node),
    // When true, clicks outside of the image close the lightbox
    clickOutsideToClose: propTypes.bool,
    // Set to false to disable zoom functionality and hide zoom buttons
    enableZoom: propTypes.bool,
    // Override props set on react-modal (https://github.com/reactjs/react-modal)
    reactModalProps: propTypes.shape({}),
    // Aria-labels
    nextLabel: propTypes.string,
    prevLabel: propTypes.string,
    zoomInLabel: propTypes.string,
    zoomOutLabel: propTypes.string,
    closeLabel: propTypes.string,
    imageLoadErrorMessage: propTypes.node
  };
  ReactImageLightbox.defaultProps = {
    imageTitle: null,
    imageCaption: null,
    toolbarButtons: null,
    reactModalProps: {},
    animationDisabled: false,
    animationDuration: 300,
    animationOnKeyInput: false,
    clickOutsideToClose: true,
    closeLabel: 'Close lightbox',
    discourageDownloads: false,
    enableZoom: true,
    imagePadding: 10,
    imageCrossOrigin: null,
    keyRepeatKeyupBonus: 40,
    keyRepeatLimit: 180,
    mainSrcThumbnail: null,
    nextLabel: 'Next image',
    nextSrc: null,
    nextSrcThumbnail: null,
    onAfterOpen: function onAfterOpen() {},
    onImageLoadError: function onImageLoadError() {},
    onImageLoad: function onImageLoad() {},
    onMoveNextRequest: function onMoveNextRequest() {},
    onMovePrevRequest: function onMovePrevRequest() {},
    prevLabel: 'Previous image',
    prevSrc: null,
    prevSrcThumbnail: null,
    reactModalStyle: {},
    wrapperClassName: '',
    zoomInLabel: 'Zoom in',
    zoomOutLabel: 'Zoom out',
    imageLoadErrorMessage: 'This image failed to load'
  };

  var Gallery = function Gallery(_ref) {
    var _ref$images = _ref.images,
        images = _ref$images === void 0 ? [] : _ref$images,
        className = _ref.className,
        style = _ref.style;

    var _useState = React.useState(null),
        _useState2 = _slicedToArray$3(_useState, 2),
        index = _useState2[0],
        setIndex = _useState2[1];

    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-gallery', className),
      style: style
    }, images.slice(0, 5).map(function (image, i) {
      return /*#__PURE__*/React__default['default'].createElement("div", {
        role: "button",
        className: classnames('img', {
          'img--last': i === 4 && images.length > 5
        }),
        onClick: function onClick() {
          return setIndex(i);
        },
        key: "image-".concat(i)
      }, /*#__PURE__*/React__default['default'].createElement("img", {
        src: image,
        className: "raf-gallery__image",
        alt: ""
      }), i === 4 && images.length > 5 && /*#__PURE__*/React__default['default'].createElement("p", null, images.length - 4, " more"));
    }), index !== null && /*#__PURE__*/React__default['default'].createElement(ReactImageLightbox, {
      mainSrc: images[index],
      nextSrc: images[index + 1],
      prevSrc: images[index - 1],
      onCloseRequest: function onCloseRequest() {
        return setIndex(null);
      },
      onMoveNextRequest: function onMoveNextRequest() {
        return setIndex(index + 1);
      },
      onMovePrevRequest: function onMovePrevRequest() {
        return setIndex(index - 1);
      }
    }));
  };

  function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$7(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var ActivityContent = function ActivityContent(_ref) {
    var activity = _ref.activity,
        Repost = _ref.Repost,
        _ref$Card = _ref.Card,
        Card$1 = _ref$Card === void 0 ? Card : _ref$Card,
        className = _ref.className,
        style = _ref.style,
        props = _objectWithoutProperties(_ref, ["activity", "Repost", "Card", "className", "style"]);

    var object = activity.object,
        _activity$text = activity.text,
        text = _activity$text === void 0 ? (typeof object === 'string' ? object : '').trim() : _activity$text,
        _activity$attachments = activity.attachments;
    _activity$attachments = _activity$attachments === void 0 ? {} : _activity$attachments;
    var og = _activity$attachments.og,
        _activity$attachments2 = _activity$attachments.images,
        images = _activity$attachments2 === void 0 ? [] : _activity$attachments2,
        _activity$attachments3 = _activity$attachments.files,
        files = _activity$attachments3 === void 0 ? [] : _activity$attachments3,
        verb = activity.verb,
        image = activity.image;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-activity__content', className),
      style: style
    }, text && /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        padding: '8px 16px'
      }
    }, /*#__PURE__*/React__default['default'].createElement("p", null, textRenderer(text, 'raf-activity', props.onClickMention, props.onClickHashtag))), og && /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        padding: '8px 16px'
      }
    }, og.videos ? /*#__PURE__*/React__default['default'].createElement(Video, {
      og: og
    }) : og.audios ? /*#__PURE__*/React__default['default'].createElement(Audio, {
      og: og
    }) : smartRender(Card$1, og)), typeof image === 'string' && /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        padding: '8px 0'
      }
    }, /*#__PURE__*/React__default['default'].createElement(Gallery, {
      images: [image]
    })), !!images.length && /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        padding: '8px 0'
      }
    }, /*#__PURE__*/React__default['default'].createElement(Gallery, {
      images: images
    })), !!files.length && /*#__PURE__*/React__default['default'].createElement("ol", {
      className: "raf-activity__attachments"
    }, files.map(function (_ref2, i) {
      var name = _ref2.name,
          url = _ref2.url,
          mimeType = _ref2.mimeType;
      return /*#__PURE__*/React__default['default'].createElement("a", {
        href: sanitizeURL(url),
        download: true,
        key: i
      }, /*#__PURE__*/React__default['default'].createElement("li", {
        className: "raf-activity__file"
      }, /*#__PURE__*/React__default['default'].createElement(FileIcon, {
        mimeType: mimeType,
        filename: name
      }), " ", name));
    })), verb === 'repost' && _typeof$1(object) === 'object' && smartRender(Repost, _objectSpread$8(_objectSpread$8({}, props), {}, {
      activity: object
    })));
  };

  function Avatar(_ref) {
    var size = _ref.size,
        image = _ref.image,
        alt = _ref.alt,
        rounded = _ref.rounded,
        circle = _ref.circle,
        onClick = _ref.onClick,
        className = _ref.className,
        _ref$style = _ref.style,
        style = _ref$style === void 0 ? size ? {
      width: "".concat(size, "px"),
      height: "".concat(size, "px")
    } : undefined : _ref$style;
    var cn = classnames('raf-avatar', className, {
      'raf-avatar--rounded': rounded,
      'raf-avatar--circle': circle
    });
    return image ? /*#__PURE__*/React__default['default'].createElement("img", {
      className: cn,
      style: style,
      src: image,
      alt: alt !== null && alt !== void 0 ? alt : '',
      onClick: onClick
    }) : /*#__PURE__*/React__default['default'].createElement(AvatarIcon, {
      className: cn,
      style: style,
      onClick: onClick
    });
  }

  var UserBar = function UserBar(_ref) {
    var time = _ref.time,
        timestamp = _ref.timestamp,
        Right = _ref.Right,
        subtitle = _ref.subtitle,
        icon = _ref.icon,
        AfterUsername = _ref.AfterUsername,
        username = _ref.username,
        onClickUser = _ref.onClickUser,
        avatar = _ref.avatar,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        tDateTimeParser = _useTranslationContex.tDateTimeParser;

    var _useMemo = React.useMemo(function () {
      return [!time && timestamp ? humanizeTimestamp(timestamp, tDateTimeParser) : time, timestamp ? tDateTimeParser(timestamp).toJSON() : undefined];
    }, [timestamp, tDateTimeParser]),
        _useMemo2 = _slicedToArray$3(_useMemo, 2),
        humanReadableTimestamp = _useMemo2[0],
        parsedTimestamp = _useMemo2[1];

    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-user-bar', className),
      style: style
    }, avatar && /*#__PURE__*/React__default['default'].createElement(Avatar, {
      onClick: onClickUser,
      size: 50,
      circle: true,
      image: avatar
    }), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-user-bar__details"
    }, /*#__PURE__*/React__default['default'].createElement("p", {
      "data-testid": "user-bar-username",
      className: "raf-user-bar__username",
      onClick: onClickUser
    }, username), AfterUsername, icon && /*#__PURE__*/React__default['default'].createElement("img", {
      src: icon,
      alt: "icon"
    }), subtitle && /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-user-bar__subtitle"
    }, /*#__PURE__*/React__default['default'].createElement("time", {
      dateTime: parsedTimestamp,
      title: parsedTimestamp
    }, subtitle))), smartRender(Right, {}, /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-user-bar__extra"
    }, /*#__PURE__*/React__default['default'].createElement("time", {
      dateTime: parsedTimestamp,
      title: parsedTimestamp
    }, humanReadableTimestamp))));
  };

  var ActivityHeader = function ActivityHeader(_ref) {
    var activity = _ref.activity,
        HeaderRight = _ref.HeaderRight,
        icon = _ref.icon,
        onClickUser = _ref.onClickUser,
        _ref$style = _ref.style,
        style = _ref$style === void 0 ? {
      padding: '8px 16px'
    } : _ref$style,
        className = _ref.className;

    var _useTranslationContex = useTranslationContext(),
        tDateTimeParser = _useTranslationContex.tDateTimeParser;

    var actor = userOrDefault(activity.actor);
    var handleUserClick = useOnClickUser(onClickUser);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      style: style,
      className: className
    }, /*#__PURE__*/React__default['default'].createElement(UserBar, {
      username: actor.data.name,
      avatar: actor.data.profileImage,
      onClickUser: handleUserClick === null || handleUserClick === void 0 ? void 0 : handleUserClick(actor),
      subtitle: HeaderRight ? humanizeTimestamp(activity.time, tDateTimeParser) : undefined,
      timestamp: activity.time,
      icon: icon,
      Right: HeaderRight
    }));
  };

  var DefaultRepost = function DefaultRepost(_ref) {
    var _ref$Header = _ref.Header,
        Header = _ref$Header === void 0 ? ActivityHeader : _ref$Header,
        HeaderRight = _ref.HeaderRight,
        _ref$Content = _ref.Content,
        Content = _ref$Content === void 0 ? ActivityContent : _ref$Content,
        activity = _ref.activity,
        icon = _ref.icon,
        onClickHashtag = _ref.onClickHashtag,
        onClickMention = _ref.onClickMention,
        onClickUser = _ref.onClickUser;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-card raf-activity raf-activity-repost"
    }, smartRender(Header, {
      HeaderRight: HeaderRight,
      icon: icon,
      activity: activity,
      onClickUser: onClickUser
    }), smartRender(Content, {
      onClickMention: onClickMention,
      onClickHashtag: onClickHashtag,
      activity: activity
    }));
  };

  var Activity = function Activity(_ref2) {
    var _ref2$Header = _ref2.Header,
        Header = _ref2$Header === void 0 ? ActivityHeader : _ref2$Header,
        HeaderRight = _ref2.HeaderRight,
        _ref2$Content = _ref2.Content,
        Content = _ref2$Content === void 0 ? ActivityContent : _ref2$Content,
        Footer = _ref2.Footer,
        _ref2$Card = _ref2.Card,
        Card$1 = _ref2$Card === void 0 ? Card : _ref2$Card,
        activity = _ref2.activity,
        icon = _ref2.icon,
        onClickHashtag = _ref2.onClickHashtag,
        onClickMention = _ref2.onClickMention,
        onClickUser = _ref2.onClickUser,
        _ref2$Repost = _ref2.Repost,
        Repost = _ref2$Repost === void 0 ? DefaultRepost : _ref2$Repost,
        userId = _ref2.userId,
        feedGroup = _ref2.feedGroup,
        className = _ref2.className,
        style = _ref2.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-activity', className),
      style: style
    }, smartRender(Header, {
      HeaderRight: HeaderRight,
      icon: icon,
      activity: activity,
      onClickUser: onClickUser
    }), smartRender(Content, {
      activity: activity,
      Content: Content,
      Card: Card$1,
      feedGroup: feedGroup,
      Footer: Footer,
      Header: Header,
      HeaderRight: HeaderRight,
      icon: icon,
      onClickHashtag: onClickHashtag,
      onClickMention: onClickMention,
      onClickUser: onClickUser,
      Repost: Repost,
      userId: userId
    }), smartRender(Footer, {
      activity: activity,
      feedGroup: feedGroup,
      userId: userId
    }));
  };

  var Link = function Link(_ref) {
    var to = _ref.to,
        children = _ref.children,
        onClick = _ref.onClick,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("a", {
      href: to,
      className: classnames('raf-link', className),
      onClick: onClick,
      style: style
    }, children);
  };

  var generateText = function generateText(count, word) {
    return "You have ".concat(count, " new ").concat(word);
  };

  var NewActivitiesNotification = function NewActivitiesNotification(_ref) {
    var _ref$adds = _ref.adds,
        adds = _ref$adds === void 0 ? [] : _ref$adds,
        _ref$deletes = _ref.deletes,
        deletes = _ref$deletes === void 0 ? [] : _ref$deletes,
        labelPlural = _ref.labelPlural,
        labelSingle = _ref.labelSingle,
        onClick = _ref.onClick,
        labelFunction = _ref.labelFunction,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    var attributes = {
      addCount: adds.length,
      deleteCount: deletes.length,
      count: adds.length + deletes.length,
      labelPlural: labelPlural,
      labelSingle: labelSingle
    };
    var defaultLabelFunction = labelFunction !== null && labelFunction !== void 0 ? labelFunction : function (_ref2) {
      var addCount = _ref2.addCount,
          labelPlural = _ref2.labelPlural,
          labelSingle = _ref2.labelSingle;
      if (!addCount) return null;
      if (addCount > 1) return labelPlural ? generateText(addCount, labelPlural) : t('You have {{ notificationCount }} new notifications', {
        notificationCount: addCount
      });
      return labelSingle ? generateText(1, labelSingle) : t('You have 1 new notification');
    };
    var label = defaultLabelFunction(attributes);
    if (!label) return null;
    return /*#__PURE__*/React__default['default'].createElement("button", {
      className: classnames('raf-new-activities-notification', className),
      type: "button",
      onClick: onClick,
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(Link, null, label));
  };

  var Button = function Button(_ref) {
    var _ref$buttonStyle = _ref.buttonStyle,
        buttonStyle = _ref$buttonStyle === void 0 ? 'info' : _ref$buttonStyle,
        _ref$disabled = _ref.disabled,
        disabled = _ref$disabled === void 0 ? false : _ref$disabled,
        _ref$loading = _ref.loading,
        loading = _ref$loading === void 0 ? false : _ref$loading,
        _ref$type = _ref.type,
        type = _ref$type === void 0 ? 'button' : _ref$type,
        onClick = _ref.onClick,
        onKeyPress = _ref.onKeyPress,
        children = _ref.children,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("button", {
      className: classnames('raf-button', "raf-button--".concat(buttonStyle), className),
      onClick: onClick,
      onKeyPress: onKeyPress,
      type: type,
      disabled: disabled,
      style: style
    }, loading ? /*#__PURE__*/React__default['default'].createElement(LoadingIndicator, {
      backgroundColor: "rgba(255,255,255,0.1)",
      color: "rgba(255,255,255,0.4)"
    }) : children);
  };

  var LoadMoreButton = function LoadMoreButton(_ref) {
    var onClick = _ref.onClick,
        _ref$refreshing = _ref.refreshing,
        refreshing = _ref$refreshing === void 0 ? false : _ref$refreshing,
        children = _ref.children,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-load-more-button', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(Button, {
      onClick: onClick,
      buttonStyle: "info",
      disabled: refreshing,
      loading: refreshing
    }, children ? children : t('Load more')));
  };

  var LoadMorePaginator = function LoadMorePaginator(_ref) {
    var _ref$LoadMoreButton = _ref.LoadMoreButton,
        LoadMoreButton$1 = _ref$LoadMoreButton === void 0 ? LoadMoreButton : _ref$LoadMoreButton,
        children = _ref.children,
        reverse = _ref.reverse,
        hasNextPage = _ref.hasNextPage,
        refreshing = _ref.refreshing,
        loadNextPage = _ref.loadNextPage;
    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, !reverse && children, hasNextPage && smartRender(LoadMoreButton$1, {
      refreshing: refreshing,
      onClick: loadNextPage
    }), reverse && children);
  };

  var FeedPlaceholder = function FeedPlaceholder(_ref) {
    var text = _ref.text,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-feed-placeholder', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement("p", null, text || t('No data to display...')));
  };

  var DefaultNotifier = function DefaultNotifier(props) {
    return /*#__PURE__*/React__default['default'].createElement(NewActivitiesNotification, _extends$1({
      labelPlural: "activities",
      labelSingle: "activity"
    }, props));
  };

  var FlatFeedInner = function FlatFeedInner(_ref) {
    var Activity = _ref.Activity,
        Notifier = _ref.Notifier,
        Placeholder = _ref.Placeholder,
        Paginator = _ref.Paginator,
        LoadingIndicator = _ref.LoadingIndicator,
        options = _ref.options;
    var feed = useFeedContext();

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    var refreshFeed = function refreshFeed() {
      return feed.refresh(options);
    };

    if (feed.refreshing && !feed.hasDoneRequest) {
      return /*#__PURE__*/React__default['default'].createElement("div", {
        className: "raf-loading-indicator"
      }, smartRender(LoadingIndicator));
    }

    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, smartRender(Notifier, {
      adds: feed.realtimeAdds,
      deletes: feed.realtimeDeletes,
      onClick: feed.hasReverseNextPage ? feed.loadReverseNextPage : refreshFeed,
      labelFunction: feed.hasReverseNextPage ? function () {
        return t('Load activities');
      } : undefined
    }), feed.activities.size === 0 && feed.hasDoneRequest ? smartRender(Placeholder) : smartRender(Paginator, {
      loadNextPage: feed.loadNextPage,
      hasNextPage: feed.hasNextPage,
      refreshing: feed.refreshing,
      children: feed.activityOrder.map(function (id) {
        var _feed$activities$get;

        return smartRender(Activity, {
          activity: (_feed$activities$get = feed.activities.get(id)) === null || _feed$activities$get === void 0 ? void 0 : _feed$activities$get.toJS(),
          feedGroup: feed.feedGroup,
          userId: feed.userId,
          // @ts-expect-error
          key: id
        });
      })
    }));
  };
  /**
   * Renders a feed of activities, this component is a StreamApp consumer
   * and must always be a child of the `<StreamApp>` element
   */


  var FlatFeed = function FlatFeed(_ref2) {
    var userId = _ref2.userId,
        options = _ref2.options,
        analyticsLocation = _ref2.analyticsLocation,
        doFeedRequest = _ref2.doFeedRequest,
        doActivityDeleteRequest = _ref2.doActivityDeleteRequest,
        doChildReactionAddRequest = _ref2.doChildReactionAddRequest,
        doChildReactionDeleteRequest = _ref2.doChildReactionDeleteRequest,
        doReactionAddRequest = _ref2.doReactionAddRequest,
        doReactionDeleteRequest = _ref2.doReactionDeleteRequest,
        doReactionsFilterRequest = _ref2.doReactionsFilterRequest,
        _ref2$feedGroup = _ref2.feedGroup,
        feedGroup = _ref2$feedGroup === void 0 ? 'timeline' : _ref2$feedGroup,
        _ref2$notify = _ref2.notify,
        notify = _ref2$notify === void 0 ? false : _ref2$notify,
        _ref2$Activity = _ref2.Activity,
        Activity$1 = _ref2$Activity === void 0 ? Activity : _ref2$Activity,
        _ref2$Notifier = _ref2.Notifier,
        Notifier = _ref2$Notifier === void 0 ? DefaultNotifier : _ref2$Notifier,
        _ref2$Placeholder = _ref2.Placeholder,
        Placeholder = _ref2$Placeholder === void 0 ? FeedPlaceholder : _ref2$Placeholder,
        _ref2$Paginator = _ref2.Paginator,
        Paginator = _ref2$Paginator === void 0 ? LoadMorePaginator : _ref2$Paginator,
        _ref2$LoadingIndicato = _ref2.LoadingIndicator,
        LoadingIndicator$1 = _ref2$LoadingIndicato === void 0 ? LoadingIndicator : _ref2$LoadingIndicato;
    return /*#__PURE__*/React__default['default'].createElement(Feed, {
      feedGroup: feedGroup,
      userId: userId,
      options: options,
      notify: notify,
      analyticsLocation: analyticsLocation,
      doFeedRequest: doFeedRequest,
      doActivityDeleteRequest: doActivityDeleteRequest,
      doReactionAddRequest: doReactionAddRequest,
      doReactionDeleteRequest: doReactionDeleteRequest,
      doChildReactionAddRequest: doChildReactionAddRequest,
      doChildReactionDeleteRequest: doChildReactionDeleteRequest,
      doReactionsFilterRequest: doReactionsFilterRequest
    }, /*#__PURE__*/React__default['default'].createElement(FlatFeedInner, {
      Activity: Activity$1,
      Notifier: Notifier,
      Placeholder: Placeholder,
      Paginator: Paginator,
      LoadingIndicator: LoadingIndicator$1,
      options: options
    }));
  };

  function _toArray(arr) {
    return _arrayWithHoles$3(arr) || _iterableToArray$3(arr) || _unsupportedIterableToArray$5(arr) || _nonIterableRest$3();
  }

  function AvatarGroup(_ref) {
    var _ref$limit = _ref.limit,
        limit = _ref$limit === void 0 ? 5 : _ref$limit,
        _ref$users = _ref.users,
        users = _ref$users === void 0 ? [] : _ref$users,
        _ref$avatarSize = _ref.avatarSize,
        avatarSize = _ref$avatarSize === void 0 ? 30 : _ref$avatarSize,
        onClickUser = _ref.onClickUser,
        className = _ref.className,
        style = _ref.style;
    var handleUserClick = useOnClickUser(onClickUser);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-avatar-group', className),
      style: style
    }, users.slice(0, limit).map(function (user, i) {
      var _user$data;

      return /*#__PURE__*/React__default['default'].createElement("div", {
        className: "raf-avatar-group__avatar",
        key: "avatar-".concat(i)
      }, /*#__PURE__*/React__default['default'].createElement(Avatar, {
        onClick: handleUserClick === null || handleUserClick === void 0 ? void 0 : handleUserClick(user),
        image: (_user$data = user.data) === null || _user$data === void 0 ? void 0 : _user$data.profileImage,
        size: avatarSize,
        circle: true
      }));
    }));
  }

  function AttachedActivity(_ref) {
    var _attachments$images;

    var _ref$activity = _ref.activity,
        object = _ref$activity.object,
        verb = _ref$activity.verb,
        attachments = _ref$activity.attachments,
        actor = _ref$activity.actor,
        className = _ref.className,
        style = _ref.style;
    var images = (_attachments$images = attachments === null || attachments === void 0 ? void 0 : attachments.images) !== null && _attachments$images !== void 0 ? _attachments$images : [];
    var user = React.useMemo(function () {
      return userOrDefault(actor);
    }, [actor]);
    if (verb !== 'repost' && verb !== 'post' && verb !== 'comment') return null;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-attached-activity', className),
      style: style
    }, images.length ? /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-attached-activity__images"
    }, images.slice(0, 5).map(function (image, i) {
      return /*#__PURE__*/React__default['default'].createElement(Thumbnail, {
        image: image,
        size: 50,
        key: "image-".concat(i)
      });
    })) : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-attached-activity__author"
    }, /*#__PURE__*/React__default['default'].createElement("strong", null, user.data.name)), /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-attached-activity__content"
    }, object)));
  }

  var useOnClickOutside = function useOnClickOutside(ref, handler) {
    var registerListeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    React.useEffect(function () {
      if (!registerListeners) return;

      var eventListener = function eventListener(event) {
        var _ref$current;

        if ((_ref$current = ref.current) !== null && _ref$current !== void 0 && _ref$current.contains(event.target)) return;
        handler(event);
      };

      document.addEventListener('mousedown', eventListener);
      document.addEventListener('touchstart', eventListener);
      return function () {
        document.removeEventListener('mousedown', eventListener);
        document.removeEventListener('touchstart', eventListener);
      };
    }, [handler, registerListeners]);
  };

  var Dropdown = function Dropdown(_ref) {
    var children = _ref.children,
        className = _ref.className,
        style = _ref.style;

    var _useState = React.useState(false),
        _useState2 = _slicedToArray$3(_useState, 2),
        isOpen = _useState2[0],
        setIsOpen = _useState2[1];

    var dropdownBoxReference = React.useRef(null);
    useOnClickOutside(dropdownBoxReference, function () {
      return setIsOpen(false);
    }, isOpen);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-dropdown', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(IconButton, {
      onClick: function onClick() {
        return setIsOpen(function (pv) {
          return !pv;
        });
      }
    }, /*#__PURE__*/React__default['default'].createElement("svg", {
      className: "raf-dropdown__button",
      width: "12",
      height: "8",
      viewBox: "0 0 12 8",
      xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/React__default['default'].createElement("path", {
      d: "M1.41 0L6 4.77 10.59 0 12 1.469l-6 6.25-6-6.25z",
      fill: "#A0B2B8",
      fillRule: "evenodd"
    }))), isOpen && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-dropdown__box",
      ref: dropdownBoxReference
    }, children));
  };

  var getUsers = function getUsers(activities) {
    return activities.map(function (item) {
      return userOrDefault(item.actor);
    });
  };

  var getHeaderText = function getHeaderText(t, activitiesLen, verb, actorName, activityVerb) {
    if (activitiesLen === 1) {
      switch (verb) {
        case 'like':
          return t('{{ actorName }} liked your {{ activityVerb }}', {
            actorName: actorName,
            activityVerb: activityVerb
          });

        case 'repost':
          return t('{{ actorName }} reposted your {{ activityVerb }}', {
            actorName: actorName,
            activityVerb: activityVerb
          });

        case 'follow':
          return t('{{ actorName }} followed you', {
            actorName: actorName
          });

        case 'comment':
          return t('{{ actorName }} commented on your {{ activityVerb }}', {
            actorName: actorName,
            activityVerb: activityVerb
          });

        default:
          console.warn('No notification styling found for your verb, please create your own custom Notification group.');
          return '';
      }
    }

    if (activitiesLen > 1 && activitiesLen < 3) {
      switch (verb) {
        case 'like':
          return t('{{ actorName }} and 1 other liked your {{ activityVerb }}', {
            actorName: actorName,
            activityVerb: activityVerb
          });

        case 'repost':
          return t('{{ actorName }} and 1 other reposted your {{ activityVerb }}', {
            actorName: actorName,
            activityVerb: activityVerb
          });

        case 'follow':
          return t('{{ actorName }} and 1 other followed you', {
            actorName: actorName
          });

        case 'comment':
          return t('{{ actorName }} and 1 other commented on your {{ activityVerb }}', {
            actorName: actorName,
            activityVerb: activityVerb
          });

        default:
          console.warn('No notification styling found for your verb, please create your own custom Notification group.');
          return '';
      }
    }

    var countOtherActors = activitiesLen - 1;

    switch (verb) {
      case 'like':
        return t('{{ actorName }} and {{ countOtherActors }} others liked your {{ activityVerb }}', {
          actorName: actorName,
          activityVerb: activityVerb,
          countOtherActors: countOtherActors
        });

      case 'repost':
        return t('{{ actorName }} and {{ countOtherActors }} others reposted your {{ activityVerb }}', {
          actorName: actorName,
          activityVerb: activityVerb,
          countOtherActors: countOtherActors
        });

      case 'follow':
        return t('{{ actorName }} and {{ countOtherActors }} others followed you', {
          actorName: actorName,
          countOtherActors: countOtherActors
        });

      case 'comment':
        return t('{{ actorName }} and {{ countOtherActors }} others commented on your {{ activityVerb }}', {
          actorName: actorName,
          activityVerb: activityVerb,
          countOtherActors: countOtherActors
        });

      default:
        console.warn('No notification styling found for your verb, please create your own custom Notification group.');
        return '';
    }
  };

  var Notification = function Notification(_ref) {
    var activityGroup = _ref.activityGroup,
        onMarkAsRead = _ref.onMarkAsRead,
        onClickUser = _ref.onClickUser,
        onClickNotification = _ref.onClickNotification,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t,
        tDateTimeParser = _useTranslationContex.tDateTimeParser;

    var activities = activityGroup.activities;

    var _activities = _toArray(activities),
        latestActivity = _activities[0],
        restOfActivities = _activities.slice(1);

    if (typeof latestActivity.object === 'string') return null;
    var lastObject = latestActivity.object;
    var lastActor = userOrDefault(latestActivity.actor);
    var headerText = getHeaderText(t, activities.length, latestActivity.verb, lastActor.data.name, lastObject.verb);
    var handleUserClick = useOnClickUser(onClickUser);
    var handleNotificationClick = onClickNotification ? function (e) {
      e.stopPropagation();
      onClickNotification(activityGroup);
    } : undefined;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      onClick: handleNotificationClick,
      className: className !== null && className !== void 0 ? className : "raf-notification ".concat(activityGroup.is_read ? 'raf-notification--read' : ''),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(Avatar, {
      onClick: handleUserClick === null || handleUserClick === void 0 ? void 0 : handleUserClick(lastActor),
      image: lastActor.data.profileImage,
      circle: true,
      size: 30
    }), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-notification__content"
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-notification__header"
    }, /*#__PURE__*/React__default['default'].createElement("strong", null, headerText), !activityGroup.is_read && onMarkAsRead && /*#__PURE__*/React__default['default'].createElement(Dropdown, null, /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement(Link, {
      onClick: function onClick(e) {
        e.stopPropagation();
        onMarkAsRead(activityGroup);
      }
    }, "Mark\xA0as\xA0read")))), /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement("small", null, humanizeTimestamp(latestActivity.time, tDateTimeParser))), latestActivity.verb !== 'follow' && /*#__PURE__*/React__default['default'].createElement(AttachedActivity, {
      activity: latestActivity.object
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-notification__extra"
    }, activities.length > 1 && latestActivity.verb === 'follow' && /*#__PURE__*/React__default['default'].createElement(AvatarGroup, {
      onClickUser: onClickUser,
      avatarSize: 30,
      users: getUsers(restOfActivities)
    })));
  };

  function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$6(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var NotificationFeedInner = function NotificationFeedInner(_ref) {
    var Group = _ref.Group,
        LoadingIndicator = _ref.LoadingIndicator,
        Notifier = _ref.Notifier,
        Paginator = _ref.Paginator,
        Placeholder = _ref.Placeholder,
        options = _ref.options;
    var feed = useFeedContext();

    var refreshFeed = function refreshFeed() {
      return feed.refresh(options);
    };

    React.useEffect(function () {
      return function () {
        feed.activities.clear();
        feed.activityOrder.splice(0, feed.activityOrder.length);
      };
    }, [feed.feedGroup, feed.userId]);

    if (feed.refreshing && !feed.hasDoneRequest) {
      return /*#__PURE__*/React__default['default'].createElement("div", {
        className: "raf-loading-indicator"
      }, smartRender(LoadingIndicator));
    }

    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, smartRender(Notifier, {
      adds: feed.realtimeAdds,
      deletes: feed.realtimeDeletes,
      onClick: refreshFeed
    }), feed.activities.size === 0 && feed.hasDoneRequest ? smartRender(Placeholder) : smartRender(Paginator, {
      loadNextPage: feed.loadNextPage,
      hasNextPage: feed.hasNextPage,
      refreshing: feed.refreshing,
      children: feed.activityOrder.map(function (id) {
        var _feed$activities$get;

        return smartRender(Group, {
          activityGroup: (_feed$activities$get = feed.activities.get(id)) === null || _feed$activities$get === void 0 ? void 0 : _feed$activities$get.toJS(),
          // @ts-expect-error
          key: id
        });
      })
    }));
  };
  /**
   * Renders a Notification feed, this component is a StreamApp consumer and must always be a child of `<StreamApp>`.
   */


  var NotificationFeed = function NotificationFeed(_ref2) {
    var _options$mark_seen;

    var options = _ref2.options,
        userId = _ref2.userId,
        analyticsLocation = _ref2.analyticsLocation,
        doFeedRequest = _ref2.doFeedRequest,
        doActivityDeleteRequest = _ref2.doActivityDeleteRequest,
        doChildReactionAddRequest = _ref2.doChildReactionAddRequest,
        doChildReactionDeleteRequest = _ref2.doChildReactionDeleteRequest,
        doReactionAddRequest = _ref2.doReactionAddRequest,
        doReactionDeleteRequest = _ref2.doReactionDeleteRequest,
        doReactionsFilterRequest = _ref2.doReactionsFilterRequest,
        _ref2$feedGroup = _ref2.feedGroup,
        feedGroup = _ref2$feedGroup === void 0 ? 'notification' : _ref2$feedGroup,
        _ref2$notify = _ref2.notify,
        notify = _ref2$notify === void 0 ? false : _ref2$notify,
        _ref2$Group = _ref2.Group,
        Group = _ref2$Group === void 0 ? Notification : _ref2$Group,
        _ref2$Notifier = _ref2.Notifier,
        Notifier = _ref2$Notifier === void 0 ? NewActivitiesNotification : _ref2$Notifier,
        _ref2$Paginator = _ref2.Paginator,
        Paginator = _ref2$Paginator === void 0 ? LoadMorePaginator : _ref2$Paginator,
        _ref2$Placeholder = _ref2.Placeholder,
        Placeholder = _ref2$Placeholder === void 0 ? FeedPlaceholder : _ref2$Placeholder,
        _ref2$LoadingIndicato = _ref2.LoadingIndicator,
        LoadingIndicator$1 = _ref2$LoadingIndicato === void 0 ? LoadingIndicator : _ref2$LoadingIndicato;
    return /*#__PURE__*/React__default['default'].createElement(Feed, {
      feedGroup: feedGroup,
      userId: userId,
      options: _objectSpread$7(_objectSpread$7({}, options), {}, {
        mark_seen: (_options$mark_seen = options === null || options === void 0 ? void 0 : options.mark_seen) !== null && _options$mark_seen !== void 0 ? _options$mark_seen : true
      }),
      notify: notify,
      analyticsLocation: analyticsLocation,
      doFeedRequest: doFeedRequest,
      doActivityDeleteRequest: doActivityDeleteRequest,
      doReactionAddRequest: doReactionAddRequest,
      doReactionDeleteRequest: doReactionDeleteRequest,
      doChildReactionAddRequest: doChildReactionAddRequest,
      doChildReactionDeleteRequest: doChildReactionDeleteRequest,
      doReactionsFilterRequest: doReactionsFilterRequest
    }, /*#__PURE__*/React__default['default'].createElement(NotificationFeedInner, {
      Group: Group,
      LoadingIndicator: LoadingIndicator$1,
      Notifier: Notifier,
      Paginator: Paginator,
      Placeholder: Placeholder,
      options: options
    }));
  };

  function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$5(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  /**
   * Shows the detail of a single activity
   */
  function SinglePost(_ref) {
    var options = _ref.options,
        activityId = _ref.activityId,
        _doFeedRequest = _ref.doFeedRequest,
        props = _objectWithoutProperties(_ref, ["options", "activityId", "doFeedRequest"]);

    return /*#__PURE__*/React__default['default'].createElement(FlatFeed, _extends$1({}, props, {
      options: _objectSpread$6({
        withRecentReactions: true
      }, options),
      doFeedRequest: function doFeedRequest(client, feedGroup, userId, opts) {
        if (_doFeedRequest) {
          return _doFeedRequest(client, feedGroup, userId, _objectSpread$6(_objectSpread$6({}, opts), {}, {
            id_lte: activityId,
            id_gte: activityId,
            limit: 1
          }));
        }

        return client.feed(feedGroup, userId).getActivityDetail(activityId, opts);
      }
    }));
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  var _baseFindIndex = baseFindIndex;

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  var _baseIsNaN = baseIsNaN;

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  var _strictIndexOf = strictIndexOf;

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? _strictIndexOf(array, value, fromIndex)
      : _baseFindIndex(array, _baseIsNaN, fromIndex);
  }

  var _baseIndexOf = baseIndexOf;

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && _baseIndexOf(array, value, 0) > -1;
  }

  var _arrayIncludes = arrayIncludes;

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  var _arrayIncludesWith = arrayIncludesWith;

  /**
   * This method returns `undefined`.
   *
   * @static
   * @memberOf _
   * @since 2.3.0
   * @category Util
   * @example
   *
   * _.times(2, _.noop);
   * // => [undefined, undefined]
   */
  function noop() {
    // No operation performed.
  }

  var noop_1 = noop;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Creates a set object of `values`.
   *
   * @private
   * @param {Array} values The values to add to the set.
   * @returns {Object} Returns the new set.
   */
  var createSet = !(_Set && (1 / _setToArray(new _Set([,-0]))[1]) == INFINITY) ? noop_1 : function(values) {
    return new _Set(values);
  };

  var _createSet = createSet;

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE$1 = 200;

  /**
   * The base implementation of `_.uniqBy` without support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new duplicate free array.
   */
  function baseUniq(array, iteratee, comparator) {
    var index = -1,
        includes = _arrayIncludes,
        length = array.length,
        isCommon = true,
        result = [],
        seen = result;

    if (comparator) {
      isCommon = false;
      includes = _arrayIncludesWith;
    }
    else if (length >= LARGE_ARRAY_SIZE$1) {
      var set = iteratee ? null : _createSet(array);
      if (set) {
        return _setToArray(set);
      }
      isCommon = false;
      includes = _cacheHas;
      seen = new _SetCache;
    }
    else {
      seen = iteratee ? [] : result;
    }
    outer:
    while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value) : value;

      value = (comparator || value !== 0) ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      }
      else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }

  var _baseUniq = baseUniq;

  /**
   * Creates a duplicate-free version of an array, using
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons, in which only the first occurrence of each element
   * is kept. The order of result values is determined by the order they occur
   * in the array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @returns {Array} Returns the new duplicate free array.
   * @example
   *
   * _.uniq([2, 1, 2]);
   * // => [2, 1]
   */
  function uniq$1(array) {
    return (array && array.length) ? _baseUniq(array) : [];
  }

  var uniq_1$1 = uniq$1;

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * The base implementation of methods like `_.difference` without support
   * for excluding multiple arrays or iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Array} values The values to exclude.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new array of filtered values.
   */
  function baseDifference(array, values, iteratee, comparator) {
    var index = -1,
        includes = _arrayIncludes,
        isCommon = true,
        length = array.length,
        result = [],
        valuesLength = values.length;

    if (!length) {
      return result;
    }
    if (iteratee) {
      values = _arrayMap(values, _baseUnary(iteratee));
    }
    if (comparator) {
      includes = _arrayIncludesWith;
      isCommon = false;
    }
    else if (values.length >= LARGE_ARRAY_SIZE) {
      includes = _cacheHas;
      isCommon = false;
      values = new _SetCache(values);
    }
    outer:
    while (++index < length) {
      var value = array[index],
          computed = iteratee == null ? value : iteratee(value);

      value = (comparator || value !== 0) ? value : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values[valuesIndex] === computed) {
            continue outer;
          }
        }
        result.push(value);
      }
      else if (!includes(values, computed, comparator)) {
        result.push(value);
      }
    }
    return result;
  }

  var _baseDifference = baseDifference;

  /** Built-in value references. */
  var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;

  /**
   * Checks if `value` is a flattenable `arguments` object or array.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
   */
  function isFlattenable(value) {
    return isArray_1(value) || isArguments_1(value) ||
      !!(spreadableSymbol && value && value[spreadableSymbol]);
  }

  var _isFlattenable = isFlattenable;

  /**
   * The base implementation of `_.flatten` with support for restricting flattening.
   *
   * @private
   * @param {Array} array The array to flatten.
   * @param {number} depth The maximum recursion depth.
   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
   * @param {Array} [result=[]] The initial result value.
   * @returns {Array} Returns the new flattened array.
   */
  function baseFlatten(array, depth, predicate, isStrict, result) {
    var index = -1,
        length = array.length;

    predicate || (predicate = _isFlattenable);
    result || (result = []);

    while (++index < length) {
      var value = array[index];
      if (depth > 0 && predicate(value)) {
        if (depth > 1) {
          // Recursively flatten arrays (susceptible to call stack limits).
          baseFlatten(value, depth - 1, predicate, isStrict, result);
        } else {
          _arrayPush(result, value);
        }
      } else if (!isStrict) {
        result[result.length] = value;
      }
    }
    return result;
  }

  var _baseFlatten = baseFlatten;

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  var _apply = apply;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax$1 = Math.max;

  /**
   * A specialized version of `baseRest` which transforms the rest array.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @param {Function} transform The rest array transform.
   * @returns {Function} Returns the new function.
   */
  function overRest(func, start, transform) {
    start = nativeMax$1(start === undefined ? (func.length - 1) : start, 0);
    return function() {
      var args = arguments,
          index = -1,
          length = nativeMax$1(args.length - start, 0),
          array = Array(length);

      while (++index < length) {
        array[index] = args[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = transform(array);
      return _apply(func, this, otherArgs);
    };
  }

  var _overRest = overRest;

  /**
   * Creates a function that returns `value`.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {*} value The value to return from the new function.
   * @returns {Function} Returns the new constant function.
   * @example
   *
   * var objects = _.times(2, _.constant({ 'a': 1 }));
   *
   * console.log(objects);
   * // => [{ 'a': 1 }, { 'a': 1 }]
   *
   * console.log(objects[0] === objects[1]);
   * // => true
   */
  function constant(value) {
    return function() {
      return value;
    };
  }

  var constant_1 = constant;

  var defineProperty$1 = (function() {
    try {
      var func = _getNative(Object, 'defineProperty');
      func({}, '', {});
      return func;
    } catch (e) {}
  }());

  var _defineProperty$1 = defineProperty$1;

  /**
   * The base implementation of `setToString` without support for hot loop shorting.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var baseSetToString = !_defineProperty$1 ? identity_1 : function(func, string) {
    return _defineProperty$1(func, 'toString', {
      'configurable': true,
      'enumerable': false,
      'value': constant_1(string),
      'writable': true
    });
  };

  var _baseSetToString = baseSetToString;

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeNow = Date.now;

  /**
   * Creates a function that'll short out and invoke `identity` instead
   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
   * milliseconds.
   *
   * @private
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new shortable function.
   */
  function shortOut(func) {
    var count = 0,
        lastCalled = 0;

    return function() {
      var stamp = nativeNow(),
          remaining = HOT_SPAN - (stamp - lastCalled);

      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(undefined, arguments);
    };
  }

  var _shortOut = shortOut;

  /**
   * Sets the `toString` method of `func` to return `string`.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var setToString = _shortOut(_baseSetToString);

  var _setToString = setToString;

  /**
   * The base implementation of `_.rest` which doesn't validate or coerce arguments.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @returns {Function} Returns the new function.
   */
  function baseRest(func, start) {
    return _setToString(_overRest(func, start, identity_1), func + '');
  }

  var _baseRest = baseRest;

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return isObjectLike_1(value) && isArrayLike_1(value);
  }

  var isArrayLikeObject_1 = isArrayLikeObject;

  /**
   * Creates an array of `array` values not included in the other given arrays
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons. The order and references of result values are
   * determined by the first array.
   *
   * **Note:** Unlike `_.pullAll`, this method returns a new array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @param {...Array} [values] The values to exclude.
   * @returns {Array} Returns the new array of filtered values.
   * @see _.without, _.xor
   * @example
   *
   * _.difference([2, 1], [2, 3]);
   * // => [1]
   */
  var difference = _baseRest(function(array, values) {
    return isArrayLikeObject_1(array)
      ? _baseDifference(array, _baseFlatten(values, 1, isArrayLikeObject_1, true))
      : [];
  });

  var difference_1 = difference;

  /** `Object#toString` result references. */
  var stringTag = '[object String]';

  /**
   * Checks if `value` is classified as a `String` primitive or object.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a string, else `false`.
   * @example
   *
   * _.isString('abc');
   * // => true
   *
   * _.isString(1);
   * // => false
   */
  function isString(value) {
    return typeof value == 'string' ||
      (!isArray_1(value) && isObjectLike_1(value) && _baseGetTag(value) == stringTag);
  }

  var isString_1 = isString;

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return _arrayMap(props, function(key) {
      return object[key];
    });
  }

  var _baseValues = baseValues;

  /**
   * Creates an array of the own enumerable string keyed property values of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property values.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.values(new Foo);
   * // => [1, 2] (iteration order is not guaranteed)
   *
   * _.values('hi');
   * // => ['h', 'i']
   */
  function values(object) {
    return object == null ? [] : _baseValues(object, keys_1(object));
  }

  var values_1 = values;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * Checks if `value` is in `collection`. If `collection` is a string, it's
   * checked for a substring of `value`, otherwise
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * is used for equality comparisons. If `fromIndex` is negative, it's used as
   * the offset from the end of `collection`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object|string} collection The collection to inspect.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
   * @returns {boolean} Returns `true` if `value` is found, else `false`.
   * @example
   *
   * _.includes([1, 2, 3], 1);
   * // => true
   *
   * _.includes([1, 2, 3], 1, 2);
   * // => false
   *
   * _.includes({ 'a': 1, 'b': 2 }, 1);
   * // => true
   *
   * _.includes('abcd', 'bc');
   * // => true
   */
  function includes(collection, value, fromIndex, guard) {
    collection = isArrayLike_1(collection) ? collection : values_1(collection);
    fromIndex = (fromIndex && !guard) ? toInteger_1(fromIndex) : 0;

    var length = collection.length;
    if (fromIndex < 0) {
      fromIndex = nativeMax(length + fromIndex, 0);
    }
    return isString_1(collection)
      ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
      : (!!length && _baseIndexOf(collection, value, fromIndex) > -1);
  }

  var includes_1 = includes;

  /**
   * Creates a debounced function that delays invoking `func` until after `wait`
   * milliseconds have elapsed since the last time the debounced function was
   * invoked, or until the next browser frame is drawn. The debounced function
   * comes with a `cancel` method to cancel delayed `func` invocations and a
   * `flush` method to immediately invoke them. Provide `options` to indicate
   * whether `func` should be invoked on the leading and/or trailing edge of the
   * `wait` timeout. The `func` is invoked with the last arguments provided to the
   * debounced function. Subsequent calls to the debounced function return the
   * result of the last `func` invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is
   * invoked on the trailing edge of the timeout only if the debounced function
   * is invoked more than once during the `wait` timeout.
   *
   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
   * until the next tick, similar to `setTimeout` with a timeout of `0`.
   *
   * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`
   * invocation will be deferred until the next frame is drawn (typically about
   * 16ms).
   *
   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
   * for details over the differences between `debounce` and `throttle`.
   *
   * @category Function
   * @param {Function} func The function to debounce.
   * @param {number} [wait=0]
   *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is
   *  used (if available, otherwise it will be setTimeout(...,0)).
   * @param {Object} [options={}] The options object.
   *  Specify invoking on the leading edge of the timeout.
   * @param {boolean} [options.leading=false]
   *  The maximum time `func` is allowed to be delayed before it's invoked.
   * @param {number} [options.maxWait]
   *  Specify invoking on the trailing edge of the timeout.
   * @param {boolean} [options.trailing=true]
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * // Avoid costly calculations while the window size is in flux.
   * const resizeHandler = useDebouncedCallback(calculateLayout, 150);
   * window.addEventListener('resize', resizeHandler)
   *
   * // Invoke `sendMail` when clicked, debouncing subsequent calls.
   * const clickHandler = useDebouncedCallback(sendMail, 300, {
   *   leading: true,
   *   trailing: false,
   * })
   * <button onClick={clickHandler}>click me</button>
   *
   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
   * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })
   * const source = new EventSource('/stream')
   * source.addEventListener('message', debounced)
   *
   * // Cancel the trailing debounced invocation.
   * window.addEventListener('popstate', debounced.cancel)
   *
   * // Check for pending invocations.
   * const status = debounced.pending() ? "Pending..." : "Ready"
   */
  function useDebouncedCallback(func, wait, options) {
      var _this = this;
      var lastCallTime = React.useRef(null);
      var lastInvokeTime = React.useRef(0);
      var timerId = React.useRef(null);
      var lastArgs = React.useRef([]);
      var lastThis = React.useRef();
      var result = React.useRef();
      var funcRef = React.useRef(func);
      var mounted = React.useRef(true);
      funcRef.current = func;
      // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.
      var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';
      if (typeof func !== 'function') {
          throw new TypeError('Expected a function');
      }
      wait = +wait || 0;
      options = options || {};
      var leading = !!options.leading;
      var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default
      var maxing = 'maxWait' in options;
      var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;
      React.useEffect(function () {
          mounted.current = true;
          return function () {
              mounted.current = false;
          };
      }, []);
      // You may have a question, why we have so many code under the useMemo definition.
      //
      // This was made as we want to escape from useCallback hell and
      // not to initialize a number of functions each time useDebouncedCallback is called.
      //
      // It means that we have less garbage for our GC calls which improves performance.
      // Also, it makes this library smaller.
      //
      // And the last reason, that the code without lots of useCallback with deps is easier to read.
      // You have only one place for that.
      var debounced = React.useMemo(function () {
          var invokeFunc = function (time) {
              var args = lastArgs.current;
              var thisArg = lastThis.current;
              lastArgs.current = lastThis.current = null;
              lastInvokeTime.current = time;
              return (result.current = funcRef.current.apply(thisArg, args));
          };
          var startTimer = function (pendingFunc, wait) {
              if (useRAF)
                  cancelAnimationFrame(timerId.current);
              timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);
          };
          var shouldInvoke = function (time) {
              if (!mounted.current)
                  return false;
              var timeSinceLastCall = time - lastCallTime.current;
              var timeSinceLastInvoke = time - lastInvokeTime.current;
              // Either this is the first call, activity has stopped and we're at the
              // trailing edge, the system time has gone backwards and we're treating
              // it as the trailing edge, or we've hit the `maxWait` limit.
              return (!lastCallTime.current ||
                  timeSinceLastCall >= wait ||
                  timeSinceLastCall < 0 ||
                  (maxing && timeSinceLastInvoke >= maxWait));
          };
          var trailingEdge = function (time) {
              timerId.current = null;
              // Only invoke if we have `lastArgs` which means `func` has been
              // debounced at least once.
              if (trailing && lastArgs.current) {
                  return invokeFunc(time);
              }
              lastArgs.current = lastThis.current = null;
              return result.current;
          };
          var timerExpired = function () {
              var time = Date.now();
              if (shouldInvoke(time)) {
                  return trailingEdge(time);
              }
              // https://github.com/xnimorz/use-debounce/issues/97
              if (!mounted.current) {
                  return;
              }
              // Remaining wait calculation
              var timeSinceLastCall = time - lastCallTime.current;
              var timeSinceLastInvoke = time - lastInvokeTime.current;
              var timeWaiting = wait - timeSinceLastCall;
              var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
              // Restart the timer
              startTimer(timerExpired, remainingWait);
          };
          var func = function () {
              var args = [];
              for (var _i = 0; _i < arguments.length; _i++) {
                  args[_i] = arguments[_i];
              }
              var time = Date.now();
              var isInvoking = shouldInvoke(time);
              lastArgs.current = args;
              lastThis.current = _this;
              lastCallTime.current = time;
              if (isInvoking) {
                  if (!timerId.current && mounted.current) {
                      // Reset any `maxWait` timer.
                      lastInvokeTime.current = lastCallTime.current;
                      // Start the timer for the trailing edge.
                      startTimer(timerExpired, wait);
                      // Invoke the leading edge.
                      return leading ? invokeFunc(lastCallTime.current) : result.current;
                  }
                  if (maxing) {
                      // Handle invocations in a tight loop.
                      startTimer(timerExpired, wait);
                      return invokeFunc(lastCallTime.current);
                  }
              }
              if (!timerId.current) {
                  startTimer(timerExpired, wait);
              }
              return result.current;
          };
          func.cancel = function () {
              if (timerId.current) {
                  useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);
              }
              lastInvokeTime.current = 0;
              lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;
          };
          func.isPending = function () {
              return !!timerId.current;
          };
          func.flush = function () {
              return !timerId.current ? result.current : trailingEdge(Date.now());
          };
          return func;
      }, [leading, maxing, wait, maxWait, trailing, useRAF]);
      return debounced;
  }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function (_e) { function e(_x10) { return _e.apply(this, arguments); } e.toString = function () { return _e.toString(); }; return e; }(function (e) { throw e; }), f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function (_e2) { function e(_x11) { return _e2.apply(this, arguments); } e.toString = function () { return _e2.toString(); }; return e; }(function (e) { didErr = true; err = e; }), f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var defaultOgState = {
    activeUrl: '',
    data: {},
    order: []
  };
  var defaultImageState = {
    data: {},
    order: []
  };
  var defaultFileState = {
    data: {},
    order: []
  };

  var useTextArea = function useTextArea() {
    var _useState = React.useState(''),
        _useState2 = _slicedToArray$3(_useState, 2),
        text = _useState2[0],
        setText = _useState2[1];

    var _useState3 = React.useState(null),
        _useState4 = _slicedToArray$3(_useState3, 2),
        curser = _useState4[0],
        setCurser = _useState4[1];

    var textInputRef = React.useRef();
    var insertText = React.useCallback(function (insertedText) {
      setText(function (prevText) {
        var textareaElement = textInputRef.current;

        if (!textareaElement) {
          setCurser(null);
          return prevText + insertedText;
        } // Insert emoji at previous cursor position


        var selectionStart = textareaElement.selectionStart,
            selectionEnd = textareaElement.selectionEnd;
        setCurser(selectionStart + insertedText.length);
        return prevText.slice(0, selectionStart) + insertedText + prevText.slice(selectionEnd);
      });
    }, []);
    var onSelectEmoji = React.useCallback(function (emoji) {
      return insertText(emoji.native);
    }, []);
    React.useLayoutEffect(function () {
      // Update cursorPosition after insertText is fired
      var textareaElement = textInputRef.current;

      if (textareaElement && curser !== null) {
        textareaElement.selectionStart = curser;
        textareaElement.selectionEnd = curser;
      }
    }, [curser]);
    return {
      text: text,
      setText: setText,
      insertText: insertText,
      onSelectEmoji: onSelectEmoji,
      textInputRef: textInputRef
    };
  };

  var useOg = function useOg(_ref) {
    var _og$data$og$activeUrl;

    var client = _ref.client,
        logErr = _ref.logErr;

    var _useState5 = React.useState(defaultOgState),
        _useState6 = _slicedToArray$3(_useState5, 2),
        og = _useState6[0],
        setOg = _useState6[1];

    var reqInProgress = React.useRef({});
    var activeOg = (_og$data$og$activeUrl = og.data[og.activeUrl]) === null || _og$data$og$activeUrl === void 0 ? void 0 : _og$data$og$activeUrl.data;
    var orderedOgStates = og.order.map(function (url) {
      return og.data[url];
    }).filter(Boolean);
    var isOgScraping = orderedOgStates.some(function (state) {
      return state.scrapingActive;
    });
    var availableOg = orderedOgStates.map(function (state) {
      return state.data;
    }).filter(Boolean);
    var resetOg = React.useCallback(function () {
      return setOg(defaultOgState);
    }, []);
    var setActiveOg = React.useCallback(function (url) {
      if (url) {
        setOg(function (prevState) {
          prevState.data[url].dismissed = false;
          return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
            activeUrl: url
          });
        });
      }
    }, []);
    var dismissOg = React.useCallback(function (e) {
      e === null || e === void 0 ? void 0 : e.preventDefault();
      setOg(function (prevState) {
        for (var url in prevState.data) {
          prevState.data[url].dismissed = true;
        }

        return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
          activeUrl: ''
        });
      });
    }, []);
    var handleOG = React.useCallback(function (text) {
      var urls = uniq_1$1(linkifyjs.find(text, 'url').map(function (info) {
        return info.href;
      })); // removed delete ogs from state and add the new urls


      setOg(function (prevState) {
        var newUrls = difference_1(urls, prevState.order);

        var removedUrls = difference_1(prevState.order, urls);

        if (!includes_1(urls, prevState.activeUrl)) {
          prevState.activeUrl = '';

          var _iterator = _createForOfIteratorHelper(urls),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var url = _step.value;
              var _og = prevState.data[url];

              if (_og !== null && _og !== void 0 && _og.data && !_og.dismissed) {
                prevState.activeUrl = url;
                break;
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }

        var _iterator2 = _createForOfIteratorHelper(removedUrls),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _url = _step2.value;
            delete prevState.data[_url];
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        var _iterator3 = _createForOfIteratorHelper(newUrls),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _url2 = _step3.value;
            prevState.data[_url2] = {
              scrapingActive: true,
              dismissed: false
            };
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }

        return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
          order: urls
        });
      });
    }, []);
    var handleOgDebounced = useDebouncedCallback(handleOG, 750, {
      leading: true,
      trailing: true
    });
    React.useEffect(function () {
      og.order.filter(function (url) {
        return !reqInProgress.current[url] && og.data[url].scrapingActive;
      }).forEach( /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee(url) {
          var resp;
          return regenerator$1.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  reqInProgress.current[url] = true;
                  _context.prev = 1;
                  _context.next = 4;
                  return client.og(url);

                case 4:
                  resp = _context.sent;
                  resp.url = url;
                  setOg(function (prevState) {
                    prevState.data[url] = _objectSpread$5(_objectSpread$5({}, prevState.data[url]), {}, {
                      data: resp,
                      scrapingActive: false,
                      dismissed: false
                    });
                    prevState.activeUrl = prevState.activeUrl || url;
                    return _objectSpread$5({}, prevState);
                  });
                  _context.next = 14;
                  break;

                case 9:
                  _context.prev = 9;
                  _context.t0 = _context["catch"](1);
                  console.warn(_context.t0);
                  logErr(_context.t0, 'get-og');
                  setOg(function (prevState) {
                    prevState.data[url] = _objectSpread$5(_objectSpread$5({}, prevState.data[url]), {}, {
                      scrapingActive: false,
                      dismissed: false
                    });
                    return _objectSpread$5({}, prevState);
                  });

                case 14:
                  delete reqInProgress.current[url];

                case 15:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, null, [[1, 9]]);
        }));

        return function (_x) {
          return _ref2.apply(this, arguments);
        };
      }());
    }, [og.order]);
    return {
      og: og,
      activeOg: activeOg,
      setActiveOg: setActiveOg,
      resetOg: resetOg,
      availableOg: availableOg,
      orderedOgStates: orderedOgStates,
      isOgScraping: isOgScraping,
      handleOgDebounced: handleOgDebounced,
      dismissOg: dismissOg,
      ogActiveUrl: og.activeUrl
    };
  };

  var useUpload = function useUpload(_ref3) {
    var client = _ref3.client,
        logErr = _ref3.logErr;

    var _useState7 = React.useState(defaultImageState),
        _useState8 = _slicedToArray$3(_useState7, 2),
        images = _useState8[0],
        setImages = _useState8[1];

    var _useState9 = React.useState(defaultFileState),
        _useState10 = _slicedToArray$3(_useState9, 2),
        files = _useState10[0],
        setFiles = _useState10[1];

    var reqInProgress = React.useRef({});
    var orderedImages = images.order.map(function (id) {
      return images.data[id];
    });
    var uploadedImages = orderedImages.filter(function (upload) {
      return upload.url;
    });
    var orderedFiles = files.order.map(function (id) {
      return files.data[id];
    });
    var uploadedFiles = orderedFiles.filter(function (upload) {
      return upload.url;
    });
    var resetUpload = React.useCallback(function () {
      setImages(defaultImageState);
      setFiles(defaultFileState);
    }, []);
    var uploadNewImage = React.useCallback(function (file) {
      var id = generateRandomId();
      setImages(function (_ref4) {
        var order = _ref4.order,
            data = _ref4.data;
        data[id] = {
          id: id,
          file: file,
          state: 'uploading'
        };
        return {
          data: _objectSpread$5({}, data),
          order: [].concat(_toConsumableArray$3(order), [id])
        };
      });

      if (FileReader) {
        // TODO: Possibly use URL.createObjectURL instead. However, then we need
        // to release the previews when not used anymore though.
        var reader = new FileReader();

        reader.onload = function (event) {
          var _event$target;

          var previewUri = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result;
          if (!previewUri) return;
          setImages(function (prevState) {
            if (!prevState.data[id]) return prevState;
            prevState.data[id].previewUri = previewUri;
            return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
              data: _objectSpread$5({}, prevState.data)
            });
          });
        };

        reader.readAsDataURL(file);
      }
    }, []);
    var uploadNewFile = React.useCallback(function (file) {
      var id = generateRandomId();
      setFiles(function (_ref5) {
        var order = _ref5.order,
            data = _ref5.data;
        data[id] = {
          id: id,
          file: file,
          state: 'uploading'
        };
        return {
          data: _objectSpread$5({}, data),
          order: [].concat(_toConsumableArray$3(order), [id])
        };
      });
    }, []);
    var uploadImage = React.useCallback( /*#__PURE__*/function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee2(id, img) {
        var _yield$client$images$, url;

        return regenerator$1.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                setImages(function (prevState) {
                  if (!prevState.data[id]) return prevState;
                  prevState.data[id].state = 'uploading';
                  return _objectSpread$5({}, prevState);
                });
                _context2.prev = 1;
                _context2.next = 4;
                return client.images.upload(img.file);

              case 4:
                _yield$client$images$ = _context2.sent;
                url = _yield$client$images$.file;
                setImages(function (prevState) {
                  if (!prevState.data[id]) return prevState;
                  prevState.data[id].url = url;
                  prevState.data[id].state = 'finished';
                  return _objectSpread$5({}, prevState);
                });
                _context2.next = 13;
                break;

              case 9:
                _context2.prev = 9;
                _context2.t0 = _context2["catch"](1);
                console.warn(_context2.t0);
                setImages(function (prevState) {
                  if (!prevState.data[id]) return prevState;
                  logErr(_context2.t0, 'upload-image');
                  prevState.data[id].state = 'failed';
                  return _objectSpread$5({}, prevState);
                });

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, null, [[1, 9]]);
      }));

      return function (_x2, _x3) {
        return _ref6.apply(this, arguments);
      };
    }(), []);
    var uploadFile = React.useCallback( /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee3(id, file) {
        var _yield$client$files$u, url;

        return regenerator$1.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                setFiles(function (prevState) {
                  if (!prevState.data[id]) return prevState;
                  prevState.data[id].state = 'uploading';
                  return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
                    data: _objectSpread$5({}, prevState.data)
                  });
                });
                _context3.prev = 1;
                _context3.next = 4;
                return client.files.upload(file.file);

              case 4:
                _yield$client$files$u = _context3.sent;
                url = _yield$client$files$u.file;
                setFiles(function (prevState) {
                  if (!prevState.data[id]) return prevState;
                  prevState.data[id].url = url;
                  prevState.data[id].state = 'finished';
                  return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
                    data: _objectSpread$5({}, prevState.data)
                  });
                });
                _context3.next = 13;
                break;

              case 9:
                _context3.prev = 9;
                _context3.t0 = _context3["catch"](1);
                console.warn(_context3.t0);
                setFiles(function (prevState) {
                  if (!prevState.data[id]) return prevState;
                  logErr(_context3.t0, 'upload-file');
                  prevState.data[id].state = 'failed';
                  return _objectSpread$5(_objectSpread$5({}, prevState), {}, {
                    data: _objectSpread$5({}, prevState.data)
                  });
                });

              case 13:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, null, [[1, 9]]);
      }));

      return function (_x4, _x5) {
        return _ref7.apply(this, arguments);
      };
    }(), []);
    var uploadNewFiles = React.useCallback(function (files) {
      for (var i = 0; i < files.length; i += 1) {
        var file = files[i];

        if (file.type.startsWith('image/')) {
          uploadNewImage(file);
        } else if (file instanceof File) {
          uploadNewFile(file);
        }
      }
    }, []);
    var removeImage = React.useCallback(function (id) {
      setImages(function (prevState) {
        prevState.order = prevState.order.filter(function (oid) {
          return id !== oid;
        });
        delete prevState.data[id];
        return _objectSpread$5({}, prevState);
      });
    }, []);
    var removeFile = React.useCallback(function (id) {
      // eslint-disable-next-line sonarjs/no-identical-functions
      setFiles(function (prevState) {
        prevState.order = prevState.order.filter(function (oid) {
          return id !== oid;
        });
        delete prevState.data[id];
        return _objectSpread$5({}, prevState);
      });
    }, []);
    React.useEffect(function () {
      images.order.filter(function (id) {
        return !reqInProgress.current[id] && images.data[id].state === 'uploading';
      }).forEach( /*#__PURE__*/function () {
        var _ref8 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee4(id) {
          return regenerator$1.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  reqInProgress.current[id] = true;
                  _context4.next = 3;
                  return uploadImage(id, images.data[id]);

                case 3:
                  delete reqInProgress.current[id];

                case 4:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }));

        return function (_x6) {
          return _ref8.apply(this, arguments);
        };
      }());
    }, [images.order]);
    React.useEffect(function () {
      files.order.filter(function (id) {
        return !reqInProgress.current[id] && files.data[id].state === 'uploading';
      }).forEach( /*#__PURE__*/function () {
        var _ref9 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee5(id) {
          return regenerator$1.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  reqInProgress.current[id] = true;
                  _context5.next = 3;
                  return uploadFile(id, files.data[id]);

                case 3:
                  delete reqInProgress.current[id];

                case 4:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }));

        return function (_x7) {
          return _ref9.apply(this, arguments);
        };
      }());
    }, [files.order]);
    return {
      images: images,
      files: files,
      orderedImages: orderedImages,
      orderedFiles: orderedFiles,
      uploadedImages: uploadedImages,
      uploadedFiles: uploadedFiles,
      resetUpload: resetUpload,
      uploadNewFiles: uploadNewFiles,
      uploadFile: uploadFile,
      uploadImage: uploadImage,
      removeFile: removeFile,
      removeImage: removeImage
    };
  };

  function useStatusUpdateForm(_ref10) {
    var _appCtx$user;

    var activityVerb = _ref10.activityVerb,
        feedGroup = _ref10.feedGroup,
        modifyActivityData = _ref10.modifyActivityData,
        doRequest = _ref10.doRequest,
        userId = _ref10.userId,
        onSuccess = _ref10.onSuccess;

    var _useState11 = React.useState(false),
        _useState12 = _slicedToArray$3(_useState11, 2),
        submitting = _useState12[0],
        setSubmitting = _useState12[1];

    var appCtx = useStreamContext();
    var client = appCtx.client;
    var userData = ((_appCtx$user = appCtx.user) === null || _appCtx$user === void 0 ? void 0 : _appCtx$user.data) || {};
    var logErr = React.useCallback(function (e, type) {
      return appCtx.errorHandler(e, type, {
        userId: userId,
        feedGroup: feedGroup
      });
    }, []);

    var _useTextArea = useTextArea(),
        text = _useTextArea.text,
        setText = _useTextArea.setText,
        insertText = _useTextArea.insertText,
        onSelectEmoji = _useTextArea.onSelectEmoji,
        textInputRef = _useTextArea.textInputRef;

    var _useOg = useOg({
      client: client,
      logErr: logErr
    }),
        resetOg = _useOg.resetOg,
        setActiveOg = _useOg.setActiveOg,
        ogActiveUrl = _useOg.ogActiveUrl,
        activeOg = _useOg.activeOg,
        dismissOg = _useOg.dismissOg,
        availableOg = _useOg.availableOg,
        isOgScraping = _useOg.isOgScraping,
        handleOgDebounced = _useOg.handleOgDebounced;

    var _useUpload = useUpload({
      client: client,
      logErr: logErr
    }),
        images = _useUpload.images,
        files = _useUpload.files,
        orderedImages = _useUpload.orderedImages,
        orderedFiles = _useUpload.orderedFiles,
        uploadedImages = _useUpload.uploadedImages,
        uploadedFiles = _useUpload.uploadedFiles,
        resetUpload = _useUpload.resetUpload,
        uploadNewFiles = _useUpload.uploadNewFiles,
        uploadFile = _useUpload.uploadFile,
        uploadImage = _useUpload.uploadImage,
        removeFile = _useUpload.removeFile,
        removeImage = _useUpload.removeImage;

    var resetState = React.useCallback(function () {
      setText('');
      setSubmitting(false);
      resetOg();
      resetUpload();
    }, []);

    var object = function object() {
      var _iterator4 = _createForOfIteratorHelper(orderedImages),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var image = _step4.value;
          if (image.url) return image.url;
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      return text.trim();
    };

    var canSubmit = function canSubmit() {
      return !submitting && Boolean(object()) && orderedImages.every(function (upload) {
        return upload.state !== 'uploading';
      }) && orderedFiles.every(function (upload) {
        return upload.state !== 'uploading';
      }) && !isOgScraping;
    };

    var addActivity = /*#__PURE__*/function () {
      var _ref11 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee6() {
        var _client$currentUser;

        var activity, modifiedActivity;
        return regenerator$1.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                // FIXME:
                // @ts-expect-error
                activity = {
                  actor: (_client$currentUser = client.currentUser) === null || _client$currentUser === void 0 ? void 0 : _client$currentUser.ref(),
                  object: object(),
                  verb: activityVerb,
                  text: text.trim(),
                  attachments: {
                    og: activeOg,
                    images: uploadedImages.map(function (image) {
                      return image.url;
                    }).filter(Boolean),
                    files: uploadedFiles.map(function (upload) {
                      return {
                        // url will never actually be empty string because uploadedFiles
                        // filters those out.
                        url: upload.url,
                        name: upload.file.name,
                        mimeType: upload.file.type
                      };
                    })
                  }
                };
                modifiedActivity = modifyActivityData ? modifyActivityData(activity) : activity;

                if (!doRequest) {
                  _context6.next = 8;
                  break;
                }

                _context6.next = 5;
                return doRequest(modifiedActivity);

              case 5:
                return _context6.abrupt("return", _context6.sent);

              case 8:
                _context6.next = 10;
                return client.feed(feedGroup, userId).addActivity(modifiedActivity);

              case 10:
                return _context6.abrupt("return", _context6.sent);

              case 11:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      return function addActivity() {
        return _ref11.apply(this, arguments);
      };
    }();

    var onSubmitForm = /*#__PURE__*/function () {
      var _ref12 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee7(e) {
        var response;
        return regenerator$1.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                e.preventDefault();
                _context7.prev = 1;
                setSubmitting(true);
                _context7.next = 5;
                return addActivity();

              case 5:
                response = _context7.sent;
                resetState();
                if (onSuccess) onSuccess(response);
                _context7.next = 14;
                break;

              case 10:
                _context7.prev = 10;
                _context7.t0 = _context7["catch"](1);
                setSubmitting(false);
                logErr(_context7.t0, 'add-activity');

              case 14:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, null, [[1, 10]]);
      }));

      return function onSubmitForm(_x8) {
        return _ref12.apply(this, arguments);
      };
    }();

    var onChange = React.useCallback(function (event) {
      var text = inputValueFromEvent(event, true);
      if (text === null || text === undefined) return;
      setText(text);
      handleOgDebounced(text);
    }, []);
    var onPaste = React.useCallback( /*#__PURE__*/function () {
      var _ref13 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee8(event) {
        var items, plainTextPromise, _loop, i, _ret, fileLikes, s;

        return regenerator$1.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                items = event.clipboardData.items;

                if (dataTransferItemsHaveFiles(items)) {
                  _context8.next = 3;
                  break;
                }

                return _context8.abrupt("return");

              case 3:
                event.preventDefault(); // Get a promise for the plain text in case no files are
                // found. This needs to be done here because chrome cleans
                // up the DataTransferItems after resolving of a promise.

                _loop = function _loop(i) {
                  var item = items[i];

                  if (item.kind === 'string' && item.type === 'text/plain') {
                    plainTextPromise = new Promise(function (resolve) {
                      return item.getAsString(resolve);
                    });
                    return "break";
                  }
                };

                i = 0;

              case 6:
                if (!(i < items.length)) {
                  _context8.next = 13;
                  break;
                }

                _ret = _loop(i);

                if (!(_ret === "break")) {
                  _context8.next = 10;
                  break;
                }

                return _context8.abrupt("break", 13);

              case 10:
                i += 1;
                _context8.next = 6;
                break;

              case 13:
                _context8.next = 15;
                return dataTransferItemsToFiles(items);

              case 15:
                fileLikes = _context8.sent;

                if (!fileLikes.length) {
                  _context8.next = 19;
                  break;
                }

                uploadNewFiles(fileLikes);
                return _context8.abrupt("return");

              case 19:
                if (!plainTextPromise) {
                  _context8.next = 24;
                  break;
                }

                _context8.next = 22;
                return plainTextPromise;

              case 22:
                s = _context8.sent;
                insertText(s);

              case 24:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      return function (_x9) {
        return _ref13.apply(this, arguments);
      };
    }(), []);
    return {
      userData: userData,
      textInputRef: textInputRef,
      text: text,
      submitting: submitting,
      files: files,
      images: images,
      activeOg: activeOg,
      availableOg: availableOg,
      isOgScraping: isOgScraping,
      ogActiveUrl: ogActiveUrl,
      onSubmitForm: onSubmitForm,
      onSelectEmoji: onSelectEmoji,
      insertText: insertText,
      onChange: onChange,
      dismissOg: dismissOg,
      setActiveOg: setActiveOg,
      canSubmit: canSubmit,
      uploadNewFiles: uploadNewFiles,
      uploadFile: uploadFile,
      uploadImage: uploadImage,
      removeFile: removeFile,
      removeImage: removeImage,
      onPaste: onPaste
    };
  }

  var Panel = function Panel(_ref) {
    var children = _ref.children,
        _ref$panelStyle = _ref.panelStyle,
        panelStyle = _ref$panelStyle === void 0 ? 'rounded' : _ref$panelStyle,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: className !== null && className !== void 0 ? className : "raf-panel raf-panel--".concat(panelStyle),
      style: style
    }, children);
  };
  var PanelContent = function PanelContent(_ref2) {
    var children = _ref2.children,
        className = _ref2.className,
        style = _ref2.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-panel-content', className),
      style: style
    }, children);
  }; // eslint-disable-next-line sonarjs/no-identical-functions

  var PanelFooter = function PanelFooter(_ref3) {
    var children = _ref3.children,
        className = _ref3.className,
        style = _ref3.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-panel-footer', className),
      style: style
    }, children);
  }; // eslint-disable-next-line sonarjs/no-identical-functions

  var PanelHeading = function PanelHeading(_ref4) {
    var children = _ref4.children,
        className = _ref4.className,
        style = _ref4.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-panel-header', className),
      style: style
    }, children);
  };

  /* jshint browser: true */

  var textareaCaret = createCommonjsModule(function (module) {
  (function () {

  // The properties that we copy into a mirrored div.
  // Note that some browsers, such as Firefox,
  // do not concatenate properties, i.e. padding-top, bottom etc. -> padding,
  // so we have to do every single property specifically.
  var properties = [
    'direction',  // RTL support
    'boxSizing',
    'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does
    'height',
    'overflowX',
    'overflowY',  // copy the scrollbar for IE

    'borderTopWidth',
    'borderRightWidth',
    'borderBottomWidth',
    'borderLeftWidth',
    'borderStyle',

    'paddingTop',
    'paddingRight',
    'paddingBottom',
    'paddingLeft',

    // https://developer.mozilla.org/en-US/docs/Web/CSS/font
    'fontStyle',
    'fontVariant',
    'fontWeight',
    'fontStretch',
    'fontSize',
    'fontSizeAdjust',
    'lineHeight',
    'fontFamily',

    'textAlign',
    'textTransform',
    'textIndent',
    'textDecoration',  // might not make a difference, but better be safe

    'letterSpacing',
    'wordSpacing',

    'tabSize',
    'MozTabSize'

  ];

  var isBrowser = (typeof window !== 'undefined');
  var isFirefox = (isBrowser && window.mozInnerScreenX != null);

  function getCaretCoordinates(element, position, options) {
    if(!isBrowser) {
      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');
    }

    var debug = options && options.debug || false;
    if (debug) {
      var el = document.querySelector('#input-textarea-caret-position-mirror-div');
      if ( el ) { el.parentNode.removeChild(el); }
    }

    // mirrored div
    var div = document.createElement('div');
    div.id = 'input-textarea-caret-position-mirror-div';
    document.body.appendChild(div);

    var style = div.style;
    var computed = window.getComputedStyle? getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9

    // default textarea styles
    style.whiteSpace = 'pre-wrap';
    if (element.nodeName !== 'INPUT')
      style.wordWrap = 'break-word';  // only for textarea-s

    // position off-screen
    style.position = 'absolute';  // required to return coordinates properly
    if (!debug)
      style.visibility = 'hidden';  // not 'display: none' because we want rendering

    // transfer the element's properties to the div
    properties.forEach(function (prop) {
      style[prop] = computed[prop];
    });

    if (isFirefox) {
      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275
      if (element.scrollHeight > parseInt(computed.height))
        style.overflowY = 'scroll';
    } else {
      style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'
    }

    div.textContent = element.value.substring(0, position);
    // the second special handling for input type="text" vs textarea: spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037
    if (element.nodeName === 'INPUT')
      div.textContent = div.textContent.replace(/\s/g, '\u00a0');

    var span = document.createElement('span');
    // Wrapping must be replicated *exactly*, including when a long word gets
    // onto the next line, with whitespace at the end of the line before (#7).
    // The  *only* reliable way to do that is to copy the *entire* rest of the
    // textarea's content into the <span> created at the caret position.
    // for inputs, just '.' would be enough, but why bother?
    span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all
    div.appendChild(span);

    var coordinates = {
      top: span.offsetTop + parseInt(computed['borderTopWidth']),
      left: span.offsetLeft + parseInt(computed['borderLeftWidth'])
    };

    if (debug) {
      span.style.backgroundColor = '#aaa';
    } else {
      document.body.removeChild(div);
    }

    return coordinates;
  }

  {
    module.exports = getCaretCoordinates;
  }

  }());
  });

  var NativeCustomEvent = commonjsGlobal.CustomEvent;

  function useNative () {
    try {
      var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });
      return  'cat' === p.type && 'bar' === p.detail.foo;
    } catch (e) {
    }
    return false;
  }

  /**
   * Cross-browser `CustomEvent` constructor.
   *
   * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent
   *
   * @public
   */

  var customEvent = useNative() ? NativeCustomEvent :

  // IE >= 9
  'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {
    var e = document.createEvent('CustomEvent');
    if (params) {
      e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);
    } else {
      e.initCustomEvent(type, false, false, void 0);
    }
    return e;
  } :

  // IE <= 8
  function CustomEvent (type, params) {
    var e = document.createEventObject();
    e.type = type;
    if (params) {
      e.bubbles = Boolean(params.bubbles);
      e.cancelable = Boolean(params.cancelable);
      e.detail = params.detail;
    } else {
      e.bubbles = false;
      e.cancelable = false;
      e.detail = void 0;
    }
    return e;
  };

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _objectSpread$4(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _typeof2$1(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof2$1 = function _typeof2(obj) {
        return typeof obj;
      };
    } else {
      _typeof2$1 = function _typeof2(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof2$1(obj);
  }

  function _typeof(obj) {
    if (typeof Symbol === "function" && _typeof2$1(Symbol.iterator) === "symbol") {
      _typeof = function _typeof(obj) {
        return _typeof2$1(obj);
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2$1(obj);
      };
    }

    return _typeof(obj);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  var KEY_CODES = {
    ESC: 27,
    UP: 38,
    DOWN: 40,
    LEFT: 37,
    RIGHT: 39,
    ENTER: 13,
    TAB: 9
  }; // This is self-made key shortcuts manager, used for caching key strokes

  var Listener = function Listener() {
    var _this = this;

    _classCallCheck(this, Listener);

    this.startListen = function (ref) {
      if (!ref) return;
      ref.addEventListener("keydown", _this.f);
    };

    this.stopListen = function (ref) {
      if (!ref) return;
      ref.removeEventListener("keydown", _this.f);
    };

    this.add = function (keyCodes, fn) {
      var keyCode = keyCodes;
      if (typeof keyCode !== "object") keyCode = [keyCode];
      _this.listeners[_this.index] = {
        keyCode: keyCode,
        fn: fn
      };
      return _this.index++;
    };

    this.remove = function (id) {
      delete _this.listeners[id];
    };

    this.removeAll = function () {
      _this.listeners = {};
      _this.index = 1;
    };

    this.index = 1;
    this.listeners = {};

    this.f = function (e) {
      if (!e) return;
      var code = e.keyCode || e.which;
      Object.values(_this.listeners).forEach(function (_ref) {
        var keyCode = _ref.keyCode,
            fn = _ref.fn;

        if (keyCode.includes(code)) {
          e.stopPropagation();
          e.preventDefault();
          fn(e);
        }
      });
    };
  };

  var Listeners = new Listener();

  var Item =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(Item, _React$Component);

    function Item() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, Item);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Item)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.selectItem = function () {
        var _this$props = _this.props,
            item = _this$props.item,
            onSelectHandler = _this$props.onSelectHandler;
        onSelectHandler(item);
      };

      return _this;
    }

    _createClass(Item, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        if (this.props.item !== nextProps.item || this.props.selected !== nextProps.selected || this.props.style !== nextProps.style || this.props.className !== nextProps.className) {
          return true;
        }

        return false;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            Component = _this$props2.component,
            style = _this$props2.style,
            onClickHandler = _this$props2.onClickHandler,
            item = _this$props2.item,
            selected = _this$props2.selected,
            className = _this$props2.className,
            innerRef = _this$props2.innerRef;
        return React__default['default'].createElement("li", {
          className: "rta__item  ".concat(selected === true ? "rta__item--selected" : "", " ").concat(className || ""),
          style: style
        }, React__default['default'].createElement("div", {
          className: "rta__entity ".concat(selected === true ? "rta__entity--selected" : ""),
          role: "button",
          tabIndex: 0,
          onClick: onClickHandler,
          onFocus: this.selectItem,
          onMouseEnter: this.selectItem,
          onTouchStart: function onTouchStart() {
            _this2.clicked = true;

            _this2.selectItem();
          },
          onTouchEnd: function onTouchEnd(e) {
            e.preventDefault();

            if (_this2.clicked) {
              onClickHandler(e);
            }
          },
          onTouchMove: function onTouchMove() {
            _this2.clicked = false;
          },
          onTouchCancel: function onTouchCancel() {
            _this2.clicked = false;
          }
          /* $FlowFixMe */
          ,
          ref: innerRef
        }, React__default['default'].createElement(Component, {
          selected: selected,
          entity: item
        })));
      }
    }]);

    return Item;
  }(React__default['default'].Component);

  var List =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(List, _React$Component);

    function List() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, List);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedItem: null
      };
      _this.cachedIdOfItems = new Map();

      _this.onPressEnter = function (e) {
        if (typeof e !== "undefined") {
          e.preventDefault();
        }

        var values = _this.props.values;

        _this.modifyText(values[_this.getPositionInList()]);
      };

      _this.getPositionInList = function () {
        var values = _this.props.values;
        var selectedItem = _this.state.selectedItem;
        if (!selectedItem) return 0;
        return values.findIndex(function (a) {
          return _this.getId(a) === _this.getId(selectedItem);
        });
      };

      _this.getId = function (item) {
        if (_this.cachedIdOfItems.has(item)) {
          // $FlowFixMe
          return _this.cachedIdOfItems.get(item);
        }

        var textToReplace = _this.props.getTextToReplace(item);

        var computeId = function computeId() {
          if (textToReplace) {
            if (textToReplace.key) {
              return textToReplace.key;
            }

            if (typeof item === "string" || !item.key) {
              return textToReplace.text;
            }
          }

          if (!item.key) {
            throw new Error("Item ".concat(JSON.stringify(item), " has to have defined \"key\" property"));
          } // $FlowFixMe


          return item.key;
        };

        var id = computeId();

        _this.cachedIdOfItems.set(item, id);

        return id;
      };

      _this.listeners = [];
      _this.itemsRef = {};

      _this.modifyText = function (value) {
        if (!value) return;
        var onSelect = _this.props.onSelect;
        onSelect(value);
      };

      _this.selectItem = function (item) {
        var keyboard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var onItemHighlighted = _this.props.onItemHighlighted;
        if (_this.state.selectedItem === item) return;

        _this.setState({
          selectedItem: item
        }, function () {
          onItemHighlighted(item);

          if (keyboard) {
            _this.props.dropdownScroll(_this.itemsRef[_this.getId(item)]);
          }
        });
      };

      _this.scroll = function (e) {
        e.preventDefault();
        var values = _this.props.values;
        var code = e.keyCode || e.which;

        var oldPosition = _this.getPositionInList();

        var newPosition;

        switch (code) {
          case KEY_CODES.DOWN:
            newPosition = oldPosition + 1;
            break;

          case KEY_CODES.UP:
            newPosition = oldPosition - 1;
            break;

          default:
            newPosition = oldPosition;
            break;
        }

        newPosition = (newPosition % values.length + values.length) % values.length; // eslint-disable-line

        _this.selectItem(values[newPosition], [KEY_CODES.DOWN, KEY_CODES.UP].includes(code));
      };

      _this.isSelected = function (item) {
        var selectedItem = _this.state.selectedItem;
        if (!selectedItem) return false;
        return _this.getId(selectedItem) === _this.getId(item);
      };

      return _this;
    }

    _createClass(List, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.listeners.push(Listeners.add([KEY_CODES.DOWN, KEY_CODES.UP], this.scroll), Listeners.add([KEY_CODES.ENTER, KEY_CODES.TAB], this.onPressEnter));
        var values = this.props.values;
        if (values && values[0]) this.selectItem(values[0]);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(_ref) {
        var _this2 = this;

        var oldValues = _ref.values;
        var values = this.props.values;
        var oldValuesSerialized = oldValues.map(function (val) {
          return _this2.getId(val);
        }).join("");
        var newValuesSerialized = values.map(function (val) {
          return _this2.getId(val);
        }).join("");

        if (oldValuesSerialized !== newValuesSerialized && values && values[0]) {
          this.selectItem(values[0]);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        var listener;

        while (this.listeners.length) {
          listener = this.listeners.pop();
          Listeners.remove(listener);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props = this.props,
            values = _this$props.values,
            component = _this$props.component,
            style = _this$props.style,
            itemClassName = _this$props.itemClassName,
            className = _this$props.className,
            itemStyle = _this$props.itemStyle;
        return React__default['default'].createElement("ul", {
          className: "rta__list ".concat(className || ""),
          style: style
        }, values.map(function (item) {
          return React__default['default'].createElement(Item, {
            key: _this3.getId(item),
            innerRef: function innerRef(ref) {
              _this3.itemsRef[_this3.getId(item)] = ref;
            },
            selected: _this3.isSelected(item),
            item: item,
            className: itemClassName,
            style: itemStyle,
            onClickHandler: _this3.onPressEnter,
            onSelectHandler: _this3.selectItem,
            component: component
          });
        }));
      }
    }]);

    return List;
  }(React__default['default'].Component);

  function defaultScrollToItem(container, item) {
    var itemHeight = parseInt(getComputedStyle(item).getPropertyValue("height"), 10);
    var containerHight = parseInt(getComputedStyle(container).getPropertyValue("height"), 10) - itemHeight;
    var itemOffsetTop = item.offsetTop;
    var actualScrollTop = container.scrollTop;

    if (itemOffsetTop < actualScrollTop + containerHight && actualScrollTop < itemOffsetTop) {
      return;
    } // eslint-disable-next-line


    container.scrollTop = itemOffsetTop;
  }

  var DEFAULT_CARET_POSITION = "next";
  var POSITION_CONFIGURATION = {
    X: {
      LEFT: "rta__autocomplete--left",
      RIGHT: "rta__autocomplete--right"
    },
    Y: {
      TOP: "rta__autocomplete--top",
      BOTTOM: "rta__autocomplete--bottom"
    }
  };

  var errorMessage = function errorMessage(message) {
    return console.error("RTA: dataProvider fails: ".concat(message, "\n    \nCheck the documentation or create issue if you think it's bug. https://github.com/webscopeio/react-textarea-autocomplete/issues"));
  };

  var reservedRegexChars = [".", "^", "$", "*", "+", "-", "?", "(", ")", "[", "]", "{", "}", "\\", "|"];

  var escapeRegex = function escapeRegex(text) {
    return _toConsumableArray(text).map(function (character) {
      return reservedRegexChars.includes(character) ? "\\".concat(character) : character;
    }).join("");
  }; // The main purpose of this component is to figure out to which side the autocomplete should be opened


  var Autocomplete =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(Autocomplete, _React$Component);

    function Autocomplete() {
      _classCallCheck(this, Autocomplete);

      return _possibleConstructorReturn(this, _getPrototypeOf(Autocomplete).apply(this, arguments));
    }

    _createClass(Autocomplete, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var boundariesElement = this.props.boundariesElement;

        if (typeof boundariesElement === "string") {
          var elem = document.querySelector(boundariesElement);

          if (!elem) {
            throw new Error("RTA: Invalid prop boundariesElement: it has to be string or HTMLElement.");
          }

          this.containerElem = elem;
        } else if (boundariesElement instanceof HTMLElement) {
          this.containerElem = boundariesElement;
        } else {
          throw new Error("RTA: Invalid prop boundariesElement: it has to be string or HTMLElement.");
        }

        if (!this.containerElem || !this.containerElem.contains(this.ref)) {
          if (process.env.NODE_ENV !== "test") {
            throw new Error("RTA: Invalid prop boundariesElement: it has to be one of the parents of the RTA.");
          }
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        var _this$ref$classList, _this$ref$classList2;

        var top = this.props.top || 0;
        var left = this.props.left || 0;
        var usedClasses = [];
        var unusedClasses = [];
        var topPosition = 0;
        var leftPosition = 0;
        var containerBounds = this.containerElem.getBoundingClientRect();
        var dropdownBounds = this.ref.getBoundingClientRect();
        var textareaBounds = this.props.textareaRef.getBoundingClientRect();
        var computedStyle = window.getComputedStyle(this.ref);
        var marginTop = parseInt(computedStyle.getPropertyValue("margin-top"), 10);
        var marginBottom = parseInt(computedStyle.getPropertyValue("margin-bottom"), 10);
        var marginLeft = parseInt(computedStyle.getPropertyValue("margin-left"), 10);
        var marginRight = parseInt(computedStyle.getPropertyValue("margin-right"), 10);
        var dropdownBottom = marginTop + marginBottom + textareaBounds.top + top + dropdownBounds.height;
        var dropdownRight = marginLeft + marginRight + textareaBounds.left + left + dropdownBounds.width;

        if (dropdownRight > containerBounds.right) {
          leftPosition = left - dropdownBounds.width;
          usedClasses.push(POSITION_CONFIGURATION.X.LEFT);
          unusedClasses.push(POSITION_CONFIGURATION.X.RIGHT);
        } else {
          leftPosition = left;
          usedClasses.push(POSITION_CONFIGURATION.X.RIGHT);
          unusedClasses.push(POSITION_CONFIGURATION.X.LEFT);
        }

        if (dropdownBottom > containerBounds.bottom) {
          topPosition = top - dropdownBounds.height;
          usedClasses.push(POSITION_CONFIGURATION.Y.TOP);
          unusedClasses.push(POSITION_CONFIGURATION.Y.BOTTOM);
        } else {
          topPosition = top;
          usedClasses.push(POSITION_CONFIGURATION.Y.BOTTOM);
          unusedClasses.push(POSITION_CONFIGURATION.Y.TOP);
        }

        if (this.props.renderToBody) {
          topPosition += textareaBounds.top;
          leftPosition += textareaBounds.left;
        }

        this.ref.style.top = "".concat(topPosition, "px");
        this.ref.style.left = "".concat(leftPosition, "px");

        (_this$ref$classList = this.ref.classList).remove.apply(_this$ref$classList, unusedClasses);

        (_this$ref$classList2 = this.ref.classList).add.apply(_this$ref$classList2, usedClasses);
      }
    }, {
      key: "render",
      value: function render() {
        var _this = this;

        var _this$props = this.props,
            style = _this$props.style,
            className = _this$props.className,
            innerRef = _this$props.innerRef,
            children = _this$props.children,
            renderToBody = _this$props.renderToBody;
        var body = document.body;
        var autocompleteContainer = React__default['default'].createElement("div", {
          ref: function ref(_ref) {
            // $FlowFixMe
            _this.ref = _ref; // $FlowFixMe

            innerRef(_ref);
          },
          className: "rta__autocomplete ".concat(className || ""),
          style: style
        }, children);
        return renderToBody && body !== null ? _reactDom__default['default'].createPortal(autocompleteContainer, body) : autocompleteContainer;
      }
    }]);

    return Autocomplete;
  }(React__default['default'].Component);

  var ReactTextareaAutocomplete =
  /*#__PURE__*/
  function (_React$Component2) {
    _inherits(ReactTextareaAutocomplete, _React$Component2);

    function ReactTextareaAutocomplete(_props) {
      var _this2;

      _classCallCheck(this, ReactTextareaAutocomplete);

      _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ReactTextareaAutocomplete).call(this, _props));
      _this2.state = {
        top: null,
        left: null,
        currentTrigger: null,
        actualToken: "",
        data: null,
        value: "",
        dataLoading: false,
        selectionEnd: 0,
        component: null,
        textToReplace: null
      };

      _this2.escListenerInit = function () {
        if (!_this2.escListener) {
          _this2.escListener = Listeners.add(KEY_CODES.ESC, _this2._closeAutocomplete);
        }
      };

      _this2.escListenerDestroy = function () {
        if (_this2.escListener) {
          Listeners.remove(_this2.escListener);
          _this2.escListener = null;
        }
      };

      _this2.getSelectionPosition = function () {
        if (!_this2.textareaRef) return null;
        return {
          selectionStart: _this2.textareaRef.selectionStart,
          selectionEnd: _this2.textareaRef.selectionEnd
        };
      };

      _this2.getSelectedText = function () {
        if (!_this2.textareaRef) return null;
        var _this2$textareaRef = _this2.textareaRef,
            selectionStart = _this2$textareaRef.selectionStart,
            selectionEnd = _this2$textareaRef.selectionEnd;
        if (selectionStart === selectionEnd) return null;
        return _this2.state.value.substr(selectionStart, selectionEnd - selectionStart);
      };

      _this2.setCaretPosition = function () {
        var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        if (!_this2.textareaRef) return;

        _this2.textareaRef.focus();

        _this2.textareaRef.setSelectionRange(position, position);
      };

      _this2.getCaretPosition = function () {
        if (!_this2.textareaRef) {
          return 0;
        }

        var position = _this2.textareaRef.selectionEnd;
        return position;
      };

      _this2._handleCaretChange = function (e) {
        var cleanLastTrigger = function cleanLastTrigger() {
          var beforeHandle = _this2.getCaretPosition() - 1;
          _this2.lastTrigger = _this2.lastTrigger ? beforeHandle : 0;
        };

        if (e.type === "keydown") {
          // $FlowFixMe
          var code = e.keyCode || e.which;

          switch (code) {
            case KEY_CODES.UP:
            case KEY_CODES.DOWN:
              if (!_this2._isAutocompleteOpen()) {
                cleanLastTrigger();
              }

              break;

            case KEY_CODES.LEFT:
            case KEY_CODES.RIGHT:
              cleanLastTrigger();
              break;
          }

          return;
        }

        cleanLastTrigger();
      };

      _this2._onSelect = function (item) {
        var _this2$state = _this2.state,
            selectionEnd = _this2$state.selectionEnd,
            currentTrigger = _this2$state.currentTrigger,
            textareaValue = _this2$state.value;
        var onItemSelected = _this2.props.onItemSelected;
        if (!currentTrigger) return;

        var getTextToReplaceForCurrentTrigger = _this2._getTextToReplace(currentTrigger);

        if (!getTextToReplaceForCurrentTrigger) {
          _this2._closeAutocomplete();

          return;
        }

        var newToken = getTextToReplaceForCurrentTrigger(item);

        if (!newToken) {
          _this2._closeAutocomplete();

          return;
        }

        if (onItemSelected) {
          onItemSelected({
            currentTrigger: currentTrigger,
            item: item
          });
        }

        var computeCaretPosition = function computeCaretPosition(position, token, startToken) {
          switch (position) {
            case "start":
              return startToken;

            case "next":
            case "end":
              return startToken + token.length;

            default:
              if (!Number.isInteger(position)) {
                throw new Error('RTA: caretPosition should be "start", "next", "end" or number.');
              }

              return position;
          }
        };

        var textToModify = textareaValue.slice(0, selectionEnd);
        /**
         * It's important to escape the currentTrigger char for chars like [, (,...
         * This is a ridiculous dark magic, basically we found position of the last current token (from current trigger) and then we replace the text from that position (calculating the offset)
         */

        var escapedCurrentTrigger = escapeRegex(currentTrigger);
        var triggerOffset = textToModify.length - textToModify.lastIndexOf(currentTrigger);
        var startOfTokenPosition = textToModify.search(new RegExp("(?!".concat(escapedCurrentTrigger, ")$"))) - triggerOffset; // we add space after emoji is selected if a caret position is next

        var newTokenString = newToken.caretPosition === "next" ? "".concat(newToken.text, " ") : newToken.text;
        var newCaretPosition = computeCaretPosition(newToken.caretPosition, newTokenString, startOfTokenPosition);
        var modifiedText = textToModify.substring(0, startOfTokenPosition) + newTokenString;
        var newValue = textareaValue.replace(textToModify, modifiedText); // set the new textarea value and after that set the caret back to its position

        _this2.setState({
          value: newValue,
          dataLoading: false
        }, function () {
          var insertedTrigger = _this2.tokenRegExpEnding.exec(newTokenString);

          var insertedTriggerModifier = insertedTrigger ? insertedTrigger[0].length : 1;
          _this2.lastTrigger = newCaretPosition ? newCaretPosition - insertedTriggerModifier : newCaretPosition;
          _this2.textareaRef.value = newValue;
          _this2.textareaRef.selectionEnd = newCaretPosition;

          _this2._changeHandler();

          var scrollTop = _this2.textareaRef.scrollTop;

          _this2.setCaretPosition(newCaretPosition);
          /*
            Chrome does not maintain scroll position
            Relevant discussion https://github.com/webscopeio/react-textarea-autocomplete/pull/97
          */


          if (window.chrome) {
            _this2.textareaRef.scrollTop = scrollTop;
          }
        });
      };

      _this2._getTextToReplace = function (currentTrigger) {
        var triggerSettings = _this2.props.trigger[currentTrigger];
        if (!currentTrigger || !triggerSettings) return null;
        var output = triggerSettings.output;
        return function (item) {
          if (typeof item === "object" && (!output || typeof output !== "function")) {
            throw new Error('Output functor is not defined! If you are using items as object you have to define "output" function. https://github.com/webscopeio/react-textarea-autocomplete#trigger-type');
          }

          if (output) {
            var textToReplace = output(item, currentTrigger);

            if (textToReplace === undefined || typeof textToReplace === "number") {
              throw new Error("Output functor should return string or object in shape {text: string, caretPosition: string | number}.\nGot \"".concat(String(textToReplace), "\". Check the implementation for trigger \"").concat(currentTrigger, "\"\n\nSee https://github.com/webscopeio/react-textarea-autocomplete#trigger-type for more information.\n"));
            }

            if (textToReplace === null) return null;

            if (typeof textToReplace === "string") {
              return {
                text: textToReplace,
                caretPosition: DEFAULT_CARET_POSITION
              };
            }

            if (!textToReplace.text && typeof textToReplace.text !== 'string') {
              throw new Error("Output \"text\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \"".concat(currentTrigger, "\"\n"));
            }

            if (!textToReplace.caretPosition) {
              throw new Error("Output \"caretPosition\" is not defined! Object should has shape {text: string, caretPosition: string | number}. Check the implementation for trigger \"".concat(currentTrigger, "\"\n"));
            }

            return textToReplace;
          }

          if (typeof item !== "string") {
            throw new Error("Output item should be string\n");
          }

          return {
            text: "".concat(currentTrigger).concat(item).concat(currentTrigger),
            caretPosition: DEFAULT_CARET_POSITION
          };
        };
      };

      _this2._getCurrentTriggerSettings = function () {
        var currentTrigger = _this2.state.currentTrigger;
        if (!currentTrigger) return null;
        return _this2.props.trigger[currentTrigger];
      };

      _this2._getValuesFromProvider = function () {
        var _this2$state2 = _this2.state,
            currentTrigger = _this2$state2.currentTrigger,
            actualToken = _this2$state2.actualToken;

        var triggerSettings = _this2._getCurrentTriggerSettings();

        if (!currentTrigger || !triggerSettings) {
          return;
        }

        var dataProvider = triggerSettings.dataProvider,
            component = triggerSettings.component;

        if (typeof dataProvider !== "function") {
          throw new Error("Trigger provider has to be a function!");
        }

        _this2.setState({
          dataLoading: true
        });

        var providedData = dataProvider(actualToken);

        if (!(providedData instanceof Promise)) {
          providedData = Promise.resolve(providedData);
        }

        providedData.then(function (data) {
          if (!Array.isArray(data)) {
            throw new Error("Trigger provider has to provide an array!");
          }

          if (typeof component !== "function") {
            throw new Error("Component should be defined!");
          } // throw away if we resolved old trigger


          if (currentTrigger !== _this2.state.currentTrigger) return; // if we haven't resolved any data let's close the autocomplete

          if (!data.length) {
            _this2._closeAutocomplete();

            return;
          }

          _this2.setState({
            dataLoading: false,
            data: data,
            component: component
          });
        }).catch(function (e) {
          return errorMessage(e.message);
        });
      };

      _this2._getSuggestions = function () {
        var _this2$state3 = _this2.state,
            currentTrigger = _this2$state3.currentTrigger,
            data = _this2$state3.data;
        if (!currentTrigger || !data || data && !data.length) return null;
        return data;
      };

      _this2._createRegExp = function () {
        var trigger = _this2.props.trigger; // negative lookahead to match only the trigger + the actual token = "bladhwd:adawd:word test" => ":word"
        // https://stackoverflow.com/a/8057827/2719917

        _this2.tokenRegExp = new RegExp("(".concat(Object.keys(trigger) // the sort is important for multi-char combos as "/kick", "/"
        .sort(function (a, b) {
          if (a < b) {
            return 1;
          }

          if (a > b) {
            return -1;
          }

          return 0;
        }).map(function (a) {
          return escapeRegex(a);
        }).join("|"), ")((?:(?!\\1)[^\\s])*$)"));
        _this2.tokenRegExpEnding = new RegExp("(".concat(Object.keys(trigger) // the sort is important for multi-char combos as "/kick", "/"
        .sort(function (a, b) {
          if (a < b) {
            return 1;
          }

          if (a > b) {
            return -1;
          }

          return 0;
        }).map(function (a) {
          return escapeRegex(a);
        }).join("|"), ")$"));
      };

      _this2._closeAutocomplete = function () {
        var currentTrigger = _this2.state.currentTrigger;

        _this2.escListenerDestroy();

        _this2.setState({
          data: null,
          dataLoading: false,
          currentTrigger: null
        }, function () {
          if (currentTrigger) _this2._onItemHighlightedHandler(null);
        });
      };

      _this2._cleanUpProps = function () {
        var props = _objectSpread$4({}, _this2.props);

        var notSafe = ["loadingComponent", "boundariesElement", "containerStyle", "minChar", "scrollToItem", "ref", "innerRef", "onChange", "onCaretPositionChange", "className", "value", "trigger", "listStyle", "itemStyle", "containerStyle", "loaderStyle", "className", "containerClassName", "listClassName", "itemClassName", "loaderClassName", "dropdownStyle", "dropdownClassName", "movePopupAsYouType", "textAreaComponent", "renderToBody", "onItemSelected", "onItemHighlighted"]; // eslint-disable-next-line

        for (var prop in props) {
          if (notSafe.includes(prop)) delete props[prop];
        }

        return props;
      };

      _this2._changeHandler = function (e) {
        var _this2$props = _this2.props,
            trigger = _this2$props.trigger,
            onChange = _this2$props.onChange,
            minChar = _this2$props.minChar,
            onCaretPositionChange = _this2$props.onCaretPositionChange,
            movePopupAsYouType = _this2$props.movePopupAsYouType;
        var _this2$state4 = _this2.state,
            top = _this2$state4.top,
            left = _this2$state4.left;
        var event = e;

        if (!event) {
          // fire onChange event after successful selection
          event = new customEvent("change", {
            bubbles: true
          });

          _this2.textareaRef.dispatchEvent(event);
        }

        var textarea = event.target || _this2.textareaRef; // fallback to support Shadow DOM

        var selectionEnd = textarea.selectionEnd;
        var value = textarea.value;
        _this2.lastValueBubbledEvent = value;

        if (onChange && event) {
          event.persist && event.persist();
          onChange(new Proxy(event, {
            get: function get(original, prop, receiver) {
              if (prop === "target") {
                return textarea;
              }

              return Reflect.get(original, prop, receiver);
            }
          }));
        }

        if (onCaretPositionChange) {
          var caretPosition = _this2.getCaretPosition();

          onCaretPositionChange(caretPosition);
        }

        _this2.setState({
          value: value
        });

        var setTopLeft = function setTopLeft() {
          var _getCaretCoordinates = textareaCaret(textarea, selectionEnd),
              newTop = _getCaretCoordinates.top,
              newLeft = _getCaretCoordinates.left;

          _this2.setState({
            // make position relative to textarea
            top: newTop - _this2.textareaRef.scrollTop || 0,
            left: newLeft
          });
        };

        var cleanLastTrigger = function cleanLastTrigger(triggerLength) {
          _this2.lastTrigger = selectionEnd - triggerLength;

          _this2._closeAutocomplete();

          setTopLeft();
        };

        if (selectionEnd <= _this2.lastTrigger) {
          var _affectedTextareaValue = value.slice(0, selectionEnd);

          var _newTrigger = _this2.tokenRegExp.exec(_affectedTextareaValue);

          cleanLastTrigger(_newTrigger ? _newTrigger[0].length : 0);
        }

        var affectedTextareaValue = value.slice(_this2.lastTrigger, selectionEnd);

        var tokenMatch = _this2.tokenRegExp.exec(affectedTextareaValue);

        var lastToken = tokenMatch && tokenMatch[0];
        var currentTrigger = tokenMatch && tokenMatch[1] || null;
        var currentTriggerLength = currentTrigger ? currentTrigger.length - 1 : 0; // with this approach we want to know if the user just inserted a new trigger sequence

        var newTrigger = _this2.tokenRegExpEnding.exec(affectedTextareaValue);

        if (newTrigger) {
          cleanLastTrigger(newTrigger[0].length);
        } else if (!_this2._isAutocompleteOpen()) {
          _this2._closeAutocomplete();
        }
        /*
         if we lost the trigger token or there is no following character we want to close
         the autocomplete
        */


        if ((!lastToken || lastToken.length <= minChar + currentTriggerLength) && ( // check if our current trigger disallows whitespace
        _this2.state.currentTrigger && !trigger[_this2.state.currentTrigger].allowWhitespace || !_this2.state.currentTrigger)) {
          _this2._closeAutocomplete();

          return;
        }
        /**
         * This code has to be sync that is the reason why we obtain the currentTrigger
         * from currentTrigger not this.state.currentTrigger
         *
         * Check if the currently typed token has to be afterWhitespace, or not.
         *
         * This setting means that there has to be whitespace before the token (on it has to be the the first character typed into textarea)
         */


        if (currentTrigger && trigger[currentTrigger].afterWhitespace && !/\s/.test(value[selectionEnd - lastToken.length - 1]) && value[selectionEnd - lastToken.length - 1] !== undefined) {
          _this2._closeAutocomplete();

          return;
        }
        /**
          If our current trigger allows whitespace
          get the correct token for DataProvider, so we need to construct new RegExp
         */


        if (_this2.state.currentTrigger && trigger[_this2.state.currentTrigger].allowWhitespace) {
          tokenMatch = new RegExp("".concat(escapeRegex(_this2.state.currentTrigger), ".*$")).exec(value.slice(0, selectionEnd));
          lastToken = tokenMatch && tokenMatch[0];

          if (!lastToken) {
            _this2._closeAutocomplete();

            return;
          }

          currentTrigger = Object.keys(trigger).find(function (a) {
            return a.slice(0, currentTriggerLength + 1) === lastToken.slice(0, currentTriggerLength + 1);
          }) || null;
        }

        var actualToken = lastToken.slice(1); // if trigger is not configured step out from the function, otherwise proceed

        if (!currentTrigger) {
          return;
        }

        if (movePopupAsYouType || top === null && left === null || // if the trigger got changed, let's reposition the autocomplete
        _this2.state.currentTrigger !== currentTrigger) {
          setTopLeft();
        }

        _this2.escListenerInit();

        var textToReplace = _this2._getTextToReplace(currentTrigger);

        _this2.setState({
          selectionEnd: selectionEnd,
          currentTrigger: currentTrigger,
          textToReplace: textToReplace,
          actualToken: actualToken
        }, function () {
          try {
            _this2._getValuesFromProvider();
          } catch (err) {
            errorMessage(err.message);
          }
        });
      };

      _this2._selectHandler = function (e) {
        var _this2$props2 = _this2.props,
            onCaretPositionChange = _this2$props2.onCaretPositionChange,
            onSelect = _this2$props2.onSelect;

        if (onCaretPositionChange) {
          var caretPosition = _this2.getCaretPosition();

          onCaretPositionChange(caretPosition);
        }

        if (onSelect) {
          e.persist();
          onSelect(e);
        }
      };

      _this2._shouldStayOpen = function (e) {
        var el = e.relatedTarget; // IE11 doesn't know about `relatedTarget` // https://stackoverflow.com/a/49325196/2719917

        if (el === null) {
          el = document.activeElement;
        }

        if (_this2.dropdownRef && el instanceof Node && _this2.dropdownRef.contains(el)) {
          return true;
        }

        return false;
      };

      _this2._onClick = function (e) {
        var onClick = _this2.props.onClick;

        if (onClick) {
          e.persist();
          onClick(e);
        }

        if (_this2._shouldStayOpen(e)) {
          return;
        }

        _this2._closeAutocomplete();
      };

      _this2._onBlur = function (e) {
        var onBlur = _this2.props.onBlur;

        if (onBlur) {
          e.persist();
          onBlur(e);
        }

        if (_this2._shouldStayOpen(e)) {
          return;
        }

        _this2._closeAutocomplete();
      };

      _this2._onScrollHandler = function () {
        _this2._closeAutocomplete();
      };

      _this2._onItemHighlightedHandler = function (item) {
        var onItemHighlighted = _this2.props.onItemHighlighted;
        var currentTrigger = _this2.state.currentTrigger;

        if (onItemHighlighted) {
          if (typeof onItemHighlighted === "function") {
            onItemHighlighted({
              currentTrigger: currentTrigger,
              item: item
            });
          } else {
            throw new Error("`onItemHighlighted` has to be a function");
          }
        }
      };

      _this2._dropdownScroll = function (item) {
        var scrollToItem = _this2.props.scrollToItem;
        if (!scrollToItem) return;

        if (scrollToItem === true) {
          defaultScrollToItem(_this2.dropdownRef, item);
          return;
        }

        if (typeof scrollToItem !== "function" || scrollToItem.length !== 2) {
          throw new Error("`scrollToItem` has to be boolean (true for default implementation) or function with two parameters: container, item.");
        }

        scrollToItem(_this2.dropdownRef, item);
      };

      _this2._isAutocompleteOpen = function () {
        var _this2$state5 = _this2.state,
            dataLoading = _this2$state5.dataLoading,
            currentTrigger = _this2$state5.currentTrigger;

        var suggestionData = _this2._getSuggestions();

        return !!((dataLoading || suggestionData) && currentTrigger);
      };

      _this2._textareaRef = function (ref) {
        // $FlowFixMe - ref is actually a `?HTMLTextAreaElement`
        _this2.props.innerRef && _this2.props.innerRef(ref);
        _this2.textareaRef = ref;
      };

      _this2.lastTrigger = 0;
      _this2.escListener = null;
      var _this2$props3 = _this2.props,
          loadingComponent = _this2$props3.loadingComponent,
          _trigger = _this2$props3.trigger,
          _value = _this2$props3.value;
      if (_value) _this2.state.value = _value;

      _this2._createRegExp();

      if (!loadingComponent) {
        throw new Error("RTA: loadingComponent is not defined");
      }

      if (!_trigger) {
        throw new Error("RTA: trigger is not defined");
      }

      return _this2;
    }

    _createClass(ReactTextareaAutocomplete, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        Listeners.startListen(this.textareaRef); // handle caret change

        this.textareaRef && this.textareaRef.addEventListener("focus", this._handleCaretChange);
        this.textareaRef && this.textareaRef.addEventListener("click", this._handleCaretChange);
        this.textareaRef && this.textareaRef.addEventListener("keydown", this._handleCaretChange);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(_ref2) {
        var oldTrigger = _ref2.trigger,
            oldValue = _ref2.value;
        var _this$props2 = this.props,
            trigger = _this$props2.trigger,
            value = _this$props2.value;

        if (Object.keys(trigger).join("") !== Object.keys(oldTrigger).join("")) {
          this._createRegExp();
        }

        if (oldValue !== value && this.lastValueBubbledEvent !== value) {
          this.lastTrigger = 0;

          this._changeHandler();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.escListenerDestroy();
        Listeners.stopListen(this.textareaRef); // handle caret change

        this.textareaRef && this.textareaRef.removeEventListener("focus", this._handleCaretChange);
        this.textareaRef && this.textareaRef.removeEventListener("click", this._handleCaretChange);
        this.textareaRef && this.textareaRef.removeEventListener("keydown", this._handleCaretChange);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props3 = this.props,
            Loader = _this$props3.loadingComponent,
            style = _this$props3.style,
            className = _this$props3.className,
            listStyle = _this$props3.listStyle,
            itemStyle = _this$props3.itemStyle,
            boundariesElement = _this$props3.boundariesElement,
            movePopupAsYouType = _this$props3.movePopupAsYouType,
            listClassName = _this$props3.listClassName,
            itemClassName = _this$props3.itemClassName,
            dropdownClassName = _this$props3.dropdownClassName,
            dropdownStyle = _this$props3.dropdownStyle,
            containerStyle = _this$props3.containerStyle,
            containerClassName = _this$props3.containerClassName,
            loaderStyle = _this$props3.loaderStyle,
            loaderClassName = _this$props3.loaderClassName,
            textAreaComponent = _this$props3.textAreaComponent,
            renderToBody = _this$props3.renderToBody;
        var _this$state = this.state,
            left = _this$state.left,
            top = _this$state.top,
            dataLoading = _this$state.dataLoading,
            component = _this$state.component,
            value = _this$state.value,
            textToReplace = _this$state.textToReplace;

        var isAutocompleteOpen = this._isAutocompleteOpen();

        var suggestionData = this._getSuggestions();

        var extraAttrs = {};
        var TextAreaComponent;

        if (textAreaComponent.component) {
          TextAreaComponent = textAreaComponent.component;
          extraAttrs[textAreaComponent.ref] = this._textareaRef;
        } else {
          TextAreaComponent = textAreaComponent;
          extraAttrs.ref = this._textareaRef;
        }

        return React__default['default'].createElement("div", {
          className: "rta ".concat(dataLoading === true ? "rta--loading" : "", " ").concat(containerClassName || ""),
          style: containerStyle
        }, React__default['default'].createElement(TextAreaComponent, Object.assign({}, this._cleanUpProps(), {
          className: "rta__textarea ".concat(className || ""),
          onChange: this._changeHandler,
          onSelect: this._selectHandler,
          onScroll: this._onScrollHandler,
          onClick: // The textarea itself is outside the autoselect dropdown.
          this._onClick,
          onBlur: this._onBlur,
          value: value,
          style: style
        }, extraAttrs)), isAutocompleteOpen && React__default['default'].createElement(Autocomplete, {
          innerRef: function innerRef(ref) {
            // $FlowFixMe
            _this3.dropdownRef = ref;
          },
          top: top,
          left: left,
          style: dropdownStyle,
          className: dropdownClassName,
          movePopupAsYouType: movePopupAsYouType,
          boundariesElement: boundariesElement,
          textareaRef: this.textareaRef,
          renderToBody: renderToBody
        }, suggestionData && component && textToReplace && React__default['default'].createElement(List, {
          values: suggestionData,
          component: component,
          style: listStyle,
          className: listClassName,
          itemClassName: itemClassName,
          itemStyle: itemStyle,
          getTextToReplace: textToReplace,
          onItemHighlighted: this._onItemHighlightedHandler,
          onSelect: this._onSelect,
          dropdownScroll: this._dropdownScroll
        }), dataLoading && React__default['default'].createElement("div", {
          className: "rta__loader ".concat(suggestionData !== null ? "rta__loader--suggestion-data" : "rta__loader--empty-suggestion-data", " ").concat(loaderClassName || ""),
          style: loaderStyle
        }, React__default['default'].createElement(Loader, {
          data: suggestionData
        }))));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(_ref3) {
        var value = _ref3.value;
        if (value === null || value === undefined) return null;
        return {
          value: value
        };
      }
    }]);

    return ReactTextareaAutocomplete;
  }(React__default['default'].Component);

  ReactTextareaAutocomplete.defaultProps = {
    movePopupAsYouType: false,
    value: null,
    minChar: 1,
    boundariesElement: "body",
    scrollToItem: true,
    textAreaComponent: "textarea",
    renderToBody: false
  };

  var interopRequireDefault = createCommonjsModule(function (module) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var classCallCheck = createCommonjsModule(function (module) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var createClass = createCommonjsModule(function (module) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var _typeof_1 = createCommonjsModule(function (module) {
  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };

      module.exports["default"] = module.exports, module.exports.__esModule = true;
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };

      module.exports["default"] = module.exports, module.exports.__esModule = true;
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var data = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.uncompress = exports.compress = exports.buildSearch = void 0;
  var mapping = {
    name: 'a',
    unified: 'b',
    non_qualified: 'c',
    has_img_apple: 'd',
    has_img_google: 'e',
    has_img_twitter: 'f',
    has_img_facebook: 'h',
    keywords: 'j',
    sheet: 'k',
    emoticons: 'l',
    text: 'm',
    short_names: 'n',
    added_in: 'o'
  };

  var buildSearch = function buildSearch(emoji) {
    var search = [];

    var addToSearch = function addToSearch(strings, split) {
      if (!strings) {
        return;
      }
      (Array.isArray(strings) ? strings : [strings]).forEach(function (string) {
        (split ? string.split(/[-|_|\s]+/) : [string]).forEach(function (s) {
          s = s.toLowerCase();

          if (search.indexOf(s) == -1) {
            search.push(s);
          }
        });
      });
    };

    addToSearch(emoji.short_names, true);
    addToSearch(emoji.name, true);
    addToSearch(emoji.keywords, false);
    addToSearch(emoji.emoticons, false);
    return search.join(',');
  };

  exports.buildSearch = buildSearch;

  var compress = function compress(emoji) {
    emoji.short_names = emoji.short_names.filter(function (short_name) {
      return short_name !== emoji.short_name;
    });
    delete emoji.short_name;
    emoji.sheet = [emoji.sheet_x, emoji.sheet_y];
    delete emoji.sheet_x;
    delete emoji.sheet_y;
    emoji.added_in = parseInt(emoji.added_in);

    if (emoji.added_in === 6) {
      delete emoji.added_in;
    }

    for (var key in mapping) {
      emoji[mapping[key]] = emoji[key];
      delete emoji[key];
    }

    for (var _key in emoji) {
      var value = emoji[_key];

      if (Array.isArray(value) && !value.length) {
        delete emoji[_key];
      } else if (typeof value === 'string' && !value.length) {
        delete emoji[_key];
      } else if (value === null) {
        delete emoji[_key];
      }
    }
  };

  exports.compress = compress;

  var uncompress = function uncompress(data) {
    data.compressed = false;

    for (var id in data.emojis) {
      var emoji = data.emojis[id];

      for (var key in mapping) {
        emoji[key] = emoji[mapping[key]];
        delete emoji[mapping[key]];
      }

      if (!emoji.short_names) emoji.short_names = [];
      emoji.short_names.unshift(id);
      emoji.sheet_x = emoji.sheet[0];
      emoji.sheet_y = emoji.sheet[1];
      delete emoji.sheet;
      if (!emoji.text) emoji.text = '';
      if (!emoji.added_in) emoji.added_in = 6;
      emoji.added_in = emoji.added_in.toFixed(1);
      emoji.search = buildSearch(emoji);
    }
  };

  exports.uncompress = uncompress;
  });

  var stringFromCodePoint = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _String = String;

  var _default = _String.fromCodePoint || function stringFromCodePoint() {
    var MAX_SIZE = 0x4000;
    var codeUnits = [];
    var highSurrogate;
    var lowSurrogate;
    var index = -1;
    var length = arguments.length;

    if (!length) {
      return '';
    }

    var result = '';

    while (++index < length) {
      var codePoint = Number(arguments[index]);

      if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
      codePoint < 0 || // not a valid Unicode code point
      codePoint > 0x10ffff || // not a valid Unicode code point
      Math.floor(codePoint) != codePoint // not an integer
      ) {
          throw RangeError('Invalid code point: ' + codePoint);
        }

      if (codePoint <= 0xffff) {
        // BMP code point
        codeUnits.push(codePoint);
      } else {
        // Astral code point; split in surrogate halves
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        codePoint -= 0x10000;
        highSurrogate = (codePoint >> 10) + 0xd800;
        lowSurrogate = codePoint % 0x400 + 0xdc00;
        codeUnits.push(highSurrogate, lowSurrogate);
      }

      if (index + 1 === length || codeUnits.length > MAX_SIZE) {
        result += String.fromCharCode.apply(null, codeUnits);
        codeUnits.length = 0;
      }
    }

    return result;
  };

  exports["default"] = _default;
  });

  var getData_1 = getData;
  var getEmojiDataFromNative_1 = getEmojiDataFromNative;
  var getSanitizedData_1 = getSanitizedData;
  var uniq_1 = uniq;
  var intersect_1 = intersect;
  var deepMerge_1 = deepMerge;
  var unifiedToNative_1 = unifiedToNative;
  var measureScrollbar_1 = measureScrollbar;
  var throttleIdleTask_1 = throttleIdleTask;

  var _typeof2 = interopRequireDefault(_typeof_1);



  var _stringFromCodePoint = interopRequireDefault(stringFromCodePoint);

  var COLONS_REGEX = /^(?:\:([^\:]+)\:)(?:\:skin-tone-(\d)\:)?$/;
  var SKINS = ['1F3FA', '1F3FB', '1F3FC', '1F3FD', '1F3FE', '1F3FF'];

  function unifiedToNative(unified) {
    var unicodes = unified.split('-'),
        codePoints = unicodes.map(function (u) {
      return "0x".concat(u);
    });
    return _stringFromCodePoint["default"].apply(null, codePoints);
  }

  function sanitize(emoji) {
    var name = emoji.name,
        short_names = emoji.short_names,
        skin_tone = emoji.skin_tone,
        skin_variations = emoji.skin_variations,
        emoticons = emoji.emoticons,
        unified = emoji.unified,
        custom = emoji.custom,
        customCategory = emoji.customCategory,
        imageUrl = emoji.imageUrl,
        id = emoji.id || short_names[0],
        colons = ":".concat(id, ":");

    if (custom) {
      return {
        id: id,
        name: name,
        short_names: short_names,
        colons: colons,
        emoticons: emoticons,
        custom: custom,
        customCategory: customCategory,
        imageUrl: imageUrl
      };
    }

    if (skin_tone) {
      colons += ":skin-tone-".concat(skin_tone, ":");
    }

    return {
      id: id,
      name: name,
      short_names: short_names,
      colons: colons,
      emoticons: emoticons,
      unified: unified.toLowerCase(),
      skin: skin_tone || (skin_variations ? 1 : null),
      "native": unifiedToNative(unified)
    };
  }

  function getSanitizedData() {
    return sanitize(getData.apply(void 0, arguments));
  }

  function getData(emoji, skin, set, data$1) {
    var emojiData = {};

    if (typeof emoji == 'string') {
      var matches = emoji.match(COLONS_REGEX);

      if (matches) {
        emoji = matches[1];

        if (matches[2]) {
          skin = parseInt(matches[2], 10);
        }
      }

      if (data$1.aliases.hasOwnProperty(emoji)) {
        emoji = data$1.aliases[emoji];
      }

      if (data$1.emojis.hasOwnProperty(emoji)) {
        emojiData = data$1.emojis[emoji];
      } else {
        return null;
      }
    } else if (emoji.id) {
      if (data$1.aliases.hasOwnProperty(emoji.id)) {
        emoji.id = data$1.aliases[emoji.id];
      }

      if (data$1.emojis.hasOwnProperty(emoji.id)) {
        emojiData = data$1.emojis[emoji.id];
        skin || (skin = emoji.skin);
      }
    }

    if (!Object.keys(emojiData).length) {
      emojiData = emoji;
      emojiData.custom = true;

      if (!emojiData.search) {
        emojiData.search = (0, data.buildSearch)(emoji);
      }
    }

    emojiData.emoticons || (emojiData.emoticons = []);
    emojiData.variations || (emojiData.variations = []);

    if (emojiData.skin_variations && skin > 1) {
      emojiData = JSON.parse(JSON.stringify(emojiData));
      var skinKey = SKINS[skin - 1],
          variationData = emojiData.skin_variations[skinKey];

      if (variationData) {
        if (!variationData.variations && emojiData.variations) {
          delete emojiData.variations;
        }

        if (set && (variationData["has_img_".concat(set)] == undefined || variationData["has_img_".concat(set)]) || !set) {
          emojiData.skin_tone = skin;

          for (var k in variationData) {
            var v = variationData[k];
            emojiData[k] = v;
          }
        }
      }
    }

    if (emojiData.variations && emojiData.variations.length) {
      emojiData = JSON.parse(JSON.stringify(emojiData));
      emojiData.unified = emojiData.variations.shift();
    }

    return emojiData;
  }

  function getEmojiDataFromNative(nativeString, set, data$1) {
    if (data$1.compressed) {
      (0, data.uncompress)(data$1);
    }

    var skinTones = ['🏻', '🏼', '🏽', '🏾', '🏿'];
    var skinCodes = ['1F3FB', '1F3FC', '1F3FD', '1F3FE', '1F3FF'];
    var skin;
    var skinCode;
    var baseNativeString = nativeString;
    skinTones.forEach(function (skinTone, skinToneIndex) {
      if (nativeString.indexOf(skinTone) > 0) {
        skin = skinToneIndex + 2;
        skinCode = skinCodes[skinToneIndex];
      }
    });
    var emojiData;

    for (var id in data$1.emojis) {
      var emoji = data$1.emojis[id];
      var emojiUnified = emoji.unified;

      if (emoji.variations && emoji.variations.length) {
        emojiUnified = emoji.variations.shift();
      }

      if (skin && emoji.skin_variations && emoji.skin_variations[skinCode]) {
        emojiUnified = emoji.skin_variations[skinCode].unified;
      }

      if (unifiedToNative(emojiUnified) === baseNativeString) emojiData = emoji;
    }

    if (!emojiData) {
      return null;
    }

    emojiData.id = emojiData.short_names[0];
    return getSanitizedData(emojiData, skin, set, data$1);
  }

  function uniq(arr) {
    return arr.reduce(function (acc, item) {
      if (acc.indexOf(item) === -1) {
        acc.push(item);
      }

      return acc;
    }, []);
  }

  function intersect(a, b) {
    var uniqA = uniq(a);
    var uniqB = uniq(b);
    return uniqA.filter(function (item) {
      return uniqB.indexOf(item) >= 0;
    });
  }

  function deepMerge(a, b) {
    var o = {};

    for (var key in a) {
      var originalValue = a[key],
          value = originalValue;

      if (b.hasOwnProperty(key)) {
        value = b[key];
      }

      if ((0, _typeof2["default"])(value) === 'object') {
        value = deepMerge(originalValue, value);
      }

      o[key] = value;
    }

    return o;
  } // https://github.com/sonicdoe/measure-scrollbar


  function measureScrollbar() {
    if (typeof document == 'undefined') return 0;
    var div = document.createElement('div');
    div.style.width = '100px';
    div.style.height = '100px';
    div.style.overflow = 'scroll';
    div.style.position = 'absolute';
    div.style.top = '-9999px';
    document.body.appendChild(div);
    var scrollbarWidth = div.offsetWidth - div.clientWidth;
    document.body.removeChild(div);
    return scrollbarWidth;
  } // Use requestIdleCallback() if available, else fall back to setTimeout().
  // Throttle so as not to run too frequently.


  function throttleIdleTask(func) {
    var doIdleTask = typeof requestIdleCallback === 'function' ? requestIdleCallback : setTimeout;
    var running = false;
    return function throttled() {
      if (running) {
        return;
      }

      running = true;
      doIdleTask(function () {
        running = false;
        func();
      });
    };
  }

  var utils = /*#__PURE__*/Object.defineProperty({
  	getData: getData_1,
  	getEmojiDataFromNative: getEmojiDataFromNative_1,
  	getSanitizedData: getSanitizedData_1,
  	uniq: uniq_1,
  	intersect: intersect_1,
  	deepMerge: deepMerge_1,
  	unifiedToNative: unifiedToNative_1,
  	measureScrollbar: measureScrollbar_1,
  	throttleIdleTask: throttleIdleTask_1
  }, '__esModule', {value: true});

  var store = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var NAMESPACE = 'emoji-mart';
  var isLocalStorageSupported = typeof window !== 'undefined' && 'localStorage' in window;
  var getter;
  var setter;

  function setHandlers(handlers) {
    handlers || (handlers = {});
    getter = handlers.getter;
    setter = handlers.setter;
  }

  function setNamespace(namespace) {
    NAMESPACE = namespace;
  }

  function update(state) {
    for (var key in state) {
      var value = state[key];
      set(key, value);
    }
  }

  function set(key, value) {
    if (setter) {
      setter(key, value);
    } else {
      if (!isLocalStorageSupported) return;

      try {
        window.localStorage["".concat(NAMESPACE, ".").concat(key)] = JSON.stringify(value);
      } catch (e) {}
    }
  }

  function get(key) {
    if (getter) {
      return getter(key);
    } else {
      if (!isLocalStorageSupported) return;

      try {
        var value = window.localStorage["".concat(NAMESPACE, ".").concat(key)];

        if (value) {
          return JSON.parse(value);
        }
      } catch (e) {
        return;
      }
    }
  }

  var _default = {
    update: update,
    set: set,
    get: get,
    setNamespace: setNamespace,
    setHandlers: setHandlers
  };
  exports["default"] = _default;
  });

  var nimbleEmojiIndex = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);





  var _store = interopRequireDefault(store);

  var NimbleEmojiIndex =
  /*#__PURE__*/
  function () {
    function NimbleEmojiIndex(data$1, set) {
      (0, _classCallCheck2["default"])(this, NimbleEmojiIndex);

      if (data$1.compressed) {
        (0, data.uncompress)(data$1);
      }

      this.data = data$1 || {};
      this.set = set || null;
      this.originalPool = {};
      this.index = {};
      this.emojis = {};
      this.emoticons = {};
      this.customEmojisList = [];
      this.buildIndex();
    }

    (0, _createClass2["default"])(NimbleEmojiIndex, [{
      key: "buildIndex",
      value: function buildIndex() {
        var _this = this;

        var _loop = function _loop(emoji) {
          var emojiData = _this.data.emojis[emoji],
              short_names = emojiData.short_names,
              emoticons = emojiData.emoticons,
              skin_variations = emojiData.skin_variations,
              id = short_names[0];

          if (emoticons) {
            emoticons.forEach(function (emoticon) {
              if (_this.emoticons[emoticon]) {
                return;
              }

              _this.emoticons[emoticon] = id;
            });
          } // If skin variations include them


          if (skin_variations) {
            _this.emojis[id] = {};

            for (var skinTone = 1; skinTone <= 6; skinTone++) {
              _this.emojis[id][skinTone] = (0, utils.getSanitizedData)({
                id: id,
                skin: skinTone
              }, skinTone, _this.set, _this.data);
            }
          } else {
            _this.emojis[id] = (0, utils.getSanitizedData)(id, null, _this.set, _this.data);
          }

          _this.originalPool[id] = emojiData;
        };

        for (var emoji in this.data.emojis) {
          _loop(emoji);
        }
      }
    }, {
      key: "clearCustomEmojis",
      value: function clearCustomEmojis(pool) {
        var _this2 = this;

        this.customEmojisList.forEach(function (emoji) {
          var emojiId = emoji.id || emoji.short_names[0];
          delete pool[emojiId];
          delete _this2.emojis[emojiId];
        });
      }
    }, {
      key: "addCustomToPool",
      value: function addCustomToPool(custom, pool) {
        var _this3 = this;

        if (this.customEmojisList.length) this.clearCustomEmojis(pool);
        custom.forEach(function (emoji) {
          var emojiId = emoji.id || emoji.short_names[0];

          if (emojiId && !pool[emojiId]) {
            pool[emojiId] = (0, utils.getData)(emoji, null, null, _this3.data);
            _this3.emojis[emojiId] = (0, utils.getSanitizedData)(emoji, null, null, _this3.data);
          }
        });
        this.customEmojisList = custom;
        this.index = {};
      }
    }, {
      key: "search",
      value: function search(value) {
        var _this4 = this;

        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            emojisToShowFilter = _ref.emojisToShowFilter,
            maxResults = _ref.maxResults,
            include = _ref.include,
            exclude = _ref.exclude,
            _ref$custom = _ref.custom,
            custom = _ref$custom === void 0 ? [] : _ref$custom;

        if (this.customEmojisList != custom) this.addCustomToPool(custom, this.originalPool);
        var skinTone = _store["default"].get('skin') || 1;
        maxResults || (maxResults = 75);
        include || (include = []);
        exclude || (exclude = []);
        var results = null,
            pool = this.originalPool;

        if (value.length) {
          if (value == '-' || value == '-1') {
            return [this.emojis['-1'][skinTone]];
          }

          var values = value.toLowerCase().split(/[\s|,|\-|_]+/),
              allResults = [];

          if (values.length > 2) {
            values = [values[0], values[1]];
          }

          if (include.length || exclude.length) {
            pool = {};
            this.data.categories.forEach(function (category) {
              var isIncluded = include && include.length ? include.indexOf(category.id) > -1 : true;
              var isExcluded = exclude && exclude.length ? exclude.indexOf(category.id) > -1 : false;

              if (!isIncluded || isExcluded) {
                return;
              }

              category.emojis.forEach(function (emojiId) {
                return pool[emojiId] = _this4.data.emojis[emojiId];
              });
            });

            if (custom.length) {
              var customIsIncluded = include && include.length ? include.indexOf('custom') > -1 : true;
              var customIsExcluded = exclude && exclude.length ? exclude.indexOf('custom') > -1 : false;

              if (customIsIncluded && !customIsExcluded) {
                this.addCustomToPool(custom, pool);
              }
            }
          }

          allResults = values.map(function (value) {
            var aPool = pool,
                aIndex = _this4.index,
                length = 0;

            for (var charIndex = 0; charIndex < value.length; charIndex++) {
              var _char = value[charIndex];
              length++;
              aIndex[_char] || (aIndex[_char] = {});
              aIndex = aIndex[_char];

              if (!aIndex.results) {
                (function () {
                  var scores = {};
                  aIndex.results = [];
                  aIndex.pool = {};

                  for (var id in aPool) {
                    var emoji = aPool[id],
                        search = emoji.search,
                        sub = value.substr(0, length),
                        subIndex = search.indexOf(sub);

                    if (subIndex != -1) {
                      var score = subIndex + 1;
                      if (sub == id) score = 0;

                      if (_this4.emojis[id] && _this4.emojis[id][skinTone]) {
                        aIndex.results.push(_this4.emojis[id][skinTone]);
                      } else {
                        aIndex.results.push(_this4.emojis[id]);
                      }

                      aIndex.pool[id] = emoji;
                      scores[id] = score;
                    }
                  }

                  aIndex.results.sort(function (a, b) {
                    var aScore = scores[a.id],
                        bScore = scores[b.id];

                    if (aScore == bScore) {
                      return a.id.localeCompare(b.id);
                    } else {
                      return aScore - bScore;
                    }
                  });
                })();
              }

              aPool = aIndex.pool;
            }

            return aIndex.results;
          }).filter(function (a) {
            return a;
          });

          if (allResults.length > 1) {
            results = utils.intersect.apply(null, allResults);
          } else if (allResults.length) {
            results = allResults[0];
          } else {
            results = [];
          }
        }

        if (results) {
          if (emojisToShowFilter) {
            results = results.filter(function (result) {
              return emojisToShowFilter(pool[result.id]);
            });
          }

          if (results && results.length > maxResults) {
            results = results.slice(0, maxResults);
          }
        }

        return results;
      }
    }]);
    return NimbleEmojiIndex;
  }();

  exports["default"] = NimbleEmojiIndex;
  });

  var EmojiIndex = /*@__PURE__*/getDefaultExportFromCjs(nimbleEmojiIndex);

  /* eslint-disable */
  var defaultEmojiData = {
    compressed: true,
    categories: [{
      id: 'people',
      name: 'Smileys & People',
      emojis: ['grinning', 'smiley', 'smile', 'grin', 'laughing', 'sweat_smile', 'rolling_on_the_floor_laughing', 'joy', 'slightly_smiling_face', 'upside_down_face', 'wink', 'blush', 'innocent', 'smiling_face_with_3_hearts', 'heart_eyes', 'star-struck', 'kissing_heart', 'kissing', 'relaxed', 'kissing_closed_eyes', 'kissing_smiling_eyes', 'yum', 'stuck_out_tongue', 'stuck_out_tongue_winking_eye', 'zany_face', 'stuck_out_tongue_closed_eyes', 'money_mouth_face', 'hugging_face', 'face_with_hand_over_mouth', 'shushing_face', 'thinking_face', 'zipper_mouth_face', 'face_with_raised_eyebrow', 'neutral_face', 'expressionless', 'no_mouth', 'smirk', 'unamused', 'face_with_rolling_eyes', 'grimacing', 'lying_face', 'relieved', 'pensive', 'sleepy', 'drooling_face', 'sleeping', 'mask', 'face_with_thermometer', 'face_with_head_bandage', 'nauseated_face', 'face_vomiting', 'sneezing_face', 'hot_face', 'cold_face', 'woozy_face', 'dizzy_face', 'exploding_head', 'face_with_cowboy_hat', 'partying_face', 'sunglasses', 'nerd_face', 'face_with_monocle', 'confused', 'worried', 'slightly_frowning_face', 'white_frowning_face', 'open_mouth', 'hushed', 'astonished', 'flushed', 'pleading_face', 'frowning', 'anguished', 'fearful', 'cold_sweat', 'disappointed_relieved', 'cry', 'sob', 'scream', 'confounded', 'persevere', 'disappointed', 'sweat', 'weary', 'tired_face', 'yawning_face', 'triumph', 'rage', 'angry', 'face_with_symbols_on_mouth', 'smiling_imp', 'imp', 'skull', 'skull_and_crossbones', 'hankey', 'clown_face', 'japanese_ogre', 'japanese_goblin', 'ghost', 'alien', 'space_invader', 'robot_face', 'smiley_cat', 'smile_cat', 'joy_cat', 'heart_eyes_cat', 'smirk_cat', 'kissing_cat', 'scream_cat', 'crying_cat_face', 'pouting_cat', 'see_no_evil', 'hear_no_evil', 'speak_no_evil', 'wave', 'raised_back_of_hand', 'raised_hand_with_fingers_splayed', 'hand', 'spock-hand', 'ok_hand', 'pinching_hand', 'v', 'crossed_fingers', 'i_love_you_hand_sign', 'the_horns', 'call_me_hand', 'point_left', 'point_right', 'point_up_2', 'middle_finger', 'point_down', 'point_up', '+1', '-1', 'fist', 'facepunch', 'left-facing_fist', 'right-facing_fist', 'clap', 'raised_hands', 'open_hands', 'palms_up_together', 'handshake', 'pray', 'writing_hand', 'nail_care', 'selfie', 'muscle', 'mechanical_arm', 'mechanical_leg', 'leg', 'foot', 'ear', 'ear_with_hearing_aid', 'nose', 'brain', 'tooth', 'bone', 'eyes', 'eye', 'tongue', 'lips', 'baby', 'child', 'boy', 'girl', 'adult', 'man', 'bearded_person', 'red_haired_man', 'curly_haired_man', 'white_haired_man', 'bald_man', 'woman', 'red_haired_woman', 'curly_haired_woman', 'white_haired_woman', 'bald_woman', 'blond-haired-woman', 'blond-haired-man', 'older_adult', 'older_man', 'older_woman', 'man-frowning', 'woman-frowning', 'man-pouting', 'woman-pouting', 'man-gesturing-no', 'woman-gesturing-no', 'man-gesturing-ok', 'woman-gesturing-ok', 'man-tipping-hand', 'woman-tipping-hand', 'man-raising-hand', 'woman-raising-hand', 'deaf_person', 'deaf_man', 'deaf_woman', 'man-bowing', 'woman-bowing', 'man-facepalming', 'woman-facepalming', 'man-shrugging', 'woman-shrugging', 'male-doctor', 'female-doctor', 'male-student', 'female-student', 'male-teacher', 'female-teacher', 'male-judge', 'female-judge', 'male-farmer', 'female-farmer', 'male-cook', 'female-cook', 'male-mechanic', 'female-mechanic', 'male-factory-worker', 'female-factory-worker', 'male-office-worker', 'female-office-worker', 'male-scientist', 'female-scientist', 'male-technologist', 'female-technologist', 'male-singer', 'female-singer', 'male-artist', 'female-artist', 'male-pilot', 'female-pilot', 'male-astronaut', 'female-astronaut', 'male-firefighter', 'female-firefighter', 'male-police-officer', 'female-police-officer', 'male-guard', 'female-guard', 'male-construction-worker', 'female-construction-worker', 'prince', 'princess', 'man-wearing-turban', 'woman-wearing-turban', 'man_with_gua_pi_mao', 'person_with_headscarf', 'man_in_tuxedo', 'bride_with_veil', 'pregnant_woman', 'breast-feeding', 'angel', 'santa', 'mrs_claus', 'superhero', 'male_superhero', 'female_superhero', 'supervillain', 'male_supervillain', 'female_supervillain', 'mage', 'male_mage', 'female_mage', 'fairy', 'male_fairy', 'female_fairy', 'vampire', 'male_vampire', 'female_vampire', 'merperson', 'merman', 'mermaid', 'elf', 'male_elf', 'female_elf', 'genie', 'male_genie', 'female_genie', 'zombie', 'male_zombie', 'female_zombie', 'man-getting-massage', 'woman-getting-massage', 'man-getting-haircut', 'woman-getting-haircut', 'man-walking', 'woman-walking', 'standing_person', 'man_standing', 'woman_standing', 'kneeling_person', 'man_kneeling', 'woman_kneeling', 'man_with_probing_cane', 'woman_with_probing_cane', 'man_in_motorized_wheelchair', 'woman_in_motorized_wheelchair', 'man_in_manual_wheelchair', 'woman_in_manual_wheelchair', 'man-running', 'woman-running', 'dancer', 'man_dancing', 'man_in_business_suit_levitating', 'dancers', 'man-with-bunny-ears-partying', 'woman-with-bunny-ears-partying', 'person_in_steamy_room', 'man_in_steamy_room', 'woman_in_steamy_room', 'person_climbing', 'man_climbing', 'woman_climbing', 'fencer', 'horse_racing', 'skier', 'snowboarder', 'man-surfing', 'woman-surfing', 'man-rowing-boat', 'woman-rowing-boat', 'man-swimming', 'woman-swimming', 'man-biking', 'woman-biking', 'man-mountain-biking', 'woman-mountain-biking', 'man-cartwheeling', 'woman-cartwheeling', 'wrestlers', 'man-wrestling', 'woman-wrestling', 'man-playing-water-polo', 'woman-playing-water-polo', 'man-playing-handball', 'woman-playing-handball', 'juggling', 'man-juggling', 'woman-juggling', 'person_in_lotus_position', 'man_in_lotus_position', 'woman_in_lotus_position', 'bath', 'sleeping_accommodation', 'people_holding_hands', 'two_women_holding_hands', 'couple', 'two_men_holding_hands', 'couplekiss', 'woman-kiss-man', 'man-kiss-man', 'woman-kiss-woman', 'couple_with_heart', 'woman-heart-man', 'man-heart-man', 'woman-heart-woman', 'family', 'man-woman-boy', 'man-woman-girl', 'man-woman-girl-boy', 'man-woman-boy-boy', 'man-woman-girl-girl', 'man-man-boy', 'man-man-girl', 'man-man-girl-boy', 'man-man-boy-boy', 'man-man-girl-girl', 'woman-woman-boy', 'woman-woman-girl', 'woman-woman-girl-boy', 'woman-woman-boy-boy', 'woman-woman-girl-girl', 'man-boy', 'man-boy-boy', 'man-girl', 'man-girl-boy', 'man-girl-girl', 'woman-boy', 'woman-boy-boy', 'woman-girl', 'woman-girl-boy', 'woman-girl-girl', 'speaking_head_in_silhouette', 'bust_in_silhouette', 'busts_in_silhouette', 'footprints', 'kiss', 'love_letter', 'cupid', 'gift_heart', 'sparkling_heart', 'heartpulse', 'heartbeat', 'revolving_hearts', 'two_hearts', 'heart_decoration', 'heavy_heart_exclamation_mark_ornament', 'broken_heart', 'heart', 'orange_heart', 'yellow_heart', 'green_heart', 'blue_heart', 'purple_heart', 'brown_heart', 'black_heart', 'white_heart', '100', 'anger', 'boom', 'dizzy', 'sweat_drops', 'dash', 'hole', 'bomb', 'speech_balloon', 'left_speech_bubble', 'right_anger_bubble', 'thought_balloon', 'zzz']
    }, {
      id: 'nature',
      name: 'Animals & Nature',
      emojis: ['monkey_face', 'monkey', 'gorilla', 'orangutan', 'dog', 'dog2', 'guide_dog', 'service_dog', 'poodle', 'wolf', 'fox_face', 'raccoon', 'cat', 'cat2', 'lion_face', 'tiger', 'tiger2', 'leopard', 'horse', 'racehorse', 'unicorn_face', 'zebra_face', 'deer', 'cow', 'ox', 'water_buffalo', 'cow2', 'pig', 'pig2', 'boar', 'pig_nose', 'ram', 'sheep', 'goat', 'dromedary_camel', 'camel', 'llama', 'giraffe_face', 'elephant', 'rhinoceros', 'hippopotamus', 'mouse', 'mouse2', 'rat', 'hamster', 'rabbit', 'rabbit2', 'chipmunk', 'hedgehog', 'bat', 'bear', 'koala', 'panda_face', 'sloth', 'otter', 'skunk', 'kangaroo', 'badger', 'feet', 'turkey', 'chicken', 'rooster', 'hatching_chick', 'baby_chick', 'hatched_chick', 'bird', 'penguin', 'dove_of_peace', 'eagle', 'duck', 'swan', 'owl', 'flamingo', 'peacock', 'parrot', 'frog', 'crocodile', 'turtle', 'lizard', 'snake', 'dragon_face', 'dragon', 'sauropod', 't-rex', 'whale', 'whale2', 'dolphin', 'fish', 'tropical_fish', 'blowfish', 'shark', 'octopus', 'shell', 'snail', 'butterfly', 'bug', 'ant', 'bee', 'beetle', 'cricket', 'spider', 'spider_web', 'scorpion', 'mosquito', 'microbe', 'bouquet', 'cherry_blossom', 'white_flower', 'rosette', 'rose', 'wilted_flower', 'hibiscus', 'sunflower', 'blossom', 'tulip', 'seedling', 'evergreen_tree', 'deciduous_tree', 'palm_tree', 'cactus', 'ear_of_rice', 'herb', 'shamrock', 'four_leaf_clover', 'maple_leaf', 'fallen_leaf', 'leaves']
    }, {
      id: 'foods',
      name: 'Food & Drink',
      emojis: ['grapes', 'melon', 'watermelon', 'tangerine', 'lemon', 'banana', 'pineapple', 'mango', 'apple', 'green_apple', 'pear', 'peach', 'cherries', 'strawberry', 'kiwifruit', 'tomato', 'coconut', 'avocado', 'eggplant', 'potato', 'carrot', 'corn', 'hot_pepper', 'cucumber', 'leafy_green', 'broccoli', 'garlic', 'onion', 'mushroom', 'peanuts', 'chestnut', 'bread', 'croissant', 'baguette_bread', 'pretzel', 'bagel', 'pancakes', 'waffle', 'cheese_wedge', 'meat_on_bone', 'poultry_leg', 'cut_of_meat', 'bacon', 'hamburger', 'fries', 'pizza', 'hotdog', 'sandwich', 'taco', 'burrito', 'stuffed_flatbread', 'falafel', 'egg', 'fried_egg', 'shallow_pan_of_food', 'stew', 'bowl_with_spoon', 'green_salad', 'popcorn', 'butter', 'salt', 'canned_food', 'bento', 'rice_cracker', 'rice_ball', 'rice', 'curry', 'ramen', 'spaghetti', 'sweet_potato', 'oden', 'sushi', 'fried_shrimp', 'fish_cake', 'moon_cake', 'dango', 'dumpling', 'fortune_cookie', 'takeout_box', 'crab', 'lobster', 'shrimp', 'squid', 'oyster', 'icecream', 'shaved_ice', 'ice_cream', 'doughnut', 'cookie', 'birthday', 'cake', 'cupcake', 'pie', 'chocolate_bar', 'candy', 'lollipop', 'custard', 'honey_pot', 'baby_bottle', 'glass_of_milk', 'coffee', 'tea', 'sake', 'champagne', 'wine_glass', 'cocktail', 'tropical_drink', 'beer', 'beers', 'clinking_glasses', 'tumbler_glass', 'cup_with_straw', 'beverage_box', 'mate_drink', 'ice_cube', 'chopsticks', 'knife_fork_plate', 'fork_and_knife', 'spoon', 'hocho', 'amphora']
    }, {
      id: 'activity',
      name: 'Activities',
      emojis: ['jack_o_lantern', 'christmas_tree', 'fireworks', 'sparkler', 'firecracker', 'sparkles', 'balloon', 'tada', 'confetti_ball', 'tanabata_tree', 'bamboo', 'dolls', 'flags', 'wind_chime', 'rice_scene', 'red_envelope', 'ribbon', 'gift', 'reminder_ribbon', 'admission_tickets', 'ticket', 'medal', 'trophy', 'sports_medal', 'first_place_medal', 'second_place_medal', 'third_place_medal', 'soccer', 'baseball', 'softball', 'basketball', 'volleyball', 'football', 'rugby_football', 'tennis', 'flying_disc', 'bowling', 'cricket_bat_and_ball', 'field_hockey_stick_and_ball', 'ice_hockey_stick_and_puck', 'lacrosse', 'table_tennis_paddle_and_ball', 'badminton_racquet_and_shuttlecock', 'boxing_glove', 'martial_arts_uniform', 'goal_net', 'golf', 'ice_skate', 'fishing_pole_and_fish', 'diving_mask', 'running_shirt_with_sash', 'ski', 'sled', 'curling_stone', 'dart', 'yo-yo', 'kite', '8ball', 'crystal_ball', 'nazar_amulet', 'video_game', 'joystick', 'slot_machine', 'game_die', 'jigsaw', 'teddy_bear', 'spades', 'hearts', 'diamonds', 'clubs', 'chess_pawn', 'black_joker', 'mahjong', 'flower_playing_cards', 'performing_arts', 'frame_with_picture', 'art', 'thread', 'yarn']
    }, {
      id: 'places',
      name: 'Travel & Places',
      emojis: ['earth_africa', 'earth_americas', 'earth_asia', 'globe_with_meridians', 'world_map', 'japan', 'compass', 'snow_capped_mountain', 'mountain', 'volcano', 'mount_fuji', 'camping', 'beach_with_umbrella', 'desert', 'desert_island', 'national_park', 'stadium', 'classical_building', 'building_construction', 'bricks', 'house_buildings', 'derelict_house_building', 'house', 'house_with_garden', 'office', 'post_office', 'european_post_office', 'hospital', 'bank', 'hotel', 'love_hotel', 'convenience_store', 'school', 'department_store', 'factory', 'japanese_castle', 'european_castle', 'wedding', 'tokyo_tower', 'statue_of_liberty', 'church', 'mosque', 'hindu_temple', 'synagogue', 'shinto_shrine', 'kaaba', 'fountain', 'tent', 'foggy', 'night_with_stars', 'cityscape', 'sunrise_over_mountains', 'sunrise', 'city_sunset', 'city_sunrise', 'bridge_at_night', 'hotsprings', 'carousel_horse', 'ferris_wheel', 'roller_coaster', 'barber', 'circus_tent', 'steam_locomotive', 'railway_car', 'bullettrain_side', 'bullettrain_front', 'train2', 'metro', 'light_rail', 'station', 'tram', 'monorail', 'mountain_railway', 'train', 'bus', 'oncoming_bus', 'trolleybus', 'minibus', 'ambulance', 'fire_engine', 'police_car', 'oncoming_police_car', 'taxi', 'oncoming_taxi', 'car', 'oncoming_automobile', 'blue_car', 'truck', 'articulated_lorry', 'tractor', 'racing_car', 'racing_motorcycle', 'motor_scooter', 'manual_wheelchair', 'motorized_wheelchair', 'auto_rickshaw', 'bike', 'scooter', 'skateboard', 'busstop', 'motorway', 'railway_track', 'oil_drum', 'fuelpump', 'rotating_light', 'traffic_light', 'vertical_traffic_light', 'octagonal_sign', 'construction', 'anchor', 'boat', 'canoe', 'speedboat', 'passenger_ship', 'ferry', 'motor_boat', 'ship', 'airplane', 'small_airplane', 'airplane_departure', 'airplane_arriving', 'parachute', 'seat', 'helicopter', 'suspension_railway', 'mountain_cableway', 'aerial_tramway', 'satellite', 'rocket', 'flying_saucer', 'bellhop_bell', 'luggage', 'hourglass', 'hourglass_flowing_sand', 'watch', 'alarm_clock', 'stopwatch', 'timer_clock', 'mantelpiece_clock', 'clock12', 'clock1230', 'clock1', 'clock130', 'clock2', 'clock230', 'clock3', 'clock330', 'clock4', 'clock430', 'clock5', 'clock530', 'clock6', 'clock630', 'clock7', 'clock730', 'clock8', 'clock830', 'clock9', 'clock930', 'clock10', 'clock1030', 'clock11', 'clock1130', 'new_moon', 'waxing_crescent_moon', 'first_quarter_moon', 'moon', 'full_moon', 'waning_gibbous_moon', 'last_quarter_moon', 'waning_crescent_moon', 'crescent_moon', 'new_moon_with_face', 'first_quarter_moon_with_face', 'last_quarter_moon_with_face', 'thermometer', 'sunny', 'full_moon_with_face', 'sun_with_face', 'ringed_planet', 'star', 'star2', 'stars', 'milky_way', 'cloud', 'partly_sunny', 'thunder_cloud_and_rain', 'mostly_sunny', 'barely_sunny', 'partly_sunny_rain', 'rain_cloud', 'snow_cloud', 'lightning', 'tornado', 'fog', 'wind_blowing_face', 'cyclone', 'rainbow', 'closed_umbrella', 'umbrella', 'umbrella_with_rain_drops', 'umbrella_on_ground', 'zap', 'snowflake', 'snowman', 'snowman_without_snow', 'comet', 'fire', 'droplet', 'ocean']
    }, {
      id: 'objects',
      name: 'Objects',
      emojis: ['eyeglasses', 'dark_sunglasses', 'goggles', 'lab_coat', 'safety_vest', 'necktie', 'shirt', 'jeans', 'scarf', 'gloves', 'coat', 'socks', 'dress', 'kimono', 'sari', 'one-piece_swimsuit', 'briefs', 'shorts', 'bikini', 'womans_clothes', 'purse', 'handbag', 'pouch', 'shopping_bags', 'school_satchel', 'mans_shoe', 'athletic_shoe', 'hiking_boot', 'womans_flat_shoe', 'high_heel', 'sandal', 'ballet_shoes', 'boot', 'crown', 'womans_hat', 'tophat', 'mortar_board', 'billed_cap', 'helmet_with_white_cross', 'prayer_beads', 'lipstick', 'ring', 'gem', 'mute', 'speaker', 'sound', 'loud_sound', 'loudspeaker', 'mega', 'postal_horn', 'bell', 'no_bell', 'musical_score', 'musical_note', 'notes', 'studio_microphone', 'level_slider', 'control_knobs', 'microphone', 'headphones', 'radio', 'saxophone', 'guitar', 'musical_keyboard', 'trumpet', 'violin', 'banjo', 'drum_with_drumsticks', 'iphone', 'calling', 'phone', 'telephone_receiver', 'pager', 'fax', 'battery', 'electric_plug', 'computer', 'desktop_computer', 'printer', 'keyboard', 'three_button_mouse', 'trackball', 'minidisc', 'floppy_disk', 'cd', 'dvd', 'abacus', 'movie_camera', 'film_frames', 'film_projector', 'clapper', 'tv', 'camera', 'camera_with_flash', 'video_camera', 'vhs', 'mag', 'mag_right', 'candle', 'bulb', 'flashlight', 'izakaya_lantern', 'diya_lamp', 'notebook_with_decorative_cover', 'closed_book', 'book', 'green_book', 'blue_book', 'orange_book', 'books', 'notebook', 'ledger', 'page_with_curl', 'scroll', 'page_facing_up', 'newspaper', 'rolled_up_newspaper', 'bookmark_tabs', 'bookmark', 'label', 'moneybag', 'yen', 'dollar', 'euro', 'pound', 'money_with_wings', 'credit_card', 'receipt', 'chart', 'currency_exchange', 'heavy_dollar_sign', 'email', 'e-mail', 'incoming_envelope', 'envelope_with_arrow', 'outbox_tray', 'inbox_tray', 'package', 'mailbox', 'mailbox_closed', 'mailbox_with_mail', 'mailbox_with_no_mail', 'postbox', 'ballot_box_with_ballot', 'pencil2', 'black_nib', 'lower_left_fountain_pen', 'lower_left_ballpoint_pen', 'lower_left_paintbrush', 'lower_left_crayon', 'memo', 'briefcase', 'file_folder', 'open_file_folder', 'card_index_dividers', 'date', 'calendar', 'spiral_note_pad', 'spiral_calendar_pad', 'card_index', 'chart_with_upwards_trend', 'chart_with_downwards_trend', 'bar_chart', 'clipboard', 'pushpin', 'round_pushpin', 'paperclip', 'linked_paperclips', 'straight_ruler', 'triangular_ruler', 'scissors', 'card_file_box', 'file_cabinet', 'wastebasket', 'lock', 'unlock', 'lock_with_ink_pen', 'closed_lock_with_key', 'key', 'old_key', 'hammer', 'axe', 'pick', 'hammer_and_pick', 'hammer_and_wrench', 'dagger_knife', 'crossed_swords', 'gun', 'bow_and_arrow', 'shield', 'wrench', 'nut_and_bolt', 'gear', 'compression', 'scales', 'probing_cane', 'link', 'chains', 'toolbox', 'magnet', 'alembic', 'test_tube', 'petri_dish', 'dna', 'microscope', 'telescope', 'satellite_antenna', 'syringe', 'drop_of_blood', 'pill', 'adhesive_bandage', 'stethoscope', 'door', 'bed', 'couch_and_lamp', 'chair', 'toilet', 'shower', 'bathtub', 'razor', 'lotion_bottle', 'safety_pin', 'broom', 'basket', 'roll_of_paper', 'soap', 'sponge', 'fire_extinguisher', 'shopping_trolley', 'smoking', 'coffin', 'funeral_urn', 'moyai']
    }, {
      id: 'symbols',
      name: 'Symbols',
      emojis: ['atm', 'put_litter_in_its_place', 'potable_water', 'wheelchair', 'mens', 'womens', 'restroom', 'baby_symbol', 'wc', 'passport_control', 'customs', 'baggage_claim', 'left_luggage', 'warning', 'children_crossing', 'no_entry', 'no_entry_sign', 'no_bicycles', 'no_smoking', 'do_not_litter', 'non-potable_water', 'no_pedestrians', 'no_mobile_phones', 'underage', 'radioactive_sign', 'biohazard_sign', 'arrow_up', 'arrow_upper_right', 'arrow_right', 'arrow_lower_right', 'arrow_down', 'arrow_lower_left', 'arrow_left', 'arrow_upper_left', 'arrow_up_down', 'left_right_arrow', 'leftwards_arrow_with_hook', 'arrow_right_hook', 'arrow_heading_up', 'arrow_heading_down', 'arrows_clockwise', 'arrows_counterclockwise', 'back', 'end', 'on', 'soon', 'top', 'place_of_worship', 'atom_symbol', 'om_symbol', 'star_of_david', 'wheel_of_dharma', 'yin_yang', 'latin_cross', 'orthodox_cross', 'star_and_crescent', 'peace_symbol', 'menorah_with_nine_branches', 'six_pointed_star', 'aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpius', 'sagittarius', 'capricorn', 'aquarius', 'pisces', 'ophiuchus', 'twisted_rightwards_arrows', 'repeat', 'repeat_one', 'arrow_forward', 'fast_forward', 'black_right_pointing_double_triangle_with_vertical_bar', 'black_right_pointing_triangle_with_double_vertical_bar', 'arrow_backward', 'rewind', 'black_left_pointing_double_triangle_with_vertical_bar', 'arrow_up_small', 'arrow_double_up', 'arrow_down_small', 'arrow_double_down', 'double_vertical_bar', 'black_square_for_stop', 'black_circle_for_record', 'eject', 'cinema', 'low_brightness', 'high_brightness', 'signal_strength', 'vibration_mode', 'mobile_phone_off', 'female_sign', 'male_sign', 'medical_symbol', 'infinity', 'recycle', 'fleur_de_lis', 'trident', 'name_badge', 'beginner', 'o', 'white_check_mark', 'ballot_box_with_check', 'heavy_check_mark', 'heavy_multiplication_x', 'x', 'negative_squared_cross_mark', 'heavy_plus_sign', 'heavy_minus_sign', 'heavy_division_sign', 'curly_loop', 'loop', 'part_alternation_mark', 'eight_spoked_asterisk', 'eight_pointed_black_star', 'sparkle', 'bangbang', 'interrobang', 'question', 'grey_question', 'grey_exclamation', 'exclamation', 'wavy_dash', 'tm', 'keycap_ten', 'capital_abcd', 'abcd', '1234', 'symbols', 'abc', 'a', 'ab', 'b', 'cl', 'cool', 'free', 'information_source', 'id', 'm', 'new', 'ng', 'o2', 'ok', 'parking', 'sos', 'up', 'vs', 'koko', 'sa', 'u6708', 'u6709', 'u6307', 'ideograph_advantage', 'u5272', 'u7121', 'u7981', 'accept', 'u7533', 'u5408', 'u7a7a', 'congratulations', 'secret', 'u55b6', 'u6e80', 'red_circle', 'large_orange_circle', 'large_yellow_circle', 'large_green_circle', 'large_blue_circle', 'large_purple_circle', 'large_brown_circle', 'black_circle', 'white_circle', 'large_red_square', 'large_orange_square', 'large_yellow_square', 'large_green_square', 'large_blue_square', 'large_purple_square', 'large_brown_square', 'black_large_square', 'white_large_square', 'black_medium_square', 'white_medium_square', 'black_medium_small_square', 'white_medium_small_square', 'black_small_square', 'white_small_square', 'large_orange_diamond', 'large_blue_diamond', 'small_orange_diamond', 'small_blue_diamond', 'small_red_triangle', 'small_red_triangle_down', 'diamond_shape_with_a_dot_inside', 'radio_button', 'white_square_button', 'black_square_button']
    }, {
      id: 'flags',
      name: 'Flags',
      emojis: ['checkered_flag', 'cn', 'crossed_flags', 'de', 'es', 'flag-ac', 'flag-ad', 'flag-ae', 'flag-af', 'flag-ag', 'flag-ai', 'flag-al', 'flag-am', 'flag-ao', 'flag-aq', 'flag-ar', 'flag-as', 'flag-at', 'flag-au', 'flag-aw', 'flag-ax', 'flag-az', 'flag-ba', 'flag-bb', 'flag-bd', 'flag-be', 'flag-bf', 'flag-bg', 'flag-bh', 'flag-bi', 'flag-bj', 'flag-bl', 'flag-bm', 'flag-bn', 'flag-bo', 'flag-bq', 'flag-br', 'flag-bs', 'flag-bt', 'flag-bv', 'flag-bw', 'flag-by', 'flag-bz', 'flag-ca', 'flag-cc', 'flag-cd', 'flag-cf', 'flag-cg', 'flag-ch', 'flag-ci', 'flag-ck', 'flag-cl', 'flag-cm', 'flag-co', 'flag-cp', 'flag-cr', 'flag-cu', 'flag-cv', 'flag-cw', 'flag-cx', 'flag-cy', 'flag-cz', 'flag-dg', 'flag-dj', 'flag-dk', 'flag-dm', 'flag-do', 'flag-dz', 'flag-ea', 'flag-ec', 'flag-ee', 'flag-eg', 'flag-eh', 'flag-england', 'flag-er', 'flag-et', 'flag-eu', 'flag-fi', 'flag-fj', 'flag-fk', 'flag-fm', 'flag-fo', 'flag-ga', 'flag-gd', 'flag-ge', 'flag-gf', 'flag-gg', 'flag-gh', 'flag-gi', 'flag-gl', 'flag-gm', 'flag-gn', 'flag-gp', 'flag-gq', 'flag-gr', 'flag-gs', 'flag-gt', 'flag-gu', 'flag-gw', 'flag-gy', 'flag-hk', 'flag-hm', 'flag-hn', 'flag-hr', 'flag-ht', 'flag-hu', 'flag-ic', 'flag-id', 'flag-ie', 'flag-il', 'flag-im', 'flag-in', 'flag-io', 'flag-iq', 'flag-ir', 'flag-is', 'flag-je', 'flag-jm', 'flag-jo', 'flag-ke', 'flag-kg', 'flag-kh', 'flag-ki', 'flag-km', 'flag-kn', 'flag-kp', 'flag-kw', 'flag-ky', 'flag-kz', 'flag-la', 'flag-lb', 'flag-lc', 'flag-li', 'flag-lk', 'flag-lr', 'flag-ls', 'flag-lt', 'flag-lu', 'flag-lv', 'flag-ly', 'flag-ma', 'flag-mc', 'flag-md', 'flag-me', 'flag-mf', 'flag-mg', 'flag-mh', 'flag-mk', 'flag-ml', 'flag-mm', 'flag-mn', 'flag-mo', 'flag-mp', 'flag-mq', 'flag-mr', 'flag-ms', 'flag-mt', 'flag-mu', 'flag-mv', 'flag-mw', 'flag-mx', 'flag-my', 'flag-mz', 'flag-na', 'flag-nc', 'flag-ne', 'flag-nf', 'flag-ng', 'flag-ni', 'flag-nl', 'flag-no', 'flag-np', 'flag-nr', 'flag-nu', 'flag-nz', 'flag-om', 'flag-pa', 'flag-pe', 'flag-pf', 'flag-pg', 'flag-ph', 'flag-pk', 'flag-pl', 'flag-pm', 'flag-pn', 'flag-pr', 'flag-ps', 'flag-pt', 'flag-pw', 'flag-py', 'flag-qa', 'flag-re', 'flag-ro', 'flag-rs', 'flag-rw', 'flag-sa', 'flag-sb', 'flag-sc', 'flag-scotland', 'flag-sd', 'flag-se', 'flag-sg', 'flag-sh', 'flag-si', 'flag-sj', 'flag-sk', 'flag-sl', 'flag-sm', 'flag-sn', 'flag-so', 'flag-sr', 'flag-ss', 'flag-st', 'flag-sv', 'flag-sx', 'flag-sy', 'flag-sz', 'flag-ta', 'flag-tc', 'flag-td', 'flag-tf', 'flag-tg', 'flag-th', 'flag-tj', 'flag-tk', 'flag-tl', 'flag-tm', 'flag-tn', 'flag-to', 'flag-tr', 'flag-tt', 'flag-tv', 'flag-tw', 'flag-tz', 'flag-ua', 'flag-ug', 'flag-um', 'flag-uy', 'flag-uz', 'flag-va', 'flag-vc', 'flag-ve', 'flag-vg', 'flag-vi', 'flag-vn', 'flag-vu', 'flag-wales', 'flag-wf', 'flag-ws', 'flag-xk', 'flag-ye', 'flag-yt', 'flag-za', 'flag-zm', 'flag-zw', 'fr', 'gb', 'it', 'jp', 'kr', 'pirate_flag', 'rainbow-flag', 'ru', 'triangular_flag_on_post', 'us', 'waving_black_flag', 'waving_white_flag']
    }],
    emojis: {
      '100': {
        a: 'Hundred Points Symbol',
        b: '1F4AF',
        j: ['score', 'perfect', 'numbers', 'century', 'exam', 'quiz', 'test', 'pass', 'hundred'],
        k: [26, 5],
        o: 2
      },
      '1234': {
        a: 'Input Symbol for Numbers',
        b: '1F522',
        j: ['numbers', 'blue-square'],
        k: [28, 5],
        o: 2
      },
      grinning: {
        a: 'Grinning Face',
        b: '1F600',
        j: ['face', 'smile', 'happy', 'joy', ':D', 'grin'],
        k: [30, 35],
        m: ':D',
        o: 2
      },
      monkey_face: {
        a: 'Monkey Face',
        b: '1F435',
        j: ['animal', 'nature', 'circus'],
        k: [12, 25],
        l: [':o)'],
        o: 2
      },
      grapes: {
        a: 'Grapes',
        b: '1F347',
        j: ['fruit', 'food', 'wine'],
        k: [6, 31],
        o: 2
      },
      eyeglasses: {
        a: 'Eyeglasses',
        b: '1F453',
        j: ['fashion', 'accessories', 'eyesight', 'nerdy', 'dork', 'geek'],
        k: [14, 7],
        o: 2
      },
      checkered_flag: {
        a: 'Chequered Flag',
        b: '1F3C1',
        j: ['contest', 'finishline', 'race', 'gokart'],
        k: [8, 39],
        o: 2
      },
      jack_o_lantern: {
        a: 'Jack-O-Lantern',
        b: '1F383',
        j: ['halloween', 'light', 'pumpkin', 'creepy', 'fall'],
        k: [7, 34],
        o: 2
      },
      wave: {
        a: 'Waving Hand Sign',
        b: '1F44B',
        j: ['hands', 'gesture', 'goodbye', 'solong', 'farewell', 'hello', 'hi', 'palm'],
        k: [13, 26],
        o: 2
      },
      earth_africa: {
        a: 'Earth Globe Europe-Africa',
        b: '1F30D',
        j: ['globe', 'world', 'international'],
        k: [5, 32],
        o: 2
      },
      atm: {
        a: 'Automated Teller Machine',
        b: '1F3E7',
        j: ['money', 'sales', 'cash', 'blue-square', 'payment', 'bank'],
        k: [11, 1],
        o: 2
      },
      melon: {
        a: 'Melon',
        b: '1F348',
        j: ['fruit', 'nature', 'food'],
        k: [6, 32],
        o: 2
      },
      triangular_flag_on_post: {
        a: 'Triangular Flag on Post',
        b: '1F6A9',
        j: ['mark', 'milestone', 'place'],
        k: [35, 0],
        o: 2
      },
      put_litter_in_its_place: {
        a: 'Put Litter in Its Place Symbol',
        b: '1F6AE',
        j: ['blue-square', 'sign', 'human', 'info'],
        k: [35, 5],
        o: 2
      },
      christmas_tree: {
        a: 'Christmas Tree',
        b: '1F384',
        j: ['festival', 'vacation', 'december', 'xmas', 'celebration'],
        k: [7, 35],
        o: 2
      },
      monkey: {
        a: 'Monkey',
        b: '1F412',
        j: ['animal', 'nature', 'banana', 'circus'],
        k: [11, 46],
        o: 2
      },
      earth_americas: {
        a: 'Earth Globe Americas',
        b: '1F30E',
        j: ['globe', 'world', 'USA', 'international'],
        k: [5, 33],
        o: 2
      },
      dark_sunglasses: {
        a: 'Dark Sunglasses',
        b: '1F576-FE0F',
        c: '1F576',
        j: ['face', 'cool', 'accessories'],
        k: [29, 33],
        o: 2
      },
      raised_back_of_hand: {
        a: 'Raised Back of Hand',
        b: '1F91A',
        j: ['fingers', 'raised', 'backhand'],
        k: [37, 43],
        o: 4
      },
      smiley: {
        a: 'Smiling Face with Open Mouth',
        b: '1F603',
        j: ['face', 'happy', 'joy', 'haha', ':D', ':)', 'smile', 'funny'],
        k: [30, 38],
        l: ['=)', '=-)'],
        m: ':)',
        o: 2
      },
      earth_asia: {
        a: 'Earth Globe Asia-Australia',
        b: '1F30F',
        j: ['globe', 'world', 'east', 'international'],
        k: [5, 34],
        o: 2
      },
      crossed_flags: {
        a: 'Crossed Flags',
        b: '1F38C',
        j: ['japanese', 'nation', 'country', 'border'],
        k: [7, 48],
        o: 2
      },
      watermelon: {
        a: 'Watermelon',
        b: '1F349',
        j: ['fruit', 'food', 'picnic', 'summer'],
        k: [6, 33],
        o: 2
      },
      goggles: {
        a: 'Goggles',
        b: '1F97D',
        k: [42, 15],
        o: 11
      },
      raised_hand_with_fingers_splayed: {
        a: 'Raised Hand with Fingers Splayed',
        b: '1F590-FE0F',
        c: '1F590',
        j: ['hand', 'fingers', 'palm'],
        k: [29, 48],
        o: 2
      },
      smile: {
        a: 'Smiling Face with Open Mouth and Smiling Eyes',
        b: '1F604',
        j: ['face', 'happy', 'joy', 'funny', 'haha', 'laugh', 'like', ':D', ':)'],
        k: [30, 39],
        l: ['C:', 'c:', ':D', ':-D'],
        m: ':)',
        o: 2
      },
      potable_water: {
        a: 'Potable Water Symbol',
        b: '1F6B0',
        j: ['blue-square', 'liquid', 'restroom', 'cleaning', 'faucet'],
        k: [35, 7],
        o: 2
      },
      fireworks: {
        a: 'Fireworks',
        b: '1F386',
        j: ['photo', 'festival', 'carnival', 'congratulations'],
        k: [7, 42],
        o: 2
      },
      gorilla: {
        a: 'Gorilla',
        b: '1F98D',
        j: ['animal', 'nature', 'circus'],
        k: [42, 31],
        o: 4
      },
      lab_coat: {
        a: 'Lab Coat',
        b: '1F97C',
        k: [42, 14],
        o: 11
      },
      tangerine: {
        a: 'Tangerine',
        b: '1F34A',
        j: ['food', 'fruit', 'nature', 'orange'],
        k: [6, 34],
        o: 2
      },
      wheelchair: {
        a: 'Wheelchair Symbol',
        b: '267F',
        j: ['blue-square', 'disabled', 'a11y', 'accessibility'],
        k: [53, 40],
        o: 2
      },
      waving_black_flag: {
        a: 'Waving Black Flag',
        b: '1F3F4',
        k: [11, 17],
        o: 2
      },
      orangutan: {
        a: 'Orangutan',
        b: '1F9A7',
        k: [42, 55],
        o: 12
      },
      sparkler: {
        a: 'Firework Sparkler',
        b: '1F387',
        j: ['stars', 'night', 'shine'],
        k: [7, 43],
        o: 2
      },
      globe_with_meridians: {
        a: 'Globe with Meridians',
        b: '1F310',
        j: ['earth', 'international', 'world', 'internet', 'interweb', 'i18n'],
        k: [5, 35],
        o: 2
      },
      grin: {
        a: 'Grinning Face with Smiling Eyes',
        b: '1F601',
        j: ['face', 'happy', 'smile', 'joy', 'kawaii'],
        k: [30, 36],
        o: 2
      },
      hand: {
        a: 'Raised Hand',
        b: '270B',
        k: [54, 49],
        n: ['raised_hand'],
        o: 2
      },
      firecracker: {
        a: 'Firecracker',
        b: '1F9E8',
        k: [51, 27],
        o: 11
      },
      lemon: {
        a: 'Lemon',
        b: '1F34B',
        j: ['fruit', 'nature'],
        k: [6, 35],
        o: 2
      },
      dog: {
        a: 'Dog Face',
        b: '1F436',
        j: ['animal', 'friend', 'nature', 'woof', 'puppy', 'pet', 'faithful'],
        k: [12, 26],
        o: 2
      },
      mens: {
        a: 'Mens Symbol',
        b: '1F6B9',
        j: ['toilet', 'restroom', 'wc', 'blue-square', 'gender', 'male'],
        k: [36, 10],
        o: 2
      },
      'spock-hand': {
        a: 'Raised Hand with Part Between Middle and Ring Fingers',
        b: '1F596',
        k: [30, 3],
        o: 2
      },
      world_map: {
        a: 'World Map',
        b: '1F5FA-FE0F',
        c: '1F5FA',
        j: ['location', 'direction'],
        k: [30, 29],
        o: 2
      },
      laughing: {
        a: 'Smiling Face with Open Mouth and Tightly-Closed Eyes',
        b: '1F606',
        j: ['happy', 'joy', 'lol', 'satisfied', 'haha', 'face', 'glad', 'XD', 'laugh'],
        k: [30, 41],
        l: [':>', ':->'],
        n: ['satisfied'],
        o: 2
      },
      waving_white_flag: {
        a: 'Waving White Flag',
        b: '1F3F3-FE0F',
        c: '1F3F3',
        k: [11, 12],
        o: 2
      },
      safety_vest: {
        a: 'Safety Vest',
        b: '1F9BA',
        k: [43, 54],
        o: 12
      },
      sweat_smile: {
        a: 'Smiling Face with Open Mouth and Cold Sweat',
        b: '1F605',
        j: ['face', 'hot', 'happy', 'laugh', 'sweat', 'smile', 'relief'],
        k: [30, 40],
        o: 2
      },
      sparkles: {
        a: 'Sparkles',
        b: '2728',
        j: ['stars', 'shine', 'shiny', 'cool', 'awesome', 'good', 'magic'],
        k: [55, 16],
        o: 2
      },
      banana: {
        a: 'Banana',
        b: '1F34C',
        j: ['fruit', 'food', 'monkey'],
        k: [6, 36],
        o: 2
      },
      'rainbow-flag': {
        a: 'Rainbow Flag',
        b: '1F3F3-FE0F-200D-1F308',
        c: '1F3F3-200D-1F308',
        k: [11, 11],
        o: 4
      },
      ok_hand: {
        a: 'Ok Hand Sign',
        b: '1F44C',
        j: ['fingers', 'limbs', 'perfect', 'ok', 'okay'],
        k: [13, 32],
        o: 2
      },
      japan: {
        a: 'Silhouette of Japan',
        b: '1F5FE',
        j: ['nation', 'country', 'japanese', 'asia'],
        k: [30, 33],
        o: 2
      },
      dog2: {
        a: 'Dog',
        b: '1F415',
        j: ['animal', 'nature', 'friend', 'doge', 'pet', 'faithful'],
        k: [11, 50],
        o: 2
      },
      womens: {
        a: 'Womens Symbol',
        b: '1F6BA',
        j: ['purple-square', 'woman', 'female', 'toilet', 'loo', 'restroom', 'gender'],
        k: [36, 11],
        o: 2
      },
      necktie: {
        a: 'Necktie',
        b: '1F454',
        j: ['shirt', 'suitup', 'formal', 'fashion', 'cloth', 'business'],
        k: [14, 8],
        o: 2
      },
      pirate_flag: {
        a: 'Pirate Flag',
        b: '1F3F4-200D-2620-FE0F',
        c: '1F3F4-200D-2620',
        k: [11, 13],
        o: 11
      },
      guide_dog: {
        a: 'Guide Dog',
        b: '1F9AE',
        k: [43, 2],
        o: 12
      },
      restroom: {
        a: 'Restroom',
        b: '1F6BB',
        j: ['blue-square', 'toilet', 'refresh', 'wc', 'gender'],
        k: [36, 12],
        o: 2
      },
      compass: {
        a: 'Compass',
        b: '1F9ED',
        k: [51, 32],
        o: 11
      },
      rolling_on_the_floor_laughing: {
        a: 'Rolling on the Floor Laughing',
        b: '1F923',
        k: [38, 20],
        o: 4
      },
      balloon: {
        a: 'Balloon',
        b: '1F388',
        j: ['party', 'celebration', 'birthday', 'circus'],
        k: [7, 44],
        o: 2
      },
      pinching_hand: {
        a: 'Pinching Hand',
        b: '1F90F',
        k: [37, 17],
        o: 12
      },
      pineapple: {
        a: 'Pineapple',
        b: '1F34D',
        j: ['fruit', 'nature', 'food'],
        k: [6, 37],
        o: 2
      },
      shirt: {
        a: 'T-Shirt',
        b: '1F455',
        k: [14, 9],
        n: ['tshirt'],
        o: 2
      },
      service_dog: {
        a: 'Service Dog',
        b: '1F415-200D-1F9BA',
        k: [11, 49],
        o: 12
      },
      baby_symbol: {
        a: 'Baby Symbol',
        b: '1F6BC',
        j: ['orange-square', 'child'],
        k: [36, 13],
        o: 2
      },
      joy: {
        a: 'Face with Tears of Joy',
        b: '1F602',
        j: ['face', 'cry', 'tears', 'weep', 'happy', 'happytears', 'haha'],
        k: [30, 37],
        o: 2
      },
      tada: {
        a: 'Party Popper',
        b: '1F389',
        j: ['party', 'congratulations', 'birthday', 'magic', 'circus', 'celebration'],
        k: [7, 45],
        o: 2
      },
      mango: {
        a: 'Mango',
        b: '1F96D',
        k: [42, 3],
        o: 11
      },
      v: {
        a: 'Victory Hand',
        b: '270C-FE0F',
        c: '270C',
        j: ['fingers', 'ohyeah', 'hand', 'peace', 'victory', 'two'],
        k: [54, 55],
        o: 2
      },
      snow_capped_mountain: {
        a: 'Snow Capped Mountain',
        b: '1F3D4-FE0F',
        c: '1F3D4',
        k: [10, 39],
        o: 2
      },
      'flag-ac': {
        a: 'Ascension Island Flag',
        b: '1F1E6-1F1E8',
        k: [0, 31],
        o: 2
      },
      jeans: {
        a: 'Jeans',
        b: '1F456',
        j: ['fashion', 'shopping'],
        k: [14, 10],
        o: 2
      },
      poodle: {
        a: 'Poodle',
        b: '1F429',
        j: ['dog', 'animal', '101', 'nature', 'pet'],
        k: [12, 13],
        o: 2
      },
      crossed_fingers: {
        a: 'Hand with Index and Middle Fingers Crossed',
        b: '1F91E',
        j: ['good', 'lucky'],
        k: [38, 5],
        n: ['hand_with_index_and_middle_fingers_crossed'],
        o: 4
      },
      'flag-ad': {
        a: 'Andorra Flag',
        b: '1F1E6-1F1E9',
        k: [0, 32],
        o: 2
      },
      slightly_smiling_face: {
        a: 'Slightly Smiling Face',
        b: '1F642',
        j: ['face', 'smile'],
        k: [31, 44],
        l: [':)', '(:', ':-)'],
        o: 2
      },
      apple: {
        a: 'Red Apple',
        b: '1F34E',
        j: ['fruit', 'mac', 'school'],
        k: [6, 38],
        o: 2
      },
      wc: {
        a: 'Water Closet',
        b: '1F6BE',
        j: ['toilet', 'restroom', 'blue-square'],
        k: [36, 15],
        o: 2
      },
      scarf: {
        a: 'Scarf',
        b: '1F9E3',
        k: [51, 22],
        o: 5
      },
      mountain: {
        a: 'Mountain',
        b: '26F0-FE0F',
        c: '26F0',
        j: ['photo', 'nature', 'environment'],
        k: [54, 11],
        o: 2
      },
      confetti_ball: {
        a: 'Confetti Ball',
        b: '1F38A',
        j: ['festival', 'party', 'birthday', 'circus'],
        k: [7, 46],
        o: 2
      },
      i_love_you_hand_sign: {
        a: 'I Love You Hand Sign',
        b: '1F91F',
        k: [38, 11],
        o: 5
      },
      wolf: {
        a: 'Wolf Face',
        b: '1F43A',
        j: ['animal', 'nature', 'wild'],
        k: [12, 30],
        o: 2
      },
      gloves: {
        a: 'Gloves',
        b: '1F9E4',
        k: [51, 23],
        o: 5
      },
      'flag-ae': {
        a: 'United Arab Emirates Flag',
        b: '1F1E6-1F1EA',
        k: [0, 33],
        o: 2
      },
      upside_down_face: {
        a: 'Upside-Down Face',
        b: '1F643',
        j: ['face', 'flipped', 'silly', 'smile'],
        k: [31, 45],
        o: 2
      },
      green_apple: {
        a: 'Green Apple',
        b: '1F34F',
        j: ['fruit', 'nature'],
        k: [6, 39],
        o: 2
      },
      passport_control: {
        a: 'Passport Control',
        b: '1F6C2',
        j: ['custom', 'blue-square'],
        k: [36, 24],
        o: 2
      },
      volcano: {
        a: 'Volcano',
        b: '1F30B',
        j: ['photo', 'nature', 'disaster'],
        k: [5, 30],
        o: 2
      },
      tanabata_tree: {
        a: 'Tanabata Tree',
        b: '1F38B',
        j: ['plant', 'nature', 'branch', 'summer'],
        k: [7, 47],
        o: 2
      },
      customs: {
        a: 'Customs',
        b: '1F6C3',
        j: ['passport', 'border', 'blue-square'],
        k: [36, 25],
        o: 2
      },
      coat: {
        a: 'Coat',
        b: '1F9E5',
        k: [51, 24],
        o: 5
      },
      wink: {
        a: 'Winking Face',
        b: '1F609',
        j: ['face', 'happy', 'mischievous', 'secret', ';)', 'smile', 'eye'],
        k: [30, 44],
        l: [';)', ';-)'],
        m: ';)',
        o: 2
      },
      bamboo: {
        a: 'Pine Decoration',
        b: '1F38D',
        j: ['plant', 'nature', 'vegetable', 'panda', 'pine_decoration'],
        k: [7, 49],
        o: 2
      },
      'flag-af': {
        a: 'Afghanistan Flag',
        b: '1F1E6-1F1EB',
        k: [0, 34],
        o: 2
      },
      fox_face: {
        a: 'Fox Face',
        b: '1F98A',
        j: ['animal', 'nature', 'face'],
        k: [42, 28],
        o: 4
      },
      pear: {
        a: 'Pear',
        b: '1F350',
        j: ['fruit', 'nature', 'food'],
        k: [6, 40],
        o: 2
      },
      mount_fuji: {
        a: 'Mount Fuji',
        b: '1F5FB',
        j: ['photo', 'mountain', 'nature', 'japanese'],
        k: [30, 30],
        o: 2
      },
      the_horns: {
        a: 'Sign of the Horns',
        b: '1F918',
        k: [37, 31],
        n: ['sign_of_the_horns'],
        o: 2
      },
      call_me_hand: {
        a: 'Call Me Hand',
        b: '1F919',
        j: ['hands', 'gesture'],
        k: [37, 37],
        o: 4
      },
      'flag-ag': {
        a: 'Antigua & Barbuda Flag',
        b: '1F1E6-1F1EC',
        k: [0, 35],
        o: 2
      },
      raccoon: {
        a: 'Raccoon',
        b: '1F99D',
        k: [42, 47],
        o: 11
      },
      dolls: {
        a: 'Japanese Dolls',
        b: '1F38E',
        j: ['japanese', 'toy', 'kimono'],
        k: [7, 50],
        o: 2
      },
      blush: {
        a: 'Smiling Face with Smiling Eyes',
        b: '1F60A',
        j: ['face', 'smile', 'happy', 'flushed', 'crush', 'embarrassed', 'shy', 'joy'],
        k: [30, 45],
        m: ':)',
        o: 2
      },
      peach: {
        a: 'Peach',
        b: '1F351',
        j: ['fruit', 'nature', 'food'],
        k: [6, 41],
        o: 2
      },
      baggage_claim: {
        a: 'Baggage Claim',
        b: '1F6C4',
        j: ['blue-square', 'airport', 'transport'],
        k: [36, 26],
        o: 2
      },
      socks: {
        a: 'Socks',
        b: '1F9E6',
        k: [51, 25],
        o: 5
      },
      camping: {
        a: 'Camping',
        b: '1F3D5-FE0F',
        c: '1F3D5',
        j: ['photo', 'outdoors', 'tent'],
        k: [10, 40],
        o: 2
      },
      dress: {
        a: 'Dress',
        b: '1F457',
        j: ['clothes', 'fashion', 'shopping'],
        k: [14, 11],
        o: 2
      },
      beach_with_umbrella: {
        a: 'Beach with Umbrella',
        b: '1F3D6-FE0F',
        c: '1F3D6',
        k: [10, 41],
        o: 2
      },
      cherries: {
        a: 'Cherries',
        b: '1F352',
        j: ['food', 'fruit'],
        k: [6, 42],
        o: 2
      },
      cat: {
        a: 'Cat Face',
        b: '1F431',
        j: ['animal', 'meow', 'nature', 'pet', 'kitten'],
        k: [12, 21],
        o: 2
      },
      point_left: {
        a: 'White Left Pointing Backhand Index',
        b: '1F448',
        j: ['direction', 'fingers', 'hand', 'left'],
        k: [13, 8],
        o: 2
      },
      left_luggage: {
        a: 'Left Luggage',
        b: '1F6C5',
        j: ['blue-square', 'travel'],
        k: [36, 27],
        o: 2
      },
      'flag-ai': {
        a: 'Anguilla Flag',
        b: '1F1E6-1F1EE',
        k: [0, 36],
        o: 2
      },
      innocent: {
        a: 'Smiling Face with Halo',
        b: '1F607',
        j: ['face', 'angel', 'heaven', 'halo'],
        k: [30, 42],
        o: 2
      },
      flags: {
        a: 'Carp Streamer',
        b: '1F38F',
        j: ['fish', 'japanese', 'koinobori', 'carp', 'banner'],
        k: [7, 51],
        o: 2
      },
      warning: {
        a: 'Warning Sign',
        b: '26A0-FE0F',
        c: '26A0',
        j: ['exclamation', 'wip', 'alert', 'error', 'problem', 'issue'],
        k: [53, 50],
        o: 2
      },
      strawberry: {
        a: 'Strawberry',
        b: '1F353',
        j: ['fruit', 'food', 'nature'],
        k: [6, 43],
        o: 2
      },
      point_right: {
        a: 'White Right Pointing Backhand Index',
        b: '1F449',
        j: ['fingers', 'hand', 'direction', 'right'],
        k: [13, 14],
        o: 2
      },
      desert: {
        a: 'Desert',
        b: '1F3DC-FE0F',
        c: '1F3DC',
        j: ['photo', 'warm', 'saharah'],
        k: [10, 47],
        o: 2
      },
      kimono: {
        a: 'Kimono',
        b: '1F458',
        j: ['dress', 'fashion', 'women', 'female', 'japanese'],
        k: [14, 12],
        o: 2
      },
      'flag-al': {
        a: 'Albania Flag',
        b: '1F1E6-1F1F1',
        k: [0, 37],
        o: 2
      },
      wind_chime: {
        a: 'Wind Chime',
        b: '1F390',
        j: ['nature', 'ding', 'spring', 'bell'],
        k: [7, 52],
        o: 2
      },
      smiling_face_with_3_hearts: {
        a: 'Smiling Face with Smiling Eyes and Three Hearts',
        b: '1F970',
        k: [42, 6],
        o: 11
      },
      cat2: {
        a: 'Cat',
        b: '1F408',
        j: ['animal', 'meow', 'pet', 'cats'],
        k: [11, 36],
        o: 2
      },
      rice_scene: {
        a: 'Moon Viewing Ceremony',
        b: '1F391',
        j: ['photo', 'japan', 'asia', 'tsukimi'],
        k: [7, 53],
        o: 2
      },
      heart_eyes: {
        a: 'Smiling Face with Heart-Shaped Eyes',
        b: '1F60D',
        j: ['face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'crush', 'heart'],
        k: [30, 48],
        o: 2
      },
      sari: {
        a: 'Sari',
        b: '1F97B',
        k: [42, 13],
        o: 12
      },
      'flag-am': {
        a: 'Armenia Flag',
        b: '1F1E6-1F1F2',
        k: [0, 38],
        o: 2
      },
      lion_face: {
        a: 'Lion Face',
        b: '1F981',
        k: [42, 19],
        o: 2
      },
      desert_island: {
        a: 'Desert Island',
        b: '1F3DD-FE0F',
        c: '1F3DD',
        j: ['photo', 'tropical', 'mojito'],
        k: [10, 48],
        o: 2
      },
      point_up_2: {
        a: 'White Up Pointing Backhand Index',
        b: '1F446',
        j: ['fingers', 'hand', 'direction', 'up'],
        k: [12, 53],
        o: 2
      },
      kiwifruit: {
        a: 'Kiwifruit',
        b: '1F95D',
        k: [41, 44],
        o: 4
      },
      children_crossing: {
        a: 'Children Crossing',
        b: '1F6B8',
        j: ['school', 'warning', 'danger', 'sign', 'driving', 'yellow-diamond'],
        k: [36, 9],
        o: 2
      },
      national_park: {
        a: 'National Park',
        b: '1F3DE-FE0F',
        c: '1F3DE',
        j: ['photo', 'environment', 'nature'],
        k: [10, 49],
        o: 2
      },
      no_entry: {
        a: 'No Entry',
        b: '26D4',
        j: ['limit', 'security', 'privacy', 'bad', 'denied', 'stop', 'circle'],
        k: [54, 8],
        o: 2
      },
      'one-piece_swimsuit': {
        a: 'One-Piece Swimsuit',
        b: '1FA71',
        k: [51, 52],
        o: 12
      },
      tiger: {
        a: 'Tiger Face',
        b: '1F42F',
        j: ['animal', 'cat', 'danger', 'wild', 'nature', 'roar'],
        k: [12, 19],
        o: 2
      },
      red_envelope: {
        a: 'Red Gift Envelope',
        b: '1F9E7',
        k: [51, 26],
        o: 11
      },
      'star-struck': {
        a: 'Grinning Face with Star Eyes',
        b: '1F929',
        k: [38, 43],
        n: ['grinning_face_with_star_eyes'],
        o: 5
      },
      middle_finger: {
        a: 'Reversed Hand with Middle Finger Extended',
        b: '1F595',
        k: [29, 54],
        n: ['reversed_hand_with_middle_finger_extended'],
        o: 2
      },
      'flag-ao': {
        a: 'Angola Flag',
        b: '1F1E6-1F1F4',
        k: [0, 39],
        o: 2
      },
      tomato: {
        a: 'Tomato',
        b: '1F345',
        j: ['fruit', 'vegetable', 'nature', 'food'],
        k: [6, 29],
        o: 2
      },
      coconut: {
        a: 'Coconut',
        b: '1F965',
        k: [41, 52],
        o: 5
      },
      ribbon: {
        a: 'Ribbon',
        b: '1F380',
        j: ['decoration', 'pink', 'girl', 'bowtie'],
        k: [7, 31],
        o: 2
      },
      no_entry_sign: {
        a: 'No Entry Sign',
        b: '1F6AB',
        j: ['forbid', 'stop', 'limit', 'denied', 'disallow', 'circle'],
        k: [35, 2],
        o: 2
      },
      point_down: {
        a: 'White Down Pointing Backhand Index',
        b: '1F447',
        j: ['fingers', 'hand', 'direction', 'down'],
        k: [13, 2],
        o: 2
      },
      'flag-aq': {
        a: 'Antarctica Flag',
        b: '1F1E6-1F1F6',
        k: [0, 40],
        o: 2
      },
      briefs: {
        a: 'Briefs',
        b: '1FA72',
        k: [51, 53],
        o: 12
      },
      kissing_heart: {
        a: 'Face Throwing a Kiss',
        b: '1F618',
        j: ['face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'kiss'],
        k: [31, 2],
        l: [':*', ':-*'],
        o: 2
      },
      tiger2: {
        a: 'Tiger',
        b: '1F405',
        j: ['animal', 'nature', 'roar'],
        k: [11, 33],
        o: 2
      },
      stadium: {
        a: 'Stadium',
        b: '1F3DF-FE0F',
        c: '1F3DF',
        j: ['photo', 'place', 'sports', 'concert', 'venue'],
        k: [10, 50],
        o: 2
      },
      leopard: {
        a: 'Leopard',
        b: '1F406',
        j: ['animal', 'nature'],
        k: [11, 34],
        o: 2
      },
      no_bicycles: {
        a: 'No Bicycles',
        b: '1F6B3',
        j: ['cyclist', 'prohibited', 'circle'],
        k: [35, 10],
        o: 2
      },
      kissing: {
        a: 'Kissing Face',
        b: '1F617',
        j: ['love', 'like', 'face', '3', 'valentines', 'infatuation', 'kiss'],
        k: [31, 1],
        o: 2
      },
      'flag-ar': {
        a: 'Argentina Flag',
        b: '1F1E6-1F1F7',
        k: [0, 41],
        o: 2
      },
      avocado: {
        a: 'Avocado',
        b: '1F951',
        j: ['fruit', 'food'],
        k: [41, 32],
        o: 4
      },
      point_up: {
        a: 'White Up Pointing Index',
        b: '261D-FE0F',
        c: '261D',
        j: ['hand', 'fingers', 'direction', 'up'],
        k: [53, 2],
        o: 2
      },
      gift: {
        a: 'Wrapped Present',
        b: '1F381',
        j: ['present', 'birthday', 'christmas', 'xmas'],
        k: [7, 32],
        o: 2
      },
      classical_building: {
        a: 'Classical Building',
        b: '1F3DB-FE0F',
        c: '1F3DB',
        j: ['art', 'culture', 'history'],
        k: [10, 46],
        o: 2
      },
      shorts: {
        a: 'Shorts',
        b: '1FA73',
        k: [51, 54],
        o: 12
      },
      '+1': {
        a: 'Thumbs Up Sign',
        b: '1F44D',
        j: ['thumbsup', 'yes', 'awesome', 'good', 'agree', 'accept', 'cool', 'hand', 'like'],
        k: [13, 38],
        n: ['thumbsup'],
        o: 2
      },
      horse: {
        a: 'Horse Face',
        b: '1F434',
        j: ['animal', 'brown', 'nature'],
        k: [12, 24],
        o: 2
      },
      bikini: {
        a: 'Bikini',
        b: '1F459',
        j: ['swimming', 'female', 'woman', 'girl', 'fashion', 'beach', 'summer'],
        k: [14, 13],
        o: 2
      },
      no_smoking: {
        a: 'No Smoking Symbol',
        b: '1F6AD',
        j: ['cigarette', 'blue-square', 'smell', 'smoke'],
        k: [35, 4],
        o: 2
      },
      eggplant: {
        a: 'Aubergine',
        b: '1F346',
        j: ['vegetable', 'nature', 'food', 'aubergine'],
        k: [6, 30],
        o: 2
      },
      'flag-as': {
        a: 'American Samoa Flag',
        b: '1F1E6-1F1F8',
        k: [0, 42],
        o: 2
      },
      reminder_ribbon: {
        a: 'Reminder Ribbon',
        b: '1F397-FE0F',
        c: '1F397',
        j: ['sports', 'cause', 'support', 'awareness'],
        k: [8, 0],
        o: 2
      },
      building_construction: {
        a: 'Building Construction',
        b: '1F3D7-FE0F',
        c: '1F3D7',
        j: ['wip', 'working', 'progress'],
        k: [10, 42],
        o: 2
      },
      relaxed: {
        a: 'White Smiling Face',
        b: '263A-FE0F',
        c: '263A',
        j: ['face', 'blush', 'massage', 'happiness'],
        k: [53, 17],
        o: 2
      },
      kissing_closed_eyes: {
        a: 'Kissing Face with Closed Eyes',
        b: '1F61A',
        j: ['face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'kiss'],
        k: [31, 4],
        o: 2
      },
      '-1': {
        a: 'Thumbs Down Sign',
        b: '1F44E',
        j: ['thumbsdown', 'no', 'dislike', 'hand'],
        k: [13, 44],
        n: ['thumbsdown'],
        o: 2
      },
      admission_tickets: {
        a: 'Admission Tickets',
        b: '1F39F-FE0F',
        c: '1F39F',
        k: [8, 5],
        o: 2
      },
      'flag-at': {
        a: 'Austria Flag',
        b: '1F1E6-1F1F9',
        k: [0, 43],
        o: 2
      },
      womans_clothes: {
        a: 'Womans Clothes',
        b: '1F45A',
        j: ['fashion', 'shopping_bags', 'female'],
        k: [14, 14],
        o: 2
      },
      do_not_litter: {
        a: 'Do Not Litter Symbol',
        b: '1F6AF',
        j: ['trash', 'bin', 'garbage', 'circle'],
        k: [35, 6],
        o: 2
      },
      potato: {
        a: 'Potato',
        b: '1F954',
        j: ['food', 'tuber', 'vegatable', 'starch'],
        k: [41, 35],
        o: 4
      },
      racehorse: {
        a: 'Horse',
        b: '1F40E',
        j: ['animal', 'gamble', 'luck'],
        k: [11, 42],
        o: 2
      },
      bricks: {
        a: 'Brick',
        b: '1F9F1',
        k: [51, 36],
        o: 11
      },
      fist: {
        a: 'Raised Fist',
        b: '270A',
        j: ['fingers', 'hand', 'grasp'],
        k: [54, 43],
        o: 2
      },
      house_buildings: {
        a: 'House Buildings',
        b: '1F3D8-FE0F',
        c: '1F3D8',
        k: [10, 43],
        o: 2
      },
      carrot: {
        a: 'Carrot',
        b: '1F955',
        j: ['vegetable', 'food', 'orange'],
        k: [41, 36],
        o: 4
      },
      ticket: {
        a: 'Ticket',
        b: '1F3AB',
        j: ['event', 'concert', 'pass'],
        k: [8, 17],
        o: 2
      },
      'flag-au': {
        a: 'Australia Flag',
        b: '1F1E6-1F1FA',
        k: [0, 44],
        o: 2
      },
      'non-potable_water': {
        a: 'Non-Potable Water Symbol',
        b: '1F6B1',
        j: ['drink', 'faucet', 'tap', 'circle'],
        k: [35, 8],
        o: 2
      },
      purse: {
        a: 'Purse',
        b: '1F45B',
        j: ['fashion', 'accessories', 'money', 'sales', 'shopping'],
        k: [14, 15],
        o: 2
      },
      unicorn_face: {
        a: 'Unicorn Face',
        b: '1F984',
        k: [42, 22],
        o: 2
      },
      kissing_smiling_eyes: {
        a: 'Kissing Face with Smiling Eyes',
        b: '1F619',
        j: ['face', 'affection', 'valentines', 'infatuation', 'kiss'],
        k: [31, 3],
        o: 2
      },
      facepunch: {
        a: 'Fisted Hand Sign',
        b: '1F44A',
        j: ['angry', 'violence', 'fist', 'hit', 'attack', 'hand'],
        k: [13, 20],
        n: ['punch'],
        o: 2
      },
      medal: {
        a: 'Medal',
        b: '1F396-FE0F',
        c: '1F396',
        k: [7, 56],
        o: 2
      },
      zebra_face: {
        a: 'Zebra Face',
        b: '1F993',
        k: [42, 37],
        o: 5
      },
      handbag: {
        a: 'Handbag',
        b: '1F45C',
        j: ['fashion', 'accessory', 'accessories', 'shopping'],
        k: [14, 16],
        o: 2
      },
      derelict_house_building: {
        a: 'Derelict House Building',
        b: '1F3DA-FE0F',
        c: '1F3DA',
        k: [10, 45],
        o: 2
      },
      yum: {
        a: 'Face Savouring Delicious Food',
        b: '1F60B',
        j: ['happy', 'joy', 'tongue', 'smile', 'face', 'silly', 'yummy', 'nom', 'delicious', 'savouring'],
        k: [30, 46],
        o: 2
      },
      corn: {
        a: 'Ear of Maize',
        b: '1F33D',
        j: ['food', 'vegetable', 'plant'],
        k: [6, 21],
        o: 2
      },
      'flag-aw': {
        a: 'Aruba Flag',
        b: '1F1E6-1F1FC',
        k: [0, 45],
        o: 2
      },
      no_pedestrians: {
        a: 'No Pedestrians',
        b: '1F6B7',
        j: ['rules', 'crossing', 'walking', 'circle'],
        k: [36, 8],
        o: 2
      },
      house: {
        a: 'House Building',
        b: '1F3E0',
        j: ['building', 'home'],
        k: [10, 51],
        o: 2
      },
      hot_pepper: {
        a: 'Hot Pepper',
        b: '1F336-FE0F',
        c: '1F336',
        j: ['food', 'spicy', 'chilli', 'chili'],
        k: [6, 14],
        o: 2
      },
      'flag-ax': {
        a: 'Åland Islands Flag',
        b: '1F1E6-1F1FD',
        k: [0, 46],
        o: 2
      },
      trophy: {
        a: 'Trophy',
        b: '1F3C6',
        j: ['win', 'award', 'contest', 'place', 'ftw', 'ceremony'],
        k: [9, 26],
        o: 2
      },
      deer: {
        a: 'Deer',
        b: '1F98C',
        j: ['animal', 'nature', 'horns', 'venison'],
        k: [42, 30],
        o: 4
      },
      'left-facing_fist': {
        a: 'Left-Facing Fist',
        b: '1F91B',
        k: [37, 49],
        o: 4
      },
      stuck_out_tongue: {
        a: 'Face with Stuck-out Tongue',
        b: '1F61B',
        j: ['face', 'prank', 'childish', 'playful', 'mischievous', 'smile', 'tongue'],
        k: [31, 5],
        l: [':p', ':-p', ':P', ':-P', ':b', ':-b'],
        m: ':p',
        o: 2
      },
      pouch: {
        a: 'Pouch',
        b: '1F45D',
        j: ['bag', 'accessories', 'shopping'],
        k: [14, 17],
        o: 2
      },
      no_mobile_phones: {
        a: 'No Mobile Phones',
        b: '1F4F5',
        j: ['iphone', 'mute', 'circle'],
        k: [27, 18],
        o: 2
      },
      stuck_out_tongue_winking_eye: {
        a: 'Face with Stuck-out Tongue and Winking Eye',
        b: '1F61C',
        j: ['face', 'prank', 'childish', 'playful', 'mischievous', 'smile', 'wink', 'tongue'],
        k: [31, 6],
        l: [';p', ';-p', ';b', ';-b', ';P', ';-P'],
        m: ';p',
        o: 2
      },
      sports_medal: {
        a: 'Sports Medal',
        b: '1F3C5',
        k: [9, 25],
        o: 2
      },
      cucumber: {
        a: 'Cucumber',
        b: '1F952',
        j: ['fruit', 'food', 'pickle'],
        k: [41, 33],
        o: 4
      },
      cow: {
        a: 'Cow Face',
        b: '1F42E',
        j: ['beef', 'ox', 'animal', 'nature', 'moo', 'milk'],
        k: [12, 18],
        o: 2
      },
      underage: {
        a: 'No One Under Eighteen Symbol',
        b: '1F51E',
        j: ['18', 'drink', 'pub', 'night', 'minor', 'circle'],
        k: [28, 1],
        o: 2
      },
      'flag-az': {
        a: 'Azerbaijan Flag',
        b: '1F1E6-1F1FF',
        k: [0, 47],
        o: 2
      },
      shopping_bags: {
        a: 'Shopping Bags',
        b: '1F6CD-FE0F',
        c: '1F6CD',
        k: [36, 35],
        o: 2
      },
      'right-facing_fist': {
        a: 'Right-Facing Fist',
        b: '1F91C',
        k: [37, 55],
        o: 4
      },
      house_with_garden: {
        a: 'House with Garden',
        b: '1F3E1',
        j: ['home', 'plant', 'nature'],
        k: [10, 52],
        o: 2
      },
      clap: {
        a: 'Clapping Hands Sign',
        b: '1F44F',
        j: ['hands', 'praise', 'applause', 'congrats', 'yay'],
        k: [13, 50],
        o: 2
      },
      leafy_green: {
        a: 'Leafy Green',
        b: '1F96C',
        k: [42, 2],
        o: 11
      },
      office: {
        a: 'Office Building',
        b: '1F3E2',
        j: ['building', 'bureau', 'work'],
        k: [10, 53],
        o: 2
      },
      'flag-ba': {
        a: 'Bosnia & Herzegovina Flag',
        b: '1F1E7-1F1E6',
        k: [0, 48],
        o: 2
      },
      zany_face: {
        a: 'Grinning Face with One Large and One Small Eye',
        b: '1F92A',
        k: [38, 44],
        n: ['grinning_face_with_one_large_and_one_small_eye'],
        o: 5
      },
      first_place_medal: {
        a: 'First Place Medal',
        b: '1F947',
        k: [41, 22],
        o: 4
      },
      ox: {
        a: 'Ox',
        b: '1F402',
        j: ['animal', 'cow', 'beef'],
        k: [11, 30],
        o: 2
      },
      school_satchel: {
        a: 'School Satchel',
        b: '1F392',
        j: ['student', 'education', 'bag', 'backpack'],
        k: [7, 54],
        o: 2
      },
      radioactive_sign: {
        a: 'Radioactive Sign',
        b: '2622-FE0F',
        c: '2622',
        k: [53, 9],
        o: 2
      },
      second_place_medal: {
        a: 'Second Place Medal',
        b: '1F948',
        k: [41, 23],
        o: 4
      },
      stuck_out_tongue_closed_eyes: {
        a: 'Face with Stuck-out Tongue and Tightly-Closed Eyes',
        b: '1F61D',
        j: ['face', 'prank', 'playful', 'mischievous', 'smile', 'tongue'],
        k: [31, 7],
        o: 2
      },
      broccoli: {
        a: 'Broccoli',
        b: '1F966',
        k: [41, 53],
        o: 5
      },
      biohazard_sign: {
        a: 'Biohazard Sign',
        b: '2623-FE0F',
        c: '2623',
        k: [53, 10],
        o: 2
      },
      mans_shoe: {
        a: 'Mans Shoe',
        b: '1F45E',
        j: ['fashion', 'male'],
        k: [14, 18],
        n: ['shoe'],
        o: 2
      },
      raised_hands: {
        a: 'Person Raising Both Hands in Celebration',
        b: '1F64C',
        j: ['gesture', 'hooray', 'yea', 'celebration', 'hands'],
        k: [33, 8],
        o: 2
      },
      post_office: {
        a: 'Japanese Post Office',
        b: '1F3E3',
        j: ['building', 'envelope', 'communication'],
        k: [10, 54],
        o: 2
      },
      'flag-bb': {
        a: 'Barbados Flag',
        b: '1F1E7-1F1E7',
        k: [0, 49],
        o: 2
      },
      water_buffalo: {
        a: 'Water Buffalo',
        b: '1F403',
        j: ['animal', 'nature', 'ox', 'cow'],
        k: [11, 31],
        o: 2
      },
      third_place_medal: {
        a: 'Third Place Medal',
        b: '1F949',
        k: [41, 24],
        o: 4
      },
      european_post_office: {
        a: 'European Post Office',
        b: '1F3E4',
        j: ['building', 'email'],
        k: [10, 55],
        o: 2
      },
      athletic_shoe: {
        a: 'Athletic Shoe',
        b: '1F45F',
        j: ['shoes', 'sports', 'sneakers'],
        k: [14, 19],
        o: 2
      },
      arrow_up: {
        a: 'Upwards Black Arrow',
        b: '2B06-FE0F',
        c: '2B06',
        j: ['blue-square', 'continue', 'top', 'direction'],
        k: [55, 38],
        o: 2
      },
      cow2: {
        a: 'Cow',
        b: '1F404',
        j: ['beef', 'ox', 'animal', 'nature', 'moo', 'milk'],
        k: [11, 32],
        o: 2
      },
      open_hands: {
        a: 'Open Hands Sign',
        b: '1F450',
        j: ['fingers', 'butterfly', 'hands', 'open'],
        k: [13, 56],
        o: 2
      },
      garlic: {
        a: 'Garlic',
        b: '1F9C4',
        k: [44, 12],
        o: 12
      },
      money_mouth_face: {
        a: 'Money-Mouth Face',
        b: '1F911',
        j: ['face', 'rich', 'dollar', 'money'],
        k: [37, 24],
        o: 2
      },
      'flag-bd': {
        a: 'Bangladesh Flag',
        b: '1F1E7-1F1E9',
        k: [0, 50],
        o: 2
      },
      soccer: {
        a: 'Soccer Ball',
        b: '26BD',
        j: ['sports', 'football'],
        k: [53, 56],
        o: 2
      },
      hugging_face: {
        a: 'Hugging Face',
        b: '1F917',
        k: [37, 30],
        o: 2
      },
      onion: {
        a: 'Onion',
        b: '1F9C5',
        k: [44, 13],
        o: 12
      },
      arrow_upper_right: {
        a: 'North East Arrow',
        b: '2197-FE0F',
        c: '2197',
        j: ['blue-square', 'point', 'direction', 'diagonal', 'northeast'],
        k: [52, 17],
        o: 2
      },
      palms_up_together: {
        a: 'Palms Up Together',
        b: '1F932',
        k: [39, 5],
        o: 5
      },
      pig: {
        a: 'Pig Face',
        b: '1F437',
        j: ['animal', 'oink', 'nature'],
        k: [12, 27],
        o: 2
      },
      hospital: {
        a: 'Hospital',
        b: '1F3E5',
        j: ['building', 'health', 'surgery', 'doctor'],
        k: [10, 56],
        o: 2
      },
      hiking_boot: {
        a: 'Hiking Boot',
        b: '1F97E',
        k: [42, 16],
        o: 11
      },
      'flag-be': {
        a: 'Belgium Flag',
        b: '1F1E7-1F1EA',
        k: [0, 51],
        o: 2
      },
      'flag-bf': {
        a: 'Burkina Faso Flag',
        b: '1F1E7-1F1EB',
        k: [0, 52],
        o: 2
      },
      mushroom: {
        a: 'Mushroom',
        b: '1F344',
        j: ['plant', 'vegetable'],
        k: [6, 28],
        o: 2
      },
      pig2: {
        a: 'Pig',
        b: '1F416',
        j: ['animal', 'nature'],
        k: [11, 51],
        o: 2
      },
      baseball: {
        a: 'Baseball',
        b: '26BE',
        j: ['sports', 'balls'],
        k: [54, 0],
        o: 2
      },
      face_with_hand_over_mouth: {
        a: 'Smiling Face with Smiling Eyes and Hand Covering Mouth',
        b: '1F92D',
        k: [38, 47],
        n: ['smiling_face_with_smiling_eyes_and_hand_covering_mouth'],
        o: 5
      },
      handshake: {
        a: 'Handshake',
        b: '1F91D',
        j: ['agreement', 'shake'],
        k: [38, 4],
        o: 4
      },
      womans_flat_shoe: {
        a: 'Flat Shoe',
        b: '1F97F',
        k: [42, 17],
        o: 11
      },
      bank: {
        a: 'Bank',
        b: '1F3E6',
        j: ['building', 'money', 'sales', 'cash', 'business', 'enterprise'],
        k: [11, 0],
        o: 2
      },
      arrow_right: {
        a: 'Black Rightwards Arrow',
        b: '27A1-FE0F',
        c: '27A1',
        j: ['blue-square', 'next'],
        k: [55, 32],
        o: 2
      },
      peanuts: {
        a: 'Peanuts',
        b: '1F95C',
        j: ['food', 'nut'],
        k: [41, 43],
        o: 4
      },
      shushing_face: {
        a: 'Face with Finger Covering Closed Lips',
        b: '1F92B',
        k: [38, 45],
        n: ['face_with_finger_covering_closed_lips'],
        o: 5
      },
      pray: {
        a: 'Person with Folded Hands',
        b: '1F64F',
        j: ['please', 'hope', 'wish', 'namaste', 'highfive'],
        k: [33, 50],
        o: 2
      },
      softball: {
        a: 'Softball',
        b: '1F94E',
        k: [41, 29],
        o: 11
      },
      high_heel: {
        a: 'High-Heeled Shoe',
        b: '1F460',
        j: ['fashion', 'shoes', 'female', 'pumps', 'stiletto'],
        k: [14, 20],
        o: 2
      },
      'flag-bg': {
        a: 'Bulgaria Flag',
        b: '1F1E7-1F1EC',
        k: [0, 53],
        o: 2
      },
      arrow_lower_right: {
        a: 'South East Arrow',
        b: '2198-FE0F',
        c: '2198',
        j: ['blue-square', 'direction', 'diagonal', 'southeast'],
        k: [52, 18],
        o: 2
      },
      hotel: {
        a: 'Hotel',
        b: '1F3E8',
        j: ['building', 'accomodation', 'checkin'],
        k: [11, 2],
        o: 2
      },
      boar: {
        a: 'Boar',
        b: '1F417',
        j: ['animal', 'nature'],
        k: [11, 52],
        o: 2
      },
      sandal: {
        a: 'Womans Sandal',
        b: '1F461',
        j: ['shoes', 'fashion', 'flip flops'],
        k: [14, 21],
        o: 2
      },
      'flag-bh': {
        a: 'Bahrain Flag',
        b: '1F1E7-1F1ED',
        k: [0, 54],
        o: 2
      },
      arrow_down: {
        a: 'Downwards Black Arrow',
        b: '2B07-FE0F',
        c: '2B07',
        j: ['blue-square', 'direction', 'bottom'],
        k: [55, 39],
        o: 2
      },
      thinking_face: {
        a: 'Thinking Face',
        b: '1F914',
        k: [37, 27],
        o: 2
      },
      writing_hand: {
        a: 'Writing Hand',
        b: '270D-FE0F',
        c: '270D',
        j: ['lower_left_ballpoint_pen', 'stationery', 'write', 'compose'],
        k: [55, 4],
        o: 2
      },
      chestnut: {
        a: 'Chestnut',
        b: '1F330',
        j: ['food', 'squirrel'],
        k: [6, 8],
        o: 2
      },
      basketball: {
        a: 'Basketball and Hoop',
        b: '1F3C0',
        j: ['sports', 'balls', 'NBA'],
        k: [8, 38],
        o: 2
      },
      pig_nose: {
        a: 'Pig Nose',
        b: '1F43D',
        j: ['animal', 'oink'],
        k: [12, 33],
        o: 2
      },
      love_hotel: {
        a: 'Love Hotel',
        b: '1F3E9',
        j: ['like', 'affection', 'dating'],
        k: [11, 3],
        o: 2
      },
      nail_care: {
        a: 'Nail Polish',
        b: '1F485',
        j: ['beauty', 'manicure', 'finger', 'fashion', 'nail'],
        k: [24, 33],
        o: 2
      },
      volleyball: {
        a: 'Volleyball',
        b: '1F3D0',
        j: ['sports', 'balls'],
        k: [10, 35],
        o: 2
      },
      'flag-bi': {
        a: 'Burundi Flag',
        b: '1F1E7-1F1EE',
        k: [0, 55],
        o: 2
      },
      arrow_lower_left: {
        a: 'South West Arrow',
        b: '2199-FE0F',
        c: '2199',
        j: ['blue-square', 'direction', 'diagonal', 'southwest'],
        k: [52, 19],
        o: 2
      },
      ram: {
        a: 'Ram',
        b: '1F40F',
        j: ['animal', 'sheep', 'nature'],
        k: [11, 43],
        o: 2
      },
      ballet_shoes: {
        a: 'Ballet Shoes',
        b: '1FA70',
        k: [51, 51],
        o: 12
      },
      zipper_mouth_face: {
        a: 'Zipper-Mouth Face',
        b: '1F910',
        j: ['face', 'sealed', 'zipper', 'secret'],
        k: [37, 23],
        o: 2
      },
      bread: {
        a: 'Bread',
        b: '1F35E',
        j: ['food', 'wheat', 'breakfast', 'toast'],
        k: [6, 54],
        o: 2
      },
      convenience_store: {
        a: 'Convenience Store',
        b: '1F3EA',
        j: ['building', 'shopping', 'groceries'],
        k: [11, 4],
        o: 2
      },
      boot: {
        a: 'Womans Boots',
        b: '1F462',
        j: ['shoes', 'fashion'],
        k: [14, 22],
        o: 2
      },
      sheep: {
        a: 'Sheep',
        b: '1F411',
        j: ['animal', 'nature', 'wool', 'shipit'],
        k: [11, 45],
        o: 2
      },
      face_with_raised_eyebrow: {
        a: 'Face with One Eyebrow Raised',
        b: '1F928',
        k: [38, 42],
        n: ['face_with_one_eyebrow_raised'],
        o: 5
      },
      'flag-bj': {
        a: 'Benin Flag',
        b: '1F1E7-1F1EF',
        k: [0, 56],
        o: 2
      },
      arrow_left: {
        a: 'Leftwards Black Arrow',
        b: '2B05-FE0F',
        c: '2B05',
        j: ['blue-square', 'previous', 'back'],
        k: [55, 37],
        o: 2
      },
      selfie: {
        a: 'Selfie',
        b: '1F933',
        j: ['camera', 'phone'],
        k: [39, 11],
        o: 4
      },
      croissant: {
        a: 'Croissant',
        b: '1F950',
        j: ['food', 'bread', 'french'],
        k: [41, 31],
        o: 4
      },
      school: {
        a: 'School',
        b: '1F3EB',
        j: ['building', 'student', 'education', 'learn', 'teach'],
        k: [11, 5],
        o: 2
      },
      football: {
        a: 'American Football',
        b: '1F3C8',
        j: ['sports', 'balls', 'NFL'],
        k: [9, 33],
        o: 2
      },
      goat: {
        a: 'Goat',
        b: '1F410',
        j: ['animal', 'nature'],
        k: [11, 44],
        o: 2
      },
      department_store: {
        a: 'Department Store',
        b: '1F3EC',
        j: ['building', 'shopping', 'mall'],
        k: [11, 6],
        o: 2
      },
      'flag-bl': {
        a: 'St. Barthélemy Flag',
        b: '1F1E7-1F1F1',
        k: [1, 0],
        o: 2
      },
      crown: {
        a: 'Crown',
        b: '1F451',
        j: ['king', 'kod', 'leader', 'royalty', 'lord'],
        k: [14, 5],
        o: 2
      },
      arrow_upper_left: {
        a: 'North West Arrow',
        b: '2196-FE0F',
        c: '2196',
        j: ['blue-square', 'point', 'direction', 'diagonal', 'northwest'],
        k: [52, 16],
        o: 2
      },
      neutral_face: {
        a: 'Neutral Face',
        b: '1F610',
        j: ['indifference', 'meh', ':|', 'neutral'],
        k: [30, 51],
        l: [':|', ':-|'],
        o: 2
      },
      rugby_football: {
        a: 'Rugby Football',
        b: '1F3C9',
        j: ['sports', 'team'],
        k: [9, 34],
        o: 2
      },
      muscle: {
        a: 'Flexed Biceps',
        b: '1F4AA',
        j: ['arm', 'flex', 'hand', 'summer', 'strong', 'biceps'],
        k: [25, 52],
        o: 2
      },
      baguette_bread: {
        a: 'Baguette Bread',
        b: '1F956',
        j: ['food', 'bread', 'french'],
        k: [41, 37],
        o: 4
      },
      expressionless: {
        a: 'Expressionless Face',
        b: '1F611',
        j: ['face', 'indifferent', '-_-', 'meh', 'deadpan'],
        k: [30, 52],
        o: 2
      },
      womans_hat: {
        a: 'Womans Hat',
        b: '1F452',
        j: ['fashion', 'accessories', 'female', 'lady', 'spring'],
        k: [14, 6],
        o: 2
      },
      pretzel: {
        a: 'Pretzel',
        b: '1F968',
        k: [41, 55],
        o: 5
      },
      mechanical_arm: {
        a: 'Mechanical Arm',
        b: '1F9BE',
        k: [44, 6],
        o: 12
      },
      arrow_up_down: {
        a: 'Up Down Arrow',
        b: '2195-FE0F',
        c: '2195',
        j: ['blue-square', 'direction', 'way', 'vertical'],
        k: [52, 15],
        o: 2
      },
      dromedary_camel: {
        a: 'Dromedary Camel',
        b: '1F42A',
        j: ['animal', 'hot', 'desert', 'hump'],
        k: [12, 14],
        o: 2
      },
      tennis: {
        a: 'Tennis Racquet and Ball',
        b: '1F3BE',
        j: ['sports', 'balls', 'green'],
        k: [8, 36],
        o: 2
      },
      'flag-bm': {
        a: 'Bermuda Flag',
        b: '1F1E7-1F1F2',
        k: [1, 1],
        o: 2
      },
      factory: {
        a: 'Factory',
        b: '1F3ED',
        j: ['building', 'industry', 'pollution', 'smoke'],
        k: [11, 7],
        o: 2
      },
      japanese_castle: {
        a: 'Japanese Castle',
        b: '1F3EF',
        j: ['photo', 'building'],
        k: [11, 9],
        o: 2
      },
      no_mouth: {
        a: 'Face Without Mouth',
        b: '1F636',
        j: ['face', 'hellokitty'],
        k: [31, 32],
        o: 2
      },
      mechanical_leg: {
        a: 'Mechanical Leg',
        b: '1F9BF',
        k: [44, 7],
        o: 12
      },
      bagel: {
        a: 'Bagel',
        b: '1F96F',
        k: [42, 5],
        o: 11
      },
      camel: {
        a: 'Bactrian Camel',
        b: '1F42B',
        j: ['animal', 'nature', 'hot', 'desert', 'hump'],
        k: [12, 15],
        o: 2
      },
      tophat: {
        a: 'Top Hat',
        b: '1F3A9',
        j: ['magic', 'gentleman', 'classy', 'circus'],
        k: [8, 15],
        o: 2
      },
      left_right_arrow: {
        a: 'Left Right Arrow',
        b: '2194-FE0F',
        c: '2194',
        j: ['shape', 'direction', 'horizontal', 'sideways'],
        k: [52, 14],
        o: 2
      },
      'flag-bn': {
        a: 'Brunei Flag',
        b: '1F1E7-1F1F3',
        k: [1, 2],
        o: 2
      },
      flying_disc: {
        a: 'Flying Disc',
        b: '1F94F',
        k: [41, 30],
        o: 11
      },
      smirk: {
        a: 'Smirking Face',
        b: '1F60F',
        j: ['face', 'smile', 'mean', 'prank', 'smug', 'sarcasm'],
        k: [30, 50],
        o: 2
      },
      mortar_board: {
        a: 'Graduation Cap',
        b: '1F393',
        j: ['school', 'college', 'degree', 'university', 'graduation', 'cap', 'hat', 'legal', 'learn', 'education'],
        k: [7, 55],
        o: 2
      },
      european_castle: {
        a: 'European Castle',
        b: '1F3F0',
        j: ['building', 'royalty', 'history'],
        k: [11, 10],
        o: 2
      },
      leg: {
        a: 'Leg',
        b: '1F9B5',
        k: [43, 5],
        o: 11
      },
      pancakes: {
        a: 'Pancakes',
        b: '1F95E',
        j: ['food', 'breakfast', 'flapjacks', 'hotcakes'],
        k: [41, 45],
        o: 4
      },
      leftwards_arrow_with_hook: {
        a: 'Leftwards Arrow with Hook',
        b: '21A9-FE0F',
        c: '21A9',
        j: ['back', 'return', 'blue-square', 'undo', 'enter'],
        k: [52, 20],
        o: 2
      },
      'flag-bo': {
        a: 'Bolivia Flag',
        b: '1F1E7-1F1F4',
        k: [1, 3],
        o: 2
      },
      bowling: {
        a: 'Bowling',
        b: '1F3B3',
        j: ['sports', 'fun', 'play'],
        k: [8, 25],
        o: 2
      },
      llama: {
        a: 'Llama',
        b: '1F999',
        k: [42, 43],
        o: 11
      },
      arrow_right_hook: {
        a: 'Rightwards Arrow with Hook',
        b: '21AA-FE0F',
        c: '21AA',
        j: ['blue-square', 'return', 'rotate', 'direction'],
        k: [52, 21],
        o: 2
      },
      wedding: {
        a: 'Wedding',
        b: '1F492',
        j: ['love', 'like', 'affection', 'couple', 'marriage', 'bride', 'groom'],
        k: [25, 28],
        o: 2
      },
      'flag-bq': {
        a: 'Caribbean Netherlands Flag',
        b: '1F1E7-1F1F6',
        k: [1, 4],
        o: 2
      },
      foot: {
        a: 'Foot',
        b: '1F9B6',
        k: [43, 11],
        o: 11
      },
      giraffe_face: {
        a: 'Giraffe Face',
        b: '1F992',
        k: [42, 36],
        o: 5
      },
      unamused: {
        a: 'Unamused Face',
        b: '1F612',
        j: ['indifference', 'bored', 'straight face', 'serious', 'sarcasm'],
        k: [30, 53],
        m: ':(',
        o: 2
      },
      billed_cap: {
        a: 'Billed Cap',
        b: '1F9E2',
        k: [51, 21],
        o: 5
      },
      waffle: {
        a: 'Waffle',
        b: '1F9C7',
        k: [44, 15],
        o: 12
      },
      cricket_bat_and_ball: {
        a: 'Cricket Bat and Ball',
        b: '1F3CF',
        k: [10, 34],
        o: 2
      },
      helmet_with_white_cross: {
        a: 'Helmet with White Cross',
        b: '26D1-FE0F',
        c: '26D1',
        k: [54, 6],
        o: 2
      },
      ear: {
        a: 'Ear',
        b: '1F442',
        j: ['face', 'hear', 'sound', 'listen'],
        k: [12, 39],
        o: 2
      },
      elephant: {
        a: 'Elephant',
        b: '1F418',
        j: ['animal', 'nature', 'nose', 'th', 'circus'],
        k: [11, 53],
        o: 2
      },
      cheese_wedge: {
        a: 'Cheese Wedge',
        b: '1F9C0',
        k: [44, 8],
        o: 2
      },
      tokyo_tower: {
        a: 'Tokyo Tower',
        b: '1F5FC',
        j: ['photo', 'japanese'],
        k: [30, 31],
        o: 2
      },
      arrow_heading_up: {
        a: 'Arrow Pointing Rightwards Then Curving Upwards',
        b: '2934-FE0F',
        c: '2934',
        j: ['blue-square', 'direction', 'top'],
        k: [55, 35],
        o: 2
      },
      field_hockey_stick_and_ball: {
        a: 'Field Hockey Stick and Ball',
        b: '1F3D1',
        k: [10, 36],
        o: 2
      },
      'flag-br': {
        a: 'Brazil Flag',
        b: '1F1E7-1F1F7',
        k: [1, 5],
        o: 2
      },
      face_with_rolling_eyes: {
        a: 'Face with Rolling Eyes',
        b: '1F644',
        k: [31, 46],
        o: 2
      },
      ear_with_hearing_aid: {
        a: 'Ear with Hearing Aid',
        b: '1F9BB',
        k: [43, 55],
        o: 12
      },
      arrow_heading_down: {
        a: 'Arrow Pointing Rightwards Then Curving Downwards',
        b: '2935-FE0F',
        c: '2935',
        j: ['blue-square', 'direction', 'bottom'],
        k: [55, 36],
        o: 2
      },
      ice_hockey_stick_and_puck: {
        a: 'Ice Hockey Stick and Puck',
        b: '1F3D2',
        k: [10, 37],
        o: 2
      },
      meat_on_bone: {
        a: 'Meat on Bone',
        b: '1F356',
        j: ['good', 'food', 'drumstick'],
        k: [6, 46],
        o: 2
      },
      prayer_beads: {
        a: 'Prayer Beads',
        b: '1F4FF',
        j: ['dhikr', 'religious'],
        k: [27, 27],
        o: 2
      },
      statue_of_liberty: {
        a: 'Statue of Liberty',
        b: '1F5FD',
        j: ['american', 'newyork'],
        k: [30, 32],
        o: 2
      },
      grimacing: {
        a: 'Grimacing Face',
        b: '1F62C',
        j: ['face', 'grimace', 'teeth'],
        k: [31, 22],
        o: 2
      },
      'flag-bs': {
        a: 'Bahamas Flag',
        b: '1F1E7-1F1F8',
        k: [1, 6],
        o: 2
      },
      rhinoceros: {
        a: 'Rhinoceros',
        b: '1F98F',
        j: ['animal', 'nature', 'horn'],
        k: [42, 33],
        o: 4
      },
      lacrosse: {
        a: 'Lacrosse Stick and Ball',
        b: '1F94D',
        k: [41, 28],
        o: 11
      },
      poultry_leg: {
        a: 'Poultry Leg',
        b: '1F357',
        j: ['food', 'meat', 'drumstick', 'bird', 'chicken', 'turkey'],
        k: [6, 47],
        o: 2
      },
      hippopotamus: {
        a: 'Hippopotamus',
        b: '1F99B',
        k: [42, 45],
        o: 11
      },
      nose: {
        a: 'Nose',
        b: '1F443',
        j: ['smell', 'sniff'],
        k: [12, 45],
        o: 2
      },
      arrows_clockwise: {
        a: 'Clockwise Downwards and Upwards Open Circle Arrows',
        b: '1F503',
        j: ['sync', 'cycle', 'round', 'repeat'],
        k: [27, 31],
        o: 2
      },
      'flag-bt': {
        a: 'Bhutan Flag',
        b: '1F1E7-1F1F9',
        k: [1, 7],
        o: 2
      },
      church: {
        a: 'Church',
        b: '26EA',
        j: ['building', 'religion', 'christ'],
        k: [54, 10],
        o: 2
      },
      lipstick: {
        a: 'Lipstick',
        b: '1F484',
        j: ['female', 'girl', 'fashion', 'woman'],
        k: [24, 32],
        o: 2
      },
      lying_face: {
        a: 'Lying Face',
        b: '1F925',
        j: ['face', 'lie', 'pinocchio'],
        k: [38, 22],
        o: 4
      },
      arrows_counterclockwise: {
        a: 'Anticlockwise Downwards and Upwards Open Circle Arrows',
        b: '1F504',
        j: ['blue-square', 'sync', 'cycle'],
        k: [27, 32],
        o: 2
      },
      'flag-bv': {
        a: 'Bouvet Island Flag',
        b: '1F1E7-1F1FB',
        k: [1, 8],
        o: 2
      },
      cut_of_meat: {
        a: 'Cut of Meat',
        b: '1F969',
        k: [41, 56],
        o: 5
      },
      mosque: {
        a: 'Mosque',
        b: '1F54C',
        j: ['islam', 'worship', 'minaret'],
        k: [28, 36],
        o: 2
      },
      ring: {
        a: 'Ring',
        b: '1F48D',
        j: ['wedding', 'propose', 'marriage', 'valentines', 'diamond', 'fashion', 'jewelry', 'gem', 'engagement'],
        k: [25, 23],
        o: 2
      },
      brain: {
        a: 'Brain',
        b: '1F9E0',
        k: [51, 19],
        o: 5
      },
      table_tennis_paddle_and_ball: {
        a: 'Table Tennis Paddle and Ball',
        b: '1F3D3',
        k: [10, 38],
        o: 2
      },
      relieved: {
        a: 'Relieved Face',
        b: '1F60C',
        j: ['face', 'relaxed', 'phew', 'massage', 'happiness'],
        k: [30, 47],
        o: 2
      },
      mouse: {
        a: 'Mouse Face',
        b: '1F42D',
        j: ['animal', 'nature', 'cheese_wedge', 'rodent'],
        k: [12, 17],
        o: 2
      },
      hindu_temple: {
        a: 'Hindu Temple',
        b: '1F6D5',
        k: [36, 41],
        o: 12
      },
      back: {
        a: 'Back with Leftwards Arrow Above',
        b: '1F519',
        j: ['arrow', 'words', 'return'],
        k: [27, 53],
        o: 2
      },
      gem: {
        a: 'Gem Stone',
        b: '1F48E',
        j: ['blue', 'ruby', 'diamond', 'jewelry'],
        k: [25, 24],
        o: 2
      },
      pensive: {
        a: 'Pensive Face',
        b: '1F614',
        j: ['face', 'sad', 'depressed', 'upset'],
        k: [30, 55],
        o: 2
      },
      'flag-bw': {
        a: 'Botswana Flag',
        b: '1F1E7-1F1FC',
        k: [1, 9],
        o: 2
      },
      mouse2: {
        a: 'Mouse',
        b: '1F401',
        j: ['animal', 'nature', 'rodent'],
        k: [11, 29],
        o: 2
      },
      bacon: {
        a: 'Bacon',
        b: '1F953',
        j: ['food', 'breakfast', 'pork', 'pig', 'meat'],
        k: [41, 34],
        o: 4
      },
      tooth: {
        a: 'Tooth',
        b: '1F9B7',
        k: [43, 17],
        o: 11
      },
      badminton_racquet_and_shuttlecock: {
        a: 'Badminton Racquet and Shuttlecock',
        b: '1F3F8',
        k: [11, 20],
        o: 2
      },
      rat: {
        a: 'Rat',
        b: '1F400',
        j: ['animal', 'mouse', 'rodent'],
        k: [11, 28],
        o: 2
      },
      synagogue: {
        a: 'Synagogue',
        b: '1F54D',
        j: ['judaism', 'worship', 'temple', 'jewish'],
        k: [28, 37],
        o: 2
      },
      end: {
        a: 'End with Leftwards Arrow Above',
        b: '1F51A',
        j: ['words', 'arrow'],
        k: [27, 54],
        o: 2
      },
      bone: {
        a: 'Bone',
        b: '1F9B4',
        k: [43, 4],
        o: 11
      },
      boxing_glove: {
        a: 'Boxing Glove',
        b: '1F94A',
        j: ['sports', 'fighting'],
        k: [41, 25],
        o: 4
      },
      mute: {
        a: 'Speaker with Cancellation Stroke',
        b: '1F507',
        j: ['sound', 'volume', 'silence', 'quiet'],
        k: [27, 35],
        o: 2
      },
      hamburger: {
        a: 'Hamburger',
        b: '1F354',
        j: ['meat', 'fast food', 'beef', 'cheeseburger', 'mcdonalds', 'burger king'],
        k: [6, 44],
        o: 2
      },
      'flag-by': {
        a: 'Belarus Flag',
        b: '1F1E7-1F1FE',
        k: [1, 10],
        o: 2
      },
      sleepy: {
        a: 'Sleepy Face',
        b: '1F62A',
        j: ['face', 'tired', 'rest', 'nap'],
        k: [31, 20],
        o: 2
      },
      on: {
        a: 'On with Exclamation Mark with Left Right Arrow Above',
        b: '1F51B',
        j: ['arrow', 'words'],
        k: [27, 55],
        o: 2
      },
      martial_arts_uniform: {
        a: 'Martial Arts Uniform',
        b: '1F94B',
        j: ['judo', 'karate', 'taekwondo'],
        k: [41, 26],
        o: 4
      },
      speaker: {
        a: 'Speaker',
        b: '1F508',
        j: ['sound', 'volume', 'silence', 'broadcast'],
        k: [27, 36],
        o: 2
      },
      drooling_face: {
        a: 'Drooling Face',
        b: '1F924',
        j: ['face'],
        k: [38, 21],
        o: 4
      },
      eyes: {
        a: 'Eyes',
        b: '1F440',
        j: ['look', 'watch', 'stalk', 'peek', 'see'],
        k: [12, 36],
        o: 2
      },
      'flag-bz': {
        a: 'Belize Flag',
        b: '1F1E7-1F1FF',
        k: [1, 11],
        o: 2
      },
      hamster: {
        a: 'Hamster Face',
        b: '1F439',
        j: ['animal', 'nature'],
        k: [12, 29],
        o: 2
      },
      shinto_shrine: {
        a: 'Shinto Shrine',
        b: '26E9-FE0F',
        c: '26E9',
        j: ['temple', 'japan', 'kyoto'],
        k: [54, 9],
        o: 2
      },
      fries: {
        a: 'French Fries',
        b: '1F35F',
        j: ['chips', 'snack', 'fast food'],
        k: [6, 55],
        o: 2
      },
      goal_net: {
        a: 'Goal Net',
        b: '1F945',
        j: ['sports'],
        k: [41, 21],
        o: 4
      },
      kaaba: {
        a: 'Kaaba',
        b: '1F54B',
        j: ['mecca', 'mosque', 'islam'],
        k: [28, 35],
        o: 2
      },
      soon: {
        a: 'Soon with Rightwards Arrow Above',
        b: '1F51C',
        j: ['arrow', 'words'],
        k: [27, 56],
        o: 2
      },
      'flag-ca': {
        a: 'Canada Flag',
        b: '1F1E8-1F1E6',
        k: [1, 12],
        o: 2
      },
      rabbit: {
        a: 'Rabbit Face',
        b: '1F430',
        j: ['animal', 'nature', 'pet', 'spring', 'magic', 'bunny'],
        k: [12, 20],
        o: 2
      },
      eye: {
        a: 'Eye',
        b: '1F441-FE0F',
        c: '1F441',
        j: ['face', 'look', 'see', 'watch', 'stare'],
        k: [12, 38],
        o: 2
      },
      sleeping: {
        a: 'Sleeping Face',
        b: '1F634',
        j: ['face', 'tired', 'sleepy', 'night', 'zzz'],
        k: [31, 30],
        o: 2
      },
      pizza: {
        a: 'Slice of Pizza',
        b: '1F355',
        j: ['food', 'party'],
        k: [6, 45],
        o: 2
      },
      sound: {
        a: 'Speaker with One Sound Wave',
        b: '1F509',
        j: ['volume', 'speaker', 'broadcast'],
        k: [27, 37],
        o: 2
      },
      rabbit2: {
        a: 'Rabbit',
        b: '1F407',
        j: ['animal', 'nature', 'pet', 'magic', 'spring'],
        k: [11, 35],
        o: 2
      },
      fountain: {
        a: 'Fountain',
        b: '26F2',
        j: ['photo', 'summer', 'water', 'fresh'],
        k: [54, 13],
        o: 2
      },
      golf: {
        a: 'Flag in Hole',
        b: '26F3',
        j: ['sports', 'business', 'flag', 'hole', 'summer'],
        k: [54, 14],
        o: 2
      },
      top: {
        a: 'Top with Upwards Arrow Above',
        b: '1F51D',
        j: ['words', 'blue-square'],
        k: [28, 0],
        o: 2
      },
      mask: {
        a: 'Face with Medical Mask',
        b: '1F637',
        j: ['face', 'sick', 'ill', 'disease'],
        k: [31, 33],
        o: 2
      },
      'flag-cc': {
        a: 'Cocos (keeling) Islands Flag',
        b: '1F1E8-1F1E8',
        k: [1, 13],
        o: 2
      },
      hotdog: {
        a: 'Hot Dog',
        b: '1F32D',
        j: ['food', 'frankfurter'],
        k: [6, 5],
        o: 2
      },
      loud_sound: {
        a: 'Speaker with Three Sound Waves',
        b: '1F50A',
        j: ['volume', 'noise', 'noisy', 'speaker', 'broadcast'],
        k: [27, 38],
        o: 2
      },
      tongue: {
        a: 'Tongue',
        b: '1F445',
        j: ['mouth', 'playful'],
        k: [12, 52],
        o: 2
      },
      place_of_worship: {
        a: 'Place of Worship',
        b: '1F6D0',
        j: ['religion', 'church', 'temple', 'prayer'],
        k: [36, 38],
        o: 2
      },
      ice_skate: {
        a: 'Ice Skate',
        b: '26F8-FE0F',
        c: '26F8',
        j: ['sports'],
        k: [54, 18],
        o: 2
      },
      sandwich: {
        a: 'Sandwich',
        b: '1F96A',
        k: [42, 0],
        o: 5
      },
      chipmunk: {
        a: 'Chipmunk',
        b: '1F43F-FE0F',
        c: '1F43F',
        j: ['animal', 'nature', 'rodent', 'squirrel'],
        k: [12, 35],
        o: 2
      },
      loudspeaker: {
        a: 'Public Address Loudspeaker',
        b: '1F4E2',
        j: ['volume', 'sound'],
        k: [26, 56],
        o: 2
      },
      lips: {
        a: 'Mouth',
        b: '1F444',
        j: ['mouth', 'kiss'],
        k: [12, 51],
        o: 2
      },
      'flag-cd': {
        a: 'Congo - Kinshasa Flag',
        b: '1F1E8-1F1E9',
        k: [1, 14],
        o: 2
      },
      tent: {
        a: 'Tent',
        b: '26FA',
        j: ['photo', 'camping', 'outdoors'],
        k: [54, 37],
        o: 2
      },
      face_with_thermometer: {
        a: 'Face with Thermometer',
        b: '1F912',
        j: ['sick', 'temperature', 'thermometer', 'cold', 'fever'],
        k: [37, 25],
        o: 2
      },
      taco: {
        a: 'Taco',
        b: '1F32E',
        j: ['food', 'mexican'],
        k: [6, 6],
        o: 2
      },
      foggy: {
        a: 'Foggy',
        b: '1F301',
        j: ['photo', 'mountain'],
        k: [5, 20],
        o: 2
      },
      'flag-cf': {
        a: 'Central African Republic Flag',
        b: '1F1E8-1F1EB',
        k: [1, 15],
        o: 2
      },
      baby: {
        a: 'Baby',
        b: '1F476',
        j: ['child', 'boy', 'girl', 'toddler'],
        k: [23, 4],
        o: 2
      },
      atom_symbol: {
        a: 'Atom Symbol',
        b: '269B-FE0F',
        c: '269B',
        j: ['science', 'physics', 'chemistry'],
        k: [53, 48],
        o: 2
      },
      fishing_pole_and_fish: {
        a: 'Fishing Pole and Fish',
        b: '1F3A3',
        j: ['food', 'hobby', 'summer'],
        k: [8, 9],
        o: 2
      },
      hedgehog: {
        a: 'Hedgehog',
        b: '1F994',
        k: [42, 38],
        o: 5
      },
      face_with_head_bandage: {
        a: 'Face with Head-Bandage',
        b: '1F915',
        j: ['injured', 'clumsy', 'bandage', 'hurt'],
        k: [37, 28],
        o: 2
      },
      mega: {
        a: 'Cheering Megaphone',
        b: '1F4E3',
        j: ['sound', 'speaker', 'volume'],
        k: [27, 0],
        o: 2
      },
      nauseated_face: {
        a: 'Nauseated Face',
        b: '1F922',
        j: ['face', 'vomit', 'gross', 'green', 'sick', 'throw up', 'ill'],
        k: [38, 19],
        o: 4
      },
      child: {
        a: 'Child',
        b: '1F9D2',
        k: [48, 16],
        o: 5
      },
      'flag-cg': {
        a: 'Congo - Brazzaville Flag',
        b: '1F1E8-1F1EC',
        k: [1, 16],
        o: 2
      },
      bat: {
        a: 'Bat',
        b: '1F987',
        j: ['animal', 'nature', 'blind', 'vampire'],
        k: [42, 25],
        o: 4
      },
      diving_mask: {
        a: 'Diving Mask',
        b: '1F93F',
        k: [41, 15],
        o: 12
      },
      burrito: {
        a: 'Burrito',
        b: '1F32F',
        j: ['food', 'mexican'],
        k: [6, 7],
        o: 2
      },
      postal_horn: {
        a: 'Postal Horn',
        b: '1F4EF',
        j: ['instrument', 'music'],
        k: [27, 12],
        o: 2
      },
      night_with_stars: {
        a: 'Night with Stars',
        b: '1F303',
        j: ['evening', 'city', 'downtown'],
        k: [5, 22],
        o: 2
      },
      om_symbol: {
        a: 'Om Symbol',
        b: '1F549-FE0F',
        c: '1F549',
        k: [28, 33],
        o: 2
      },
      star_of_david: {
        a: 'Star of David',
        b: '2721-FE0F',
        c: '2721',
        j: ['judaism'],
        k: [55, 15],
        o: 2
      },
      boy: {
        a: 'Boy',
        b: '1F466',
        j: ['man', 'male', 'guy', 'teenager'],
        k: [14, 26],
        o: 2
      },
      bell: {
        a: 'Bell',
        b: '1F514',
        j: ['sound', 'notification', 'christmas', 'xmas', 'chime'],
        k: [27, 48],
        o: 2
      },
      'flag-ch': {
        a: 'Switzerland Flag',
        b: '1F1E8-1F1ED',
        k: [1, 17],
        o: 2
      },
      running_shirt_with_sash: {
        a: 'Running Shirt with Sash',
        b: '1F3BD',
        j: ['play', 'pageant'],
        k: [8, 35],
        o: 2
      },
      stuffed_flatbread: {
        a: 'Stuffed Flatbread',
        b: '1F959',
        j: ['food', 'flatbread', 'stuffed', 'gyro'],
        k: [41, 40],
        o: 4
      },
      bear: {
        a: 'Bear Face',
        b: '1F43B',
        j: ['animal', 'nature', 'wild'],
        k: [12, 31],
        o: 2
      },
      cityscape: {
        a: 'Cityscape',
        b: '1F3D9-FE0F',
        c: '1F3D9',
        j: ['photo', 'night life', 'urban'],
        k: [10, 44],
        o: 2
      },
      face_vomiting: {
        a: 'Face with Open Mouth Vomiting',
        b: '1F92E',
        k: [38, 48],
        n: ['face_with_open_mouth_vomiting'],
        o: 5
      },
      wheel_of_dharma: {
        a: 'Wheel of Dharma',
        b: '2638-FE0F',
        c: '2638',
        j: ['hinduism', 'buddhism', 'sikhism', 'jainism'],
        k: [53, 15],
        o: 2
      },
      ski: {
        a: 'Ski and Ski Boot',
        b: '1F3BF',
        j: ['sports', 'winter', 'cold', 'snow'],
        k: [8, 37],
        o: 2
      },
      girl: {
        a: 'Girl',
        b: '1F467',
        j: ['female', 'woman', 'teenager'],
        k: [14, 32],
        o: 2
      },
      falafel: {
        a: 'Falafel',
        b: '1F9C6',
        k: [44, 14],
        o: 12
      },
      sneezing_face: {
        a: 'Sneezing Face',
        b: '1F927',
        j: ['face', 'gesundheit', 'sneeze', 'sick', 'allergy'],
        k: [38, 41],
        o: 4
      },
      no_bell: {
        a: 'Bell with Cancellation Stroke',
        b: '1F515',
        j: ['sound', 'volume', 'mute', 'quiet', 'silent'],
        k: [27, 49],
        o: 2
      },
      koala: {
        a: 'Koala',
        b: '1F428',
        j: ['animal', 'nature'],
        k: [12, 12],
        o: 2
      },
      sunrise_over_mountains: {
        a: 'Sunrise over Mountains',
        b: '1F304',
        j: ['view', 'vacation', 'photo'],
        k: [5, 23],
        o: 2
      },
      'flag-ci': {
        a: 'Côte D’ivoire Flag',
        b: '1F1E8-1F1EE',
        k: [1, 18],
        o: 2
      },
      sunrise: {
        a: 'Sunrise',
        b: '1F305',
        j: ['morning', 'view', 'vacation', 'photo'],
        k: [5, 24],
        o: 2
      },
      yin_yang: {
        a: 'Yin Yang',
        b: '262F-FE0F',
        c: '262F',
        j: ['balance'],
        k: [53, 14],
        o: 2
      },
      adult: {
        a: 'Adult',
        b: '1F9D1',
        k: [48, 10],
        o: 5
      },
      hot_face: {
        a: 'Overheated Face',
        b: '1F975',
        k: [42, 10],
        o: 11
      },
      musical_score: {
        a: 'Musical Score',
        b: '1F3BC',
        j: ['treble', 'clef', 'compose'],
        k: [8, 34],
        o: 2
      },
      sled: {
        a: 'Sled',
        b: '1F6F7',
        k: [36, 56],
        o: 5
      },
      egg: {
        a: 'Egg',
        b: '1F95A',
        j: ['food', 'chicken', 'breakfast'],
        k: [41, 41],
        o: 4
      },
      panda_face: {
        a: 'Panda Face',
        b: '1F43C',
        j: ['animal', 'nature', 'panda'],
        k: [12, 32],
        o: 2
      },
      'flag-ck': {
        a: 'Cook Islands Flag',
        b: '1F1E8-1F1F0',
        k: [1, 19],
        o: 2
      },
      'flag-cl': {
        a: 'Chile Flag',
        b: '1F1E8-1F1F1',
        k: [1, 20],
        o: 2
      },
      sloth: {
        a: 'Sloth',
        b: '1F9A5',
        k: [42, 53],
        o: 12
      },
      latin_cross: {
        a: 'Latin Cross',
        b: '271D-FE0F',
        c: '271D',
        j: ['christianity'],
        k: [55, 14],
        o: 2
      },
      curling_stone: {
        a: 'Curling Stone',
        b: '1F94C',
        k: [41, 27],
        o: 5
      },
      cold_face: {
        a: 'Freezing Face',
        b: '1F976',
        k: [42, 11],
        o: 11
      },
      fried_egg: {
        a: 'Cooking',
        b: '1F373',
        j: ['food', 'breakfast', 'kitchen', 'egg'],
        k: [7, 18],
        n: ['cooking'],
        o: 2
      },
      city_sunset: {
        a: 'Cityscape at Dusk',
        b: '1F306',
        j: ['photo', 'evening', 'sky', 'buildings'],
        k: [5, 25],
        o: 2
      },
      musical_note: {
        a: 'Musical Note',
        b: '1F3B5',
        j: ['score', 'tone', 'sound'],
        k: [8, 27],
        o: 2
      },
      'flag-cm': {
        a: 'Cameroon Flag',
        b: '1F1E8-1F1F2',
        k: [1, 21],
        o: 2
      },
      notes: {
        a: 'Multiple Musical Notes',
        b: '1F3B6',
        j: ['music', 'score'],
        k: [8, 28],
        o: 2
      },
      woozy_face: {
        a: 'Face with Uneven Eyes and Wavy Mouth',
        b: '1F974',
        k: [42, 9],
        o: 11
      },
      dart: {
        a: 'Direct Hit',
        b: '1F3AF',
        j: ['game', 'play', 'bar'],
        k: [8, 21],
        o: 2
      },
      orthodox_cross: {
        a: 'Orthodox Cross',
        b: '2626-FE0F',
        c: '2626',
        j: ['suppedaneum', 'religion'],
        k: [53, 11],
        o: 2
      },
      shallow_pan_of_food: {
        a: 'Shallow Pan of Food',
        b: '1F958',
        j: ['food', 'cooking', 'casserole', 'paella'],
        k: [41, 39],
        o: 4
      },
      otter: {
        a: 'Otter',
        b: '1F9A6',
        k: [42, 54],
        o: 12
      },
      man: {
        a: 'Man',
        b: '1F468',
        j: ['mustache', 'father', 'dad', 'guy', 'classy', 'sir', 'moustache'],
        k: [17, 22],
        o: 2
      },
      city_sunrise: {
        a: 'Sunset over Buildings',
        b: '1F307',
        j: ['photo', 'good morning', 'dawn'],
        k: [5, 26],
        o: 2
      },
      bearded_person: {
        a: 'Bearded Person',
        b: '1F9D4',
        k: [48, 28],
        o: 5
      },
      skunk: {
        a: 'Skunk',
        b: '1F9A8',
        k: [42, 56],
        o: 12
      },
      stew: {
        a: 'Pot of Food',
        b: '1F372',
        j: ['food', 'meat', 'soup'],
        k: [7, 17],
        o: 2
      },
      cn: {
        a: 'China Flag',
        b: '1F1E8-1F1F3',
        j: ['china', 'chinese', 'prc', 'flag', 'country', 'nation', 'banner'],
        k: [1, 22],
        n: ['flag-cn'],
        o: 2
      },
      studio_microphone: {
        a: 'Studio Microphone',
        b: '1F399-FE0F',
        c: '1F399',
        j: ['sing', 'recording', 'artist', 'talkshow'],
        k: [8, 1],
        o: 2
      },
      star_and_crescent: {
        a: 'Star and Crescent',
        b: '262A-FE0F',
        c: '262A',
        j: ['islam'],
        k: [53, 12],
        o: 2
      },
      'yo-yo': {
        a: 'Yo-Yo',
        b: '1FA80',
        k: [52, 1],
        o: 12
      },
      bridge_at_night: {
        a: 'Bridge at Night',
        b: '1F309',
        j: ['photo', 'sanfrancisco'],
        k: [5, 28],
        o: 2
      },
      dizzy_face: {
        a: 'Dizzy Face',
        b: '1F635',
        j: ['spent', 'unconscious', 'xox', 'dizzy'],
        k: [31, 31],
        o: 2
      },
      red_haired_man: {
        a: 'Red Haired Man',
        b: '1F468-200D-1F9B0',
        k: [16, 23],
        o: 11
      },
      kite: {
        a: 'Kite',
        b: '1FA81',
        k: [52, 2],
        o: 12
      },
      bowl_with_spoon: {
        a: 'Bowl with Spoon',
        b: '1F963',
        k: [41, 50],
        o: 5
      },
      'flag-co': {
        a: 'Colombia Flag',
        b: '1F1E8-1F1F4',
        k: [1, 23],
        o: 2
      },
      peace_symbol: {
        a: 'Peace Symbol',
        b: '262E-FE0F',
        c: '262E',
        j: ['hippie'],
        k: [53, 13],
        o: 2
      },
      kangaroo: {
        a: 'Kangaroo',
        b: '1F998',
        k: [42, 42],
        o: 11
      },
      hotsprings: {
        a: 'Hot Springs',
        b: '2668-FE0F',
        c: '2668',
        j: ['bath', 'warm', 'relax'],
        k: [53, 37],
        o: 2
      },
      exploding_head: {
        a: 'Shocked Face with Exploding Head',
        b: '1F92F',
        k: [38, 49],
        n: ['shocked_face_with_exploding_head'],
        o: 5
      },
      level_slider: {
        a: 'Level Slider',
        b: '1F39A-FE0F',
        c: '1F39A',
        j: ['scale'],
        k: [8, 2],
        o: 2
      },
      badger: {
        a: 'Badger',
        b: '1F9A1',
        k: [42, 51],
        o: 11
      },
      '8ball': {
        a: 'Billiards',
        b: '1F3B1',
        j: ['pool', 'hobby', 'game', 'luck', 'magic'],
        k: [8, 23],
        o: 2
      },
      curly_haired_man: {
        a: 'Curly Haired Man',
        b: '1F468-200D-1F9B1',
        k: [16, 29],
        o: 11
      },
      'flag-cp': {
        a: 'Clipperton Island Flag',
        b: '1F1E8-1F1F5',
        k: [1, 24],
        o: 2
      },
      carousel_horse: {
        a: 'Carousel Horse',
        b: '1F3A0',
        j: ['photo', 'carnival'],
        k: [8, 6],
        o: 2
      },
      face_with_cowboy_hat: {
        a: 'Face with Cowboy Hat',
        b: '1F920',
        k: [38, 17],
        o: 4
      },
      menorah_with_nine_branches: {
        a: 'Menorah with Nine Branches',
        b: '1F54E',
        k: [28, 38],
        o: 2
      },
      green_salad: {
        a: 'Green Salad',
        b: '1F957',
        j: ['food', 'healthy', 'lettuce'],
        k: [41, 38],
        o: 4
      },
      control_knobs: {
        a: 'Control Knobs',
        b: '1F39B-FE0F',
        c: '1F39B',
        j: ['dial'],
        k: [8, 3],
        o: 2
      },
      popcorn: {
        a: 'Popcorn',
        b: '1F37F',
        j: ['food', 'movie theater', 'films', 'snack'],
        k: [7, 30],
        o: 2
      },
      six_pointed_star: {
        a: 'Six Pointed Star with Middle Dot',
        b: '1F52F',
        j: ['purple-square', 'religion', 'jewish', 'hexagram'],
        k: [28, 18],
        o: 2
      },
      feet: {
        a: 'Paw Prints',
        b: '1F43E',
        k: [12, 34],
        n: ['paw_prints'],
        o: 2
      },
      ferris_wheel: {
        a: 'Ferris Wheel',
        b: '1F3A1',
        j: ['photo', 'carnival', 'londoneye'],
        k: [8, 7],
        o: 2
      },
      microphone: {
        a: 'Microphone',
        b: '1F3A4',
        j: ['sound', 'music', 'PA', 'sing', 'talkshow'],
        k: [8, 10],
        o: 2
      },
      crystal_ball: {
        a: 'Crystal Ball',
        b: '1F52E',
        j: ['disco', 'party', 'magic', 'circus', 'fortune_teller'],
        k: [28, 17],
        o: 2
      },
      partying_face: {
        a: 'Face with Party Horn and Party Hat',
        b: '1F973',
        k: [42, 8],
        o: 11
      },
      'flag-cr': {
        a: 'Costa Rica Flag',
        b: '1F1E8-1F1F7',
        k: [1, 25],
        o: 2
      },
      white_haired_man: {
        a: 'White Haired Man',
        b: '1F468-200D-1F9B3',
        k: [16, 41],
        o: 11
      },
      headphones: {
        a: 'Headphone',
        b: '1F3A7',
        j: ['music', 'score', 'gadgets'],
        k: [8, 13],
        o: 2
      },
      bald_man: {
        a: 'Bald Man',
        b: '1F468-200D-1F9B2',
        k: [16, 35],
        o: 11
      },
      sunglasses: {
        a: 'Smiling Face with Sunglasses',
        b: '1F60E',
        j: ['face', 'cool', 'smile', 'summer', 'beach', 'sunglass'],
        k: [30, 49],
        l: ['8)'],
        o: 2
      },
      butter: {
        a: 'Butter',
        b: '1F9C8',
        k: [44, 16],
        o: 12
      },
      roller_coaster: {
        a: 'Roller Coaster',
        b: '1F3A2',
        j: ['carnival', 'playground', 'photo', 'fun'],
        k: [8, 8],
        o: 2
      },
      turkey: {
        a: 'Turkey',
        b: '1F983',
        j: ['animal', 'bird'],
        k: [42, 21],
        o: 2
      },
      nazar_amulet: {
        a: 'Nazar Amulet',
        b: '1F9FF',
        k: [51, 50],
        o: 11
      },
      'flag-cu': {
        a: 'Cuba Flag',
        b: '1F1E8-1F1FA',
        k: [1, 26],
        o: 2
      },
      aries: {
        a: 'Aries',
        b: '2648',
        j: ['sign', 'purple-square', 'zodiac', 'astrology'],
        k: [53, 20],
        o: 2
      },
      'flag-cv': {
        a: 'Cape Verde Flag',
        b: '1F1E8-1F1FB',
        k: [1, 27],
        o: 2
      },
      barber: {
        a: 'Barber Pole',
        b: '1F488',
        j: ['hair', 'salon', 'style'],
        k: [25, 18],
        o: 2
      },
      taurus: {
        a: 'Taurus',
        b: '2649',
        j: ['purple-square', 'sign', 'zodiac', 'astrology'],
        k: [53, 21],
        o: 2
      },
      salt: {
        a: 'Salt Shaker',
        b: '1F9C2',
        k: [44, 10],
        o: 11
      },
      woman: {
        a: 'Woman',
        b: '1F469',
        j: ['female', 'girls', 'lady'],
        k: [20, 9],
        o: 2
      },
      video_game: {
        a: 'Video Game',
        b: '1F3AE',
        j: ['play', 'console', 'PS4', 'controller'],
        k: [8, 20],
        o: 2
      },
      chicken: {
        a: 'Chicken',
        b: '1F414',
        j: ['animal', 'cluck', 'nature', 'bird'],
        k: [11, 48],
        o: 2
      },
      radio: {
        a: 'Radio',
        b: '1F4FB',
        j: ['communication', 'music', 'podcast', 'program'],
        k: [27, 24],
        o: 2
      },
      nerd_face: {
        a: 'Nerd Face',
        b: '1F913',
        j: ['face', 'nerdy', 'geek', 'dork'],
        k: [37, 26],
        o: 2
      },
      red_haired_woman: {
        a: 'Red Haired Woman',
        b: '1F469-200D-1F9B0',
        k: [19, 8],
        o: 11
      },
      circus_tent: {
        a: 'Circus Tent',
        b: '1F3AA',
        j: ['festival', 'carnival', 'party'],
        k: [8, 16],
        o: 2
      },
      face_with_monocle: {
        a: 'Face with Monocle',
        b: '1F9D0',
        k: [45, 16],
        o: 5
      },
      canned_food: {
        a: 'Canned Food',
        b: '1F96B',
        k: [42, 1],
        o: 5
      },
      'flag-cw': {
        a: 'Curaçao Flag',
        b: '1F1E8-1F1FC',
        k: [1, 28],
        o: 2
      },
      gemini: {
        a: 'Gemini',
        b: '264A',
        j: ['sign', 'zodiac', 'purple-square', 'astrology'],
        k: [53, 22],
        o: 2
      },
      saxophone: {
        a: 'Saxophone',
        b: '1F3B7',
        j: ['music', 'instrument', 'jazz', 'blues'],
        k: [8, 29],
        o: 2
      },
      rooster: {
        a: 'Rooster',
        b: '1F413',
        j: ['animal', 'nature', 'chicken'],
        k: [11, 47],
        o: 2
      },
      joystick: {
        a: 'Joystick',
        b: '1F579-FE0F',
        c: '1F579',
        j: ['game', 'play'],
        k: [29, 36],
        o: 2
      },
      guitar: {
        a: 'Guitar',
        b: '1F3B8',
        j: ['music', 'instrument'],
        k: [8, 30],
        o: 2
      },
      slot_machine: {
        a: 'Slot Machine',
        b: '1F3B0',
        j: ['bet', 'gamble', 'vegas', 'fruit machine', 'luck', 'casino'],
        k: [8, 22],
        o: 2
      },
      bento: {
        a: 'Bento Box',
        b: '1F371',
        j: ['food', 'japanese', 'box'],
        k: [7, 16],
        o: 2
      },
      steam_locomotive: {
        a: 'Steam Locomotive',
        b: '1F682',
        j: ['transportation', 'vehicle', 'train'],
        k: [34, 1],
        o: 2
      },
      confused: {
        a: 'Confused Face',
        b: '1F615',
        j: ['face', 'indifference', 'huh', 'weird', 'hmmm', ':/'],
        k: [30, 56],
        l: [':\\', ':-\\', ':/', ':-/'],
        o: 2
      },
      'flag-cx': {
        a: 'Christmas Island Flag',
        b: '1F1E8-1F1FD',
        k: [1, 29],
        o: 2
      },
      hatching_chick: {
        a: 'Hatching Chick',
        b: '1F423',
        j: ['animal', 'chicken', 'egg', 'born', 'baby', 'bird'],
        k: [12, 7],
        o: 2
      },
      cancer: {
        a: 'Cancer',
        b: '264B',
        j: ['sign', 'zodiac', 'purple-square', 'astrology'],
        k: [53, 23],
        o: 2
      },
      'flag-cy': {
        a: 'Cyprus Flag',
        b: '1F1E8-1F1FE',
        k: [1, 30],
        o: 2
      },
      worried: {
        a: 'Worried Face',
        b: '1F61F',
        j: ['face', 'concern', 'nervous', ':('],
        k: [31, 9],
        o: 2
      },
      railway_car: {
        a: 'Railway Car',
        b: '1F683',
        j: ['transportation', 'vehicle'],
        k: [34, 2],
        o: 2
      },
      leo: {
        a: 'Leo',
        b: '264C',
        j: ['sign', 'purple-square', 'zodiac', 'astrology'],
        k: [53, 24],
        o: 2
      },
      curly_haired_woman: {
        a: 'Curly Haired Woman',
        b: '1F469-200D-1F9B1',
        k: [19, 14],
        o: 11
      },
      baby_chick: {
        a: 'Baby Chick',
        b: '1F424',
        j: ['animal', 'chicken', 'bird'],
        k: [12, 8],
        o: 2
      },
      musical_keyboard: {
        a: 'Musical Keyboard',
        b: '1F3B9',
        j: ['piano', 'instrument', 'compose'],
        k: [8, 31],
        o: 2
      },
      game_die: {
        a: 'Game Die',
        b: '1F3B2',
        j: ['dice', 'random', 'tabletop', 'play', 'luck'],
        k: [8, 24],
        o: 2
      },
      rice_cracker: {
        a: 'Rice Cracker',
        b: '1F358',
        j: ['food', 'japanese'],
        k: [6, 48],
        o: 2
      },
      virgo: {
        a: 'Virgo',
        b: '264D',
        j: ['sign', 'zodiac', 'purple-square', 'astrology'],
        k: [53, 25],
        o: 2
      },
      'flag-cz': {
        a: 'Czechia Flag',
        b: '1F1E8-1F1FF',
        k: [1, 31],
        o: 2
      },
      rice_ball: {
        a: 'Rice Ball',
        b: '1F359',
        j: ['food', 'japanese'],
        k: [6, 49],
        o: 2
      },
      hatched_chick: {
        a: 'Front-Facing Baby Chick',
        b: '1F425',
        j: ['animal', 'chicken', 'baby', 'bird'],
        k: [12, 9],
        o: 2
      },
      jigsaw: {
        a: 'Jigsaw Puzzle Piece',
        b: '1F9E9',
        k: [51, 28],
        o: 11
      },
      trumpet: {
        a: 'Trumpet',
        b: '1F3BA',
        j: ['music', 'brass'],
        k: [8, 32],
        o: 2
      },
      slightly_frowning_face: {
        a: 'Slightly Frowning Face',
        b: '1F641',
        j: ['face', 'frowning', 'disappointed', 'sad', 'upset'],
        k: [31, 43],
        o: 2
      },
      bullettrain_side: {
        a: 'High-Speed Train',
        b: '1F684',
        j: ['transportation', 'vehicle'],
        k: [34, 3],
        o: 2
      },
      libra: {
        a: 'Libra',
        b: '264E',
        j: ['sign', 'purple-square', 'zodiac', 'astrology'],
        k: [53, 26],
        o: 2
      },
      de: {
        a: 'Germany Flag',
        b: '1F1E9-1F1EA',
        j: ['german', 'nation', 'flag', 'country', 'banner'],
        k: [1, 32],
        n: ['flag-de'],
        o: 2
      },
      rice: {
        a: 'Cooked Rice',
        b: '1F35A',
        j: ['food', 'china', 'asian'],
        k: [6, 50],
        o: 2
      },
      violin: {
        a: 'Violin',
        b: '1F3BB',
        j: ['music', 'instrument', 'orchestra', 'symphony'],
        k: [8, 33],
        o: 2
      },
      white_haired_woman: {
        a: 'White Haired Woman',
        b: '1F469-200D-1F9B3',
        k: [19, 26],
        o: 11
      },
      bird: {
        a: 'Bird',
        b: '1F426',
        j: ['animal', 'nature', 'fly', 'tweet', 'spring'],
        k: [12, 10],
        o: 2
      },
      white_frowning_face: {
        a: 'White Frowning Face',
        b: '2639-FE0F',
        c: '2639',
        k: [53, 16],
        o: 2
      },
      bullettrain_front: {
        a: 'High-Speed Train with Bullet Nose',
        b: '1F685',
        j: ['transportation', 'vehicle', 'speed', 'fast', 'public', 'travel'],
        k: [34, 4],
        o: 2
      },
      teddy_bear: {
        a: 'Teddy Bear',
        b: '1F9F8',
        k: [51, 43],
        o: 11
      },
      spades: {
        a: 'Black Spade Suit',
        b: '2660-FE0F',
        c: '2660',
        j: ['poker', 'cards', 'suits', 'magic'],
        k: [53, 33],
        o: 2
      },
      banjo: {
        a: 'Banjo',
        b: '1FA95',
        k: [52, 9],
        o: 12
      },
      train2: {
        a: 'Train',
        b: '1F686',
        j: ['transportation', 'vehicle'],
        k: [34, 5],
        o: 2
      },
      scorpius: {
        a: 'Scorpius',
        b: '264F',
        j: ['sign', 'zodiac', 'purple-square', 'astrology', 'scorpio'],
        k: [53, 27],
        o: 2
      },
      curry: {
        a: 'Curry and Rice',
        b: '1F35B',
        j: ['food', 'spicy', 'hot', 'indian'],
        k: [6, 51],
        o: 2
      },
      open_mouth: {
        a: 'Face with Open Mouth',
        b: '1F62E',
        j: ['face', 'surprise', 'impressed', 'wow', 'whoa', ':O'],
        k: [31, 24],
        l: [':o', ':-o', ':O', ':-O'],
        o: 2
      },
      'flag-dg': {
        a: 'Diego Garcia Flag',
        b: '1F1E9-1F1EC',
        k: [1, 33],
        o: 2
      },
      penguin: {
        a: 'Penguin',
        b: '1F427',
        j: ['animal', 'nature'],
        k: [12, 11],
        o: 2
      },
      hearts: {
        a: 'Black Heart Suit',
        b: '2665-FE0F',
        c: '2665',
        j: ['poker', 'cards', 'magic', 'suits'],
        k: [53, 35],
        o: 2
      },
      ramen: {
        a: 'Steaming Bowl',
        b: '1F35C',
        j: ['food', 'japanese', 'noodle', 'chopsticks'],
        k: [6, 52],
        o: 2
      },
      sagittarius: {
        a: 'Sagittarius',
        b: '2650',
        j: ['sign', 'zodiac', 'purple-square', 'astrology'],
        k: [53, 28],
        o: 2
      },
      bald_woman: {
        a: 'Bald Woman',
        b: '1F469-200D-1F9B2',
        k: [19, 20],
        o: 11
      },
      dove_of_peace: {
        a: 'Dove of Peace',
        b: '1F54A-FE0F',
        c: '1F54A',
        k: [28, 34],
        o: 2
      },
      hushed: {
        a: 'Hushed Face',
        b: '1F62F',
        j: ['face', 'woo', 'shh'],
        k: [31, 25],
        o: 2
      },
      metro: {
        a: 'Metro',
        b: '1F687',
        j: ['transportation', 'blue-square', 'mrt', 'underground', 'tube'],
        k: [34, 6],
        o: 2
      },
      'flag-dj': {
        a: 'Djibouti Flag',
        b: '1F1E9-1F1EF',
        k: [1, 34],
        o: 2
      },
      drum_with_drumsticks: {
        a: 'Drum with Drumsticks',
        b: '1F941',
        k: [41, 17],
        o: 4
      },
      spaghetti: {
        a: 'Spaghetti',
        b: '1F35D',
        j: ['food', 'italian', 'noodle'],
        k: [6, 53],
        o: 2
      },
      eagle: {
        a: 'Eagle',
        b: '1F985',
        j: ['animal', 'nature', 'bird'],
        k: [42, 23],
        o: 4
      },
      astonished: {
        a: 'Astonished Face',
        b: '1F632',
        j: ['face', 'xox', 'surprised', 'poisoned'],
        k: [31, 28],
        o: 2
      },
      capricorn: {
        a: 'Capricorn',
        b: '2651',
        j: ['sign', 'zodiac', 'purple-square', 'astrology'],
        k: [53, 29],
        o: 2
      },
      light_rail: {
        a: 'Light Rail',
        b: '1F688',
        j: ['transportation', 'vehicle'],
        k: [34, 7],
        o: 2
      },
      'flag-dk': {
        a: 'Denmark Flag',
        b: '1F1E9-1F1F0',
        k: [1, 35],
        o: 2
      },
      iphone: {
        a: 'Mobile Phone',
        b: '1F4F1',
        j: ['technology', 'apple', 'gadgets', 'dial'],
        k: [27, 14],
        o: 2
      },
      diamonds: {
        a: 'Black Diamond Suit',
        b: '2666-FE0F',
        c: '2666',
        j: ['poker', 'cards', 'magic', 'suits'],
        k: [53, 36],
        o: 2
      },
      clubs: {
        a: 'Black Club Suit',
        b: '2663-FE0F',
        c: '2663',
        j: ['poker', 'cards', 'magic', 'suits'],
        k: [53, 34],
        o: 2
      },
      aquarius: {
        a: 'Aquarius',
        b: '2652',
        j: ['sign', 'purple-square', 'zodiac', 'astrology'],
        k: [53, 30],
        o: 2
      },
      sweet_potato: {
        a: 'Roasted Sweet Potato',
        b: '1F360',
        j: ['food', 'nature'],
        k: [6, 56],
        o: 2
      },
      'flag-dm': {
        a: 'Dominica Flag',
        b: '1F1E9-1F1F2',
        k: [1, 36],
        o: 2
      },
      duck: {
        a: 'Duck',
        b: '1F986',
        j: ['animal', 'nature', 'bird', 'mallard'],
        k: [42, 24],
        o: 4
      },
      calling: {
        a: 'Mobile Phone with Rightwards Arrow at Left',
        b: '1F4F2',
        j: ['iphone', 'incoming'],
        k: [27, 15],
        o: 2
      },
      station: {
        a: 'Station',
        b: '1F689',
        j: ['transportation', 'vehicle', 'public'],
        k: [34, 8],
        o: 2
      },
      'blond-haired-woman': {
        a: 'Blond Haired Woman',
        b: '1F471-200D-2640-FE0F',
        c: '1F471-200D-2640',
        k: [22, 7],
        o: 4
      },
      flushed: {
        a: 'Flushed Face',
        b: '1F633',
        j: ['face', 'blush', 'shy', 'flattered'],
        k: [31, 29],
        o: 2
      },
      pisces: {
        a: 'Pisces',
        b: '2653',
        j: ['purple-square', 'sign', 'zodiac', 'astrology'],
        k: [53, 31],
        o: 2
      },
      chess_pawn: {
        a: 'Chess Pawn',
        b: '265F-FE0F',
        c: '265F',
        k: [53, 32],
        o: 11
      },
      'blond-haired-man': {
        obsoletes: '1F471',
        a: 'Blond Haired Man',
        b: '1F471-200D-2642-FE0F',
        c: '1F471-200D-2642',
        k: [22, 13],
        o: 4
      },
      phone: {
        a: 'Black Telephone',
        b: '260E-FE0F',
        c: '260E',
        j: ['technology', 'communication', 'dial', 'telephone'],
        k: [52, 54],
        n: ['telephone'],
        o: 2
      },
      oden: {
        a: 'Oden',
        b: '1F362',
        j: ['food', 'japanese'],
        k: [7, 1],
        o: 2
      },
      'flag-do': {
        a: 'Dominican Republic Flag',
        b: '1F1E9-1F1F4',
        k: [1, 37],
        o: 2
      },
      tram: {
        a: 'Tram',
        b: '1F68A',
        j: ['transportation', 'vehicle'],
        k: [34, 9],
        o: 2
      },
      swan: {
        a: 'Swan',
        b: '1F9A2',
        k: [42, 52],
        o: 11
      },
      pleading_face: {
        a: 'Face with Pleading Eyes',
        b: '1F97A',
        k: [42, 12],
        o: 11
      },
      'flag-dz': {
        a: 'Algeria Flag',
        b: '1F1E9-1F1FF',
        k: [1, 38],
        o: 2
      },
      monorail: {
        a: 'Monorail',
        b: '1F69D',
        j: ['transportation', 'vehicle'],
        k: [34, 28],
        o: 2
      },
      owl: {
        a: 'Owl',
        b: '1F989',
        j: ['animal', 'nature', 'bird', 'hoot'],
        k: [42, 27],
        o: 4
      },
      sushi: {
        a: 'Sushi',
        b: '1F363',
        j: ['food', 'fish', 'japanese', 'rice'],
        k: [7, 2],
        o: 2
      },
      telephone_receiver: {
        a: 'Telephone Receiver',
        b: '1F4DE',
        j: ['technology', 'communication', 'dial'],
        k: [26, 52],
        o: 2
      },
      black_joker: {
        a: 'Playing Card Black Joker',
        b: '1F0CF',
        j: ['poker', 'cards', 'game', 'play', 'magic'],
        k: [0, 15],
        o: 2
      },
      ophiuchus: {
        a: 'Ophiuchus',
        b: '26CE',
        j: ['sign', 'purple-square', 'constellation', 'astrology'],
        k: [54, 4],
        o: 2
      },
      frowning: {
        a: 'Frowning Face with Open Mouth',
        b: '1F626',
        j: ['face', 'aw', 'what'],
        k: [31, 16],
        o: 2
      },
      older_adult: {
        a: 'Older Adult',
        b: '1F9D3',
        k: [48, 22],
        o: 5
      },
      'flag-ea': {
        a: 'Ceuta & Melilla Flag',
        b: '1F1EA-1F1E6',
        k: [1, 39],
        o: 2
      },
      flamingo: {
        a: 'Flamingo',
        b: '1F9A9',
        k: [43, 0],
        o: 12
      },
      pager: {
        a: 'Pager',
        b: '1F4DF',
        j: ['bbcall', 'oldschool', '90s'],
        k: [26, 53],
        o: 2
      },
      mountain_railway: {
        a: 'Mountain Railway',
        b: '1F69E',
        j: ['transportation', 'vehicle'],
        k: [34, 29],
        o: 2
      },
      mahjong: {
        a: 'Mahjong Tile Red Dragon',
        b: '1F004',
        j: ['game', 'play', 'chinese', 'kanji'],
        k: [0, 14],
        o: 2
      },
      older_man: {
        a: 'Older Man',
        b: '1F474',
        j: ['human', 'male', 'men', 'old', 'elder', 'senior'],
        k: [22, 49],
        o: 2
      },
      twisted_rightwards_arrows: {
        a: 'Twisted Rightwards Arrows',
        b: '1F500',
        j: ['blue-square', 'shuffle', 'music', 'random'],
        k: [27, 28],
        o: 2
      },
      fried_shrimp: {
        a: 'Fried Shrimp',
        b: '1F364',
        j: ['food', 'animal', 'appetizer', 'summer'],
        k: [7, 3],
        o: 2
      },
      anguished: {
        a: 'Anguished Face',
        b: '1F627',
        j: ['face', 'stunned', 'nervous'],
        k: [31, 17],
        l: ['D:'],
        o: 2
      },
      repeat: {
        a: 'Clockwise Rightwards and Leftwards Open Circle Arrows',
        b: '1F501',
        j: ['loop', 'record'],
        k: [27, 29],
        o: 2
      },
      fish_cake: {
        a: 'Fish Cake with Swirl Design',
        b: '1F365',
        j: ['food', 'japan', 'sea', 'beach', 'narutomaki', 'pink', 'swirl', 'kamaboko', 'surimi', 'ramen'],
        k: [7, 4],
        o: 2
      },
      fax: {
        a: 'Fax Machine',
        b: '1F4E0',
        j: ['communication', 'technology'],
        k: [26, 54],
        o: 2
      },
      older_woman: {
        a: 'Older Woman',
        b: '1F475',
        j: ['human', 'female', 'women', 'lady', 'old', 'elder', 'senior'],
        k: [22, 55],
        o: 2
      },
      'flag-ec': {
        a: 'Ecuador Flag',
        b: '1F1EA-1F1E8',
        k: [1, 40],
        o: 2
      },
      peacock: {
        a: 'Peacock',
        b: '1F99A',
        k: [42, 44],
        o: 11
      },
      fearful: {
        a: 'Fearful Face',
        b: '1F628',
        j: ['face', 'scared', 'terrified', 'nervous', 'oops', 'huh'],
        k: [31, 18],
        o: 2
      },
      train: {
        a: 'Tram Car',
        b: '1F68B',
        j: ['transportation', 'vehicle', 'carriage', 'public', 'travel'],
        k: [34, 10],
        o: 2
      },
      flower_playing_cards: {
        a: 'Flower Playing Cards',
        b: '1F3B4',
        j: ['game', 'sunset', 'red'],
        k: [8, 26],
        o: 2
      },
      repeat_one: {
        a: 'Clockwise Rightwards and Leftwards Open Circle Arrows with Circled One Overlay',
        b: '1F502',
        j: ['blue-square', 'loop'],
        k: [27, 30],
        o: 2
      },
      moon_cake: {
        a: 'Moon Cake',
        b: '1F96E',
        k: [42, 4],
        o: 11
      },
      performing_arts: {
        a: 'Performing Arts',
        b: '1F3AD',
        j: ['acting', 'theater', 'drama'],
        k: [8, 19],
        o: 2
      },
      cold_sweat: {
        a: 'Face with Open Mouth and Cold Sweat',
        b: '1F630',
        j: ['face', 'nervous', 'sweat'],
        k: [31, 26],
        o: 2
      },
      'flag-ee': {
        a: 'Estonia Flag',
        b: '1F1EA-1F1EA',
        k: [1, 41],
        o: 2
      },
      battery: {
        a: 'Battery',
        b: '1F50B',
        j: ['power', 'energy', 'sustain'],
        k: [27, 39],
        o: 2
      },
      parrot: {
        a: 'Parrot',
        b: '1F99C',
        k: [42, 46],
        o: 11
      },
      bus: {
        a: 'Bus',
        b: '1F68C',
        j: ['car', 'vehicle', 'transportation'],
        k: [34, 11],
        o: 2
      },
      'flag-eg': {
        a: 'Egypt Flag',
        b: '1F1EA-1F1EC',
        k: [1, 42],
        o: 2
      },
      arrow_forward: {
        a: 'Black Right-Pointing Triangle',
        b: '25B6-FE0F',
        c: '25B6',
        j: ['blue-square', 'right', 'direction', 'play'],
        k: [52, 43],
        o: 2
      },
      'man-frowning': {
        a: 'Man Frowning',
        b: '1F64D-200D-2642-FE0F',
        c: '1F64D-200D-2642',
        k: [33, 20],
        o: 4
      },
      disappointed_relieved: {
        a: 'Disappointed but Relieved Face',
        b: '1F625',
        j: ['face', 'phew', 'sweat', 'nervous'],
        k: [31, 15],
        o: 2
      },
      electric_plug: {
        a: 'Electric Plug',
        b: '1F50C',
        j: ['charger', 'power'],
        k: [27, 40],
        o: 2
      },
      frame_with_picture: {
        a: 'Frame with Picture',
        b: '1F5BC-FE0F',
        c: '1F5BC',
        k: [30, 14],
        o: 2
      },
      oncoming_bus: {
        a: 'Oncoming Bus',
        b: '1F68D',
        j: ['vehicle', 'transportation'],
        k: [34, 12],
        o: 2
      },
      dango: {
        a: 'Dango',
        b: '1F361',
        j: ['food', 'dessert', 'sweet', 'japanese', 'barbecue', 'meat'],
        k: [7, 0],
        o: 2
      },
      frog: {
        a: 'Frog Face',
        b: '1F438',
        j: ['animal', 'nature', 'croak', 'toad'],
        k: [12, 28],
        o: 2
      },
      computer: {
        a: 'Personal Computer',
        b: '1F4BB',
        j: ['technology', 'laptop', 'screen', 'display', 'monitor'],
        k: [26, 17],
        o: 2
      },
      art: {
        a: 'Artist Palette',
        b: '1F3A8',
        j: ['design', 'paint', 'draw', 'colors'],
        k: [8, 14],
        o: 2
      },
      'flag-eh': {
        a: 'Western Sahara Flag',
        b: '1F1EA-1F1ED',
        k: [1, 43],
        o: 2
      },
      fast_forward: {
        a: 'Black Right-Pointing Double Triangle',
        b: '23E9',
        j: ['blue-square', 'play', 'speed', 'continue'],
        k: [52, 26],
        o: 2
      },
      cry: {
        a: 'Crying Face',
        b: '1F622',
        j: ['face', 'tears', 'sad', 'depressed', 'upset', ":'("],
        k: [31, 12],
        l: [":'("],
        m: ":'(",
        o: 2
      },
      'woman-frowning': {
        obsoletes: '1F64D',
        a: 'Woman Frowning',
        b: '1F64D-200D-2640-FE0F',
        c: '1F64D-200D-2640',
        k: [33, 14],
        o: 4
      },
      trolleybus: {
        a: 'Trolleybus',
        b: '1F68E',
        j: ['bart', 'transportation', 'vehicle'],
        k: [34, 13],
        o: 2
      },
      crocodile: {
        a: 'Crocodile',
        b: '1F40A',
        j: ['animal', 'nature', 'reptile', 'lizard', 'alligator'],
        k: [11, 38],
        o: 2
      },
      dumpling: {
        a: 'Dumpling',
        b: '1F95F',
        k: [41, 46],
        o: 5
      },
      black_right_pointing_double_triangle_with_vertical_bar: {
        a: 'Black Right Pointing Double Triangle with Vertical Bar',
        b: '23ED-FE0F',
        c: '23ED',
        k: [52, 30],
        o: 2
      },
      desktop_computer: {
        a: 'Desktop Computer',
        b: '1F5A5-FE0F',
        c: '1F5A5',
        j: ['technology', 'computing', 'screen'],
        k: [30, 10],
        o: 2
      },
      turtle: {
        a: 'Turtle',
        b: '1F422',
        j: ['animal', 'slow', 'nature', 'tortoise'],
        k: [12, 6],
        o: 2
      },
      sob: {
        a: 'Loudly Crying Face',
        b: '1F62D',
        j: ['face', 'cry', 'tears', 'sad', 'upset', 'depressed'],
        k: [31, 23],
        m: ":'(",
        o: 2
      },
      'flag-er': {
        a: 'Eritrea Flag',
        b: '1F1EA-1F1F7',
        k: [1, 44],
        o: 2
      },
      thread: {
        a: 'Spool of Thread',
        b: '1F9F5',
        k: [51, 40],
        o: 11
      },
      minibus: {
        a: 'Minibus',
        b: '1F690',
        j: ['vehicle', 'car', 'transportation'],
        k: [34, 15],
        o: 2
      },
      fortune_cookie: {
        a: 'Fortune Cookie',
        b: '1F960',
        k: [41, 47],
        o: 5
      },
      yarn: {
        a: 'Ball of Yarn',
        b: '1F9F6',
        k: [51, 41],
        o: 11
      },
      takeout_box: {
        a: 'Takeout Box',
        b: '1F961',
        k: [41, 48],
        o: 5
      },
      'man-pouting': {
        a: 'Man Pouting',
        b: '1F64E-200D-2642-FE0F',
        c: '1F64E-200D-2642',
        k: [33, 38],
        o: 4
      },
      printer: {
        a: 'Printer',
        b: '1F5A8-FE0F',
        c: '1F5A8',
        j: ['paper', 'ink'],
        k: [30, 11],
        o: 2
      },
      scream: {
        a: 'Face Screaming in Fear',
        b: '1F631',
        j: ['face', 'munch', 'scared', 'omg'],
        k: [31, 27],
        o: 2
      },
      es: {
        a: 'Spain Flag',
        b: '1F1EA-1F1F8',
        j: ['spain', 'flag', 'nation', 'country', 'banner'],
        k: [1, 45],
        n: ['flag-es'],
        o: 2
      },
      ambulance: {
        a: 'Ambulance',
        b: '1F691',
        j: ['health', '911', 'hospital'],
        k: [34, 16],
        o: 2
      },
      black_right_pointing_triangle_with_double_vertical_bar: {
        a: 'Black Right Pointing Triangle with Double Vertical Bar',
        b: '23EF-FE0F',
        c: '23EF',
        k: [52, 32],
        o: 2
      },
      lizard: {
        a: 'Lizard',
        b: '1F98E',
        j: ['animal', 'nature', 'reptile'],
        k: [42, 32],
        o: 4
      },
      'flag-et': {
        a: 'Ethiopia Flag',
        b: '1F1EA-1F1F9',
        k: [1, 46],
        o: 2
      },
      keyboard: {
        a: 'Keyboard',
        b: '2328-FE0F',
        c: '2328',
        j: ['technology', 'computer', 'type', 'input', 'text'],
        k: [52, 24],
        o: 2
      },
      crab: {
        a: 'Crab',
        b: '1F980',
        j: ['animal', 'crustacean'],
        k: [42, 18],
        o: 2
      },
      confounded: {
        a: 'Confounded Face',
        b: '1F616',
        j: ['face', 'confused', 'sick', 'unwell', 'oops', ':S'],
        k: [31, 0],
        o: 2
      },
      snake: {
        a: 'Snake',
        b: '1F40D',
        j: ['animal', 'evil', 'nature', 'hiss', 'python'],
        k: [11, 41],
        o: 2
      },
      'woman-pouting': {
        obsoletes: '1F64E',
        a: 'Woman Pouting',
        b: '1F64E-200D-2640-FE0F',
        c: '1F64E-200D-2640',
        k: [33, 32],
        o: 4
      },
      arrow_backward: {
        a: 'Black Left-Pointing Triangle',
        b: '25C0-FE0F',
        c: '25C0',
        j: ['blue-square', 'left', 'direction'],
        k: [52, 44],
        o: 2
      },
      fire_engine: {
        a: 'Fire Engine',
        b: '1F692',
        j: ['transportation', 'cars', 'vehicle'],
        k: [34, 17],
        o: 2
      },
      rewind: {
        a: 'Black Left-Pointing Double Triangle',
        b: '23EA',
        j: ['play', 'blue-square'],
        k: [52, 27],
        o: 2
      },
      three_button_mouse: {
        a: 'Three Button Mouse',
        b: '1F5B1-FE0F',
        c: '1F5B1',
        k: [30, 12],
        o: 2
      },
      police_car: {
        a: 'Police Car',
        b: '1F693',
        j: ['vehicle', 'cars', 'transportation', 'law', 'legal', 'enforcement'],
        k: [34, 18],
        o: 2
      },
      dragon_face: {
        a: 'Dragon Face',
        b: '1F432',
        j: ['animal', 'myth', 'nature', 'chinese', 'green'],
        k: [12, 22],
        o: 2
      },
      persevere: {
        a: 'Persevering Face',
        b: '1F623',
        j: ['face', 'sick', 'no', 'upset', 'oops'],
        k: [31, 13],
        o: 2
      },
      lobster: {
        a: 'Lobster',
        b: '1F99E',
        k: [42, 48],
        o: 11
      },
      'flag-eu': {
        a: 'European Union Flag',
        b: '1F1EA-1F1FA',
        k: [1, 47],
        o: 2
      },
      disappointed: {
        a: 'Disappointed Face',
        b: '1F61E',
        j: ['face', 'sad', 'upset', 'depressed', ':('],
        k: [31, 8],
        l: ['):', ':(', ':-('],
        m: ':(',
        o: 2
      },
      shrimp: {
        a: 'Shrimp',
        b: '1F990',
        j: ['animal', 'ocean', 'nature', 'seafood'],
        k: [42, 34],
        o: 4
      },
      dragon: {
        a: 'Dragon',
        b: '1F409',
        j: ['animal', 'myth', 'nature', 'chinese', 'green'],
        k: [11, 37],
        o: 2
      },
      'man-gesturing-no': {
        a: 'Man Gesturing No',
        b: '1F645-200D-2642-FE0F',
        c: '1F645-200D-2642',
        k: [31, 53],
        o: 4
      },
      'flag-fi': {
        a: 'Finland Flag',
        b: '1F1EB-1F1EE',
        k: [1, 48],
        o: 2
      },
      trackball: {
        a: 'Trackball',
        b: '1F5B2-FE0F',
        c: '1F5B2',
        j: ['technology', 'trackpad'],
        k: [30, 13],
        o: 2
      },
      black_left_pointing_double_triangle_with_vertical_bar: {
        a: 'Black Left Pointing Double Triangle with Vertical Bar',
        b: '23EE-FE0F',
        c: '23EE',
        k: [52, 31],
        o: 2
      },
      oncoming_police_car: {
        a: 'Oncoming Police Car',
        b: '1F694',
        j: ['vehicle', 'law', 'legal', 'enforcement', '911'],
        k: [34, 19],
        o: 2
      },
      minidisc: {
        a: 'Minidisc',
        b: '1F4BD',
        j: ['technology', 'record', 'data', 'disk', '90s'],
        k: [26, 19],
        o: 2
      },
      sweat: {
        a: 'Face with Cold Sweat',
        b: '1F613',
        j: ['face', 'hot', 'sad', 'tired', 'exercise'],
        k: [30, 54],
        o: 2
      },
      squid: {
        a: 'Squid',
        b: '1F991',
        j: ['animal', 'nature', 'ocean', 'sea'],
        k: [42, 35],
        o: 4
      },
      sauropod: {
        a: 'Sauropod',
        b: '1F995',
        k: [42, 39],
        o: 5
      },
      arrow_up_small: {
        a: 'Up-Pointing Small Red Triangle',
        b: '1F53C',
        j: ['blue-square', 'triangle', 'direction', 'point', 'forward', 'top'],
        k: [28, 31],
        o: 2
      },
      'flag-fj': {
        a: 'Fiji Flag',
        b: '1F1EB-1F1EF',
        k: [1, 49],
        o: 2
      },
      'woman-gesturing-no': {
        obsoletes: '1F645',
        a: 'Woman Gesturing No',
        b: '1F645-200D-2640-FE0F',
        c: '1F645-200D-2640',
        k: [31, 47],
        o: 4
      },
      taxi: {
        a: 'Taxi',
        b: '1F695',
        j: ['uber', 'vehicle', 'cars', 'transportation'],
        k: [34, 20],
        o: 2
      },
      'flag-fk': {
        a: 'Falkland Islands Flag',
        b: '1F1EB-1F1F0',
        k: [1, 50],
        o: 2
      },
      floppy_disk: {
        a: 'Floppy Disk',
        b: '1F4BE',
        j: ['oldschool', 'technology', 'save', '90s', '80s'],
        k: [26, 20],
        o: 2
      },
      't-rex': {
        a: 'T-Rex',
        b: '1F996',
        k: [42, 40],
        o: 5
      },
      oyster: {
        a: 'Oyster',
        b: '1F9AA',
        k: [43, 1],
        o: 12
      },
      arrow_double_up: {
        a: 'Black Up-Pointing Double Triangle',
        b: '23EB',
        j: ['blue-square', 'direction', 'top'],
        k: [52, 28],
        o: 2
      },
      oncoming_taxi: {
        a: 'Oncoming Taxi',
        b: '1F696',
        j: ['vehicle', 'cars', 'uber'],
        k: [34, 21],
        o: 2
      },
      weary: {
        a: 'Weary Face',
        b: '1F629',
        j: ['face', 'tired', 'sleepy', 'sad', 'frustrated', 'upset'],
        k: [31, 19],
        o: 2
      },
      'man-gesturing-ok': {
        a: 'Man Gesturing Ok',
        b: '1F646-200D-2642-FE0F',
        c: '1F646-200D-2642',
        k: [32, 14],
        o: 4
      },
      arrow_down_small: {
        a: 'Down-Pointing Small Red Triangle',
        b: '1F53D',
        j: ['blue-square', 'direction', 'bottom'],
        k: [28, 32],
        o: 2
      },
      tired_face: {
        a: 'Tired Face',
        b: '1F62B',
        j: ['sick', 'whine', 'upset', 'frustrated'],
        k: [31, 21],
        o: 2
      },
      car: {
        a: 'Automobile',
        b: '1F697',
        k: [34, 22],
        n: ['red_car'],
        o: 2
      },
      icecream: {
        a: 'Soft Ice Cream',
        b: '1F366',
        j: ['food', 'hot', 'dessert', 'summer'],
        k: [7, 5],
        o: 2
      },
      cd: {
        a: 'Optical Disc',
        b: '1F4BF',
        j: ['technology', 'dvd', 'disk', 'disc', '90s'],
        k: [26, 21],
        o: 2
      },
      whale: {
        a: 'Spouting Whale',
        b: '1F433',
        j: ['animal', 'nature', 'sea', 'ocean'],
        k: [12, 23],
        o: 2
      },
      'flag-fm': {
        a: 'Micronesia Flag',
        b: '1F1EB-1F1F2',
        k: [1, 51],
        o: 2
      },
      oncoming_automobile: {
        a: 'Oncoming Automobile',
        b: '1F698',
        j: ['car', 'vehicle', 'transportation'],
        k: [34, 23],
        o: 2
      },
      arrow_double_down: {
        a: 'Black Down-Pointing Double Triangle',
        b: '23EC',
        j: ['blue-square', 'direction', 'bottom'],
        k: [52, 29],
        o: 2
      },
      'woman-gesturing-ok': {
        obsoletes: '1F646',
        a: 'Woman Gesturing Ok',
        b: '1F646-200D-2640-FE0F',
        c: '1F646-200D-2640',
        k: [32, 8],
        o: 4
      },
      yawning_face: {
        a: 'Yawning Face',
        b: '1F971',
        k: [42, 7],
        o: 12
      },
      dvd: {
        a: 'Dvd',
        b: '1F4C0',
        j: ['cd', 'disk', 'disc'],
        k: [26, 22],
        o: 2
      },
      whale2: {
        a: 'Whale',
        b: '1F40B',
        j: ['animal', 'nature', 'sea', 'ocean'],
        k: [11, 39],
        o: 2
      },
      'flag-fo': {
        a: 'Faroe Islands Flag',
        b: '1F1EB-1F1F4',
        k: [1, 52],
        o: 2
      },
      shaved_ice: {
        a: 'Shaved Ice',
        b: '1F367',
        j: ['hot', 'dessert', 'summer'],
        k: [7, 6],
        o: 2
      },
      double_vertical_bar: {
        a: 'Double Vertical Bar',
        b: '23F8-FE0F',
        c: '23F8',
        k: [52, 37],
        o: 2
      },
      dolphin: {
        a: 'Dolphin',
        b: '1F42C',
        j: ['animal', 'nature', 'fish', 'sea', 'ocean', 'flipper', 'fins', 'beach'],
        k: [12, 16],
        n: ['flipper'],
        o: 2
      },
      blue_car: {
        a: 'Recreational Vehicle',
        b: '1F699',
        j: ['transportation', 'vehicle'],
        k: [34, 24],
        o: 2
      },
      ice_cream: {
        a: 'Ice Cream',
        b: '1F368',
        j: ['food', 'hot', 'dessert'],
        k: [7, 7],
        o: 2
      },
      fr: {
        a: 'France Flag',
        b: '1F1EB-1F1F7',
        j: ['banner', 'flag', 'nation', 'france', 'french', 'country'],
        k: [1, 53],
        n: ['flag-fr'],
        o: 2
      },
      triumph: {
        a: 'Face with Look of Triumph',
        b: '1F624',
        j: ['face', 'gas', 'phew', 'proud', 'pride'],
        k: [31, 14],
        o: 2
      },
      abacus: {
        a: 'Abacus',
        b: '1F9EE',
        k: [51, 33],
        o: 11
      },
      'man-tipping-hand': {
        a: 'Man Tipping Hand',
        b: '1F481-200D-2642-FE0F',
        c: '1F481-200D-2642',
        k: [23, 53],
        o: 4
      },
      doughnut: {
        a: 'Doughnut',
        b: '1F369',
        j: ['food', 'dessert', 'snack', 'sweet', 'donut'],
        k: [7, 8],
        o: 2
      },
      fish: {
        a: 'Fish',
        b: '1F41F',
        j: ['animal', 'food', 'nature'],
        k: [12, 3],
        o: 2
      },
      truck: {
        a: 'Delivery Truck',
        b: '1F69A',
        j: ['cars', 'transportation'],
        k: [34, 25],
        o: 2
      },
      movie_camera: {
        a: 'Movie Camera',
        b: '1F3A5',
        j: ['film', 'record'],
        k: [8, 11],
        o: 2
      },
      'flag-ga': {
        a: 'Gabon Flag',
        b: '1F1EC-1F1E6',
        k: [1, 54],
        o: 2
      },
      rage: {
        a: 'Pouting Face',
        b: '1F621',
        j: ['angry', 'mad', 'hate', 'despise'],
        k: [31, 11],
        o: 2
      },
      black_square_for_stop: {
        a: 'Black Square for Stop',
        b: '23F9-FE0F',
        c: '23F9',
        k: [52, 38],
        o: 2
      },
      articulated_lorry: {
        a: 'Articulated Lorry',
        b: '1F69B',
        j: ['vehicle', 'cars', 'transportation', 'express'],
        k: [34, 26],
        o: 2
      },
      angry: {
        a: 'Angry Face',
        b: '1F620',
        j: ['mad', 'face', 'annoyed', 'frustrated'],
        k: [31, 10],
        l: ['>:(', '>:-('],
        o: 2
      },
      cookie: {
        a: 'Cookie',
        b: '1F36A',
        j: ['food', 'snack', 'oreo', 'chocolate', 'sweet', 'dessert'],
        k: [7, 9],
        o: 2
      },
      gb: {
        a: 'United Kingdom Flag',
        b: '1F1EC-1F1E7',
        k: [1, 55],
        n: ['uk', 'flag-gb'],
        o: 2
      },
      tropical_fish: {
        a: 'Tropical Fish',
        b: '1F420',
        j: ['animal', 'swim', 'ocean', 'beach', 'nemo'],
        k: [12, 4],
        o: 2
      },
      'woman-tipping-hand': {
        obsoletes: '1F481',
        a: 'Woman Tipping Hand',
        b: '1F481-200D-2640-FE0F',
        c: '1F481-200D-2640',
        k: [23, 47],
        o: 4
      },
      black_circle_for_record: {
        a: 'Black Circle for Record',
        b: '23FA-FE0F',
        c: '23FA',
        k: [52, 39],
        o: 2
      },
      film_frames: {
        a: 'Film Frames',
        b: '1F39E-FE0F',
        c: '1F39E',
        k: [8, 4],
        o: 2
      },
      film_projector: {
        a: 'Film Projector',
        b: '1F4FD-FE0F',
        c: '1F4FD',
        j: ['video', 'tape', 'record', 'movie'],
        k: [27, 26],
        o: 2
      },
      'flag-gd': {
        a: 'Grenada Flag',
        b: '1F1EC-1F1E9',
        k: [1, 56],
        o: 2
      },
      blowfish: {
        a: 'Blowfish',
        b: '1F421',
        j: ['animal', 'nature', 'food', 'sea', 'ocean'],
        k: [12, 5],
        o: 2
      },
      face_with_symbols_on_mouth: {
        a: 'Serious Face with Symbols Covering Mouth',
        b: '1F92C',
        k: [38, 46],
        n: ['serious_face_with_symbols_covering_mouth'],
        o: 5
      },
      birthday: {
        a: 'Birthday Cake',
        b: '1F382',
        j: ['food', 'dessert', 'cake'],
        k: [7, 33],
        o: 2
      },
      eject: {
        a: 'Eject',
        b: '23CF-FE0F',
        c: '23CF',
        k: [52, 25],
        o: 2
      },
      tractor: {
        a: 'Tractor',
        b: '1F69C',
        j: ['vehicle', 'car', 'farming', 'agriculture'],
        k: [34, 27],
        o: 2
      },
      'flag-ge': {
        a: 'Georgia Flag',
        b: '1F1EC-1F1EA',
        k: [2, 0],
        o: 2
      },
      smiling_imp: {
        a: 'Smiling Face with Horns',
        b: '1F608',
        j: ['devil', 'horns'],
        k: [30, 43],
        o: 2
      },
      racing_car: {
        a: 'Racing Car',
        b: '1F3CE-FE0F',
        c: '1F3CE',
        j: ['sports', 'race', 'fast', 'formula', 'f1'],
        k: [10, 33],
        o: 2
      },
      cinema: {
        a: 'Cinema',
        b: '1F3A6',
        j: ['blue-square', 'record', 'film', 'movie', 'curtain', 'stage', 'theater'],
        k: [8, 12],
        o: 2
      },
      clapper: {
        a: 'Clapper Board',
        b: '1F3AC',
        j: ['movie', 'film', 'record'],
        k: [8, 18],
        o: 2
      },
      shark: {
        a: 'Shark',
        b: '1F988',
        j: ['animal', 'nature', 'fish', 'sea', 'ocean', 'jaws', 'fins', 'beach'],
        k: [42, 26],
        o: 4
      },
      cake: {
        a: 'Shortcake',
        b: '1F370',
        j: ['food', 'dessert'],
        k: [7, 15],
        o: 2
      },
      'man-raising-hand': {
        a: 'Man Raising Hand',
        b: '1F64B-200D-2642-FE0F',
        c: '1F64B-200D-2642',
        k: [32, 53],
        o: 4
      },
      octopus: {
        a: 'Octopus',
        b: '1F419',
        j: ['animal', 'creature', 'ocean', 'sea', 'nature', 'beach'],
        k: [11, 54],
        o: 2
      },
      'woman-raising-hand': {
        obsoletes: '1F64B',
        a: 'Woman Raising Hand',
        b: '1F64B-200D-2640-FE0F',
        c: '1F64B-200D-2640',
        k: [32, 47],
        o: 4
      },
      'flag-gf': {
        a: 'French Guiana Flag',
        b: '1F1EC-1F1EB',
        k: [2, 1],
        o: 2
      },
      tv: {
        a: 'Television',
        b: '1F4FA',
        j: ['technology', 'program', 'oldschool', 'show', 'television'],
        k: [27, 23],
        o: 2
      },
      imp: {
        a: 'Imp',
        b: '1F47F',
        j: ['devil', 'angry', 'horns'],
        k: [23, 45],
        o: 2
      },
      cupcake: {
        a: 'Cupcake',
        b: '1F9C1',
        k: [44, 9],
        o: 11
      },
      racing_motorcycle: {
        a: 'Racing Motorcycle',
        b: '1F3CD-FE0F',
        c: '1F3CD',
        k: [10, 32],
        o: 2
      },
      low_brightness: {
        a: 'Low Brightness Symbol',
        b: '1F505',
        j: ['sun', 'afternoon', 'warm', 'summer'],
        k: [27, 33],
        o: 2
      },
      shell: {
        a: 'Spiral Shell',
        b: '1F41A',
        j: ['nature', 'sea', 'beach'],
        k: [11, 55],
        o: 2
      },
      'flag-gg': {
        a: 'Guernsey Flag',
        b: '1F1EC-1F1EC',
        k: [2, 2],
        o: 2
      },
      high_brightness: {
        a: 'High Brightness Symbol',
        b: '1F506',
        j: ['sun', 'light'],
        k: [27, 34],
        o: 2
      },
      deaf_person: {
        a: 'Deaf Person',
        b: '1F9CF',
        k: [45, 10],
        o: 12
      },
      skull: {
        a: 'Skull',
        b: '1F480',
        j: ['dead', 'skeleton', 'creepy', 'death'],
        k: [23, 46],
        o: 2
      },
      motor_scooter: {
        a: 'Motor Scooter',
        b: '1F6F5',
        j: ['vehicle', 'vespa', 'sasha'],
        k: [36, 54],
        o: 4
      },
      camera: {
        a: 'Camera',
        b: '1F4F7',
        j: ['gadgets', 'photography'],
        k: [27, 20],
        o: 2
      },
      pie: {
        a: 'Pie',
        b: '1F967',
        k: [41, 54],
        o: 5
      },
      'flag-gh': {
        a: 'Ghana Flag',
        b: '1F1EC-1F1ED',
        k: [2, 3],
        o: 2
      },
      deaf_man: {
        a: 'Deaf Man',
        b: '1F9CF-200D-2642-FE0F',
        c: '1F9CF-200D-2642',
        k: [45, 4],
        o: 12
      },
      skull_and_crossbones: {
        a: 'Skull and Crossbones',
        b: '2620-FE0F',
        c: '2620',
        j: ['poison', 'danger', 'deadly', 'scary', 'death', 'pirate', 'evil'],
        k: [53, 8],
        o: 2
      },
      camera_with_flash: {
        a: 'Camera with Flash',
        b: '1F4F8',
        k: [27, 21],
        o: 2
      },
      signal_strength: {
        a: 'Antenna with Bars',
        b: '1F4F6',
        j: ['blue-square', 'reception', 'phone', 'internet', 'connection', 'wifi', 'bluetooth', 'bars'],
        k: [27, 19],
        o: 2
      },
      chocolate_bar: {
        a: 'Chocolate Bar',
        b: '1F36B',
        j: ['food', 'snack', 'dessert', 'sweet'],
        k: [7, 10],
        o: 2
      },
      manual_wheelchair: {
        a: 'Manual Wheelchair',
        b: '1F9BD',
        k: [44, 5],
        o: 12
      },
      snail: {
        a: 'Snail',
        b: '1F40C',
        j: ['slow', 'animal', 'shell'],
        k: [11, 40],
        o: 2
      },
      motorized_wheelchair: {
        a: 'Motorized Wheelchair',
        b: '1F9BC',
        k: [44, 4],
        o: 12
      },
      'flag-gi': {
        a: 'Gibraltar Flag',
        b: '1F1EC-1F1EE',
        k: [2, 4],
        o: 2
      },
      hankey: {
        a: 'Pile of Poo',
        b: '1F4A9',
        k: [25, 51],
        n: ['poop', 'shit'],
        o: 2
      },
      vibration_mode: {
        a: 'Vibration Mode',
        b: '1F4F3',
        j: ['orange-square', 'phone'],
        k: [27, 16],
        o: 2
      },
      deaf_woman: {
        a: 'Deaf Woman',
        b: '1F9CF-200D-2640-FE0F',
        c: '1F9CF-200D-2640',
        k: [44, 55],
        o: 12
      },
      butterfly: {
        a: 'Butterfly',
        b: '1F98B',
        j: ['animal', 'insect', 'nature', 'caterpillar'],
        k: [42, 29],
        o: 4
      },
      video_camera: {
        a: 'Video Camera',
        b: '1F4F9',
        j: ['film', 'record'],
        k: [27, 22],
        o: 2
      },
      candy: {
        a: 'Candy',
        b: '1F36C',
        j: ['snack', 'dessert', 'sweet', 'lolly'],
        k: [7, 11],
        o: 2
      },
      auto_rickshaw: {
        a: 'Auto Rickshaw',
        b: '1F6FA',
        k: [37, 2],
        o: 12
      },
      mobile_phone_off: {
        a: 'Mobile Phone off',
        b: '1F4F4',
        j: ['mute', 'orange-square', 'silence', 'quiet'],
        k: [27, 17],
        o: 2
      },
      clown_face: {
        a: 'Clown Face',
        b: '1F921',
        j: ['face'],
        k: [38, 18],
        o: 4
      },
      lollipop: {
        a: 'Lollipop',
        b: '1F36D',
        j: ['food', 'snack', 'candy', 'sweet'],
        k: [7, 12],
        o: 2
      },
      'flag-gl': {
        a: 'Greenland Flag',
        b: '1F1EC-1F1F1',
        k: [2, 5],
        o: 2
      },
      vhs: {
        a: 'Videocassette',
        b: '1F4FC',
        j: ['record', 'video', 'oldschool', '90s', '80s'],
        k: [27, 25],
        o: 2
      },
      bug: {
        a: 'Bug',
        b: '1F41B',
        j: ['animal', 'insect', 'nature', 'worm'],
        k: [11, 56],
        o: 2
      },
      bike: {
        a: 'Bicycle',
        b: '1F6B2',
        j: ['sports', 'bicycle', 'exercise', 'hipster'],
        k: [35, 9],
        o: 2
      },
      'man-bowing': {
        obsoletes: '1F647',
        a: 'Man Bowing',
        b: '1F647-200D-2642-FE0F',
        c: '1F647-200D-2642',
        k: [32, 32],
        o: 4
      },
      female_sign: {
        a: 'Female Sign',
        b: '2640-FE0F',
        c: '2640',
        k: [53, 18],
        o: 4
      },
      japanese_ogre: {
        a: 'Japanese Ogre',
        b: '1F479',
        j: ['monster', 'red', 'mask', 'halloween', 'scary', 'creepy', 'devil', 'demon', 'japanese', 'ogre'],
        k: [23, 34],
        o: 2
      },
      custard: {
        a: 'Custard',
        b: '1F36E',
        j: ['dessert', 'food'],
        k: [7, 13],
        o: 2
      },
      ant: {
        a: 'Ant',
        b: '1F41C',
        j: ['animal', 'insect', 'nature', 'bug'],
        k: [12, 0],
        o: 2
      },
      mag: {
        a: 'Left-Pointing Magnifying Glass',
        b: '1F50D',
        j: ['search', 'zoom', 'find', 'detective'],
        k: [27, 41],
        o: 2
      },
      'flag-gm': {
        a: 'Gambia Flag',
        b: '1F1EC-1F1F2',
        k: [2, 6],
        o: 2
      },
      honey_pot: {
        a: 'Honey Pot',
        b: '1F36F',
        j: ['bees', 'sweet', 'kitchen'],
        k: [7, 14],
        o: 2
      },
      'woman-bowing': {
        a: 'Woman Bowing',
        b: '1F647-200D-2640-FE0F',
        c: '1F647-200D-2640',
        k: [32, 26],
        o: 4
      },
      male_sign: {
        a: 'Male Sign',
        b: '2642-FE0F',
        c: '2642',
        k: [53, 19],
        o: 4
      },
      mag_right: {
        a: 'Right-Pointing Magnifying Glass',
        b: '1F50E',
        j: ['search', 'zoom', 'find', 'detective'],
        k: [27, 42],
        o: 2
      },
      japanese_goblin: {
        a: 'Japanese Goblin',
        b: '1F47A',
        j: ['red', 'evil', 'mask', 'monster', 'scary', 'creepy', 'japanese', 'goblin'],
        k: [23, 35],
        o: 2
      },
      scooter: {
        a: 'Scooter',
        b: '1F6F4',
        k: [36, 53],
        o: 4
      },
      bee: {
        a: 'Honeybee',
        b: '1F41D',
        k: [12, 1],
        n: ['honeybee'],
        o: 2
      },
      'flag-gn': {
        a: 'Guinea Flag',
        b: '1F1EC-1F1F3',
        k: [2, 7],
        o: 2
      },
      candle: {
        a: 'Candle',
        b: '1F56F-FE0F',
        c: '1F56F',
        j: ['fire', 'wax'],
        k: [29, 6],
        o: 2
      },
      skateboard: {
        a: 'Skateboard',
        b: '1F6F9',
        k: [37, 1],
        o: 11
      },
      medical_symbol: {
        a: 'Medical Symbol',
        b: '2695-FE0F',
        c: '2695',
        k: [53, 44],
        n: ['staff_of_aesculapius'],
        o: 4
      },
      ghost: {
        a: 'Ghost',
        b: '1F47B',
        j: ['halloween', 'spooky', 'scary'],
        k: [23, 36],
        o: 2
      },
      beetle: {
        a: 'Lady Beetle',
        b: '1F41E',
        j: ['animal', 'insect', 'nature', 'ladybug'],
        k: [12, 2],
        o: 2
      },
      'flag-gp': {
        a: 'Guadeloupe Flag',
        b: '1F1EC-1F1F5',
        k: [2, 8],
        o: 2
      },
      baby_bottle: {
        a: 'Baby Bottle',
        b: '1F37C',
        j: ['food', 'container', 'milk'],
        k: [7, 27],
        o: 2
      },
      infinity: {
        a: 'Infinity',
        b: '267E-FE0F',
        c: '267E',
        k: [53, 39],
        o: 11
      },
      glass_of_milk: {
        a: 'Glass of Milk',
        b: '1F95B',
        k: [41, 42],
        o: 4
      },
      'man-facepalming': {
        a: 'Man Facepalming',
        b: '1F926-200D-2642-FE0F',
        c: '1F926-200D-2642',
        k: [38, 29],
        o: 4
      },
      cricket: {
        a: 'Cricket',
        b: '1F997',
        j: ['sports'],
        k: [42, 41],
        o: 5
      },
      busstop: {
        a: 'Bus Stop',
        b: '1F68F',
        j: ['transportation', 'wait'],
        k: [34, 14],
        o: 2
      },
      'flag-gq': {
        a: 'Equatorial Guinea Flag',
        b: '1F1EC-1F1F6',
        k: [2, 9],
        o: 2
      },
      alien: {
        a: 'Extraterrestrial Alien',
        b: '1F47D',
        j: ['UFO', 'paul', 'weird', 'outer_space'],
        k: [23, 43],
        o: 2
      },
      bulb: {
        a: 'Electric Light Bulb',
        b: '1F4A1',
        j: ['light', 'electricity', 'idea'],
        k: [25, 43],
        o: 2
      },
      'woman-facepalming': {
        a: 'Woman Facepalming',
        b: '1F926-200D-2640-FE0F',
        c: '1F926-200D-2640',
        k: [38, 23],
        o: 4
      },
      spider: {
        a: 'Spider',
        b: '1F577-FE0F',
        c: '1F577',
        j: ['animal', 'arachnid'],
        k: [29, 34],
        o: 2
      },
      space_invader: {
        a: 'Alien Monster',
        b: '1F47E',
        j: ['game', 'arcade', 'play'],
        k: [23, 44],
        o: 2
      },
      motorway: {
        a: 'Motorway',
        b: '1F6E3-FE0F',
        c: '1F6E3',
        j: ['road', 'cupertino', 'interstate', 'highway'],
        k: [36, 45],
        o: 2
      },
      'flag-gr': {
        a: 'Greece Flag',
        b: '1F1EC-1F1F7',
        k: [2, 10],
        o: 2
      },
      recycle: {
        a: 'Black Universal Recycling Symbol',
        b: '267B-FE0F',
        c: '267B',
        j: ['arrow', 'environment', 'garbage', 'trash'],
        k: [53, 38],
        o: 2
      },
      coffee: {
        a: 'Hot Beverage',
        b: '2615',
        j: ['beverage', 'caffeine', 'latte', 'espresso'],
        k: [53, 0],
        o: 2
      },
      flashlight: {
        a: 'Electric Torch',
        b: '1F526',
        j: ['dark', 'camping', 'sight', 'night'],
        k: [28, 9],
        o: 2
      },
      spider_web: {
        a: 'Spider Web',
        b: '1F578-FE0F',
        c: '1F578',
        j: ['animal', 'insect', 'arachnid', 'silk'],
        k: [29, 35],
        o: 2
      },
      izakaya_lantern: {
        a: 'Izakaya Lantern',
        b: '1F3EE',
        j: ['light', 'paper', 'halloween', 'spooky'],
        k: [11, 8],
        n: ['lantern'],
        o: 2
      },
      'flag-gs': {
        a: 'South Georgia & South Sandwich Islands Flag',
        b: '1F1EC-1F1F8',
        k: [2, 11],
        o: 2
      },
      fleur_de_lis: {
        a: 'Fleur De Lis',
        b: '269C-FE0F',
        c: '269C',
        j: ['decorative', 'scout'],
        k: [53, 49],
        o: 2
      },
      robot_face: {
        a: 'Robot Face',
        b: '1F916',
        k: [37, 29],
        o: 2
      },
      railway_track: {
        a: 'Railway Track',
        b: '1F6E4-FE0F',
        c: '1F6E4',
        j: ['train', 'transportation'],
        k: [36, 46],
        o: 2
      },
      tea: {
        a: 'Teacup Without Handle',
        b: '1F375',
        j: ['drink', 'bowl', 'breakfast', 'green', 'british'],
        k: [7, 20],
        o: 2
      },
      'flag-gt': {
        a: 'Guatemala Flag',
        b: '1F1EC-1F1F9',
        k: [2, 12],
        o: 2
      },
      oil_drum: {
        a: 'Oil Drum',
        b: '1F6E2-FE0F',
        c: '1F6E2',
        j: ['barrell'],
        k: [36, 44],
        o: 2
      },
      diya_lamp: {
        a: 'Diya Lamp',
        b: '1FA94',
        k: [52, 8],
        o: 12
      },
      sake: {
        a: 'Sake Bottle and Cup',
        b: '1F376',
        j: ['wine', 'drink', 'drunk', 'beverage', 'japanese', 'alcohol', 'booze'],
        k: [7, 21],
        o: 2
      },
      trident: {
        a: 'Trident Emblem',
        b: '1F531',
        j: ['weapon', 'spear'],
        k: [28, 20],
        o: 2
      },
      'man-shrugging': {
        a: 'Man Shrugging',
        b: '1F937-200D-2642-FE0F',
        c: '1F937-200D-2642',
        k: [39, 41],
        o: 4
      },
      smiley_cat: {
        a: 'Smiling Cat Face with Open Mouth',
        b: '1F63A',
        j: ['animal', 'cats', 'happy', 'smile'],
        k: [31, 36],
        o: 2
      },
      scorpion: {
        a: 'Scorpion',
        b: '1F982',
        j: ['animal', 'arachnid'],
        k: [42, 20],
        o: 2
      },
      'woman-shrugging': {
        a: 'Woman Shrugging',
        b: '1F937-200D-2640-FE0F',
        c: '1F937-200D-2640',
        k: [39, 35],
        o: 4
      },
      notebook_with_decorative_cover: {
        a: 'Notebook with Decorative Cover',
        b: '1F4D4',
        j: ['classroom', 'notes', 'record', 'paper', 'study'],
        k: [26, 42],
        o: 2
      },
      fuelpump: {
        a: 'Fuel Pump',
        b: '26FD',
        j: ['gas station', 'petroleum'],
        k: [54, 38],
        o: 2
      },
      name_badge: {
        a: 'Name Badge',
        b: '1F4DB',
        j: ['fire', 'forbid'],
        k: [26, 49],
        o: 2
      },
      mosquito: {
        a: 'Mosquito',
        b: '1F99F',
        k: [42, 49],
        o: 11
      },
      'flag-gu': {
        a: 'Guam Flag',
        b: '1F1EC-1F1FA',
        k: [2, 13],
        o: 2
      },
      smile_cat: {
        a: 'Grinning Cat Face with Smiling Eyes',
        b: '1F638',
        j: ['animal', 'cats', 'smile'],
        k: [31, 34],
        o: 2
      },
      champagne: {
        a: 'Bottle with Popping Cork',
        b: '1F37E',
        j: ['drink', 'wine', 'bottle', 'celebration'],
        k: [7, 29],
        o: 2
      },
      joy_cat: {
        a: 'Cat Face with Tears of Joy',
        b: '1F639',
        j: ['animal', 'cats', 'haha', 'happy', 'tears'],
        k: [31, 35],
        o: 2
      },
      closed_book: {
        a: 'Closed Book',
        b: '1F4D5',
        j: ['read', 'library', 'knowledge', 'textbook', 'learn'],
        k: [26, 43],
        o: 2
      },
      rotating_light: {
        a: 'Police Cars Revolving Light',
        b: '1F6A8',
        j: ['police', 'ambulance', '911', 'emergency', 'alert', 'error', 'pinged', 'law', 'legal'],
        k: [34, 56],
        o: 2
      },
      microbe: {
        a: 'Microbe',
        b: '1F9A0',
        k: [42, 50],
        o: 11
      },
      'flag-gw': {
        a: 'Guinea-Bissau Flag',
        b: '1F1EC-1F1FC',
        k: [2, 14],
        o: 2
      },
      wine_glass: {
        a: 'Wine Glass',
        b: '1F377',
        j: ['drink', 'beverage', 'drunk', 'alcohol', 'booze'],
        k: [7, 22],
        o: 2
      },
      beginner: {
        a: 'Japanese Symbol for Beginner',
        b: '1F530',
        j: ['badge', 'shield'],
        k: [28, 19],
        o: 2
      },
      bouquet: {
        a: 'Bouquet',
        b: '1F490',
        j: ['flowers', 'nature', 'spring'],
        k: [25, 26],
        o: 2
      },
      heart_eyes_cat: {
        a: 'Smiling Cat Face with Heart-Shaped Eyes',
        b: '1F63B',
        j: ['animal', 'love', 'like', 'affection', 'cats', 'valentines', 'heart'],
        k: [31, 37],
        o: 2
      },
      'male-doctor': {
        a: 'Male Doctor',
        b: '1F468-200D-2695-FE0F',
        c: '1F468-200D-2695',
        k: [17, 2],
        o: 4
      },
      book: {
        a: 'Open Book',
        b: '1F4D6',
        k: [26, 44],
        n: ['open_book'],
        o: 2
      },
      traffic_light: {
        a: 'Horizontal Traffic Light',
        b: '1F6A5',
        j: ['transportation', 'signal'],
        k: [34, 53],
        o: 2
      },
      cocktail: {
        a: 'Cocktail Glass',
        b: '1F378',
        j: ['drink', 'drunk', 'alcohol', 'beverage', 'booze', 'mojito'],
        k: [7, 23],
        o: 2
      },
      o: {
        a: 'Heavy Large Circle',
        b: '2B55',
        j: ['circle', 'round'],
        k: [55, 43],
        o: 2
      },
      'flag-gy': {
        a: 'Guyana Flag',
        b: '1F1EC-1F1FE',
        k: [2, 15],
        o: 2
      },
      'female-doctor': {
        a: 'Female Doctor',
        b: '1F469-200D-2695-FE0F',
        c: '1F469-200D-2695',
        k: [19, 44],
        o: 4
      },
      smirk_cat: {
        a: 'Cat Face with Wry Smile',
        b: '1F63C',
        j: ['animal', 'cats', 'smirk'],
        k: [31, 38],
        o: 2
      },
      green_book: {
        a: 'Green Book',
        b: '1F4D7',
        j: ['read', 'library', 'knowledge', 'study'],
        k: [26, 45],
        o: 2
      },
      cherry_blossom: {
        a: 'Cherry Blossom',
        b: '1F338',
        j: ['nature', 'plant', 'spring', 'flower'],
        k: [6, 16],
        o: 2
      },
      'flag-hk': {
        a: 'Hong Kong Sar China Flag',
        b: '1F1ED-1F1F0',
        k: [2, 16],
        o: 2
      },
      vertical_traffic_light: {
        a: 'Vertical Traffic Light',
        b: '1F6A6',
        j: ['transportation', 'driving'],
        k: [34, 54],
        o: 2
      },
      white_check_mark: {
        a: 'White Heavy Check Mark',
        b: '2705',
        j: ['green-square', 'ok', 'agree', 'vote', 'election', 'answer', 'tick'],
        k: [54, 40],
        o: 2
      },
      tropical_drink: {
        a: 'Tropical Drink',
        b: '1F379',
        j: ['beverage', 'cocktail', 'summer', 'beach', 'alcohol', 'booze', 'mojito'],
        k: [7, 24],
        o: 2
      },
      kissing_cat: {
        a: 'Kissing Cat Face with Closed Eyes',
        b: '1F63D',
        j: ['animal', 'cats', 'kiss'],
        k: [31, 39],
        o: 2
      },
      'flag-hm': {
        a: 'Heard & Mcdonald Islands Flag',
        b: '1F1ED-1F1F2',
        k: [2, 17],
        o: 2
      },
      octagonal_sign: {
        a: 'Octagonal Sign',
        b: '1F6D1',
        k: [36, 39],
        o: 4
      },
      white_flower: {
        a: 'White Flower',
        b: '1F4AE',
        j: ['japanese', 'spring'],
        k: [26, 4],
        o: 2
      },
      ballot_box_with_check: {
        a: 'Ballot Box with Check',
        b: '2611-FE0F',
        c: '2611',
        j: ['ok', 'agree', 'confirm', 'black-square', 'vote', 'election', 'yes', 'tick'],
        k: [52, 55],
        o: 2
      },
      blue_book: {
        a: 'Blue Book',
        b: '1F4D8',
        j: ['read', 'library', 'knowledge', 'learn', 'study'],
        k: [26, 46],
        o: 2
      },
      beer: {
        a: 'Beer Mug',
        b: '1F37A',
        j: ['relax', 'beverage', 'drink', 'drunk', 'party', 'pub', 'summer', 'alcohol', 'booze'],
        k: [7, 25],
        o: 2
      },
      construction: {
        a: 'Construction Sign',
        b: '1F6A7',
        j: ['wip', 'progress', 'caution', 'warning'],
        k: [34, 55],
        o: 2
      },
      rosette: {
        a: 'Rosette',
        b: '1F3F5-FE0F',
        c: '1F3F5',
        j: ['flower', 'decoration', 'military'],
        k: [11, 18],
        o: 2
      },
      heavy_check_mark: {
        a: 'Heavy Check Mark',
        b: '2714-FE0F',
        c: '2714',
        j: ['ok', 'nike', 'answer', 'yes', 'tick'],
        k: [55, 12],
        o: 2
      },
      scream_cat: {
        a: 'Weary Cat Face',
        b: '1F640',
        j: ['animal', 'cats', 'munch', 'scared', 'scream'],
        k: [31, 42],
        o: 2
      },
      orange_book: {
        a: 'Orange Book',
        b: '1F4D9',
        j: ['read', 'library', 'knowledge', 'textbook', 'study'],
        k: [26, 47],
        o: 2
      },
      beers: {
        a: 'Clinking Beer Mugs',
        b: '1F37B',
        j: ['relax', 'beverage', 'drink', 'drunk', 'party', 'pub', 'summer', 'alcohol', 'booze'],
        k: [7, 26],
        o: 2
      },
      'male-student': {
        a: 'Male Student',
        b: '1F468-200D-1F393',
        k: [14, 50],
        o: 4
      },
      'flag-hn': {
        a: 'Honduras Flag',
        b: '1F1ED-1F1F3',
        k: [2, 18],
        o: 2
      },
      crying_cat_face: {
        a: 'Crying Cat Face',
        b: '1F63F',
        j: ['animal', 'tears', 'weep', 'sad', 'cats', 'upset', 'cry'],
        k: [31, 41],
        o: 2
      },
      anchor: {
        a: 'Anchor',
        b: '2693',
        j: ['ship', 'ferry', 'sea', 'boat'],
        k: [53, 42],
        o: 2
      },
      'flag-hr': {
        a: 'Croatia Flag',
        b: '1F1ED-1F1F7',
        k: [2, 19],
        o: 2
      },
      heavy_multiplication_x: {
        a: 'Heavy Multiplication X',
        b: '2716-FE0F',
        c: '2716',
        j: ['math', 'calculation'],
        k: [55, 13],
        o: 2
      },
      'female-student': {
        a: 'Female Student',
        b: '1F469-200D-1F393',
        k: [17, 40],
        o: 4
      },
      rose: {
        a: 'Rose',
        b: '1F339',
        j: ['flowers', 'valentines', 'love', 'spring'],
        k: [6, 17],
        o: 2
      },
      books: {
        a: 'Books',
        b: '1F4DA',
        j: ['literature', 'library', 'study'],
        k: [26, 48],
        o: 2
      },
      clinking_glasses: {
        a: 'Clinking Glasses',
        b: '1F942',
        j: ['beverage', 'drink', 'party', 'alcohol', 'celebrate', 'cheers'],
        k: [41, 18],
        o: 4
      },
      x: {
        a: 'Cross Mark',
        b: '274C',
        j: ['no', 'delete', 'remove', 'cancel'],
        k: [55, 21],
        o: 2
      },
      pouting_cat: {
        a: 'Pouting Cat Face',
        b: '1F63E',
        j: ['animal', 'cats'],
        k: [31, 40],
        o: 2
      },
      wilted_flower: {
        a: 'Wilted Flower',
        b: '1F940',
        j: ['plant', 'nature', 'flower'],
        k: [41, 16],
        o: 4
      },
      boat: {
        a: 'Sailboat',
        b: '26F5',
        k: [54, 16],
        n: ['sailboat'],
        o: 2
      },
      'flag-ht': {
        a: 'Haiti Flag',
        b: '1F1ED-1F1F9',
        k: [2, 20],
        o: 2
      },
      tumbler_glass: {
        a: 'Tumbler Glass',
        b: '1F943',
        j: ['drink', 'beverage', 'drunk', 'alcohol', 'liquor', 'booze', 'bourbon', 'scotch', 'whisky', 'glass', 'shot'],
        k: [41, 19],
        o: 4
      },
      notebook: {
        a: 'Notebook',
        b: '1F4D3',
        j: ['stationery', 'record', 'notes', 'paper', 'study'],
        k: [26, 41],
        o: 2
      },
      'male-teacher': {
        a: 'Male Teacher',
        b: '1F468-200D-1F3EB',
        k: [15, 11],
        o: 4
      },
      ledger: {
        a: 'Ledger',
        b: '1F4D2',
        j: ['notes', 'paper'],
        k: [26, 40],
        o: 2
      },
      'flag-hu': {
        a: 'Hungary Flag',
        b: '1F1ED-1F1FA',
        k: [2, 21],
        o: 2
      },
      cup_with_straw: {
        a: 'Cup with Straw',
        b: '1F964',
        k: [41, 51],
        o: 5
      },
      hibiscus: {
        a: 'Hibiscus',
        b: '1F33A',
        j: ['plant', 'vegetable', 'flowers', 'beach'],
        k: [6, 18],
        o: 2
      },
      see_no_evil: {
        a: 'See-No-Evil Monkey',
        b: '1F648',
        j: ['monkey', 'animal', 'nature', 'haha'],
        k: [32, 44],
        o: 2
      },
      canoe: {
        a: 'Canoe',
        b: '1F6F6',
        j: ['boat', 'paddle', 'water', 'ship'],
        k: [36, 55],
        o: 4
      },
      negative_squared_cross_mark: {
        a: 'Negative Squared Cross Mark',
        b: '274E',
        j: ['x', 'green-square', 'no', 'deny'],
        k: [55, 22],
        o: 2
      },
      'flag-ic': {
        a: 'Canary Islands Flag',
        b: '1F1EE-1F1E8',
        k: [2, 22],
        o: 2
      },
      beverage_box: {
        a: 'Beverage Box',
        b: '1F9C3',
        k: [44, 11],
        o: 12
      },
      speedboat: {
        a: 'Speedboat',
        b: '1F6A4',
        j: ['ship', 'transportation', 'vehicle', 'summer'],
        k: [34, 52],
        o: 2
      },
      heavy_plus_sign: {
        a: 'Heavy Plus Sign',
        b: '2795',
        j: ['math', 'calculation', 'addition', 'more', 'increase'],
        k: [55, 29],
        o: 2
      },
      sunflower: {
        a: 'Sunflower',
        b: '1F33B',
        j: ['nature', 'plant', 'fall'],
        k: [6, 19],
        o: 2
      },
      page_with_curl: {
        a: 'Page with Curl',
        b: '1F4C3',
        j: ['documents', 'office', 'paper'],
        k: [26, 25],
        o: 2
      },
      'female-teacher': {
        a: 'Female Teacher',
        b: '1F469-200D-1F3EB',
        k: [18, 1],
        o: 4
      },
      hear_no_evil: {
        a: 'Hear-No-Evil Monkey',
        b: '1F649',
        j: ['animal', 'monkey', 'nature'],
        k: [32, 45],
        o: 2
      },
      mate_drink: {
        a: 'Mate Drink',
        b: '1F9C9',
        k: [44, 17],
        o: 12
      },
      passenger_ship: {
        a: 'Passenger Ship',
        b: '1F6F3-FE0F',
        c: '1F6F3',
        j: ['yacht', 'cruise', 'ferry'],
        k: [36, 52],
        o: 2
      },
      scroll: {
        a: 'Scroll',
        b: '1F4DC',
        j: ['documents', 'ancient', 'history', 'paper'],
        k: [26, 50],
        o: 2
      },
      blossom: {
        a: 'Blossom',
        b: '1F33C',
        j: ['nature', 'flowers', 'yellow'],
        k: [6, 20],
        o: 2
      },
      'flag-id': {
        a: 'Indonesia Flag',
        b: '1F1EE-1F1E9',
        k: [2, 23],
        o: 2
      },
      speak_no_evil: {
        a: 'Speak-No-Evil Monkey',
        b: '1F64A',
        j: ['monkey', 'animal', 'nature', 'omg'],
        k: [32, 46],
        o: 2
      },
      heavy_minus_sign: {
        a: 'Heavy Minus Sign',
        b: '2796',
        j: ['math', 'calculation', 'subtract', 'less'],
        k: [55, 30],
        o: 2
      },
      'flag-ie': {
        a: 'Ireland Flag',
        b: '1F1EE-1F1EA',
        k: [2, 24],
        o: 2
      },
      ice_cube: {
        a: 'Ice Cube',
        b: '1F9CA',
        k: [44, 18],
        o: 12
      },
      page_facing_up: {
        a: 'Page Facing Up',
        b: '1F4C4',
        j: ['documents', 'office', 'paper', 'information'],
        k: [26, 26],
        o: 2
      },
      'male-judge': {
        a: 'Male Judge',
        b: '1F468-200D-2696-FE0F',
        c: '1F468-200D-2696',
        k: [17, 8],
        o: 4
      },
      tulip: {
        a: 'Tulip',
        b: '1F337',
        j: ['flowers', 'plant', 'nature', 'summer', 'spring'],
        k: [6, 15],
        o: 2
      },
      ferry: {
        a: 'Ferry',
        b: '26F4-FE0F',
        c: '26F4',
        j: ['boat', 'ship', 'yacht'],
        k: [54, 15],
        o: 2
      },
      kiss: {
        a: 'Kiss Mark',
        b: '1F48B',
        j: ['face', 'lips', 'love', 'like', 'affection', 'valentines'],
        k: [25, 21],
        o: 2
      },
      heavy_division_sign: {
        a: 'Heavy Division Sign',
        b: '2797',
        j: ['divide', 'math', 'calculation'],
        k: [55, 31],
        o: 2
      },
      newspaper: {
        a: 'Newspaper',
        b: '1F4F0',
        j: ['press', 'headline'],
        k: [27, 13],
        o: 2
      },
      'female-judge': {
        a: 'Female Judge',
        b: '1F469-200D-2696-FE0F',
        c: '1F469-200D-2696',
        k: [19, 50],
        o: 4
      },
      seedling: {
        a: 'Seedling',
        b: '1F331',
        j: ['plant', 'nature', 'grass', 'lawn', 'spring'],
        k: [6, 9],
        o: 2
      },
      love_letter: {
        a: 'Love Letter',
        b: '1F48C',
        j: ['email', 'like', 'affection', 'envelope', 'valentines'],
        k: [25, 22],
        o: 2
      },
      chopsticks: {
        a: 'Chopsticks',
        b: '1F962',
        k: [41, 49],
        o: 5
      },
      motor_boat: {
        a: 'Motor Boat',
        b: '1F6E5-FE0F',
        c: '1F6E5',
        j: ['ship'],
        k: [36, 47],
        o: 2
      },
      'flag-il': {
        a: 'Israel Flag',
        b: '1F1EE-1F1F1',
        k: [2, 25],
        o: 2
      },
      curly_loop: {
        a: 'Curly Loop',
        b: '27B0',
        j: ['scribble', 'draw', 'shape', 'squiggle'],
        k: [55, 33],
        o: 2
      },
      'flag-im': {
        a: 'Isle of Man Flag',
        b: '1F1EE-1F1F2',
        k: [2, 26],
        o: 2
      },
      evergreen_tree: {
        a: 'Evergreen Tree',
        b: '1F332',
        j: ['plant', 'nature'],
        k: [6, 10],
        o: 2
      },
      cupid: {
        a: 'Heart with Arrow',
        b: '1F498',
        j: ['love', 'like', 'heart', 'affection', 'valentines'],
        k: [25, 34],
        o: 2
      },
      loop: {
        a: 'Double Curly Loop',
        b: '27BF',
        j: ['tape', 'cassette'],
        k: [55, 34],
        o: 2
      },
      ship: {
        a: 'Ship',
        b: '1F6A2',
        j: ['transportation', 'titanic', 'deploy'],
        k: [34, 33],
        o: 2
      },
      rolled_up_newspaper: {
        a: 'Rolled Up Newspaper',
        b: '1F5DE-FE0F',
        c: '1F5DE',
        k: [30, 23],
        o: 2
      },
      knife_fork_plate: {
        a: 'Knife Fork Plate',
        b: '1F37D-FE0F',
        c: '1F37D',
        k: [7, 28],
        o: 2
      },
      fork_and_knife: {
        a: 'Fork and Knife',
        b: '1F374',
        j: ['cutlery', 'kitchen'],
        k: [7, 19],
        o: 2
      },
      'male-farmer': {
        a: 'Male Farmer',
        b: '1F468-200D-1F33E',
        k: [14, 38],
        o: 4
      },
      bookmark_tabs: {
        a: 'Bookmark Tabs',
        b: '1F4D1',
        j: ['favorite', 'save', 'order', 'tidy'],
        k: [26, 39],
        o: 2
      },
      part_alternation_mark: {
        a: 'Part Alternation Mark',
        b: '303D-FE0F',
        c: '303D',
        j: ['graph', 'presentation', 'stats', 'business', 'economics', 'bad'],
        k: [55, 45],
        o: 2
      },
      'flag-in': {
        a: 'India Flag',
        b: '1F1EE-1F1F3',
        k: [2, 27],
        o: 2
      },
      gift_heart: {
        a: 'Heart with Ribbon',
        b: '1F49D',
        j: ['love', 'valentines'],
        k: [25, 39],
        o: 2
      },
      airplane: {
        a: 'Airplane',
        b: '2708-FE0F',
        c: '2708',
        j: ['vehicle', 'transportation', 'flight', 'fly'],
        k: [54, 41],
        o: 2
      },
      deciduous_tree: {
        a: 'Deciduous Tree',
        b: '1F333',
        j: ['plant', 'nature'],
        k: [6, 11],
        o: 2
      },
      spoon: {
        a: 'Spoon',
        b: '1F944',
        j: ['cutlery', 'kitchen', 'tableware'],
        k: [41, 20],
        o: 4
      },
      'flag-io': {
        a: 'British Indian Ocean Territory Flag',
        b: '1F1EE-1F1F4',
        k: [2, 28],
        o: 2
      },
      palm_tree: {
        a: 'Palm Tree',
        b: '1F334',
        j: ['plant', 'vegetable', 'nature', 'summer', 'beach', 'mojito', 'tropical'],
        k: [6, 12],
        o: 2
      },
      sparkling_heart: {
        a: 'Sparkling Heart',
        b: '1F496',
        j: ['love', 'like', 'affection', 'valentines'],
        k: [25, 32],
        o: 2
      },
      'female-farmer': {
        a: 'Female Farmer',
        b: '1F469-200D-1F33E',
        k: [17, 28],
        o: 4
      },
      eight_spoked_asterisk: {
        a: 'Eight Spoked Asterisk',
        b: '2733-FE0F',
        c: '2733',
        j: ['star', 'sparkle', 'green-square'],
        k: [55, 17],
        o: 2
      },
      small_airplane: {
        a: 'Small Airplane',
        b: '1F6E9-FE0F',
        c: '1F6E9',
        j: ['flight', 'transportation', 'fly', 'vehicle'],
        k: [36, 48],
        o: 2
      },
      bookmark: {
        a: 'Bookmark',
        b: '1F516',
        j: ['favorite', 'label', 'save'],
        k: [27, 50],
        o: 2
      },
      eight_pointed_black_star: {
        a: 'Eight Pointed Black Star',
        b: '2734-FE0F',
        c: '2734',
        j: ['orange-square', 'shape', 'polygon'],
        k: [55, 18],
        o: 2
      },
      heartpulse: {
        a: 'Growing Heart',
        b: '1F497',
        j: ['like', 'love', 'affection', 'valentines', 'pink'],
        k: [25, 33],
        o: 2
      },
      label: {
        a: 'Label',
        b: '1F3F7-FE0F',
        c: '1F3F7',
        j: ['sale', 'tag'],
        k: [11, 19],
        o: 2
      },
      'flag-iq': {
        a: 'Iraq Flag',
        b: '1F1EE-1F1F6',
        k: [2, 29],
        o: 2
      },
      hocho: {
        a: 'Hocho',
        b: '1F52A',
        j: ['knife', 'blade', 'cutlery', 'kitchen', 'weapon'],
        k: [28, 13],
        n: ['knife'],
        o: 2
      },
      cactus: {
        a: 'Cactus',
        b: '1F335',
        j: ['vegetable', 'plant', 'nature'],
        k: [6, 13],
        o: 2
      },
      airplane_departure: {
        a: 'Airplane Departure',
        b: '1F6EB',
        k: [36, 49],
        o: 2
      },
      airplane_arriving: {
        a: 'Airplane Arriving',
        b: '1F6EC',
        k: [36, 50],
        o: 2
      },
      ear_of_rice: {
        a: 'Ear of Rice',
        b: '1F33E',
        j: ['nature', 'plant'],
        k: [6, 22],
        o: 2
      },
      'flag-ir': {
        a: 'Iran Flag',
        b: '1F1EE-1F1F7',
        k: [2, 30],
        o: 2
      },
      moneybag: {
        a: 'Money Bag',
        b: '1F4B0',
        j: ['dollar', 'payment', 'coins', 'sale'],
        k: [26, 6],
        o: 2
      },
      'male-cook': {
        a: 'Male Cook',
        b: '1F468-200D-1F373',
        k: [14, 44],
        o: 4
      },
      heartbeat: {
        a: 'Beating Heart',
        b: '1F493',
        j: ['love', 'like', 'affection', 'valentines', 'pink', 'heart'],
        k: [25, 29],
        o: 2
      },
      sparkle: {
        a: 'Sparkle',
        b: '2747-FE0F',
        c: '2747',
        j: ['stars', 'green-square', 'awesome', 'good', 'fireworks'],
        k: [55, 20],
        o: 2
      },
      amphora: {
        a: 'Amphora',
        b: '1F3FA',
        j: ['vase', 'jar'],
        k: [11, 22],
        o: 2
      },
      yen: {
        a: 'Banknote with Yen Sign',
        b: '1F4B4',
        j: ['money', 'sales', 'japanese', 'dollar', 'currency'],
        k: [26, 10],
        o: 2
      },
      revolving_hearts: {
        a: 'Revolving Hearts',
        b: '1F49E',
        j: ['love', 'like', 'affection', 'valentines'],
        k: [25, 40],
        o: 2
      },
      bangbang: {
        a: 'Double Exclamation Mark',
        b: '203C-FE0F',
        c: '203C',
        j: ['exclamation', 'surprise'],
        k: [52, 10],
        o: 2
      },
      parachute: {
        a: 'Parachute',
        b: '1FA82',
        k: [52, 3],
        o: 12
      },
      herb: {
        a: 'Herb',
        b: '1F33F',
        j: ['vegetable', 'plant', 'medicine', 'weed', 'grass', 'lawn'],
        k: [6, 23],
        o: 2
      },
      'flag-is': {
        a: 'Iceland Flag',
        b: '1F1EE-1F1F8',
        k: [2, 31],
        o: 2
      },
      'female-cook': {
        a: 'Female Cook',
        b: '1F469-200D-1F373',
        k: [17, 34],
        o: 4
      },
      interrobang: {
        a: 'Exclamation Question Mark',
        b: '2049-FE0F',
        c: '2049',
        j: ['wat', 'punctuation', 'surprise'],
        k: [52, 11],
        o: 2
      },
      seat: {
        a: 'Seat',
        b: '1F4BA',
        j: ['sit', 'airplane', 'transport', 'bus', 'flight', 'fly'],
        k: [26, 16],
        o: 2
      },
      dollar: {
        a: 'Banknote with Dollar Sign',
        b: '1F4B5',
        j: ['money', 'sales', 'bill', 'currency'],
        k: [26, 11],
        o: 2
      },
      two_hearts: {
        a: 'Two Hearts',
        b: '1F495',
        j: ['love', 'like', 'affection', 'valentines', 'heart'],
        k: [25, 31],
        o: 2
      },
      it: {
        a: 'Italy Flag',
        b: '1F1EE-1F1F9',
        j: ['italy', 'flag', 'nation', 'country', 'banner'],
        k: [2, 32],
        n: ['flag-it'],
        o: 2
      },
      shamrock: {
        a: 'Shamrock',
        b: '2618-FE0F',
        c: '2618',
        j: ['vegetable', 'plant', 'nature', 'irish', 'clover'],
        k: [53, 1],
        o: 2
      },
      four_leaf_clover: {
        a: 'Four Leaf Clover',
        b: '1F340',
        j: ['vegetable', 'plant', 'nature', 'lucky', 'irish'],
        k: [6, 24],
        o: 2
      },
      euro: {
        a: 'Banknote with Euro Sign',
        b: '1F4B6',
        j: ['money', 'sales', 'dollar', 'currency'],
        k: [26, 12],
        o: 2
      },
      question: {
        a: 'Black Question Mark Ornament',
        b: '2753',
        j: ['doubt', 'confused'],
        k: [55, 23],
        o: 2
      },
      helicopter: {
        a: 'Helicopter',
        b: '1F681',
        j: ['transportation', 'vehicle', 'fly'],
        k: [34, 0],
        o: 2
      },
      heart_decoration: {
        a: 'Heart Decoration',
        b: '1F49F',
        j: ['purple-square', 'love', 'like'],
        k: [25, 41],
        o: 2
      },
      'flag-je': {
        a: 'Jersey Flag',
        b: '1F1EF-1F1EA',
        k: [2, 33],
        o: 2
      },
      'male-mechanic': {
        a: 'Male Mechanic',
        b: '1F468-200D-1F527',
        k: [15, 50],
        o: 4
      },
      suspension_railway: {
        a: 'Suspension Railway',
        b: '1F69F',
        j: ['vehicle', 'transportation'],
        k: [34, 30],
        o: 2
      },
      heavy_heart_exclamation_mark_ornament: {
        a: 'Heavy Heart Exclamation Mark Ornament',
        b: '2763-FE0F',
        c: '2763',
        k: [55, 27],
        o: 2
      },
      'female-mechanic': {
        a: 'Female Mechanic',
        b: '1F469-200D-1F527',
        k: [18, 35],
        o: 4
      },
      'flag-jm': {
        a: 'Jamaica Flag',
        b: '1F1EF-1F1F2',
        k: [2, 34],
        o: 2
      },
      grey_question: {
        a: 'White Question Mark Ornament',
        b: '2754',
        j: ['doubts', 'gray', 'huh', 'confused'],
        k: [55, 24],
        o: 2
      },
      maple_leaf: {
        a: 'Maple Leaf',
        b: '1F341',
        j: ['nature', 'plant', 'vegetable', 'ca', 'fall'],
        k: [6, 25],
        o: 2
      },
      pound: {
        a: 'Banknote with Pound Sign',
        b: '1F4B7',
        j: ['british', 'sterling', 'money', 'sales', 'bills', 'uk', 'england', 'currency'],
        k: [26, 13],
        o: 2
      },
      money_with_wings: {
        a: 'Money with Wings',
        b: '1F4B8',
        j: ['dollar', 'bills', 'payment', 'sale'],
        k: [26, 14],
        o: 2
      },
      'flag-jo': {
        a: 'Jordan Flag',
        b: '1F1EF-1F1F4',
        k: [2, 35],
        o: 2
      },
      fallen_leaf: {
        a: 'Fallen Leaf',
        b: '1F342',
        j: ['nature', 'plant', 'vegetable', 'leaves'],
        k: [6, 26],
        o: 2
      },
      broken_heart: {
        a: 'Broken Heart',
        b: '1F494',
        j: ['sad', 'sorry', 'break', 'heart', 'heartbreak'],
        k: [25, 30],
        l: ['</3'],
        m: '</3',
        o: 2
      },
      grey_exclamation: {
        a: 'White Exclamation Mark Ornament',
        b: '2755',
        j: ['surprise', 'punctuation', 'gray', 'wow', 'warning'],
        k: [55, 25],
        o: 2
      },
      mountain_cableway: {
        a: 'Mountain Cableway',
        b: '1F6A0',
        j: ['transportation', 'vehicle', 'ski'],
        k: [34, 31],
        o: 2
      },
      exclamation: {
        a: 'Heavy Exclamation Mark Symbol',
        b: '2757',
        j: ['heavy_exclamation_mark', 'danger', 'surprise', 'punctuation', 'wow', 'warning'],
        k: [55, 26],
        n: ['heavy_exclamation_mark'],
        o: 2
      },
      leaves: {
        a: 'Leaf Fluttering in Wind',
        b: '1F343',
        j: ['nature', 'plant', 'tree', 'vegetable', 'grass', 'lawn', 'spring'],
        k: [6, 27],
        o: 2
      },
      heart: {
        a: 'Heavy Black Heart',
        b: '2764-FE0F',
        c: '2764',
        j: ['love', 'like', 'valentines'],
        k: [55, 28],
        l: ['<3'],
        m: '<3',
        o: 2
      },
      jp: {
        a: 'Japan Flag',
        b: '1F1EF-1F1F5',
        j: ['japanese', 'nation', 'flag', 'country', 'banner'],
        k: [2, 36],
        n: ['flag-jp'],
        o: 2
      },
      'male-factory-worker': {
        a: 'Male Factory Worker',
        b: '1F468-200D-1F3ED',
        k: [15, 17],
        o: 4
      },
      credit_card: {
        a: 'Credit Card',
        b: '1F4B3',
        j: ['money', 'sales', 'dollar', 'bill', 'payment', 'shopping'],
        k: [26, 9],
        o: 2
      },
      aerial_tramway: {
        a: 'Aerial Tramway',
        b: '1F6A1',
        j: ['transportation', 'vehicle', 'ski'],
        k: [34, 32],
        o: 2
      },
      'female-factory-worker': {
        a: 'Female Factory Worker',
        b: '1F469-200D-1F3ED',
        k: [18, 7],
        o: 4
      },
      receipt: {
        a: 'Receipt',
        b: '1F9FE',
        k: [51, 49],
        o: 11
      },
      wavy_dash: {
        a: 'Wavy Dash',
        b: '3030-FE0F',
        c: '3030',
        j: ['draw', 'line', 'moustache', 'mustache', 'squiggle', 'scribble'],
        k: [55, 44],
        o: 2
      },
      'flag-ke': {
        a: 'Kenya Flag',
        b: '1F1F0-1F1EA',
        k: [2, 37],
        o: 2
      },
      satellite: {
        a: 'Satellite',
        b: '1F6F0-FE0F',
        c: '1F6F0',
        j: ['communication', 'future', 'radio', 'space'],
        k: [36, 51],
        o: 2
      },
      orange_heart: {
        a: 'Orange Heart',
        b: '1F9E1',
        k: [51, 20],
        o: 5
      },
      yellow_heart: {
        a: 'Yellow Heart',
        b: '1F49B',
        j: ['love', 'like', 'affection', 'valentines'],
        k: [25, 37],
        m: '<3',
        o: 2
      },
      rocket: {
        a: 'Rocket',
        b: '1F680',
        j: ['launch', 'ship', 'staffmode', 'NASA', 'outer space', 'outer_space', 'fly'],
        k: [33, 56],
        o: 2
      },
      chart: {
        a: 'Chart with Upwards Trend and Yen Sign',
        b: '1F4B9',
        j: ['green-square', 'graph', 'presentation', 'stats'],
        k: [26, 15],
        o: 2
      },
      'flag-kg': {
        a: 'Kyrgyzstan Flag',
        b: '1F1F0-1F1EC',
        k: [2, 38],
        o: 2
      },
      currency_exchange: {
        a: 'Currency Exchange',
        b: '1F4B1',
        j: ['money', 'sales', 'dollar', 'travel'],
        k: [26, 7],
        o: 2
      },
      green_heart: {
        a: 'Green Heart',
        b: '1F49A',
        j: ['love', 'like', 'affection', 'valentines'],
        k: [25, 36],
        m: '<3',
        o: 2
      },
      flying_saucer: {
        a: 'Flying Saucer',
        b: '1F6F8',
        k: [37, 0],
        o: 5
      },
      'flag-kh': {
        a: 'Cambodia Flag',
        b: '1F1F0-1F1ED',
        k: [2, 39],
        o: 2
      },
      'male-office-worker': {
        a: 'Male Office Worker',
        b: '1F468-200D-1F4BC',
        k: [15, 44],
        o: 4
      },
      tm: {
        a: 'Trade Mark Sign',
        b: '2122-FE0F',
        c: '2122',
        j: ['trademark', 'brand', 'law', 'legal'],
        k: [52, 12],
        o: 2
      },
      bellhop_bell: {
        a: 'Bellhop Bell',
        b: '1F6CE-FE0F',
        c: '1F6CE',
        j: ['service'],
        k: [36, 36],
        o: 2
      },
      blue_heart: {
        a: 'Blue Heart',
        b: '1F499',
        j: ['love', 'like', 'affection', 'valentines'],
        k: [25, 35],
        m: '<3',
        o: 2
      },
      'flag-ki': {
        a: 'Kiribati Flag',
        b: '1F1F0-1F1EE',
        k: [2, 40],
        o: 2
      },
      heavy_dollar_sign: {
        a: 'Heavy Dollar Sign',
        b: '1F4B2',
        j: ['money', 'sales', 'payment', 'currency', 'buck'],
        k: [26, 8],
        o: 2
      },
      'female-office-worker': {
        a: 'Female Office Worker',
        b: '1F469-200D-1F4BC',
        k: [18, 29],
        o: 4
      },
      purple_heart: {
        a: 'Purple Heart',
        b: '1F49C',
        j: ['love', 'like', 'affection', 'valentines'],
        k: [25, 38],
        m: '<3',
        o: 2
      },
      luggage: {
        a: 'Luggage',
        b: '1F9F3',
        k: [51, 38],
        o: 11
      },
      'flag-km': {
        a: 'Comoros Flag',
        b: '1F1F0-1F1F2',
        k: [2, 41],
        o: 2
      },
      email: {
        a: 'Envelope',
        b: '2709-FE0F',
        c: '2709',
        j: ['letter', 'postal', 'inbox', 'communication'],
        k: [54, 42],
        n: ['envelope'],
        o: 2
      },
      'e-mail': {
        a: 'E-Mail Symbol',
        b: '1F4E7',
        j: ['communication', 'inbox'],
        k: [27, 4],
        o: 2
      },
      'flag-kn': {
        a: 'St. Kitts & Nevis Flag',
        b: '1F1F0-1F1F3',
        k: [2, 42],
        o: 2
      },
      hourglass: {
        a: 'Hourglass',
        b: '231B',
        j: ['time', 'clock', 'oldschool', 'limit', 'exam', 'quiz', 'test'],
        k: [52, 23],
        o: 2
      },
      brown_heart: {
        a: 'Brown Heart',
        b: '1F90E',
        k: [37, 16],
        o: 12
      },
      'male-scientist': {
        a: 'Male Scientist',
        b: '1F468-200D-1F52C',
        k: [15, 56],
        o: 4
      },
      hourglass_flowing_sand: {
        a: 'Hourglass with Flowing Sand',
        b: '23F3',
        j: ['oldschool', 'time', 'countdown'],
        k: [52, 36],
        o: 2
      },
      black_heart: {
        a: 'Black Heart',
        b: '1F5A4',
        j: ['evil'],
        k: [30, 9],
        o: 4
      },
      incoming_envelope: {
        a: 'Incoming Envelope',
        b: '1F4E8',
        j: ['email', 'inbox'],
        k: [27, 5],
        o: 2
      },
      'flag-kp': {
        a: 'North Korea Flag',
        b: '1F1F0-1F1F5',
        k: [2, 43],
        o: 2
      },
      'female-scientist': {
        a: 'Female Scientist',
        b: '1F469-200D-1F52C',
        k: [18, 41],
        o: 4
      },
      watch: {
        a: 'Watch',
        b: '231A',
        j: ['time', 'accessories'],
        k: [52, 22],
        o: 2
      },
      white_heart: {
        a: 'White Heart',
        b: '1F90D',
        k: [37, 15],
        o: 12
      },
      kr: {
        a: 'South Korea Flag',
        b: '1F1F0-1F1F7',
        j: ['south', 'korea', 'nation', 'flag', 'country', 'banner'],
        k: [2, 44],
        n: ['flag-kr'],
        o: 2
      },
      envelope_with_arrow: {
        a: 'Envelope with Downwards Arrow Above',
        b: '1F4E9',
        j: ['email', 'communication'],
        k: [27, 6],
        o: 2
      },
      outbox_tray: {
        a: 'Outbox Tray',
        b: '1F4E4',
        j: ['inbox', 'email'],
        k: [27, 1],
        o: 2
      },
      'male-technologist': {
        a: 'Male Technologist',
        b: '1F468-200D-1F4BB',
        k: [15, 38],
        o: 4
      },
      alarm_clock: {
        a: 'Alarm Clock',
        b: '23F0',
        j: ['time', 'wake'],
        k: [52, 33],
        o: 2
      },
      'flag-kw': {
        a: 'Kuwait Flag',
        b: '1F1F0-1F1FC',
        k: [2, 45],
        o: 2
      },
      anger: {
        a: 'Anger Symbol',
        b: '1F4A2',
        j: ['angry', 'mad'],
        k: [25, 44],
        o: 2
      },
      inbox_tray: {
        a: 'Inbox Tray',
        b: '1F4E5',
        j: ['email', 'documents'],
        k: [27, 2],
        o: 2
      },
      'flag-ky': {
        a: 'Cayman Islands Flag',
        b: '1F1F0-1F1FE',
        k: [2, 46],
        o: 2
      },
      stopwatch: {
        a: 'Stopwatch',
        b: '23F1-FE0F',
        c: '23F1',
        j: ['time', 'deadline'],
        k: [52, 34],
        o: 2
      },
      'female-technologist': {
        a: 'Female Technologist',
        b: '1F469-200D-1F4BB',
        k: [18, 23],
        o: 4
      },
      boom: {
        a: 'Collision Symbol',
        b: '1F4A5',
        j: ['bomb', 'explode', 'explosion', 'collision', 'blown'],
        k: [25, 47],
        n: ['collision'],
        o: 2
      },
      'flag-kz': {
        a: 'Kazakhstan Flag',
        b: '1F1F0-1F1FF',
        k: [2, 47],
        o: 2
      },
      timer_clock: {
        a: 'Timer Clock',
        b: '23F2-FE0F',
        c: '23F2',
        j: ['alarm'],
        k: [52, 35],
        o: 2
      },
      package: {
        a: 'Package',
        b: '1F4E6',
        j: ['mail', 'gift', 'cardboard', 'box', 'moving'],
        k: [27, 3],
        o: 2
      },
      mailbox: {
        a: 'Closed Mailbox with Raised Flag',
        b: '1F4EB',
        j: ['email', 'inbox', 'communication'],
        k: [27, 8],
        o: 2
      },
      'flag-la': {
        a: 'Laos Flag',
        b: '1F1F1-1F1E6',
        k: [2, 48],
        o: 2
      },
      dizzy: {
        a: 'Dizzy Symbol',
        b: '1F4AB',
        j: ['star', 'sparkle', 'shoot', 'magic'],
        k: [26, 1],
        o: 2
      },
      'male-singer': {
        a: 'Male Singer',
        b: '1F468-200D-1F3A4',
        k: [14, 56],
        o: 4
      },
      mantelpiece_clock: {
        a: 'Mantelpiece Clock',
        b: '1F570-FE0F',
        c: '1F570',
        j: ['time'],
        k: [29, 7],
        o: 2
      },
      'female-singer': {
        a: 'Female Singer',
        b: '1F469-200D-1F3A4',
        k: [17, 46],
        o: 4
      },
      'flag-lb': {
        a: 'Lebanon Flag',
        b: '1F1F1-1F1E7',
        k: [2, 49],
        o: 2
      },
      mailbox_closed: {
        a: 'Closed Mailbox with Lowered Flag',
        b: '1F4EA',
        j: ['email', 'communication', 'inbox'],
        k: [27, 7],
        o: 2
      },
      sweat_drops: {
        a: 'Splashing Sweat Symbol',
        b: '1F4A6',
        j: ['water', 'drip', 'oops'],
        k: [25, 48],
        o: 2
      },
      clock12: {
        a: 'Clock Face Twelve Oclock',
        b: '1F55B',
        j: ['time', 'noon', 'midnight', 'midday', 'late', 'early', 'schedule'],
        k: [28, 50],
        o: 2
      },
      mailbox_with_mail: {
        a: 'Open Mailbox with Raised Flag',
        b: '1F4EC',
        j: ['email', 'inbox', 'communication'],
        k: [27, 9],
        o: 2
      },
      clock1230: {
        a: 'Clock Face Twelve-Thirty',
        b: '1F567',
        j: ['time', 'late', 'early', 'schedule'],
        k: [29, 5],
        o: 2
      },
      dash: {
        a: 'Dash Symbol',
        b: '1F4A8',
        j: ['wind', 'air', 'fast', 'shoo', 'fart', 'smoke', 'puff'],
        k: [25, 50],
        o: 2
      },
      'flag-lc': {
        a: 'St. Lucia Flag',
        b: '1F1F1-1F1E8',
        k: [2, 50],
        o: 2
      },
      hole: {
        a: 'Hole',
        b: '1F573-FE0F',
        c: '1F573',
        j: ['embarrassing'],
        k: [29, 8],
        o: 2
      },
      'male-artist': {
        a: 'Male Artist',
        b: '1F468-200D-1F3A8',
        k: [15, 5],
        o: 4
      },
      clock1: {
        a: 'Clock Face One Oclock',
        b: '1F550',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 39],
        o: 2
      },
      mailbox_with_no_mail: {
        a: 'Open Mailbox with Lowered Flag',
        b: '1F4ED',
        j: ['email', 'inbox'],
        k: [27, 10],
        o: 2
      },
      'flag-li': {
        a: 'Liechtenstein Flag',
        b: '1F1F1-1F1EE',
        k: [2, 51],
        o: 2
      },
      bomb: {
        a: 'Bomb',
        b: '1F4A3',
        j: ['boom', 'explode', 'explosion', 'terrorism'],
        k: [25, 45],
        o: 2
      },
      postbox: {
        a: 'Postbox',
        b: '1F4EE',
        j: ['email', 'letter', 'envelope'],
        k: [27, 11],
        o: 2
      },
      'female-artist': {
        a: 'Female Artist',
        b: '1F469-200D-1F3A8',
        k: [17, 52],
        o: 4
      },
      clock130: {
        a: 'Clock Face One-Thirty',
        b: '1F55C',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 51],
        o: 2
      },
      'flag-lk': {
        a: 'Sri Lanka Flag',
        b: '1F1F1-1F1F0',
        k: [2, 52],
        o: 2
      },
      ballot_box_with_ballot: {
        a: 'Ballot Box with Ballot',
        b: '1F5F3-FE0F',
        c: '1F5F3',
        k: [30, 28],
        o: 2
      },
      keycap_ten: {
        a: 'Keycap Ten',
        b: '1F51F',
        j: ['numbers', '10', 'blue-square'],
        k: [28, 2],
        o: 2
      },
      clock2: {
        a: 'Clock Face Two Oclock',
        b: '1F551',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 40],
        o: 2
      },
      'flag-lr': {
        a: 'Liberia Flag',
        b: '1F1F1-1F1F7',
        k: [2, 53],
        o: 2
      },
      speech_balloon: {
        a: 'Speech Balloon',
        b: '1F4AC',
        j: ['bubble', 'words', 'message', 'talk', 'chatting'],
        k: [26, 2],
        o: 2
      },
      'flag-ls': {
        a: 'Lesotho Flag',
        b: '1F1F1-1F1F8',
        k: [2, 54],
        o: 2
      },
      clock230: {
        a: 'Clock Face Two-Thirty',
        b: '1F55D',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 52],
        o: 2
      },
      'male-pilot': {
        a: 'Male Pilot',
        b: '1F468-200D-2708-FE0F',
        c: '1F468-200D-2708',
        k: [17, 14],
        o: 4
      },
      capital_abcd: {
        a: 'Input Symbol for Latin Capital Letters',
        b: '1F520',
        j: ['alphabet', 'words', 'blue-square'],
        k: [28, 3],
        o: 2
      },
      pencil2: {
        a: 'Pencil',
        b: '270F-FE0F',
        c: '270F',
        j: ['stationery', 'write', 'paper', 'writing', 'school', 'study'],
        k: [55, 10],
        o: 2
      },
      'female-pilot': {
        a: 'Female Pilot',
        b: '1F469-200D-2708-FE0F',
        c: '1F469-200D-2708',
        k: [19, 56],
        o: 4
      },
      black_nib: {
        a: 'Black Nib',
        b: '2712-FE0F',
        c: '2712',
        j: ['pen', 'stationery', 'writing', 'write'],
        k: [55, 11],
        o: 2
      },
      left_speech_bubble: {
        a: 'Left Speech Bubble',
        b: '1F5E8-FE0F',
        c: '1F5E8',
        j: ['words', 'message', 'talk', 'chatting'],
        k: [30, 26],
        o: 2
      },
      clock3: {
        a: 'Clock Face Three Oclock',
        b: '1F552',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 41],
        o: 2
      },
      abcd: {
        a: 'Input Symbol for Latin Small Letters',
        b: '1F521',
        j: ['blue-square', 'alphabet'],
        k: [28, 4],
        o: 2
      },
      'flag-lt': {
        a: 'Lithuania Flag',
        b: '1F1F1-1F1F9',
        k: [2, 55],
        o: 2
      },
      clock330: {
        a: 'Clock Face Three-Thirty',
        b: '1F55E',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 53],
        o: 2
      },
      'flag-lu': {
        a: 'Luxembourg Flag',
        b: '1F1F1-1F1FA',
        k: [2, 56],
        o: 2
      },
      right_anger_bubble: {
        a: 'Right Anger Bubble',
        b: '1F5EF-FE0F',
        c: '1F5EF',
        j: ['caption', 'speech', 'thinking', 'mad'],
        k: [30, 27],
        o: 2
      },
      lower_left_fountain_pen: {
        a: 'Lower Left Fountain Pen',
        b: '1F58B-FE0F',
        c: '1F58B',
        k: [29, 45],
        o: 2
      },
      'male-astronaut': {
        a: 'Male Astronaut',
        b: '1F468-200D-1F680',
        k: [16, 5],
        o: 4
      },
      thought_balloon: {
        a: 'Thought Balloon',
        b: '1F4AD',
        j: ['bubble', 'cloud', 'speech', 'thinking', 'dream'],
        k: [26, 3],
        o: 2
      },
      symbols: {
        a: 'Input Symbol for Symbols',
        b: '1F523',
        j: ['blue-square', 'music', 'note', 'ampersand', 'percent', 'glyphs', 'characters'],
        k: [28, 6],
        o: 2
      },
      clock4: {
        a: 'Clock Face Four Oclock',
        b: '1F553',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 42],
        o: 2
      },
      'flag-lv': {
        a: 'Latvia Flag',
        b: '1F1F1-1F1FB',
        k: [3, 0],
        o: 2
      },
      lower_left_ballpoint_pen: {
        a: 'Lower Left Ballpoint Pen',
        b: '1F58A-FE0F',
        c: '1F58A',
        k: [29, 44],
        o: 2
      },
      abc: {
        a: 'Input Symbol for Latin Letters',
        b: '1F524',
        j: ['blue-square', 'alphabet'],
        k: [28, 7],
        o: 2
      },
      zzz: {
        a: 'Sleeping Symbol',
        b: '1F4A4',
        j: ['sleepy', 'tired', 'dream'],
        k: [25, 46],
        o: 2
      },
      lower_left_paintbrush: {
        a: 'Lower Left Paintbrush',
        b: '1F58C-FE0F',
        c: '1F58C',
        k: [29, 46],
        o: 2
      },
      'female-astronaut': {
        a: 'Female Astronaut',
        b: '1F469-200D-1F680',
        k: [18, 47],
        o: 4
      },
      'flag-ly': {
        a: 'Libya Flag',
        b: '1F1F1-1F1FE',
        k: [3, 1],
        o: 2
      },
      clock430: {
        a: 'Clock Face Four-Thirty',
        b: '1F55F',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 54],
        o: 2
      },
      'flag-ma': {
        a: 'Morocco Flag',
        b: '1F1F2-1F1E6',
        k: [3, 2],
        o: 2
      },
      a: {
        a: 'Negative Squared Latin Capital Letter a',
        b: '1F170-FE0F',
        c: '1F170',
        j: ['red-square', 'alphabet', 'letter'],
        k: [0, 16],
        o: 2
      },
      clock5: {
        a: 'Clock Face Five Oclock',
        b: '1F554',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 43],
        o: 2
      },
      lower_left_crayon: {
        a: 'Lower Left Crayon',
        b: '1F58D-FE0F',
        c: '1F58D',
        k: [29, 47],
        o: 2
      },
      'male-firefighter': {
        a: 'Male Firefighter',
        b: '1F468-200D-1F692',
        k: [16, 11],
        o: 4
      },
      memo: {
        a: 'Memo',
        b: '1F4DD',
        j: ['write', 'documents', 'stationery', 'pencil', 'paper', 'writing', 'legal', 'exam', 'quiz', 'test', 'study', 'compose'],
        k: [26, 51],
        n: ['pencil'],
        o: 2
      },
      ab: {
        a: 'Negative Squared Ab',
        b: '1F18E',
        j: ['red-square', 'alphabet'],
        k: [0, 20],
        o: 2
      },
      'flag-mc': {
        a: 'Monaco Flag',
        b: '1F1F2-1F1E8',
        k: [3, 3],
        o: 2
      },
      clock530: {
        a: 'Clock Face Five-Thirty',
        b: '1F560',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 55],
        o: 2
      },
      briefcase: {
        a: 'Briefcase',
        b: '1F4BC',
        j: ['business', 'documents', 'work', 'law', 'legal', 'job', 'career'],
        k: [26, 18],
        o: 2
      },
      'female-firefighter': {
        a: 'Female Firefighter',
        b: '1F469-200D-1F692',
        k: [18, 53],
        o: 4
      },
      clock6: {
        a: 'Clock Face Six Oclock',
        b: '1F555',
        j: ['time', 'late', 'early', 'schedule', 'dawn', 'dusk'],
        k: [28, 44],
        o: 2
      },
      b: {
        a: 'Negative Squared Latin Capital Letter B',
        b: '1F171-FE0F',
        c: '1F171',
        j: ['red-square', 'alphabet', 'letter'],
        k: [0, 17],
        o: 2
      },
      'flag-md': {
        a: 'Moldova Flag',
        b: '1F1F2-1F1E9',
        k: [3, 4],
        o: 2
      },
      clock630: {
        a: 'Clock Face Six-Thirty',
        b: '1F561',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 56],
        o: 2
      },
      cl: {
        a: 'Squared Cl',
        b: '1F191',
        j: ['alphabet', 'words', 'red-square'],
        k: [0, 21],
        o: 2
      },
      'flag-me': {
        a: 'Montenegro Flag',
        b: '1F1F2-1F1EA',
        k: [3, 5],
        o: 2
      },
      file_folder: {
        a: 'File Folder',
        b: '1F4C1',
        j: ['documents', 'business', 'office'],
        k: [26, 23],
        o: 2
      },
      'male-police-officer': {
        obsoletes: '1F46E',
        a: 'Male Police Officer',
        b: '1F46E-200D-2642-FE0F',
        c: '1F46E-200D-2642',
        k: [21, 43],
        o: 4
      },
      cool: {
        a: 'Squared Cool',
        b: '1F192',
        j: ['words', 'blue-square'],
        k: [0, 22],
        o: 2
      },
      clock7: {
        a: 'Clock Face Seven Oclock',
        b: '1F556',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 45],
        o: 2
      },
      'flag-mf': {
        a: 'St. Martin Flag',
        b: '1F1F2-1F1EB',
        k: [3, 6],
        o: 2
      },
      open_file_folder: {
        a: 'Open File Folder',
        b: '1F4C2',
        j: ['documents', 'load'],
        k: [26, 24],
        o: 2
      },
      card_index_dividers: {
        a: 'Card Index Dividers',
        b: '1F5C2-FE0F',
        c: '1F5C2',
        j: ['organizing', 'business', 'stationery'],
        k: [30, 15],
        o: 2
      },
      'flag-mg': {
        a: 'Madagascar Flag',
        b: '1F1F2-1F1EC',
        k: [3, 7],
        o: 2
      },
      free: {
        a: 'Squared Free',
        b: '1F193',
        j: ['blue-square', 'words'],
        k: [0, 23],
        o: 2
      },
      'female-police-officer': {
        a: 'Female Police Officer',
        b: '1F46E-200D-2640-FE0F',
        c: '1F46E-200D-2640',
        k: [21, 37],
        o: 4
      },
      clock730: {
        a: 'Clock Face Seven-Thirty',
        b: '1F562',
        j: ['time', 'late', 'early', 'schedule'],
        k: [29, 0],
        o: 2
      },
      date: {
        a: 'Calendar',
        b: '1F4C5',
        j: ['calendar', 'schedule'],
        k: [26, 27],
        o: 2
      },
      clock8: {
        a: 'Clock Face Eight Oclock',
        b: '1F557',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 46],
        o: 2
      },
      information_source: {
        a: 'Information Source',
        b: '2139-FE0F',
        c: '2139',
        j: ['blue-square', 'alphabet', 'letter'],
        k: [52, 13],
        o: 2
      },
      'flag-mh': {
        a: 'Marshall Islands Flag',
        b: '1F1F2-1F1ED',
        k: [3, 8],
        o: 2
      },
      clock830: {
        a: 'Clock Face Eight-Thirty',
        b: '1F563',
        j: ['time', 'late', 'early', 'schedule'],
        k: [29, 1],
        o: 2
      },
      calendar: {
        a: 'Tear-off Calendar',
        b: '1F4C6',
        j: ['schedule', 'date', 'planning'],
        k: [26, 28],
        o: 2
      },
      'flag-mk': {
        a: 'North Macedonia Flag',
        b: '1F1F2-1F1F0',
        k: [3, 9],
        o: 2
      },
      id: {
        a: 'Squared Id',
        b: '1F194',
        j: ['purple-square', 'words'],
        k: [0, 24],
        o: 2
      },
      spiral_note_pad: {
        a: 'Spiral Note Pad',
        b: '1F5D2-FE0F',
        c: '1F5D2',
        k: [30, 19],
        o: 2
      },
      clock9: {
        a: 'Clock Face Nine Oclock',
        b: '1F558',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 47],
        o: 2
      },
      'flag-ml': {
        a: 'Mali Flag',
        b: '1F1F2-1F1F1',
        k: [3, 10],
        o: 2
      },
      m: {
        a: 'Circled Latin Capital Letter M',
        b: '24C2-FE0F',
        c: '24C2',
        j: ['alphabet', 'blue-circle', 'letter'],
        k: [52, 40],
        o: 2
      },
      'flag-mm': {
        a: 'Myanmar (burma) Flag',
        b: '1F1F2-1F1F2',
        k: [3, 11],
        o: 2
      },
      clock930: {
        a: 'Clock Face Nine-Thirty',
        b: '1F564',
        j: ['time', 'late', 'early', 'schedule'],
        k: [29, 2],
        o: 2
      },
      new: {
        a: 'Squared New',
        b: '1F195',
        j: ['blue-square', 'words', 'start'],
        k: [0, 25],
        o: 2
      },
      spiral_calendar_pad: {
        a: 'Spiral Calendar Pad',
        b: '1F5D3-FE0F',
        c: '1F5D3',
        k: [30, 20],
        o: 2
      },
      ng: {
        a: 'Squared Ng',
        b: '1F196',
        j: ['blue-square', 'words', 'shape', 'icon'],
        k: [0, 26],
        o: 2
      },
      card_index: {
        a: 'Card Index',
        b: '1F4C7',
        j: ['business', 'stationery'],
        k: [26, 29],
        o: 2
      },
      clock10: {
        a: 'Clock Face Ten Oclock',
        b: '1F559',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 48],
        o: 2
      },
      'flag-mn': {
        a: 'Mongolia Flag',
        b: '1F1F2-1F1F3',
        k: [3, 12],
        o: 2
      },
      'male-guard': {
        obsoletes: '1F482',
        a: 'Male Guard',
        b: '1F482-200D-2642-FE0F',
        c: '1F482-200D-2642',
        k: [24, 14],
        o: 4
      },
      'flag-mo': {
        a: 'Macao Sar China Flag',
        b: '1F1F2-1F1F4',
        k: [3, 13],
        o: 2
      },
      clock1030: {
        a: 'Clock Face Ten-Thirty',
        b: '1F565',
        j: ['time', 'late', 'early', 'schedule'],
        k: [29, 3],
        o: 2
      },
      chart_with_upwards_trend: {
        a: 'Chart with Upwards Trend',
        b: '1F4C8',
        j: ['graph', 'presentation', 'stats', 'recovery', 'business', 'economics', 'money', 'sales', 'good', 'success'],
        k: [26, 30],
        o: 2
      },
      o2: {
        a: 'Negative Squared Latin Capital Letter O',
        b: '1F17E-FE0F',
        c: '1F17E',
        j: ['alphabet', 'red-square', 'letter'],
        k: [0, 18],
        o: 2
      },
      'female-guard': {
        a: 'Female Guard',
        b: '1F482-200D-2640-FE0F',
        c: '1F482-200D-2640',
        k: [24, 8],
        o: 4
      },
      chart_with_downwards_trend: {
        a: 'Chart with Downwards Trend',
        b: '1F4C9',
        j: ['graph', 'presentation', 'stats', 'recession', 'business', 'economics', 'money', 'sales', 'bad', 'failure'],
        k: [26, 31],
        o: 2
      },
      'flag-mp': {
        a: 'Northern Mariana Islands Flag',
        b: '1F1F2-1F1F5',
        k: [3, 14],
        o: 2
      },
      ok: {
        a: 'Squared Ok',
        b: '1F197',
        j: ['good', 'agree', 'yes', 'blue-square'],
        k: [0, 27],
        o: 2
      },
      clock11: {
        a: 'Clock Face Eleven Oclock',
        b: '1F55A',
        j: ['time', 'late', 'early', 'schedule'],
        k: [28, 49],
        o: 2
      },
      'male-construction-worker': {
        obsoletes: '1F477',
        a: 'Male Construction Worker',
        b: '1F477-200D-2642-FE0F',
        c: '1F477-200D-2642',
        k: [23, 16],
        o: 4
      },
      clock1130: {
        a: 'Clock Face Eleven-Thirty',
        b: '1F566',
        j: ['time', 'late', 'early', 'schedule'],
        k: [29, 4],
        o: 2
      },
      'flag-mq': {
        a: 'Martinique Flag',
        b: '1F1F2-1F1F6',
        k: [3, 15],
        o: 2
      },
      bar_chart: {
        a: 'Bar Chart',
        b: '1F4CA',
        j: ['graph', 'presentation', 'stats'],
        k: [26, 32],
        o: 2
      },
      parking: {
        a: 'Negative Squared Latin Capital Letter P',
        b: '1F17F-FE0F',
        c: '1F17F',
        j: ['cars', 'blue-square', 'alphabet', 'letter'],
        k: [0, 19],
        o: 2
      },
      new_moon: {
        a: 'New Moon Symbol',
        b: '1F311',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 36],
        o: 2
      },
      'female-construction-worker': {
        a: 'Female Construction Worker',
        b: '1F477-200D-2640-FE0F',
        c: '1F477-200D-2640',
        k: [23, 10],
        o: 4
      },
      sos: {
        a: 'Squared Sos',
        b: '1F198',
        j: ['help', 'red-square', 'words', 'emergency', '911'],
        k: [0, 28],
        o: 2
      },
      clipboard: {
        a: 'Clipboard',
        b: '1F4CB',
        j: ['stationery', 'documents'],
        k: [26, 33],
        o: 2
      },
      'flag-mr': {
        a: 'Mauritania Flag',
        b: '1F1F2-1F1F7',
        k: [3, 16],
        o: 2
      },
      prince: {
        a: 'Prince',
        b: '1F934',
        j: ['boy', 'man', 'male', 'crown', 'royal', 'king'],
        k: [39, 17],
        o: 4
      },
      waxing_crescent_moon: {
        a: 'Waxing Crescent Moon Symbol',
        b: '1F312',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 37],
        o: 2
      },
      'flag-ms': {
        a: 'Montserrat Flag',
        b: '1F1F2-1F1F8',
        k: [3, 17],
        o: 2
      },
      pushpin: {
        a: 'Pushpin',
        b: '1F4CC',
        j: ['stationery', 'mark', 'here'],
        k: [26, 34],
        o: 2
      },
      up: {
        a: 'Squared Up with Exclamation Mark',
        b: '1F199',
        j: ['blue-square', 'above', 'high'],
        k: [0, 29],
        o: 2
      },
      'flag-mt': {
        a: 'Malta Flag',
        b: '1F1F2-1F1F9',
        k: [3, 18],
        o: 2
      },
      princess: {
        a: 'Princess',
        b: '1F478',
        j: ['girl', 'woman', 'female', 'blond', 'crown', 'royal', 'queen'],
        k: [23, 28],
        o: 2
      },
      round_pushpin: {
        a: 'Round Pushpin',
        b: '1F4CD',
        j: ['stationery', 'location', 'map', 'here'],
        k: [26, 35],
        o: 2
      },
      first_quarter_moon: {
        a: 'First Quarter Moon Symbol',
        b: '1F313',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 38],
        o: 2
      },
      vs: {
        a: 'Squared Vs',
        b: '1F19A',
        j: ['words', 'orange-square'],
        k: [0, 30],
        o: 2
      },
      'flag-mu': {
        a: 'Mauritius Flag',
        b: '1F1F2-1F1FA',
        k: [3, 19],
        o: 2
      },
      koko: {
        a: 'Squared Katakana Koko',
        b: '1F201',
        j: ['blue-square', 'here', 'katakana', 'japanese', 'destination'],
        k: [5, 4],
        o: 2
      },
      moon: {
        a: 'Waxing Gibbous Moon Symbol',
        b: '1F314',
        k: [5, 39],
        n: ['waxing_gibbous_moon'],
        o: 2
      },
      paperclip: {
        a: 'Paperclip',
        b: '1F4CE',
        j: ['documents', 'stationery'],
        k: [26, 36],
        o: 2
      },
      linked_paperclips: {
        a: 'Linked Paperclips',
        b: '1F587-FE0F',
        c: '1F587',
        k: [29, 43],
        o: 2
      },
      'man-wearing-turban': {
        obsoletes: '1F473',
        a: 'Man Wearing Turban',
        b: '1F473-200D-2642-FE0F',
        c: '1F473-200D-2642',
        k: [22, 37],
        o: 4
      },
      sa: {
        a: 'Squared Katakana Sa',
        b: '1F202-FE0F',
        c: '1F202',
        j: ['japanese', 'blue-square', 'katakana'],
        k: [5, 5],
        o: 2
      },
      full_moon: {
        a: 'Full Moon Symbol',
        b: '1F315',
        j: ['nature', 'yellow', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 40],
        o: 2
      },
      'flag-mv': {
        a: 'Maldives Flag',
        b: '1F1F2-1F1FB',
        k: [3, 20],
        o: 2
      },
      'flag-mw': {
        a: 'Malawi Flag',
        b: '1F1F2-1F1FC',
        k: [3, 21],
        o: 2
      },
      waning_gibbous_moon: {
        a: 'Waning Gibbous Moon Symbol',
        b: '1F316',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep', 'waxing_gibbous_moon'],
        k: [5, 41],
        o: 2
      },
      'woman-wearing-turban': {
        a: 'Woman Wearing Turban',
        b: '1F473-200D-2640-FE0F',
        c: '1F473-200D-2640',
        k: [22, 31],
        o: 4
      },
      u6708: {
        a: 'Squared Cjk Unified Ideograph-6708',
        b: '1F237-FE0F',
        c: '1F237',
        j: ['chinese', 'month', 'moon', 'japanese', 'orange-square', 'kanji'],
        k: [5, 13],
        o: 2
      },
      straight_ruler: {
        a: 'Straight Ruler',
        b: '1F4CF',
        j: ['stationery', 'calculate', 'length', 'math', 'school', 'drawing', 'architect', 'sketch'],
        k: [26, 37],
        o: 2
      },
      u6709: {
        a: 'Squared Cjk Unified Ideograph-6709',
        b: '1F236',
        j: ['orange-square', 'chinese', 'have', 'kanji'],
        k: [5, 12],
        o: 2
      },
      triangular_ruler: {
        a: 'Triangular Ruler',
        b: '1F4D0',
        j: ['stationery', 'math', 'architect', 'sketch'],
        k: [26, 38],
        o: 2
      },
      man_with_gua_pi_mao: {
        a: 'Man with Gua Pi Mao',
        b: '1F472',
        j: ['male', 'boy', 'chinese'],
        k: [22, 25],
        o: 2
      },
      'flag-mx': {
        a: 'Mexico Flag',
        b: '1F1F2-1F1FD',
        k: [3, 22],
        o: 2
      },
      last_quarter_moon: {
        a: 'Last Quarter Moon Symbol',
        b: '1F317',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 42],
        o: 2
      },
      person_with_headscarf: {
        a: 'Person with Headscarf',
        b: '1F9D5',
        k: [48, 34],
        o: 5
      },
      waning_crescent_moon: {
        a: 'Waning Crescent Moon Symbol',
        b: '1F318',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 43],
        o: 2
      },
      u6307: {
        a: 'Squared Cjk Unified Ideograph-6307',
        b: '1F22F',
        j: ['chinese', 'point', 'green-square', 'kanji'],
        k: [5, 7],
        o: 2
      },
      scissors: {
        a: 'Black Scissors',
        b: '2702-FE0F',
        c: '2702',
        j: ['stationery', 'cut'],
        k: [54, 39],
        o: 2
      },
      'flag-my': {
        a: 'Malaysia Flag',
        b: '1F1F2-1F1FE',
        k: [3, 23],
        o: 2
      },
      ideograph_advantage: {
        a: 'Circled Ideograph Advantage',
        b: '1F250',
        j: ['chinese', 'kanji', 'obtain', 'get', 'circle'],
        k: [5, 17],
        o: 2
      },
      man_in_tuxedo: {
        a: 'Man in Tuxedo',
        b: '1F935',
        j: ['couple', 'marriage', 'wedding', 'groom'],
        k: [39, 23],
        o: 4
      },
      'flag-mz': {
        a: 'Mozambique Flag',
        b: '1F1F2-1F1FF',
        k: [3, 24],
        o: 2
      },
      card_file_box: {
        a: 'Card File Box',
        b: '1F5C3-FE0F',
        c: '1F5C3',
        j: ['business', 'stationery'],
        k: [30, 16],
        o: 2
      },
      crescent_moon: {
        a: 'Crescent Moon',
        b: '1F319',
        j: ['night', 'sleep', 'sky', 'evening', 'magic'],
        k: [5, 44],
        o: 2
      },
      'flag-na': {
        a: 'Namibia Flag',
        b: '1F1F3-1F1E6',
        k: [3, 25],
        o: 2
      },
      bride_with_veil: {
        a: 'Bride with Veil',
        b: '1F470',
        j: ['couple', 'marriage', 'wedding', 'woman', 'bride'],
        k: [22, 1],
        o: 2
      },
      new_moon_with_face: {
        a: 'New Moon with Face',
        b: '1F31A',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 45],
        o: 2
      },
      file_cabinet: {
        a: 'File Cabinet',
        b: '1F5C4-FE0F',
        c: '1F5C4',
        j: ['filing', 'organizing'],
        k: [30, 17],
        o: 2
      },
      u5272: {
        a: 'Squared Cjk Unified Ideograph-5272',
        b: '1F239',
        j: ['cut', 'divide', 'chinese', 'kanji', 'pink-square'],
        k: [5, 15],
        o: 2
      },
      wastebasket: {
        a: 'Wastebasket',
        b: '1F5D1-FE0F',
        c: '1F5D1',
        j: ['bin', 'trash', 'rubbish', 'garbage', 'toss'],
        k: [30, 18],
        o: 2
      },
      pregnant_woman: {
        a: 'Pregnant Woman',
        b: '1F930',
        j: ['baby'],
        k: [38, 50],
        o: 4
      },
      first_quarter_moon_with_face: {
        a: 'First Quarter Moon with Face',
        b: '1F31B',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 46],
        o: 2
      },
      'flag-nc': {
        a: 'New Caledonia Flag',
        b: '1F1F3-1F1E8',
        k: [3, 26],
        o: 2
      },
      u7121: {
        a: 'Squared Cjk Unified Ideograph-7121',
        b: '1F21A',
        j: ['nothing', 'chinese', 'kanji', 'japanese', 'orange-square'],
        k: [5, 6],
        o: 2
      },
      lock: {
        a: 'Lock',
        b: '1F512',
        j: ['security', 'password', 'padlock'],
        k: [27, 46],
        o: 2
      },
      'flag-ne': {
        a: 'Niger Flag',
        b: '1F1F3-1F1EA',
        k: [3, 27],
        o: 2
      },
      last_quarter_moon_with_face: {
        a: 'Last Quarter Moon with Face',
        b: '1F31C',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 47],
        o: 2
      },
      'breast-feeding': {
        a: 'Breast-Feeding',
        b: '1F931',
        k: [38, 56],
        o: 5
      },
      u7981: {
        a: 'Squared Cjk Unified Ideograph-7981',
        b: '1F232',
        j: ['kanji', 'japanese', 'chinese', 'forbidden', 'limit', 'restricted', 'red-square'],
        k: [5, 8],
        o: 2
      },
      accept: {
        a: 'Circled Ideograph Accept',
        b: '1F251',
        j: ['ok', 'good', 'chinese', 'kanji', 'agree', 'yes', 'orange-circle'],
        k: [5, 18],
        o: 2
      },
      angel: {
        a: 'Baby Angel',
        b: '1F47C',
        j: ['heaven', 'wings', 'halo'],
        k: [23, 37],
        o: 2
      },
      unlock: {
        a: 'Open Lock',
        b: '1F513',
        j: ['privacy', 'security'],
        k: [27, 47],
        o: 2
      },
      'flag-nf': {
        a: 'Norfolk Island Flag',
        b: '1F1F3-1F1EB',
        k: [3, 28],
        o: 2
      },
      thermometer: {
        a: 'Thermometer',
        b: '1F321-FE0F',
        c: '1F321',
        j: ['weather', 'temperature', 'hot', 'cold'],
        k: [5, 52],
        o: 2
      },
      'flag-ng': {
        a: 'Nigeria Flag',
        b: '1F1F3-1F1EC',
        k: [3, 29],
        o: 2
      },
      u7533: {
        a: 'Squared Cjk Unified Ideograph-7533',
        b: '1F238',
        j: ['chinese', 'japanese', 'kanji', 'orange-square'],
        k: [5, 14],
        o: 2
      },
      sunny: {
        a: 'Black Sun with Rays',
        b: '2600-FE0F',
        c: '2600',
        j: ['weather', 'nature', 'brightness', 'summer', 'beach', 'spring'],
        k: [52, 49],
        o: 2
      },
      lock_with_ink_pen: {
        a: 'Lock with Ink Pen',
        b: '1F50F',
        j: ['security', 'secret'],
        k: [27, 43],
        o: 2
      },
      santa: {
        a: 'Father Christmas',
        b: '1F385',
        j: ['festival', 'man', 'male', 'xmas', 'father christmas'],
        k: [7, 36],
        o: 2
      },
      closed_lock_with_key: {
        a: 'Closed Lock with Key',
        b: '1F510',
        j: ['security', 'privacy'],
        k: [27, 44],
        o: 2
      },
      u5408: {
        a: 'Squared Cjk Unified Ideograph-5408',
        b: '1F234',
        j: ['japanese', 'chinese', 'join', 'kanji', 'red-square'],
        k: [5, 10],
        o: 2
      },
      'flag-ni': {
        a: 'Nicaragua Flag',
        b: '1F1F3-1F1EE',
        k: [3, 30],
        o: 2
      },
      mrs_claus: {
        a: 'Mother Christmas',
        b: '1F936',
        j: ['woman', 'female', 'xmas', 'mother christmas'],
        k: [39, 29],
        n: ['mother_christmas'],
        o: 4
      },
      full_moon_with_face: {
        a: 'Full Moon with Face',
        b: '1F31D',
        j: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        k: [5, 48],
        o: 2
      },
      key: {
        a: 'Key',
        b: '1F511',
        j: ['lock', 'door', 'password'],
        k: [27, 45],
        o: 2
      },
      superhero: {
        a: 'Superhero',
        b: '1F9B8',
        k: [43, 30],
        o: 11
      },
      'flag-nl': {
        a: 'Netherlands Flag',
        b: '1F1F3-1F1F1',
        k: [3, 31],
        o: 2
      },
      u7a7a: {
        a: 'Squared Cjk Unified Ideograph-7a7a',
        b: '1F233',
        j: ['kanji', 'japanese', 'chinese', 'empty', 'sky', 'blue-square'],
        k: [5, 9],
        o: 2
      },
      sun_with_face: {
        a: 'Sun with Face',
        b: '1F31E',
        j: ['nature', 'morning', 'sky'],
        k: [5, 49],
        o: 2
      },
      male_superhero: {
        a: 'Male Superhero',
        b: '1F9B8-200D-2642-FE0F',
        c: '1F9B8-200D-2642',
        k: [43, 24],
        o: 11
      },
      ringed_planet: {
        a: 'Ringed Planet',
        b: '1FA90',
        k: [52, 4],
        o: 12
      },
      old_key: {
        a: 'Old Key',
        b: '1F5DD-FE0F',
        c: '1F5DD',
        j: ['lock', 'door', 'password'],
        k: [30, 22],
        o: 2
      },
      congratulations: {
        a: 'Circled Ideograph Congratulation',
        b: '3297-FE0F',
        c: '3297',
        j: ['chinese', 'kanji', 'japanese', 'red-circle'],
        k: [55, 46],
        o: 2
      },
      'flag-no': {
        a: 'Norway Flag',
        b: '1F1F3-1F1F4',
        k: [3, 32],
        o: 2
      },
      star: {
        a: 'White Medium Star',
        b: '2B50',
        j: ['night', 'yellow'],
        k: [55, 42],
        o: 2
      },
      secret: {
        a: 'Circled Ideograph Secret',
        b: '3299-FE0F',
        c: '3299',
        j: ['privacy', 'chinese', 'sshh', 'kanji', 'red-circle'],
        k: [55, 47],
        o: 2
      },
      'flag-np': {
        a: 'Nepal Flag',
        b: '1F1F3-1F1F5',
        k: [3, 33],
        o: 2
      },
      female_superhero: {
        a: 'Female Superhero',
        b: '1F9B8-200D-2640-FE0F',
        c: '1F9B8-200D-2640',
        k: [43, 18],
        o: 11
      },
      hammer: {
        a: 'Hammer',
        b: '1F528',
        j: ['tools', 'build', 'create'],
        k: [28, 11],
        o: 2
      },
      star2: {
        a: 'Glowing Star',
        b: '1F31F',
        j: ['night', 'sparkle', 'awesome', 'good', 'magic'],
        k: [5, 50],
        o: 2
      },
      'flag-nr': {
        a: 'Nauru Flag',
        b: '1F1F3-1F1F7',
        k: [3, 34],
        o: 2
      },
      axe: {
        a: 'Axe',
        b: '1FA93',
        k: [52, 7],
        o: 12
      },
      u55b6: {
        a: 'Squared Cjk Unified Ideograph-55b6',
        b: '1F23A',
        j: ['japanese', 'opening hours', 'orange-square'],
        k: [5, 16],
        o: 2
      },
      supervillain: {
        a: 'Supervillain',
        b: '1F9B9',
        k: [43, 48],
        o: 11
      },
      stars: {
        a: 'Shooting Star',
        b: '1F320',
        j: ['night', 'photo'],
        k: [5, 51],
        o: 2
      },
      u6e80: {
        a: 'Squared Cjk Unified Ideograph-6e80',
        b: '1F235',
        j: ['full', 'chinese', 'japanese', 'red-square', 'kanji'],
        k: [5, 11],
        o: 2
      },
      'flag-nu': {
        a: 'Niue Flag',
        b: '1F1F3-1F1FA',
        k: [3, 35],
        o: 2
      },
      pick: {
        a: 'Pick',
        b: '26CF-FE0F',
        c: '26CF',
        j: ['tools', 'dig'],
        k: [54, 5],
        o: 2
      },
      male_supervillain: {
        a: 'Male Supervillain',
        b: '1F9B9-200D-2642-FE0F',
        c: '1F9B9-200D-2642',
        k: [43, 42],
        o: 11
      },
      female_supervillain: {
        a: 'Female Supervillain',
        b: '1F9B9-200D-2640-FE0F',
        c: '1F9B9-200D-2640',
        k: [43, 36],
        o: 11
      },
      hammer_and_pick: {
        a: 'Hammer and Pick',
        b: '2692-FE0F',
        c: '2692',
        j: ['tools', 'build', 'create'],
        k: [53, 41],
        o: 2
      },
      milky_way: {
        a: 'Milky Way',
        b: '1F30C',
        j: ['photo', 'space', 'stars'],
        k: [5, 31],
        o: 2
      },
      red_circle: {
        a: 'Large Red Circle',
        b: '1F534',
        j: ['shape', 'error', 'danger'],
        k: [28, 23],
        o: 2
      },
      'flag-nz': {
        a: 'New Zealand Flag',
        b: '1F1F3-1F1FF',
        k: [3, 36],
        o: 2
      },
      large_orange_circle: {
        a: 'Large Orange Circle',
        b: '1F7E0',
        k: [37, 3],
        o: 12
      },
      hammer_and_wrench: {
        a: 'Hammer and Wrench',
        b: '1F6E0-FE0F',
        c: '1F6E0',
        j: ['tools', 'build', 'create'],
        k: [36, 42],
        o: 2
      },
      'flag-om': {
        a: 'Oman Flag',
        b: '1F1F4-1F1F2',
        k: [3, 37],
        o: 2
      },
      cloud: {
        a: 'Cloud',
        b: '2601-FE0F',
        c: '2601',
        j: ['weather', 'sky'],
        k: [52, 50],
        o: 2
      },
      mage: {
        obsoleted_by: '1F9D9-200D-2640-FE0F',
        a: 'Mage',
        b: '1F9D9',
        k: [49, 49],
        o: 5
      },
      dagger_knife: {
        a: 'Dagger Knife',
        b: '1F5E1-FE0F',
        c: '1F5E1',
        k: [30, 24],
        o: 2
      },
      partly_sunny: {
        a: 'Sun Behind Cloud',
        b: '26C5',
        j: ['weather', 'nature', 'cloudy', 'morning', 'fall', 'spring'],
        k: [54, 2],
        o: 2
      },
      large_yellow_circle: {
        a: 'Large Yellow Circle',
        b: '1F7E1',
        k: [37, 4],
        o: 12
      },
      male_mage: {
        a: 'Male Mage',
        b: '1F9D9-200D-2642-FE0F',
        c: '1F9D9-200D-2642',
        k: [49, 43],
        o: 5
      },
      'flag-pa': {
        a: 'Panama Flag',
        b: '1F1F5-1F1E6',
        k: [3, 38],
        o: 2
      },
      thunder_cloud_and_rain: {
        a: 'Thunder Cloud and Rain',
        b: '26C8-FE0F',
        c: '26C8',
        k: [54, 3],
        o: 2
      },
      large_green_circle: {
        a: 'Large Green Circle',
        b: '1F7E2',
        k: [37, 5],
        o: 12
      },
      female_mage: {
        obsoletes: '1F9D9',
        a: 'Female Mage',
        b: '1F9D9-200D-2640-FE0F',
        c: '1F9D9-200D-2640',
        k: [49, 37],
        o: 5
      },
      crossed_swords: {
        a: 'Crossed Swords',
        b: '2694-FE0F',
        c: '2694',
        j: ['weapon'],
        k: [53, 43],
        o: 2
      },
      'flag-pe': {
        a: 'Peru Flag',
        b: '1F1F5-1F1EA',
        k: [3, 39],
        o: 2
      },
      gun: {
        a: 'Pistol',
        b: '1F52B',
        j: ['violence', 'weapon', 'pistol', 'revolver'],
        k: [28, 14],
        o: 2
      },
      mostly_sunny: {
        a: 'Mostly Sunny',
        b: '1F324-FE0F',
        c: '1F324',
        k: [5, 53],
        n: ['sun_small_cloud'],
        o: 2
      },
      fairy: {
        obsoleted_by: '1F9DA-200D-2640-FE0F',
        a: 'Fairy',
        b: '1F9DA',
        k: [50, 10],
        o: 5
      },
      'flag-pf': {
        a: 'French Polynesia Flag',
        b: '1F1F5-1F1EB',
        k: [3, 40],
        o: 2
      },
      large_blue_circle: {
        a: 'Large Blue Circle',
        b: '1F535',
        j: ['shape', 'icon', 'button'],
        k: [28, 24],
        o: 2
      },
      large_purple_circle: {
        a: 'Large Purple Circle',
        b: '1F7E3',
        k: [37, 6],
        o: 12
      },
      bow_and_arrow: {
        a: 'Bow and Arrow',
        b: '1F3F9',
        j: ['sports'],
        k: [11, 21],
        o: 2
      },
      male_fairy: {
        a: 'Male Fairy',
        b: '1F9DA-200D-2642-FE0F',
        c: '1F9DA-200D-2642',
        k: [50, 4],
        o: 5
      },
      barely_sunny: {
        a: 'Barely Sunny',
        b: '1F325-FE0F',
        c: '1F325',
        k: [5, 54],
        n: ['sun_behind_cloud'],
        o: 2
      },
      'flag-pg': {
        a: 'Papua New Guinea Flag',
        b: '1F1F5-1F1EC',
        k: [3, 41],
        o: 2
      },
      shield: {
        a: 'Shield',
        b: '1F6E1-FE0F',
        c: '1F6E1',
        j: ['protection', 'security'],
        k: [36, 43],
        o: 2
      },
      partly_sunny_rain: {
        a: 'Partly Sunny Rain',
        b: '1F326-FE0F',
        c: '1F326',
        k: [5, 55],
        n: ['sun_behind_rain_cloud'],
        o: 2
      },
      large_brown_circle: {
        a: 'Large Brown Circle',
        b: '1F7E4',
        k: [37, 7],
        o: 12
      },
      female_fairy: {
        obsoletes: '1F9DA',
        a: 'Female Fairy',
        b: '1F9DA-200D-2640-FE0F',
        c: '1F9DA-200D-2640',
        k: [49, 55],
        o: 5
      },
      'flag-ph': {
        a: 'Philippines Flag',
        b: '1F1F5-1F1ED',
        k: [3, 42],
        o: 2
      },
      'flag-pk': {
        a: 'Pakistan Flag',
        b: '1F1F5-1F1F0',
        k: [3, 43],
        o: 2
      },
      black_circle: {
        a: 'Medium Black Circle',
        b: '26AB',
        j: ['shape', 'button', 'round'],
        k: [53, 53],
        o: 2
      },
      wrench: {
        a: 'Wrench',
        b: '1F527',
        j: ['tools', 'diy', 'ikea', 'fix', 'maintainer'],
        k: [28, 10],
        o: 2
      },
      vampire: {
        obsoleted_by: '1F9DB-200D-2640-FE0F',
        a: 'Vampire',
        b: '1F9DB',
        k: [50, 28],
        o: 5
      },
      rain_cloud: {
        a: 'Rain Cloud',
        b: '1F327-FE0F',
        c: '1F327',
        k: [5, 56],
        o: 2
      },
      snow_cloud: {
        a: 'Snow Cloud',
        b: '1F328-FE0F',
        c: '1F328',
        k: [6, 0],
        o: 2
      },
      'flag-pl': {
        a: 'Poland Flag',
        b: '1F1F5-1F1F1',
        k: [3, 44],
        o: 2
      },
      male_vampire: {
        a: 'Male Vampire',
        b: '1F9DB-200D-2642-FE0F',
        c: '1F9DB-200D-2642',
        k: [50, 22],
        o: 5
      },
      nut_and_bolt: {
        a: 'Nut and Bolt',
        b: '1F529',
        j: ['handy', 'tools', 'fix'],
        k: [28, 12],
        o: 2
      },
      white_circle: {
        a: 'Medium White Circle',
        b: '26AA',
        j: ['shape', 'round'],
        k: [53, 52],
        o: 2
      },
      female_vampire: {
        obsoletes: '1F9DB',
        a: 'Female Vampire',
        b: '1F9DB-200D-2640-FE0F',
        c: '1F9DB-200D-2640',
        k: [50, 16],
        o: 5
      },
      'flag-pm': {
        a: 'St. Pierre & Miquelon Flag',
        b: '1F1F5-1F1F2',
        k: [3, 45],
        o: 2
      },
      large_red_square: {
        a: 'Large Red Square',
        b: '1F7E5',
        k: [37, 8],
        o: 12
      },
      lightning: {
        a: 'Lightning',
        b: '1F329-FE0F',
        c: '1F329',
        k: [6, 1],
        n: ['lightning_cloud'],
        o: 2
      },
      gear: {
        a: 'Gear',
        b: '2699-FE0F',
        c: '2699',
        j: ['cog'],
        k: [53, 47],
        o: 2
      },
      merperson: {
        obsoleted_by: '1F9DC-200D-2642-FE0F',
        a: 'Merperson',
        b: '1F9DC',
        k: [50, 46],
        o: 5
      },
      tornado: {
        a: 'Tornado',
        b: '1F32A-FE0F',
        c: '1F32A',
        j: ['weather', 'cyclone', 'twister'],
        k: [6, 2],
        n: ['tornado_cloud'],
        o: 2
      },
      large_orange_square: {
        a: 'Large Orange Square',
        b: '1F7E7',
        k: [37, 10],
        o: 12
      },
      'flag-pn': {
        a: 'Pitcairn Islands Flag',
        b: '1F1F5-1F1F3',
        k: [3, 46],
        o: 2
      },
      compression: {
        a: 'Compression',
        b: '1F5DC-FE0F',
        c: '1F5DC',
        k: [30, 21],
        o: 2
      },
      merman: {
        obsoletes: '1F9DC',
        a: 'Merman',
        b: '1F9DC-200D-2642-FE0F',
        c: '1F9DC-200D-2642',
        k: [50, 40],
        o: 5
      },
      large_yellow_square: {
        a: 'Large Yellow Square',
        b: '1F7E8',
        k: [37, 11],
        o: 12
      },
      fog: {
        a: 'Fog',
        b: '1F32B-FE0F',
        c: '1F32B',
        j: ['weather'],
        k: [6, 3],
        o: 2
      },
      scales: {
        a: 'Scales',
        b: '2696-FE0F',
        c: '2696',
        k: [53, 45],
        o: 2
      },
      'flag-pr': {
        a: 'Puerto Rico Flag',
        b: '1F1F5-1F1F7',
        k: [3, 47],
        o: 2
      },
      wind_blowing_face: {
        a: 'Wind Blowing Face',
        b: '1F32C-FE0F',
        c: '1F32C',
        k: [6, 4],
        o: 2
      },
      'flag-ps': {
        a: 'Palestinian Territories Flag',
        b: '1F1F5-1F1F8',
        k: [3, 48],
        o: 2
      },
      mermaid: {
        a: 'Mermaid',
        b: '1F9DC-200D-2640-FE0F',
        c: '1F9DC-200D-2640',
        k: [50, 34],
        o: 5
      },
      probing_cane: {
        a: 'Probing Cane',
        b: '1F9AF',
        k: [43, 3],
        o: 12
      },
      large_green_square: {
        a: 'Large Green Square',
        b: '1F7E9',
        k: [37, 12],
        o: 12
      },
      'flag-pt': {
        a: 'Portugal Flag',
        b: '1F1F5-1F1F9',
        k: [3, 49],
        o: 2
      },
      link: {
        a: 'Link Symbol',
        b: '1F517',
        j: ['rings', 'url'],
        k: [27, 51],
        o: 2
      },
      large_blue_square: {
        a: 'Large Blue Square',
        b: '1F7E6',
        k: [37, 9],
        o: 12
      },
      elf: {
        obsoleted_by: '1F9DD-200D-2642-FE0F',
        a: 'Elf',
        b: '1F9DD',
        k: [51, 7],
        o: 5
      },
      cyclone: {
        a: 'Cyclone',
        b: '1F300',
        j: ['weather', 'swirl', 'blue', 'cloud', 'vortex', 'spiral', 'whirlpool', 'spin', 'tornado', 'hurricane', 'typhoon'],
        k: [5, 19],
        o: 2
      },
      rainbow: {
        a: 'Rainbow',
        b: '1F308',
        j: ['nature', 'happy', 'unicorn_face', 'photo', 'sky', 'spring'],
        k: [5, 27],
        o: 2
      },
      male_elf: {
        obsoletes: '1F9DD',
        a: 'Male Elf',
        b: '1F9DD-200D-2642-FE0F',
        c: '1F9DD-200D-2642',
        k: [51, 1],
        o: 5
      },
      'flag-pw': {
        a: 'Palau Flag',
        b: '1F1F5-1F1FC',
        k: [3, 50],
        o: 2
      },
      chains: {
        a: 'Chains',
        b: '26D3-FE0F',
        c: '26D3',
        j: ['lock', 'arrest'],
        k: [54, 7],
        o: 2
      },
      large_purple_square: {
        a: 'Large Purple Square',
        b: '1F7EA',
        k: [37, 13],
        o: 12
      },
      female_elf: {
        a: 'Female Elf',
        b: '1F9DD-200D-2640-FE0F',
        c: '1F9DD-200D-2640',
        k: [50, 52],
        o: 5
      },
      'flag-py': {
        a: 'Paraguay Flag',
        b: '1F1F5-1F1FE',
        k: [3, 51],
        o: 2
      },
      closed_umbrella: {
        a: 'Closed Umbrella',
        b: '1F302',
        j: ['weather', 'rain', 'drizzle'],
        k: [5, 21],
        o: 2
      },
      toolbox: {
        a: 'Toolbox',
        b: '1F9F0',
        k: [51, 35],
        o: 11
      },
      large_brown_square: {
        a: 'Large Brown Square',
        b: '1F7EB',
        k: [37, 14],
        o: 12
      },
      magnet: {
        a: 'Magnet',
        b: '1F9F2',
        k: [51, 37],
        o: 11
      },
      genie: {
        obsoleted_by: '1F9DE-200D-2642-FE0F',
        a: 'Genie',
        b: '1F9DE',
        k: [51, 15],
        o: 5
      },
      'flag-qa': {
        a: 'Qatar Flag',
        b: '1F1F6-1F1E6',
        k: [3, 52],
        o: 2
      },
      umbrella: {
        a: 'Umbrella',
        b: '2602-FE0F',
        c: '2602',
        j: ['rainy', 'weather', 'spring'],
        k: [52, 51],
        o: 2
      },
      black_large_square: {
        a: 'Black Large Square',
        b: '2B1B',
        j: ['shape', 'icon', 'button'],
        k: [55, 40],
        o: 2
      },
      male_genie: {
        obsoletes: '1F9DE',
        a: 'Male Genie',
        b: '1F9DE-200D-2642-FE0F',
        c: '1F9DE-200D-2642',
        k: [51, 14],
        o: 5
      },
      umbrella_with_rain_drops: {
        a: 'Umbrella with Rain Drops',
        b: '2614',
        k: [52, 56],
        o: 2
      },
      'flag-re': {
        a: 'Réunion Flag',
        b: '1F1F7-1F1EA',
        k: [3, 53],
        o: 2
      },
      white_large_square: {
        a: 'White Large Square',
        b: '2B1C',
        j: ['shape', 'icon', 'stone', 'button'],
        k: [55, 41],
        o: 2
      },
      alembic: {
        a: 'Alembic',
        b: '2697-FE0F',
        c: '2697',
        j: ['distilling', 'science', 'experiment', 'chemistry'],
        k: [53, 46],
        o: 2
      },
      black_medium_square: {
        a: 'Black Medium Square',
        b: '25FC-FE0F',
        c: '25FC',
        j: ['shape', 'button', 'icon'],
        k: [52, 46],
        o: 2
      },
      test_tube: {
        a: 'Test Tube',
        b: '1F9EA',
        k: [51, 29],
        o: 11
      },
      'flag-ro': {
        a: 'Romania Flag',
        b: '1F1F7-1F1F4',
        k: [3, 54],
        o: 2
      },
      female_genie: {
        a: 'Female Genie',
        b: '1F9DE-200D-2640-FE0F',
        c: '1F9DE-200D-2640',
        k: [51, 13],
        o: 5
      },
      umbrella_on_ground: {
        a: 'Umbrella on Ground',
        b: '26F1-FE0F',
        c: '26F1',
        k: [54, 12],
        o: 2
      },
      zombie: {
        obsoleted_by: '1F9DF-200D-2642-FE0F',
        a: 'Zombie',
        b: '1F9DF',
        k: [51, 18],
        o: 5
      },
      zap: {
        a: 'High Voltage Sign',
        b: '26A1',
        j: ['thunder', 'weather', 'lightning bolt', 'fast'],
        k: [53, 51],
        o: 2
      },
      white_medium_square: {
        a: 'White Medium Square',
        b: '25FB-FE0F',
        c: '25FB',
        j: ['shape', 'stone', 'icon'],
        k: [52, 45],
        o: 2
      },
      'flag-rs': {
        a: 'Serbia Flag',
        b: '1F1F7-1F1F8',
        k: [3, 55],
        o: 2
      },
      petri_dish: {
        a: 'Petri Dish',
        b: '1F9EB',
        k: [51, 30],
        o: 11
      },
      snowflake: {
        a: 'Snowflake',
        b: '2744-FE0F',
        c: '2744',
        j: ['winter', 'season', 'cold', 'weather', 'christmas', 'xmas'],
        k: [55, 19],
        o: 2
      },
      dna: {
        a: 'Dna Double Helix',
        b: '1F9EC',
        k: [51, 31],
        o: 11
      },
      male_zombie: {
        obsoletes: '1F9DF',
        a: 'Male Zombie',
        b: '1F9DF-200D-2642-FE0F',
        c: '1F9DF-200D-2642',
        k: [51, 17],
        o: 5
      },
      black_medium_small_square: {
        a: 'Black Medium Small Square',
        b: '25FE',
        j: ['icon', 'shape', 'button'],
        k: [52, 48],
        o: 2
      },
      ru: {
        a: 'Russia Flag',
        b: '1F1F7-1F1FA',
        j: ['russian', 'federation', 'flag', 'nation', 'country', 'banner'],
        k: [3, 56],
        n: ['flag-ru'],
        o: 2
      },
      female_zombie: {
        a: 'Female Zombie',
        b: '1F9DF-200D-2640-FE0F',
        c: '1F9DF-200D-2640',
        k: [51, 16],
        o: 5
      },
      'flag-rw': {
        a: 'Rwanda Flag',
        b: '1F1F7-1F1FC',
        k: [4, 0],
        o: 2
      },
      snowman: {
        a: 'Snowman',
        b: '2603-FE0F',
        c: '2603',
        j: ['winter', 'season', 'cold', 'weather', 'christmas', 'xmas', 'frozen', 'without_snow'],
        k: [52, 52],
        o: 2
      },
      white_medium_small_square: {
        a: 'White Medium Small Square',
        b: '25FD',
        j: ['shape', 'stone', 'icon', 'button'],
        k: [52, 47],
        o: 2
      },
      microscope: {
        a: 'Microscope',
        b: '1F52C',
        j: ['laboratory', 'experiment', 'zoomin', 'science', 'study'],
        k: [28, 15],
        o: 2
      },
      snowman_without_snow: {
        a: 'Snowman Without Snow',
        b: '26C4',
        k: [54, 1],
        o: 2
      },
      telescope: {
        a: 'Telescope',
        b: '1F52D',
        j: ['stars', 'space', 'zoom', 'science', 'astronomy'],
        k: [28, 16],
        o: 2
      },
      black_small_square: {
        a: 'Black Small Square',
        b: '25AA-FE0F',
        c: '25AA',
        j: ['shape', 'icon'],
        k: [52, 41],
        o: 2
      },
      'flag-sa': {
        a: 'Saudi Arabia Flag',
        b: '1F1F8-1F1E6',
        k: [4, 1],
        o: 2
      },
      'man-getting-massage': {
        a: 'Man Getting Massage',
        b: '1F486-200D-2642-FE0F',
        c: '1F486-200D-2642',
        k: [24, 45],
        o: 4
      },
      comet: {
        a: 'Comet',
        b: '2604-FE0F',
        c: '2604',
        j: ['space'],
        k: [52, 53],
        o: 2
      },
      white_small_square: {
        a: 'White Small Square',
        b: '25AB-FE0F',
        c: '25AB',
        j: ['shape', 'icon'],
        k: [52, 42],
        o: 2
      },
      'flag-sb': {
        a: 'Solomon Islands Flag',
        b: '1F1F8-1F1E7',
        k: [4, 2],
        o: 2
      },
      satellite_antenna: {
        a: 'Satellite Antenna',
        b: '1F4E1',
        k: [26, 55],
        o: 2
      },
      large_orange_diamond: {
        a: 'Large Orange Diamond',
        b: '1F536',
        j: ['shape', 'jewel', 'gem'],
        k: [28, 25],
        o: 2
      },
      'woman-getting-massage': {
        obsoletes: '1F486',
        a: 'Woman Getting Massage',
        b: '1F486-200D-2640-FE0F',
        c: '1F486-200D-2640',
        k: [24, 39],
        o: 4
      },
      fire: {
        a: 'Fire',
        b: '1F525',
        j: ['hot', 'cook', 'flame'],
        k: [28, 8],
        o: 2
      },
      syringe: {
        a: 'Syringe',
        b: '1F489',
        j: ['health', 'hospital', 'drugs', 'blood', 'medicine', 'needle', 'doctor', 'nurse'],
        k: [25, 19],
        o: 2
      },
      'flag-sc': {
        a: 'Seychelles Flag',
        b: '1F1F8-1F1E8',
        k: [4, 3],
        o: 2
      },
      large_blue_diamond: {
        a: 'Large Blue Diamond',
        b: '1F537',
        j: ['shape', 'jewel', 'gem'],
        k: [28, 26],
        o: 2
      },
      'flag-sd': {
        a: 'Sudan Flag',
        b: '1F1F8-1F1E9',
        k: [4, 4],
        o: 2
      },
      droplet: {
        a: 'Droplet',
        b: '1F4A7',
        j: ['water', 'drip', 'faucet', 'spring'],
        k: [25, 49],
        o: 2
      },
      drop_of_blood: {
        a: 'Drop of Blood',
        b: '1FA78',
        k: [51, 55],
        o: 12
      },
      ocean: {
        a: 'Water Wave',
        b: '1F30A',
        j: ['sea', 'water', 'wave', 'nature', 'tsunami', 'disaster'],
        k: [5, 29],
        o: 2
      },
      'flag-se': {
        a: 'Sweden Flag',
        b: '1F1F8-1F1EA',
        k: [4, 5],
        o: 2
      },
      'man-getting-haircut': {
        a: 'Man Getting Haircut',
        b: '1F487-200D-2642-FE0F',
        c: '1F487-200D-2642',
        k: [25, 6],
        o: 4
      },
      small_orange_diamond: {
        a: 'Small Orange Diamond',
        b: '1F538',
        j: ['shape', 'jewel', 'gem'],
        k: [28, 27],
        o: 2
      },
      pill: {
        a: 'Pill',
        b: '1F48A',
        j: ['health', 'medicine', 'doctor', 'pharmacy', 'drug'],
        k: [25, 20],
        o: 2
      },
      'woman-getting-haircut': {
        obsoletes: '1F487',
        a: 'Woman Getting Haircut',
        b: '1F487-200D-2640-FE0F',
        c: '1F487-200D-2640',
        k: [25, 0],
        o: 4
      },
      small_blue_diamond: {
        a: 'Small Blue Diamond',
        b: '1F539',
        j: ['shape', 'jewel', 'gem'],
        k: [28, 28],
        o: 2
      },
      'flag-sg': {
        a: 'Singapore Flag',
        b: '1F1F8-1F1EC',
        k: [4, 6],
        o: 2
      },
      adhesive_bandage: {
        a: 'Adhesive Bandage',
        b: '1FA79',
        k: [51, 56],
        o: 12
      },
      small_red_triangle: {
        a: 'Up-Pointing Red Triangle',
        b: '1F53A',
        j: ['shape', 'direction', 'up', 'top'],
        k: [28, 29],
        o: 2
      },
      'flag-sh': {
        a: 'St. Helena Flag',
        b: '1F1F8-1F1ED',
        k: [4, 7],
        o: 2
      },
      stethoscope: {
        a: 'Stethoscope',
        b: '1FA7A',
        k: [52, 0],
        o: 12
      },
      'man-walking': {
        obsoletes: '1F6B6',
        a: 'Man Walking',
        b: '1F6B6-200D-2642-FE0F',
        c: '1F6B6-200D-2642',
        k: [35, 53],
        o: 4
      },
      'flag-si': {
        a: 'Slovenia Flag',
        b: '1F1F8-1F1EE',
        k: [4, 8],
        o: 2
      },
      door: {
        a: 'Door',
        b: '1F6AA',
        j: ['house', 'entry', 'exit'],
        k: [35, 1],
        o: 2
      },
      small_red_triangle_down: {
        a: 'Down-Pointing Red Triangle',
        b: '1F53B',
        j: ['shape', 'direction', 'bottom'],
        k: [28, 30],
        o: 2
      },
      'flag-sj': {
        a: 'Svalbard & Jan Mayen Flag',
        b: '1F1F8-1F1EF',
        k: [4, 9],
        o: 2
      },
      diamond_shape_with_a_dot_inside: {
        a: 'Diamond Shape with a Dot Inside',
        b: '1F4A0',
        j: ['jewel', 'blue', 'gem', 'crystal', 'fancy'],
        k: [25, 42],
        o: 2
      },
      'woman-walking': {
        a: 'Woman Walking',
        b: '1F6B6-200D-2640-FE0F',
        c: '1F6B6-200D-2640',
        k: [35, 47],
        o: 4
      },
      bed: {
        a: 'Bed',
        b: '1F6CF-FE0F',
        c: '1F6CF',
        j: ['sleep', 'rest'],
        k: [36, 37],
        o: 2
      },
      radio_button: {
        a: 'Radio Button',
        b: '1F518',
        j: ['input', 'old', 'music', 'circle'],
        k: [27, 52],
        o: 2
      },
      'flag-sk': {
        a: 'Slovakia Flag',
        b: '1F1F8-1F1F0',
        k: [4, 10],
        o: 2
      },
      standing_person: {
        a: 'Standing Person',
        b: '1F9CD',
        k: [44, 31],
        o: 12
      },
      couch_and_lamp: {
        a: 'Couch and Lamp',
        b: '1F6CB-FE0F',
        c: '1F6CB',
        j: ['read', 'chill'],
        k: [36, 28],
        o: 2
      },
      man_standing: {
        a: 'Man Standing',
        b: '1F9CD-200D-2642-FE0F',
        c: '1F9CD-200D-2642',
        k: [44, 25],
        o: 12
      },
      white_square_button: {
        a: 'White Square Button',
        b: '1F533',
        j: ['shape', 'input'],
        k: [28, 22],
        o: 2
      },
      'flag-sl': {
        a: 'Sierra Leone Flag',
        b: '1F1F8-1F1F1',
        k: [4, 11],
        o: 2
      },
      chair: {
        a: 'Chair',
        b: '1FA91',
        k: [52, 5],
        o: 12
      },
      toilet: {
        a: 'Toilet',
        b: '1F6BD',
        j: ['restroom', 'wc', 'washroom', 'bathroom', 'potty'],
        k: [36, 14],
        o: 2
      },
      black_square_button: {
        a: 'Black Square Button',
        b: '1F532',
        j: ['shape', 'input', 'frame'],
        k: [28, 21],
        o: 2
      },
      'flag-sm': {
        a: 'San Marino Flag',
        b: '1F1F8-1F1F2',
        k: [4, 12],
        o: 2
      },
      woman_standing: {
        a: 'Woman Standing',
        b: '1F9CD-200D-2640-FE0F',
        c: '1F9CD-200D-2640',
        k: [44, 19],
        o: 12
      },
      kneeling_person: {
        a: 'Kneeling Person',
        b: '1F9CE',
        k: [44, 49],
        o: 12
      },
      shower: {
        a: 'Shower',
        b: '1F6BF',
        j: ['clean', 'water', 'bathroom'],
        k: [36, 16],
        o: 2
      },
      'flag-sn': {
        a: 'Senegal Flag',
        b: '1F1F8-1F1F3',
        k: [4, 13],
        o: 2
      },
      bathtub: {
        a: 'Bathtub',
        b: '1F6C1',
        j: ['clean', 'shower', 'bathroom'],
        k: [36, 23],
        o: 2
      },
      'flag-so': {
        a: 'Somalia Flag',
        b: '1F1F8-1F1F4',
        k: [4, 14],
        o: 2
      },
      man_kneeling: {
        a: 'Man Kneeling',
        b: '1F9CE-200D-2642-FE0F',
        c: '1F9CE-200D-2642',
        k: [44, 43],
        o: 12
      },
      'flag-sr': {
        a: 'Suriname Flag',
        b: '1F1F8-1F1F7',
        k: [4, 15],
        o: 2
      },
      woman_kneeling: {
        a: 'Woman Kneeling',
        b: '1F9CE-200D-2640-FE0F',
        c: '1F9CE-200D-2640',
        k: [44, 37],
        o: 12
      },
      razor: {
        a: 'Razor',
        b: '1FA92',
        k: [52, 6],
        o: 12
      },
      'flag-ss': {
        a: 'South Sudan Flag',
        b: '1F1F8-1F1F8',
        k: [4, 16],
        o: 2
      },
      lotion_bottle: {
        a: 'Lotion Bottle',
        b: '1F9F4',
        k: [51, 39],
        o: 11
      },
      'flag-st': {
        a: 'São Tomé & Príncipe Flag',
        b: '1F1F8-1F1F9',
        k: [4, 17],
        o: 2
      },
      safety_pin: {
        a: 'Safety Pin',
        b: '1F9F7',
        k: [51, 42],
        o: 11
      },
      man_with_probing_cane: {
        a: 'Man with Probing Cane',
        b: '1F468-200D-1F9AF',
        k: [16, 17],
        o: 12
      },
      broom: {
        a: 'Broom',
        b: '1F9F9',
        k: [51, 44],
        o: 11
      },
      woman_with_probing_cane: {
        a: 'Woman with Probing Cane',
        b: '1F469-200D-1F9AF',
        k: [19, 2],
        o: 12
      },
      'flag-sv': {
        a: 'El Salvador Flag',
        b: '1F1F8-1F1FB',
        k: [4, 18],
        o: 2
      },
      'flag-sx': {
        a: 'Sint Maarten Flag',
        b: '1F1F8-1F1FD',
        k: [4, 19],
        o: 2
      },
      basket: {
        a: 'Basket',
        b: '1F9FA',
        k: [51, 45],
        o: 11
      },
      man_in_motorized_wheelchair: {
        a: 'Man in Motorized Wheelchair',
        b: '1F468-200D-1F9BC',
        k: [16, 47],
        o: 12
      },
      'flag-sy': {
        a: 'Syria Flag',
        b: '1F1F8-1F1FE',
        k: [4, 20],
        o: 2
      },
      roll_of_paper: {
        a: 'Roll of Paper',
        b: '1F9FB',
        k: [51, 46],
        o: 11
      },
      woman_in_motorized_wheelchair: {
        a: 'Woman in Motorized Wheelchair',
        b: '1F469-200D-1F9BC',
        k: [19, 32],
        o: 12
      },
      'flag-sz': {
        a: 'Eswatini Flag',
        b: '1F1F8-1F1FF',
        k: [4, 21],
        o: 2
      },
      soap: {
        a: 'Bar of Soap',
        b: '1F9FC',
        k: [51, 47],
        o: 11
      },
      'flag-ta': {
        a: 'Tristan Da Cunha Flag',
        b: '1F1F9-1F1E6',
        k: [4, 22],
        o: 2
      },
      sponge: {
        a: 'Sponge',
        b: '1F9FD',
        k: [51, 48],
        o: 11
      },
      fire_extinguisher: {
        a: 'Fire Extinguisher',
        b: '1F9EF',
        k: [51, 34],
        o: 11
      },
      man_in_manual_wheelchair: {
        a: 'Man in Manual Wheelchair',
        b: '1F468-200D-1F9BD',
        k: [16, 53],
        o: 12
      },
      'flag-tc': {
        a: 'Turks & Caicos Islands Flag',
        b: '1F1F9-1F1E8',
        k: [4, 23],
        o: 2
      },
      woman_in_manual_wheelchair: {
        a: 'Woman in Manual Wheelchair',
        b: '1F469-200D-1F9BD',
        k: [19, 38],
        o: 12
      },
      'flag-td': {
        a: 'Chad Flag',
        b: '1F1F9-1F1E9',
        k: [4, 24],
        o: 2
      },
      shopping_trolley: {
        a: 'Shopping Trolley',
        b: '1F6D2',
        k: [36, 40],
        o: 4
      },
      'flag-tf': {
        a: 'French Southern Territories Flag',
        b: '1F1F9-1F1EB',
        k: [4, 25],
        o: 2
      },
      smoking: {
        a: 'Smoking Symbol',
        b: '1F6AC',
        j: ['kills', 'tobacco', 'cigarette', 'joint', 'smoke'],
        k: [35, 3],
        o: 2
      },
      coffin: {
        a: 'Coffin',
        b: '26B0-FE0F',
        c: '26B0',
        j: ['vampire', 'dead', 'die', 'death', 'rip', 'graveyard', 'cemetery', 'casket', 'funeral', 'box'],
        k: [53, 54],
        o: 2
      },
      'man-running': {
        obsoletes: '1F3C3',
        a: 'Man Running',
        b: '1F3C3-200D-2642-FE0F',
        c: '1F3C3-200D-2642',
        k: [8, 52],
        o: 4
      },
      'flag-tg': {
        a: 'Togo Flag',
        b: '1F1F9-1F1EC',
        k: [4, 26],
        o: 2
      },
      'woman-running': {
        a: 'Woman Running',
        b: '1F3C3-200D-2640-FE0F',
        c: '1F3C3-200D-2640',
        k: [8, 46],
        o: 4
      },
      funeral_urn: {
        a: 'Funeral Urn',
        b: '26B1-FE0F',
        c: '26B1',
        j: ['dead', 'die', 'death', 'rip', 'ashes'],
        k: [53, 55],
        o: 2
      },
      'flag-th': {
        a: 'Thailand Flag',
        b: '1F1F9-1F1ED',
        k: [4, 27],
        o: 2
      },
      moyai: {
        a: 'Moyai',
        b: '1F5FF',
        j: ['rock', 'easter island', 'moai'],
        k: [30, 34],
        o: 2
      },
      'flag-tj': {
        a: 'Tajikistan Flag',
        b: '1F1F9-1F1EF',
        k: [4, 28],
        o: 2
      },
      dancer: {
        a: 'Dancer',
        b: '1F483',
        j: ['female', 'girl', 'woman', 'fun'],
        k: [24, 26],
        o: 2
      },
      'flag-tk': {
        a: 'Tokelau Flag',
        b: '1F1F9-1F1F0',
        k: [4, 29],
        o: 2
      },
      man_dancing: {
        a: 'Man Dancing',
        b: '1F57A',
        j: ['male', 'boy', 'fun', 'dancer'],
        k: [29, 37],
        o: 4
      },
      'flag-tl': {
        a: 'Timor-Leste Flag',
        b: '1F1F9-1F1F1',
        k: [4, 30],
        o: 2
      },
      man_in_business_suit_levitating: {
        a: 'Man in Business Suit Levitating',
        b: '1F574-FE0F',
        c: '1F574',
        k: [29, 9],
        o: 2
      },
      'flag-tm': {
        a: 'Turkmenistan Flag',
        b: '1F1F9-1F1F2',
        k: [4, 31],
        o: 2
      },
      dancers: {
        obsoleted_by: '1F46F-200D-2640-FE0F',
        a: 'Woman with Bunny Ears',
        b: '1F46F',
        k: [22, 0],
        o: 2
      },
      'man-with-bunny-ears-partying': {
        a: 'Man with Bunny Ears Partying',
        b: '1F46F-200D-2642-FE0F',
        c: '1F46F-200D-2642',
        k: [21, 56],
        o: 4
      },
      'flag-tn': {
        a: 'Tunisia Flag',
        b: '1F1F9-1F1F3',
        k: [4, 32],
        o: 2
      },
      'flag-to': {
        a: 'Tonga Flag',
        b: '1F1F9-1F1F4',
        k: [4, 33],
        o: 2
      },
      'woman-with-bunny-ears-partying': {
        obsoletes: '1F46F',
        a: 'Woman with Bunny Ears Partying',
        b: '1F46F-200D-2640-FE0F',
        c: '1F46F-200D-2640',
        k: [21, 55],
        o: 4
      },
      'flag-tr': {
        a: 'Turkey Flag',
        b: '1F1F9-1F1F7',
        k: [4, 34],
        o: 2
      },
      person_in_steamy_room: {
        obsoleted_by: '1F9D6-200D-2642-FE0F',
        a: 'Person in Steamy Room',
        b: '1F9D6',
        k: [48, 52],
        o: 5
      },
      man_in_steamy_room: {
        obsoletes: '1F9D6',
        a: 'Man in Steamy Room',
        b: '1F9D6-200D-2642-FE0F',
        c: '1F9D6-200D-2642',
        k: [48, 46],
        o: 5
      },
      'flag-tt': {
        a: 'Trinidad & Tobago Flag',
        b: '1F1F9-1F1F9',
        k: [4, 35],
        o: 2
      },
      woman_in_steamy_room: {
        a: 'Woman in Steamy Room',
        b: '1F9D6-200D-2640-FE0F',
        c: '1F9D6-200D-2640',
        k: [48, 40],
        o: 5
      },
      'flag-tv': {
        a: 'Tuvalu Flag',
        b: '1F1F9-1F1FB',
        k: [4, 36],
        o: 2
      },
      'flag-tw': {
        a: 'Taiwan Flag',
        b: '1F1F9-1F1FC',
        k: [4, 37],
        o: 2
      },
      person_climbing: {
        obsoleted_by: '1F9D7-200D-2640-FE0F',
        a: 'Person Climbing',
        b: '1F9D7',
        k: [49, 13],
        o: 5
      },
      man_climbing: {
        a: 'Man Climbing',
        b: '1F9D7-200D-2642-FE0F',
        c: '1F9D7-200D-2642',
        k: [49, 7],
        o: 5
      },
      'flag-tz': {
        a: 'Tanzania Flag',
        b: '1F1F9-1F1FF',
        k: [4, 38],
        o: 2
      },
      'flag-ua': {
        a: 'Ukraine Flag',
        b: '1F1FA-1F1E6',
        k: [4, 39],
        o: 2
      },
      woman_climbing: {
        obsoletes: '1F9D7',
        a: 'Woman Climbing',
        b: '1F9D7-200D-2640-FE0F',
        c: '1F9D7-200D-2640',
        k: [49, 1],
        o: 5
      },
      'flag-ug': {
        a: 'Uganda Flag',
        b: '1F1FA-1F1EC',
        k: [4, 40],
        o: 2
      },
      fencer: {
        a: 'Fencer',
        b: '1F93A',
        k: [40, 32],
        o: 4
      },
      'flag-um': {
        a: 'U.s. Outlying Islands Flag',
        b: '1F1FA-1F1F2',
        k: [4, 41],
        o: 2
      },
      horse_racing: {
        a: 'Horse Racing',
        b: '1F3C7',
        j: ['animal', 'betting', 'competition', 'gambling', 'luck'],
        k: [9, 27],
        o: 2
      },
      skier: {
        a: 'Skier',
        b: '26F7-FE0F',
        c: '26F7',
        j: ['sports', 'winter', 'snow'],
        k: [54, 17],
        o: 2
      },
      'flag-un': {
        a: 'United Nations Flag',
        b: '1F1FA-1F1F3',
        k: [4, 42],
        o: 4
      },
      us: {
        a: 'United States Flag',
        b: '1F1FA-1F1F8',
        j: ['united', 'states', 'america', 'flag', 'nation', 'country', 'banner'],
        k: [4, 43],
        n: ['flag-us'],
        o: 2
      },
      snowboarder: {
        a: 'Snowboarder',
        b: '1F3C2',
        j: ['sports', 'winter'],
        k: [8, 40],
        o: 2
      },
      'flag-uy': {
        a: 'Uruguay Flag',
        b: '1F1FA-1F1FE',
        k: [4, 44],
        o: 2
      },
      'flag-uz': {
        a: 'Uzbekistan Flag',
        b: '1F1FA-1F1FF',
        k: [4, 45],
        o: 2
      },
      'flag-va': {
        a: 'Vatican City Flag',
        b: '1F1FB-1F1E6',
        k: [4, 46],
        o: 2
      },
      'flag-vc': {
        a: 'St. Vincent & Grenadines Flag',
        b: '1F1FB-1F1E8',
        k: [4, 47],
        o: 2
      },
      'man-surfing': {
        obsoletes: '1F3C4',
        a: 'Man Surfing',
        b: '1F3C4-200D-2642-FE0F',
        c: '1F3C4-200D-2642',
        k: [9, 13],
        o: 4
      },
      'flag-ve': {
        a: 'Venezuela Flag',
        b: '1F1FB-1F1EA',
        k: [4, 48],
        o: 2
      },
      'flag-vg': {
        a: 'British Virgin Islands Flag',
        b: '1F1FB-1F1EC',
        k: [4, 49],
        o: 2
      },
      'woman-surfing': {
        a: 'Woman Surfing',
        b: '1F3C4-200D-2640-FE0F',
        c: '1F3C4-200D-2640',
        k: [9, 7],
        o: 4
      },
      'flag-vi': {
        a: 'U.s. Virgin Islands Flag',
        b: '1F1FB-1F1EE',
        k: [4, 50],
        o: 2
      },
      'man-rowing-boat': {
        obsoletes: '1F6A3',
        a: 'Man Rowing Boat',
        b: '1F6A3-200D-2642-FE0F',
        c: '1F6A3-200D-2642',
        k: [34, 40],
        o: 4
      },
      'flag-vn': {
        a: 'Vietnam Flag',
        b: '1F1FB-1F1F3',
        k: [4, 51],
        o: 2
      },
      'flag-vu': {
        a: 'Vanuatu Flag',
        b: '1F1FB-1F1FA',
        k: [4, 52],
        o: 2
      },
      'woman-rowing-boat': {
        a: 'Woman Rowing Boat',
        b: '1F6A3-200D-2640-FE0F',
        c: '1F6A3-200D-2640',
        k: [34, 34],
        o: 4
      },
      'flag-wf': {
        a: 'Wallis & Futuna Flag',
        b: '1F1FC-1F1EB',
        k: [4, 53],
        o: 2
      },
      'man-swimming': {
        obsoletes: '1F3CA',
        a: 'Man Swimming',
        b: '1F3CA-200D-2642-FE0F',
        c: '1F3CA-200D-2642',
        k: [9, 41],
        o: 4
      },
      'flag-ws': {
        a: 'Samoa Flag',
        b: '1F1FC-1F1F8',
        k: [4, 54],
        o: 2
      },
      'woman-swimming': {
        a: 'Woman Swimming',
        b: '1F3CA-200D-2640-FE0F',
        c: '1F3CA-200D-2640',
        k: [9, 35],
        o: 4
      },
      'flag-xk': {
        a: 'Kosovo Flag',
        b: '1F1FD-1F1F0',
        k: [4, 55],
        o: 2
      },
      'flag-ye': {
        a: 'Yemen Flag',
        b: '1F1FE-1F1EA',
        k: [4, 56],
        o: 2
      },
      'flag-yt': {
        a: 'Mayotte Flag',
        b: '1F1FE-1F1F9',
        k: [5, 0],
        o: 2
      },
      'flag-za': {
        a: 'South Africa Flag',
        b: '1F1FF-1F1E6',
        k: [5, 1],
        o: 2
      },
      'flag-zm': {
        a: 'Zambia Flag',
        b: '1F1FF-1F1F2',
        k: [5, 2],
        o: 2
      },
      'flag-zw': {
        a: 'Zimbabwe Flag',
        b: '1F1FF-1F1FC',
        k: [5, 3],
        o: 2
      },
      'flag-england': {
        a: 'England Flag',
        b: '1F3F4-E0067-E0062-E0065-E006E-E0067-E007F',
        k: [11, 14],
        o: 5
      },
      'flag-scotland': {
        a: 'Scotland Flag',
        b: '1F3F4-E0067-E0062-E0073-E0063-E0074-E007F',
        k: [11, 15],
        o: 5
      },
      'flag-wales': {
        a: 'Wales Flag',
        b: '1F3F4-E0067-E0062-E0077-E006C-E0073-E007F',
        k: [11, 16],
        o: 5
      },
      'man-biking': {
        obsoletes: '1F6B4',
        a: 'Man Biking',
        b: '1F6B4-200D-2642-FE0F',
        c: '1F6B4-200D-2642',
        k: [35, 17],
        o: 4
      },
      'woman-biking': {
        a: 'Woman Biking',
        b: '1F6B4-200D-2640-FE0F',
        c: '1F6B4-200D-2640',
        k: [35, 11],
        o: 4
      },
      'man-mountain-biking': {
        obsoletes: '1F6B5',
        a: 'Man Mountain Biking',
        b: '1F6B5-200D-2642-FE0F',
        c: '1F6B5-200D-2642',
        k: [35, 35],
        o: 4
      },
      'woman-mountain-biking': {
        a: 'Woman Mountain Biking',
        b: '1F6B5-200D-2640-FE0F',
        c: '1F6B5-200D-2640',
        k: [35, 29],
        o: 4
      },
      'man-cartwheeling': {
        a: 'Man Cartwheeling',
        b: '1F938-200D-2642-FE0F',
        c: '1F938-200D-2642',
        k: [40, 2],
        o: 4
      },
      'woman-cartwheeling': {
        a: 'Woman Cartwheeling',
        b: '1F938-200D-2640-FE0F',
        c: '1F938-200D-2640',
        k: [39, 53],
        o: 4
      },
      wrestlers: {
        a: 'Wrestlers',
        b: '1F93C',
        k: [40, 35],
        o: 4
      },
      'man-wrestling': {
        a: 'Man Wrestling',
        b: '1F93C-200D-2642-FE0F',
        c: '1F93C-200D-2642',
        k: [40, 34],
        o: 4
      },
      'woman-wrestling': {
        a: 'Woman Wrestling',
        b: '1F93C-200D-2640-FE0F',
        c: '1F93C-200D-2640',
        k: [40, 33],
        o: 4
      },
      'man-playing-water-polo': {
        a: 'Man Playing Water Polo',
        b: '1F93D-200D-2642-FE0F',
        c: '1F93D-200D-2642',
        k: [40, 42],
        o: 4
      },
      'woman-playing-water-polo': {
        a: 'Woman Playing Water Polo',
        b: '1F93D-200D-2640-FE0F',
        c: '1F93D-200D-2640',
        k: [40, 36],
        o: 4
      },
      'man-playing-handball': {
        a: 'Man Playing Handball',
        b: '1F93E-200D-2642-FE0F',
        c: '1F93E-200D-2642',
        k: [41, 3],
        o: 4
      },
      'woman-playing-handball': {
        a: 'Woman Playing Handball',
        b: '1F93E-200D-2640-FE0F',
        c: '1F93E-200D-2640',
        k: [40, 54],
        o: 4
      },
      juggling: {
        a: 'Juggling',
        b: '1F939',
        k: [40, 26],
        o: 4
      },
      'man-juggling': {
        a: 'Man Juggling',
        b: '1F939-200D-2642-FE0F',
        c: '1F939-200D-2642',
        k: [40, 20],
        o: 4
      },
      'woman-juggling': {
        a: 'Woman Juggling',
        b: '1F939-200D-2640-FE0F',
        c: '1F939-200D-2640',
        k: [40, 14],
        o: 4
      },
      person_in_lotus_position: {
        obsoleted_by: '1F9D8-200D-2640-FE0F',
        a: 'Person in Lotus Position',
        b: '1F9D8',
        k: [49, 31],
        o: 5
      },
      man_in_lotus_position: {
        a: 'Man in Lotus Position',
        b: '1F9D8-200D-2642-FE0F',
        c: '1F9D8-200D-2642',
        k: [49, 25],
        o: 5
      },
      woman_in_lotus_position: {
        obsoletes: '1F9D8',
        a: 'Woman in Lotus Position',
        b: '1F9D8-200D-2640-FE0F',
        c: '1F9D8-200D-2640',
        k: [49, 19],
        o: 5
      },
      bath: {
        a: 'Bath',
        b: '1F6C0',
        j: ['clean', 'shower', 'bathroom'],
        k: [36, 17],
        o: 2
      },
      sleeping_accommodation: {
        a: 'Sleeping Accommodation',
        b: '1F6CC',
        k: [36, 29],
        o: 2
      },
      people_holding_hands: {
        a: 'People Holding Hands',
        b: '1F9D1-200D-1F91D-200D-1F9D1',
        k: [46, 38],
        o: 12
      },
      two_women_holding_hands: {
        a: 'Two Women Holding Hands',
        b: '1F46D',
        j: ['pair', 'friendship', 'couple', 'love', 'like', 'female', 'people', 'human'],
        k: [21, 11],
        n: ['women_holding_hands'],
        o: 2
      },
      couple: {
        a: 'Man and Woman Holding Hands',
        b: '1F46B',
        j: ['pair', 'people', 'human', 'love', 'date', 'dating', 'like', 'affection', 'valentines', 'marriage'],
        k: [20, 16],
        n: ['man_and_woman_holding_hands', 'woman_and_man_holding_hands'],
        o: 2
      },
      two_men_holding_hands: {
        a: 'Two Men Holding Hands',
        b: '1F46C',
        j: ['pair', 'couple', 'love', 'like', 'bromance', 'friendship', 'people', 'human'],
        k: [20, 42],
        n: ['men_holding_hands'],
        o: 2
      },
      couplekiss: {
        obsoleted_by: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468',
        a: 'Kiss',
        b: '1F48F',
        k: [25, 25],
        o: 2
      },
      'woman-kiss-man': {
        obsoletes: '1F48F',
        a: 'Woman Kiss Man',
        b: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468',
        c: '1F469-200D-2764-200D-1F48B-200D-1F468',
        k: [20, 7],
        o: 2
      },
      'man-kiss-man': {
        a: 'Man Kiss Man',
        b: '1F468-200D-2764-FE0F-200D-1F48B-200D-1F468',
        c: '1F468-200D-2764-200D-1F48B-200D-1F468',
        k: [17, 21],
        o: 2
      },
      'woman-kiss-woman': {
        a: 'Woman Kiss Woman',
        b: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F469',
        c: '1F469-200D-2764-200D-1F48B-200D-1F469',
        k: [20, 8],
        o: 2
      },
      couple_with_heart: {
        obsoleted_by: '1F469-200D-2764-FE0F-200D-1F468',
        a: 'Couple with Heart',
        b: '1F491',
        k: [25, 27],
        o: 2
      },
      'woman-heart-man': {
        obsoletes: '1F491',
        a: 'Woman Heart Man',
        b: '1F469-200D-2764-FE0F-200D-1F468',
        c: '1F469-200D-2764-200D-1F468',
        k: [20, 5],
        o: 2
      },
      'man-heart-man': {
        a: 'Man Heart Man',
        b: '1F468-200D-2764-FE0F-200D-1F468',
        c: '1F468-200D-2764-200D-1F468',
        k: [17, 20],
        o: 2
      },
      'woman-heart-woman': {
        a: 'Woman Heart Woman',
        b: '1F469-200D-2764-FE0F-200D-1F469',
        c: '1F469-200D-2764-200D-1F469',
        k: [20, 6],
        o: 2
      },
      family: {
        obsoleted_by: '1F468-200D-1F469-200D-1F466',
        a: 'Family',
        b: '1F46A',
        k: [20, 15],
        n: ['man-woman-boy'],
        o: 2
      },
      'man-woman-boy': {
        obsoletes: '1F46A',
        a: 'Man Woman Boy',
        b: '1F468-200D-1F469-200D-1F466',
        k: [15, 33],
        n: ['family'],
        o: 2
      },
      'man-woman-girl': {
        a: 'Man Woman Girl',
        b: '1F468-200D-1F469-200D-1F467',
        k: [15, 35],
        o: 2
      },
      'man-woman-girl-boy': {
        a: 'Man Woman Girl Boy',
        b: '1F468-200D-1F469-200D-1F467-200D-1F466',
        k: [15, 36],
        o: 2
      },
      'man-woman-boy-boy': {
        a: 'Man Woman Boy Boy',
        b: '1F468-200D-1F469-200D-1F466-200D-1F466',
        k: [15, 34],
        o: 2
      },
      'man-woman-girl-girl': {
        a: 'Man Woman Girl Girl',
        b: '1F468-200D-1F469-200D-1F467-200D-1F467',
        k: [15, 37],
        o: 2
      },
      'man-man-boy': {
        a: 'Man Man Boy',
        b: '1F468-200D-1F468-200D-1F466',
        k: [15, 28],
        o: 2
      },
      'man-man-girl': {
        a: 'Man Man Girl',
        b: '1F468-200D-1F468-200D-1F467',
        k: [15, 30],
        o: 2
      },
      'man-man-girl-boy': {
        a: 'Man Man Girl Boy',
        b: '1F468-200D-1F468-200D-1F467-200D-1F466',
        k: [15, 31],
        o: 2
      },
      'man-man-boy-boy': {
        a: 'Man Man Boy Boy',
        b: '1F468-200D-1F468-200D-1F466-200D-1F466',
        k: [15, 29],
        o: 2
      },
      'man-man-girl-girl': {
        a: 'Man Man Girl Girl',
        b: '1F468-200D-1F468-200D-1F467-200D-1F467',
        k: [15, 32],
        o: 2
      },
      'woman-woman-boy': {
        a: 'Woman Woman Boy',
        b: '1F469-200D-1F469-200D-1F466',
        k: [18, 18],
        o: 2
      },
      'woman-woman-girl': {
        a: 'Woman Woman Girl',
        b: '1F469-200D-1F469-200D-1F467',
        k: [18, 20],
        o: 2
      },
      'woman-woman-girl-boy': {
        a: 'Woman Woman Girl Boy',
        b: '1F469-200D-1F469-200D-1F467-200D-1F466',
        k: [18, 21],
        o: 2
      },
      'woman-woman-boy-boy': {
        a: 'Woman Woman Boy Boy',
        b: '1F469-200D-1F469-200D-1F466-200D-1F466',
        k: [18, 19],
        o: 2
      },
      'woman-woman-girl-girl': {
        a: 'Woman Woman Girl Girl',
        b: '1F469-200D-1F469-200D-1F467-200D-1F467',
        k: [18, 22],
        o: 2
      },
      'man-boy': {
        a: 'Man Boy',
        b: '1F468-200D-1F466',
        k: [15, 24],
        o: 4
      },
      'man-boy-boy': {
        a: 'Man Boy Boy',
        b: '1F468-200D-1F466-200D-1F466',
        k: [15, 23],
        o: 4
      },
      'man-girl': {
        a: 'Man Girl',
        b: '1F468-200D-1F467',
        k: [15, 27],
        o: 4
      },
      'man-girl-boy': {
        a: 'Man Girl Boy',
        b: '1F468-200D-1F467-200D-1F466',
        k: [15, 25],
        o: 4
      },
      'man-girl-girl': {
        a: 'Man Girl Girl',
        b: '1F468-200D-1F467-200D-1F467',
        k: [15, 26],
        o: 4
      },
      'woman-boy': {
        a: 'Woman Boy',
        b: '1F469-200D-1F466',
        k: [18, 14],
        o: 4
      },
      'woman-boy-boy': {
        a: 'Woman Boy Boy',
        b: '1F469-200D-1F466-200D-1F466',
        k: [18, 13],
        o: 4
      },
      'woman-girl': {
        a: 'Woman Girl',
        b: '1F469-200D-1F467',
        k: [18, 17],
        o: 4
      },
      'woman-girl-boy': {
        a: 'Woman Girl Boy',
        b: '1F469-200D-1F467-200D-1F466',
        k: [18, 15],
        o: 4
      },
      'woman-girl-girl': {
        a: 'Woman Girl Girl',
        b: '1F469-200D-1F467-200D-1F467',
        k: [18, 16],
        o: 4
      },
      speaking_head_in_silhouette: {
        a: 'Speaking Head in Silhouette',
        b: '1F5E3-FE0F',
        c: '1F5E3',
        k: [30, 25],
        o: 2
      },
      bust_in_silhouette: {
        a: 'Bust in Silhouette',
        b: '1F464',
        j: ['user', 'person', 'human'],
        k: [14, 24],
        o: 2
      },
      busts_in_silhouette: {
        a: 'Busts in Silhouette',
        b: '1F465',
        j: ['user', 'person', 'human', 'group', 'team'],
        k: [14, 25],
        o: 2
      },
      footprints: {
        a: 'Footprints',
        b: '1F463',
        j: ['feet', 'tracking', 'walking', 'beach'],
        k: [14, 23],
        o: 2
      }
    },
    aliases: {
      raised_hand: 'hand',
      satisfied: 'laughing',
      tshirt: 'shirt',
      hand_with_index_and_middle_fingers_crossed: 'crossed_fingers',
      sign_of_the_horns: 'the_horns',
      grinning_face_with_star_eyes: 'star-struck',
      reversed_hand_with_middle_finger_extended: 'middle_finger',
      thumbsup: '+1',
      thumbsdown: '-1',
      punch: 'facepunch',
      grinning_face_with_one_large_and_one_small_eye: 'zany_face',
      shoe: 'mans_shoe',
      smiling_face_with_smiling_eyes_and_hand_covering_mouth: 'face_with_hand_over_mouth',
      face_with_finger_covering_closed_lips: 'shushing_face',
      face_with_one_eyebrow_raised: 'face_with_raised_eyebrow',
      face_with_open_mouth_vomiting: 'face_vomiting',
      cooking: 'fried_egg',
      'flag-cn': 'cn',
      shocked_face_with_exploding_head: 'exploding_head',
      paw_prints: 'feet',
      'flag-de': 'de',
      telephone: 'phone',
      'flag-es': 'es',
      red_car: 'car',
      flipper: 'dolphin',
      'flag-fr': 'fr',
      uk: 'gb',
      'flag-gb': 'gb',
      serious_face_with_symbols_covering_mouth: 'face_with_symbols_on_mouth',
      poop: 'hankey',
      shit: 'hankey',
      honeybee: 'bee',
      staff_of_aesculapius: 'medical_symbol',
      lantern: 'izakaya_lantern',
      open_book: 'book',
      sailboat: 'boat',
      knife: 'hocho',
      'flag-it': 'it',
      heavy_exclamation_mark: 'exclamation',
      'flag-jp': 'jp',
      envelope: 'email',
      'flag-kr': 'kr',
      collision: 'boom',
      pencil: 'memo',
      waxing_gibbous_moon: 'moon',
      mother_christmas: 'mrs_claus',
      sun_small_cloud: 'mostly_sunny',
      sun_behind_cloud: 'barely_sunny',
      sun_behind_rain_cloud: 'partly_sunny_rain',
      lightning_cloud: 'lightning',
      tornado_cloud: 'tornado',
      'flag-ru': 'ru',
      'flag-us': 'us',
      women_holding_hands: 'two_women_holding_hands',
      man_and_woman_holding_hands: 'couple',
      woman_and_man_holding_hands: 'couple',
      men_holding_hands: 'two_men_holding_hands',
      'man-woman-boy': 'family',
      family: 'man-woman-boy'
    }
  };

  function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var emojiTrigger = function emojiTrigger(emojiData) {
    var emojiIndex = new EmojiIndex(emojiData);
    return {
      ':': {
        output: function output(item) {
          return {
            key: item.id,
            text: item.native,
            caretPosition: 'next'
          };
        },
        dataProvider: function dataProvider(token) {
          // condition extracted from emoji-mart to circumvent the bug in the emoji-mart package
          if (['-', '-1'].includes(token)) {
            return [emojiIndex.emojis['-1']];
          }

          return (emojiIndex.search(token) || []).slice(0, 10);
        },
        component: function AutocompleteItem(_ref) {
          var _ref$entity = _ref.entity,
              id = _ref$entity.id,
              native = _ref$entity.native;
          return /*#__PURE__*/React__default['default'].createElement("div", null, native, " ", id);
        }
      }
    };
  };

  var Textarea = function Textarea(_ref2) {
    var _ref2$emojiData = _ref2.emojiData,
        emojiData = _ref2$emojiData === void 0 ? defaultEmojiData : _ref2$emojiData,
        innerRef = _ref2.innerRef,
        maxLength = _ref2.maxLength,
        onChange = _ref2.onChange,
        onPaste = _ref2.onPaste,
        _ref2$placeholder = _ref2.placeholder,
        placeholder = _ref2$placeholder === void 0 ? 'Share your opinion' : _ref2$placeholder,
        _ref2$rows = _ref2.rows,
        rows = _ref2$rows === void 0 ? 3 : _ref2$rows,
        _ref2$trigger = _ref2.trigger,
        trigger = _ref2$trigger === void 0 ? {} : _ref2$trigger,
        value = _ref2.value,
        className = _ref2.className,
        style = _ref2.style;
    var emoji = React.useMemo(function () {
      return emojiTrigger(emojiData);
    }, []);
    return /*#__PURE__*/React__default['default'].createElement(ReactTextareaAutocomplete, {
      loadingComponent: LoadingIndicator // @ts-expect-error
      ,
      trigger: _objectSpread$3(_objectSpread$3({}, emoji), trigger),
      innerRef: innerRef && function (el) {
        if (typeof innerRef === 'function') {
          innerRef(el);
        } else if (innerRef !== null) {
          innerRef.current = el;
        }
      },
      rows: rows,
      maxLength: maxLength,
      className: classnames('raf-textarea__textarea', className),
      style: style,
      containerClassName: "raf-textarea",
      dropdownClassName: "raf-emojisearch",
      listClassName: "raf-emojisearch__list",
      itemClassName: "raf-emojisearch__item",
      placeholder: placeholder,
      onChange: onChange,
      onSelect: onChange,
      onPaste: onPaste,
      value: value
    });
  };

  var interopRequireWildcard = createCommonjsModule(function (module) {
  var _typeof = _typeof_1["default"];

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var defineProperty = createCommonjsModule(function (module) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var assertThisInitialized = createCommonjsModule(function (module) {
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var possibleConstructorReturn = createCommonjsModule(function (module) {
  var _typeof = _typeof_1["default"];



  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var getPrototypeOf = createCommonjsModule(function (module) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var setPrototypeOf = createCommonjsModule(function (module) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var inherits = createCommonjsModule(function (module) {
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var svgs = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.search = exports.categories = void 0;

  var _react = interopRequireDefault(React__default['default']);

  var categories = {
    activity: function activity() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M12 0C5.373 0 0 5.372 0 12c0 6.627 5.373 12 12 12 6.628 0 12-5.373 12-12 0-6.628-5.372-12-12-12m9.949 11H17.05c.224-2.527 1.232-4.773 1.968-6.113A9.966 9.966 0 0 1 21.949 11M13 11V2.051a9.945 9.945 0 0 1 4.432 1.564c-.858 1.491-2.156 4.22-2.392 7.385H13zm-2 0H8.961c-.238-3.165-1.536-5.894-2.393-7.385A9.95 9.95 0 0 1 11 2.051V11zm0 2v8.949a9.937 9.937 0 0 1-4.432-1.564c.857-1.492 2.155-4.221 2.393-7.385H11zm4.04 0c.236 3.164 1.534 5.893 2.392 7.385A9.92 9.92 0 0 1 13 21.949V13h2.04zM4.982 4.887C5.718 6.227 6.726 8.473 6.951 11h-4.9a9.977 9.977 0 0 1 2.931-6.113M2.051 13h4.9c-.226 2.527-1.233 4.771-1.969 6.113A9.972 9.972 0 0 1 2.051 13m16.967 6.113c-.735-1.342-1.744-3.586-1.968-6.113h4.899a9.961 9.961 0 0 1-2.931 6.113"
      }));
    },
    custom: function custom() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("g", {
        transform: "translate(2.000000, 1.000000)"
      }, _react["default"].createElement("rect", {
        id: "Rectangle",
        x: "8",
        y: "0",
        width: "3",
        height: "21",
        rx: "1.5"
      }), _react["default"].createElement("rect", {
        id: "Rectangle",
        transform: "translate(9.843, 10.549) rotate(60) translate(-9.843, -10.549) ",
        x: "8.343",
        y: "0.049",
        width: "3",
        height: "21",
        rx: "1.5"
      }), _react["default"].createElement("rect", {
        id: "Rectangle",
        transform: "translate(9.843, 10.549) rotate(-60) translate(-9.843, -10.549) ",
        x: "8.343",
        y: "0.049",
        width: "3",
        height: "21",
        rx: "1.5"
      })));
    },
    flags: function flags() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M0 0l6.084 24H8L1.916 0zM21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.563 3h7.875l2 8H8.563l-2-8zm8.832 10l-2.856 1.904L12.063 13h3.332zM19 13l-1.5-6h1.938l2 8H16l3-2z"
      }));
    },
    foods: function foods() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M17 4.978c-1.838 0-2.876.396-3.68.934.513-1.172 1.768-2.934 4.68-2.934a1 1 0 0 0 0-2c-2.921 0-4.629 1.365-5.547 2.512-.064.078-.119.162-.18.244C11.73 1.838 10.798.023 9.207.023 8.579.022 7.85.306 7 .978 5.027 2.54 5.329 3.902 6.492 4.999 3.609 5.222 0 7.352 0 12.969c0 4.582 4.961 11.009 9 11.009 1.975 0 2.371-.486 3-1 .629.514 1.025 1 3 1 4.039 0 9-6.418 9-11 0-5.953-4.055-8-7-8M8.242 2.546c.641-.508.943-.523.965-.523.426.169.975 1.405 1.357 3.055-1.527-.629-2.741-1.352-2.98-1.846.059-.112.241-.356.658-.686M15 21.978c-1.08 0-1.21-.109-1.559-.402l-.176-.146c-.367-.302-.816-.452-1.266-.452s-.898.15-1.266.452l-.176.146c-.347.292-.477.402-1.557.402-2.813 0-7-5.389-7-9.009 0-5.823 4.488-5.991 5-5.991 1.939 0 2.484.471 3.387 1.251l.323.276a1.995 1.995 0 0 0 2.58 0l.323-.276c.902-.78 1.447-1.251 3.387-1.251.512 0 5 .168 5 6 0 3.617-4.187 9-7 9"
      }));
    },
    nature: function nature() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M15.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 15.5 8M8.5 8a1.5 1.5 0 1 0 .001 3.001A1.5 1.5 0 0 0 8.5 8"
      }), _react["default"].createElement("path", {
        d: "M18.933 0h-.027c-.97 0-2.138.787-3.018 1.497-1.274-.374-2.612-.51-3.887-.51-1.285 0-2.616.133-3.874.517C7.245.79 6.069 0 5.093 0h-.027C3.352 0 .07 2.67.002 7.026c-.039 2.479.276 4.238 1.04 5.013.254.258.882.677 1.295.882.191 3.177.922 5.238 2.536 6.38.897.637 2.187.949 3.2 1.102C8.04 20.6 8 20.795 8 21c0 1.773 2.35 3 4 3 1.648 0 4-1.227 4-3 0-.201-.038-.393-.072-.586 2.573-.385 5.435-1.877 5.925-7.587.396-.22.887-.568 1.104-.788.763-.774 1.079-2.534 1.04-5.013C23.929 2.67 20.646 0 18.933 0M3.223 9.135c-.237.281-.837 1.155-.884 1.238-.15-.41-.368-1.349-.337-3.291.051-3.281 2.478-4.972 3.091-5.031.256.015.731.27 1.265.646-1.11 1.171-2.275 2.915-2.352 5.125-.133.546-.398.858-.783 1.313M12 22c-.901 0-1.954-.693-2-1 0-.654.475-1.236 1-1.602V20a1 1 0 1 0 2 0v-.602c.524.365 1 .947 1 1.602-.046.307-1.099 1-2 1m3-3.48v.02a4.752 4.752 0 0 0-1.262-1.02c1.092-.516 2.239-1.334 2.239-2.217 0-1.842-1.781-2.195-3.977-2.195-2.196 0-3.978.354-3.978 2.195 0 .883 1.148 1.701 2.238 2.217A4.8 4.8 0 0 0 9 18.539v-.025c-1-.076-2.182-.281-2.973-.842-1.301-.92-1.838-3.045-1.853-6.478l.023-.041c.496-.826 1.49-1.45 1.804-3.102 0-2.047 1.357-3.631 2.362-4.522C9.37 3.178 10.555 3 11.948 3c1.447 0 2.685.192 3.733.57 1 .9 2.316 2.465 2.316 4.48.313 1.651 1.307 2.275 1.803 3.102.035.058.068.117.102.178-.059 5.967-1.949 7.01-4.902 7.19m6.628-8.202c-.037-.065-.074-.13-.113-.195a7.587 7.587 0 0 0-.739-.987c-.385-.455-.648-.768-.782-1.313-.076-2.209-1.241-3.954-2.353-5.124.531-.376 1.004-.63 1.261-.647.636.071 3.044 1.764 3.096 5.031.027 1.81-.347 3.218-.37 3.235"
      }));
    },
    objects: function objects() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M12 0a9 9 0 0 0-5 16.482V21s2.035 3 5 3 5-3 5-3v-4.518A9 9 0 0 0 12 0zm0 2c3.86 0 7 3.141 7 7s-3.14 7-7 7-7-3.141-7-7 3.14-7 7-7zM9 17.477c.94.332 1.946.523 3 .523s2.06-.19 3-.523v.834c-.91.436-1.925.689-3 .689a6.924 6.924 0 0 1-3-.69v-.833zm.236 3.07A8.854 8.854 0 0 0 12 21c.965 0 1.888-.167 2.758-.451C14.155 21.173 13.153 22 12 22c-1.102 0-2.117-.789-2.764-1.453z"
      }), _react["default"].createElement("path", {
        d: "M14.745 12.449h-.004c-.852-.024-1.188-.858-1.577-1.824-.421-1.061-.703-1.561-1.182-1.566h-.009c-.481 0-.783.497-1.235 1.537-.436.982-.801 1.811-1.636 1.791l-.276-.043c-.565-.171-.853-.691-1.284-1.794-.125-.313-.202-.632-.27-.913-.051-.213-.127-.53-.195-.634C7.067 9.004 7.039 9 6.99 9A1 1 0 0 1 7 7h.01c1.662.017 2.015 1.373 2.198 2.134.486-.981 1.304-2.058 2.797-2.075 1.531.018 2.28 1.153 2.731 2.141l.002-.008C14.944 8.424 15.327 7 16.979 7h.032A1 1 0 1 1 17 9h-.011c-.149.076-.256.474-.319.709a6.484 6.484 0 0 1-.311.951c-.429.973-.79 1.789-1.614 1.789"
      }));
    },
    people: function people() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"
      }), _react["default"].createElement("path", {
        d: "M8 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 8 7M16 7a2 2 0 1 0-.001 3.999A2 2 0 0 0 16 7M15.232 15c-.693 1.195-1.87 2-3.349 2-1.477 0-2.655-.805-3.347-2H15m3-2H6a6 6 0 1 0 12 0"
      }));
    },
    places: function places() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M6.5 12C5.122 12 4 13.121 4 14.5S5.122 17 6.5 17 9 15.879 9 14.5 7.878 12 6.5 12m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5M17.5 12c-1.378 0-2.5 1.121-2.5 2.5s1.122 2.5 2.5 2.5 2.5-1.121 2.5-2.5-1.122-2.5-2.5-2.5m0 3c-.275 0-.5-.225-.5-.5s.225-.5.5-.5.5.225.5.5-.225.5-.5.5"
      }), _react["default"].createElement("path", {
        d: "M22.482 9.494l-1.039-.346L21.4 9h.6c.552 0 1-.439 1-.992 0-.006-.003-.008-.003-.008H23c0-1-.889-2-1.984-2h-.642l-.731-1.717C19.262 3.012 18.091 2 16.764 2H7.236C5.909 2 4.738 3.012 4.357 4.283L3.626 6h-.642C1.889 6 1 7 1 8h.003S1 8.002 1 8.008C1 8.561 1.448 9 2 9h.6l-.043.148-1.039.346a2.001 2.001 0 0 0-1.359 2.097l.751 7.508a1 1 0 0 0 .994.901H3v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h6v1c0 1.103.896 2 2 2h2c1.104 0 2-.897 2-2v-1h1.096a.999.999 0 0 0 .994-.901l.751-7.508a2.001 2.001 0 0 0-1.359-2.097M6.273 4.857C6.402 4.43 6.788 4 7.236 4h9.527c.448 0 .834.43.963.857L19.313 9H4.688l1.585-4.143zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.189-3H2.811l-.662-6.607L3 11h18l.852.393L21.189 18z"
      }));
    },
    recent: function recent() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M13 4h-2l-.001 7H9v2h2v2h2v-2h4v-2h-4z"
      }), _react["default"].createElement("path", {
        d: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0m0 22C6.486 22 2 17.514 2 12S6.486 2 12 2s10 4.486 10 10-4.486 10-10 10"
      }));
    },
    symbols: function symbols() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        width: "24",
        height: "24"
      }, _react["default"].createElement("path", {
        d: "M0 0h11v2H0zM4 11h3V6h4V4H0v2h4zM15.5 17c1.381 0 2.5-1.116 2.5-2.493s-1.119-2.493-2.5-2.493S13 13.13 13 14.507 14.119 17 15.5 17m0-2.986c.276 0 .5.222.5.493 0 .272-.224.493-.5.493s-.5-.221-.5-.493.224-.493.5-.493M21.5 19.014c-1.381 0-2.5 1.116-2.5 2.493S20.119 24 21.5 24s2.5-1.116 2.5-2.493-1.119-2.493-2.5-2.493m0 2.986a.497.497 0 0 1-.5-.493c0-.271.224-.493.5-.493s.5.222.5.493a.497.497 0 0 1-.5.493M22 13l-9 9 1.513 1.5 8.99-9.009zM17 11c2.209 0 4-1.119 4-2.5V2s.985-.161 1.498.949C23.01 4.055 23 6 23 6s1-1.119 1-3.135C24-.02 21 0 21 0h-2v6.347A5.853 5.853 0 0 0 17 6c-2.209 0-4 1.119-4 2.5s1.791 2.5 4 2.5M10.297 20.482l-1.475-1.585a47.54 47.54 0 0 1-1.442 1.129c-.307-.288-.989-1.016-2.045-2.183.902-.836 1.479-1.466 1.729-1.892s.376-.871.376-1.336c0-.592-.273-1.178-.818-1.759-.546-.581-1.329-.871-2.349-.871-1.008 0-1.79.293-2.344.879-.556.587-.832 1.181-.832 1.784 0 .813.419 1.748 1.256 2.805-.847.614-1.444 1.208-1.794 1.784a3.465 3.465 0 0 0-.523 1.833c0 .857.308 1.56.924 2.107.616.549 1.423.823 2.42.823 1.173 0 2.444-.379 3.813-1.137L8.235 24h2.819l-2.09-2.383 1.333-1.135zm-6.736-6.389a1.02 1.02 0 0 1 .73-.286c.31 0 .559.085.747.254a.849.849 0 0 1 .283.659c0 .518-.419 1.112-1.257 1.784-.536-.651-.805-1.231-.805-1.742a.901.901 0 0 1 .302-.669M3.74 22c-.427 0-.778-.116-1.057-.349-.279-.232-.418-.487-.418-.766 0-.594.509-1.288 1.527-2.083.968 1.134 1.717 1.946 2.248 2.438-.921.507-1.686.76-2.3.76"
      }));
    }
  };
  exports.categories = categories;
  var search = {
    search: function search() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "13",
        height: "13",
        viewBox: "0 0 20 20",
        opacity: "0.5"
      }, _react["default"].createElement("path", {
        d: "M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z"
      }));
    },
    "delete": function _delete() {
      return _react["default"].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "13",
        height: "13",
        viewBox: "0 0 20 20",
        opacity: "0.5"
      }, _react["default"].createElement("path", {
        d: "M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z"
      }));
    }
  };
  exports.search = search;
  });

  var frequently_1 = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _store = interopRequireDefault(store);

  var DEFAULTS = ['+1', 'grinning', 'kissing_heart', 'heart_eyes', 'laughing', 'stuck_out_tongue_winking_eye', 'sweat_smile', 'joy', 'scream', 'disappointed', 'unamused', 'weary', 'sob', 'sunglasses', 'heart', 'poop'];
  var frequently, initialized;
  var defaults = {};

  function init() {
    initialized = true;
    frequently = _store["default"].get('frequently');
  }

  function add(emoji) {
    if (!initialized) init();
    var id = emoji.id;
    frequently || (frequently = defaults);
    frequently[id] || (frequently[id] = 0);
    frequently[id] += 1;

    _store["default"].set('last', id);

    _store["default"].set('frequently', frequently);
  }

  function get(perLine) {
    if (!initialized) init();

    if (!frequently) {
      defaults = {};
      var result = [];

      for (var i = 0; i < perLine; i++) {
        defaults[DEFAULTS[i]] = perLine - i;
        result.push(DEFAULTS[i]);
      }

      return result;
    }

    var quantity = perLine * 4;
    var frequentlyKeys = [];

    for (var key in frequently) {
      if (frequently.hasOwnProperty(key)) {
        frequentlyKeys.push(key);
      }
    }

    var sorted = frequentlyKeys.sort(function (a, b) {
      return frequently[a] - frequently[b];
    }).reverse();
    var sliced = sorted.slice(0, quantity);

    var last = _store["default"].get('last');

    if (last && sliced.indexOf(last) == -1) {
      sliced.pop();
      sliced.push(last);
    }

    return sliced;
  }

  var _default = {
    add: add,
    get: get
  };
  exports["default"] = _default;
  });

  var sharedProps = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PickerPropTypes = exports.EmojiPropTypes = void 0;

  var _propTypes = interopRequireDefault(propTypes);

  var EmojiPropTypes = {
    data: _propTypes["default"].object.isRequired,
    onOver: _propTypes["default"].func,
    onLeave: _propTypes["default"].func,
    onClick: _propTypes["default"].func,
    fallback: _propTypes["default"].func,
    backgroundImageFn: _propTypes["default"].func,
    "native": _propTypes["default"].bool,
    forceSize: _propTypes["default"].bool,
    tooltip: _propTypes["default"].bool,
    useButton: _propTypes["default"].bool,
    skin: _propTypes["default"].oneOf([1, 2, 3, 4, 5, 6]),
    sheetSize: _propTypes["default"].oneOf([16, 20, 32, 64]),
    sheetColumns: _propTypes["default"].number,
    sheetRows: _propTypes["default"].number,
    set: _propTypes["default"].oneOf(['apple', 'google', 'twitter', 'facebook']),
    size: _propTypes["default"].number.isRequired,
    emoji: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]).isRequired
  };
  exports.EmojiPropTypes = EmojiPropTypes;
  var PickerPropTypes = {
    onClick: _propTypes["default"].func,
    onSelect: _propTypes["default"].func,
    onSkinChange: _propTypes["default"].func,
    perLine: _propTypes["default"].number,
    emojiSize: _propTypes["default"].number,
    i18n: _propTypes["default"].object,
    style: _propTypes["default"].object,
    title: _propTypes["default"].string,
    emoji: _propTypes["default"].string,
    color: _propTypes["default"].string,
    set: EmojiPropTypes.set,
    skin: EmojiPropTypes.skin,
    "native": _propTypes["default"].bool,
    backgroundImageFn: EmojiPropTypes.backgroundImageFn,
    sheetSize: EmojiPropTypes.sheetSize,
    emojisToShowFilter: _propTypes["default"].func,
    showPreview: _propTypes["default"].bool,
    showSkinTones: _propTypes["default"].bool,
    emojiTooltip: EmojiPropTypes.tooltip,
    useButton: EmojiPropTypes.useButton,
    theme: _propTypes["default"].oneOf(['auto', 'light', 'dark']),
    include: _propTypes["default"].arrayOf(_propTypes["default"].string),
    exclude: _propTypes["default"].arrayOf(_propTypes["default"].string),
    recent: _propTypes["default"].arrayOf(_propTypes["default"].string),
    autoFocus: _propTypes["default"].bool,
    enableFrequentEmojiSort: _propTypes["default"].bool,
    custom: _propTypes["default"].arrayOf(_propTypes["default"].shape({
      name: _propTypes["default"].string.isRequired,
      short_names: _propTypes["default"].arrayOf(_propTypes["default"].string).isRequired,
      emoticons: _propTypes["default"].arrayOf(_propTypes["default"].string),
      keywords: _propTypes["default"].arrayOf(_propTypes["default"].string),
      imageUrl: _propTypes["default"].string,
      spriteUrl: _propTypes["default"].string,
      sheet_x: _propTypes["default"].number,
      sheet_y: _propTypes["default"].number,
      size: _propTypes["default"].number,
      sheetColumns: _propTypes["default"].number,
      sheetRows: _propTypes["default"].number
    })),
    skinEmoji: _propTypes["default"].string,
    notFound: _propTypes["default"].func,
    notFoundEmoji: _propTypes["default"].string,
    icons: _propTypes["default"].object
  };
  exports.PickerPropTypes = PickerPropTypes;
  });

  var anchors = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _assertThisInitialized2 = interopRequireDefault(assertThisInitialized);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var Anchors =
  /*#__PURE__*/
  function (_React$PureComponent) {
    (0, _inherits2["default"])(Anchors, _React$PureComponent);

    function Anchors(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, Anchors);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Anchors).call(this, props));
      var defaultCategory = props.categories.filter(function (category) {
        return category.first;
      })[0];
      _this.state = {
        selected: defaultCategory.name
      };
      _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2["default"])(_this));
      return _this;
    }

    (0, _createClass2["default"])(Anchors, [{
      key: "handleClick",
      value: function handleClick(e) {
        var index = e.currentTarget.getAttribute('data-index');
        var _this$props = this.props,
            categories = _this$props.categories,
            onAnchorClick = _this$props.onAnchorClick;
        onAnchorClick(categories[index], index);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props2 = this.props,
            categories = _this$props2.categories,
            color = _this$props2.color,
            i18n = _this$props2.i18n,
            icons = _this$props2.icons,
            selected = this.state.selected;
        return _react["default"].createElement("nav", {
          className: "emoji-mart-anchors",
          "aria-label": i18n.categorieslabel
        }, categories.map(function (category, i) {
          var id = category.id,
              name = category.name,
              anchor = category.anchor,
              isSelected = name == selected;

          if (anchor === false) {
            return null;
          }

          var iconId = id.startsWith('custom-') ? 'custom' : id;
          return _react["default"].createElement("button", {
            key: id,
            "aria-label": i18n.categories[iconId],
            title: i18n.categories[iconId],
            "data-index": i,
            type: 'button',
            onClick: _this2.handleClick,
            className: "emoji-mart-anchor ".concat(isSelected ? 'emoji-mart-anchor-selected' : ''),
            style: {
              color: isSelected ? color : null
            }
          }, _react["default"].createElement("div", {
            className: "emoji-mart-anchor-icon"
          }, icons.categories[iconId]()), _react["default"].createElement("span", {
            className: "emoji-mart-anchor-bar",
            style: {
              backgroundColor: color
            }
          }));
        }));
      }
    }]);
    return Anchors;
  }(_react["default"].PureComponent);

  exports["default"] = Anchors;
  Anchors.propTypes
  /* remove-proptypes */
  = {
    categories: _propTypes["default"].array,
    onAnchorClick: _propTypes["default"].func,
    icons: _propTypes["default"].object
  };
  Anchors.defaultProps = {
    categories: [],
    onAnchorClick: function onAnchorClick() {},
    icons: {}
  };
  });

  var _extends_1 = createCommonjsModule(function (module) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  });

  var sharedDefaultProps = createCommonjsModule(function (module, exports) {

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EmojiDefaultProps = exports.PickerDefaultProps = void 0;
  var EmojiDefaultProps = {
    skin: 1,
    set: 'apple',
    sheetSize: 64,
    sheetColumns: 57,
    sheetRows: 57,
    "native": false,
    forceSize: false,
    tooltip: false,
    useButton: true,
    backgroundImageFn: function backgroundImageFn(set, sheetSize) {
      return "https://unpkg.com/emoji-datasource-".concat(set, "@").concat("5.0.1", "/img/").concat(set, "/sheets-256/").concat(sheetSize, ".png");
    }
  };
  exports.EmojiDefaultProps = EmojiDefaultProps;
  var PickerDefaultProps = {
    onClick: function onClick() {},
    onSelect: function onSelect() {},
    onSkinChange: function onSkinChange() {},
    emojiSize: 24,
    perLine: 9,
    i18n: {},
    style: {},
    title: 'Emoji Mart™',
    emoji: 'department_store',
    color: '#ae65c5',
    set: EmojiDefaultProps.set,
    theme: 'light',
    skin: null,
    defaultSkin: EmojiDefaultProps.skin,
    "native": EmojiDefaultProps["native"],
    sheetSize: EmojiDefaultProps.sheetSize,
    backgroundImageFn: EmojiDefaultProps.backgroundImageFn,
    emojisToShowFilter: null,
    showPreview: true,
    showSkinTones: true,
    emojiTooltip: EmojiDefaultProps.tooltip,
    useButton: EmojiDefaultProps.useButton,
    autoFocus: false,
    enableFrequentEmojiSort: false,
    custom: [],
    skinEmoji: '',
    notFound: function notFound() {},
    notFoundEmoji: 'sleuth_or_spy',
    icons: {}
  };
  exports.PickerDefaultProps = PickerDefaultProps;
  });

  var nimbleEmoji = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _extends2 = interopRequireDefault(_extends_1);

  var _defineProperty2 = interopRequireDefault(defineProperty);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);









  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var _getData = function _getData(props) {
    var emoji = props.emoji,
        skin = props.skin,
        set = props.set,
        data = props.data;
    return (0, utils.getData)(emoji, skin, set, data);
  };

  var _getPosition = function _getPosition(props) {
    var _getData2 = _getData(props),
        sheet_x = _getData2.sheet_x,
        sheet_y = _getData2.sheet_y,
        multiplyX = 100 / (props.sheetColumns - 1),
        multiplyY = 100 / (props.sheetRows - 1);

    return "".concat(multiplyX * sheet_x, "% ").concat(multiplyY * sheet_y, "%");
  };

  var _getSanitizedData = function _getSanitizedData(props) {
    var emoji = props.emoji,
        skin = props.skin,
        set = props.set,
        data = props.data;
    return (0, utils.getSanitizedData)(emoji, skin, set, data);
  };

  var _handleClick = function _handleClick(e, props) {
    if (!props.onClick) {
      return;
    }

    var onClick = props.onClick,
        emoji = _getSanitizedData(props);

    onClick(emoji, e);
  };

  var _handleOver = function _handleOver(e, props) {
    if (!props.onOver) {
      return;
    }

    var onOver = props.onOver,
        emoji = _getSanitizedData(props);

    onOver(emoji, e);
  };

  var _handleLeave = function _handleLeave(e, props) {
    if (!props.onLeave) {
      return;
    }

    var onLeave = props.onLeave,
        emoji = _getSanitizedData(props);

    onLeave(emoji, e);
  };

  var _isNumeric = function _isNumeric(value) {
    return !isNaN(value - parseFloat(value));
  };

  var _convertStyleToCSS = function _convertStyleToCSS(style) {
    var div = document.createElement('div');

    for (var key in style) {
      var value = style[key];

      if (_isNumeric(value)) {
        value += 'px';
      }

      div.style[key] = value;
    }

    return div.getAttribute('style');
  };

  var NimbleEmoji = function NimbleEmoji(props) {
    if (props.data.compressed) {
      (0, data.uncompress)(props.data);
    }

    for (var k in NimbleEmoji.defaultProps) {
      if (props[k] == undefined && NimbleEmoji.defaultProps[k] != undefined) {
        props[k] = NimbleEmoji.defaultProps[k];
      }
    }

    var data$1 = _getData(props);

    if (!data$1) {
      if (props.fallback) {
        return props.fallback(null, props);
      } else {
        return null;
      }
    }

    var unified = data$1.unified,
        custom = data$1.custom,
        short_names = data$1.short_names,
        imageUrl = data$1.imageUrl,
        style = {},
        children = props.children,
        className = 'emoji-mart-emoji',
        nativeEmoji = unified && (0, utils.unifiedToNative)(unified),
        label = [nativeEmoji].concat(short_names).filter(Boolean).join(', '),
        title = null;

    if (!unified && !custom) {
      if (props.fallback) {
        return props.fallback(data$1, props);
      } else {
        return null;
      }
    }

    if (props.tooltip) {
      title = short_names[0];
    }

    if (props["native"] && unified) {
      className += ' emoji-mart-emoji-native';
      style = {
        fontSize: props.size
      };
      children = nativeEmoji;

      if (props.forceSize) {
        style.display = 'inline-block';
        style.width = props.size;
        style.height = props.size;
        style.wordBreak = 'keep-all';
      }
    } else if (custom) {
      className += ' emoji-mart-emoji-custom';
      style = {
        width: props.size,
        height: props.size,
        display: 'inline-block'
      };

      if (data$1.spriteUrl) {
        style = _objectSpread({}, style, {
          backgroundImage: "url(".concat(data$1.spriteUrl, ")"),
          backgroundSize: "".concat(100 * props.sheetColumns, "% ").concat(100 * props.sheetRows, "%"),
          backgroundPosition: _getPosition(props)
        });
      } else {
        style = _objectSpread({}, style, {
          backgroundImage: "url(".concat(imageUrl, ")"),
          backgroundSize: 'contain',
          backgroundRepeat: 'no-repeat',
          backgroundPosition: 'center'
        });
      }
    } else {
      var setHasEmoji = data$1["has_img_".concat(props.set)] == undefined || data$1["has_img_".concat(props.set)];

      if (!setHasEmoji) {
        if (props.fallback) {
          return props.fallback(data$1, props);
        } else {
          return null;
        }
      } else {
        style = {
          width: props.size,
          height: props.size,
          display: 'inline-block',
          backgroundImage: "url(".concat(props.backgroundImageFn(props.set, props.sheetSize), ")"),
          backgroundSize: "".concat(100 * props.sheetColumns, "% ").concat(100 * props.sheetRows, "%"),
          backgroundPosition: _getPosition(props)
        };
      }
    }

    var Tag = {
      name: 'span',
      props: {}
    };

    if (props.onClick && props.useButton) {
      Tag.name = 'button';
      Tag.props = {
        type: 'button'
      };
    }

    if (props.html) {
      style = _convertStyleToCSS(style);
      return "<".concat(Tag.name, " style='").concat(style, "' aria-label='").concat(label, "' ").concat(title ? "title='".concat(title, "'") : '', " class='").concat(className, "'>").concat(children || '', "</").concat(Tag.name, ">");
    } else {
      return _react["default"].createElement(Tag.name, (0, _extends2["default"])({
        onClick: function onClick(e) {
          return _handleClick(e, props);
        },
        onMouseEnter: function onMouseEnter(e) {
          return _handleOver(e, props);
        },
        onMouseLeave: function onMouseLeave(e) {
          return _handleLeave(e, props);
        },
        "aria-label": label,
        title: title,
        className: className
      }, Tag.props), _react["default"].createElement("span", {
        style: style
      }, children));
    }
  };

  NimbleEmoji.propTypes
  /* remove-proptypes */
  = _objectSpread({}, sharedProps.EmojiPropTypes, {
    data: _propTypes["default"].object.isRequired
  });
  NimbleEmoji.defaultProps = sharedDefaultProps.EmojiDefaultProps;
  var _default = NimbleEmoji;
  exports["default"] = _default;
  });

  var notFound = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _defineProperty2 = interopRequireDefault(defineProperty);

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var _nimbleEmoji = interopRequireDefault(nimbleEmoji);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var NotFound =
  /*#__PURE__*/
  function (_React$PureComponent) {
    (0, _inherits2["default"])(NotFound, _React$PureComponent);

    function NotFound() {
      (0, _classCallCheck2["default"])(this, NotFound);
      return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(NotFound).apply(this, arguments));
    }

    (0, _createClass2["default"])(NotFound, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            data = _this$props.data,
            emojiProps = _this$props.emojiProps,
            i18n = _this$props.i18n,
            notFound = _this$props.notFound,
            notFoundEmoji = _this$props.notFoundEmoji;

        var component = notFound && notFound() || _react["default"].createElement("div", {
          className: "emoji-mart-no-results"
        }, (0, _nimbleEmoji["default"])(_objectSpread({
          data: data
        }, emojiProps, {
          size: 38,
          emoji: notFoundEmoji,
          onOver: null,
          onLeave: null,
          onClick: null
        })), _react["default"].createElement("div", {
          className: "emoji-mart-no-results-label"
        }, i18n.notfound));

        return component;
      }
    }]);
    return NotFound;
  }(_react["default"].PureComponent);

  exports["default"] = NotFound;
  NotFound.propTypes
  /* remove-proptypes */
  = {
    notFound: _propTypes["default"].func.isRequired,
    emojiProps: _propTypes["default"].object.isRequired
  };
  });

  var category = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _defineProperty2 = interopRequireDefault(defineProperty);

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _assertThisInitialized2 = interopRequireDefault(assertThisInitialized);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var _frequently = interopRequireDefault(frequently_1);



  var _nimbleEmoji = interopRequireDefault(nimbleEmoji);

  var _notFound = interopRequireDefault(notFound);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var Category =
  /*#__PURE__*/
  function (_React$Component) {
    (0, _inherits2["default"])(Category, _React$Component);

    function Category(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, Category);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Category).call(this, props));
      _this.data = props.data;
      _this.setContainerRef = _this.setContainerRef.bind((0, _assertThisInitialized2["default"])(_this));
      _this.setLabelRef = _this.setLabelRef.bind((0, _assertThisInitialized2["default"])(_this));
      return _this;
    }

    (0, _createClass2["default"])(Category, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.margin = 0;
        this.minMargin = 0;
        this.memoizeSize();
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps, nextState) {
        var _this$props = this.props,
            name = _this$props.name,
            perLine = _this$props.perLine,
            _native = _this$props["native"],
            hasStickyPosition = _this$props.hasStickyPosition,
            emojis = _this$props.emojis,
            emojiProps = _this$props.emojiProps,
            skin = emojiProps.skin,
            size = emojiProps.size,
            set = emojiProps.set,
            nextPerLine = nextProps.perLine,
            nextNative = nextProps["native"],
            nextHasStickyPosition = nextProps.hasStickyPosition,
            nextEmojis = nextProps.emojis,
            nextEmojiProps = nextProps.emojiProps,
            nextSkin = nextEmojiProps.skin,
            nextSize = nextEmojiProps.size,
            nextSet = nextEmojiProps.set,
            shouldUpdate = false;

        if (name == 'Recent' && perLine != nextPerLine) {
          shouldUpdate = true;
        }

        if (name == 'Search') {
          shouldUpdate = !(emojis == nextEmojis);
        }

        if (skin != nextSkin || size != nextSize || _native != nextNative || set != nextSet || hasStickyPosition != nextHasStickyPosition) {
          shouldUpdate = true;
        }

        return shouldUpdate;
      }
    }, {
      key: "memoizeSize",
      value: function memoizeSize() {
        if (!this.container) {
          // probably this is a test environment, e.g. jest
          this.top = 0;
          this.maxMargin = 0;
          return;
        }

        var parent = this.container.parentElement;

        var _this$container$getBo = this.container.getBoundingClientRect(),
            top = _this$container$getBo.top,
            height = _this$container$getBo.height;

        var _parent$getBoundingCl = parent.getBoundingClientRect(),
            parentTop = _parent$getBoundingCl.top;

        var _this$label$getBoundi = this.label.getBoundingClientRect(),
            labelHeight = _this$label$getBoundi.height;

        this.top = top - parentTop + parent.scrollTop;

        if (height == 0) {
          this.maxMargin = 0;
        } else {
          this.maxMargin = height - labelHeight;
        }
      }
    }, {
      key: "handleScroll",
      value: function handleScroll(scrollTop) {
        var margin = scrollTop - this.top;
        margin = margin < this.minMargin ? this.minMargin : margin;
        margin = margin > this.maxMargin ? this.maxMargin : margin;
        if (margin == this.margin) return;

        if (!this.props.hasStickyPosition) {
          this.label.style.top = "".concat(margin, "px");
        }

        this.margin = margin;
        return true;
      }
    }, {
      key: "getEmojis",
      value: function getEmojis() {
        var _this2 = this;

        var _this$props2 = this.props,
            name = _this$props2.name,
            emojis = _this$props2.emojis,
            recent = _this$props2.recent,
            perLine = _this$props2.perLine;

        if (name == 'Recent') {
          var custom = this.props.custom;

          var frequentlyUsed = recent || _frequently["default"].get(perLine);

          if (frequentlyUsed.length) {
            emojis = frequentlyUsed.map(function (id) {
              var emoji = custom.filter(function (e) {
                return e.id === id;
              })[0];

              if (emoji) {
                return emoji;
              }

              return id;
            }).filter(function (id) {
              return !!(0, utils.getData)(id, null, null, _this2.data);
            });
          }

          if (emojis.length === 0 && frequentlyUsed.length > 0) {
            return null;
          }
        }

        if (emojis) {
          emojis = emojis.slice(0);
        }

        return emojis;
      }
    }, {
      key: "updateDisplay",
      value: function updateDisplay(display) {
        var emojis = this.getEmojis();

        if (!emojis || !this.container) {
          return;
        }

        this.container.style.display = display;
      }
    }, {
      key: "setContainerRef",
      value: function setContainerRef(c) {
        this.container = c;
      }
    }, {
      key: "setLabelRef",
      value: function setLabelRef(c) {
        this.label = c;
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$props3 = this.props,
            id = _this$props3.id,
            name = _this$props3.name,
            hasStickyPosition = _this$props3.hasStickyPosition,
            emojiProps = _this$props3.emojiProps,
            i18n = _this$props3.i18n,
            notFound = _this$props3.notFound,
            notFoundEmoji = _this$props3.notFoundEmoji,
            emojis = this.getEmojis(),
            labelStyles = {},
            labelSpanStyles = {},
            containerStyles = {};

        if (!emojis) {
          containerStyles = {
            display: 'none'
          };
        }

        if (!hasStickyPosition) {
          labelStyles = {
            height: 28
          };
          labelSpanStyles = {
            position: 'absolute'
          };
        }

        var label = i18n.categories[id] || name;
        return _react["default"].createElement("section", {
          ref: this.setContainerRef,
          className: "emoji-mart-category",
          "aria-label": label,
          style: containerStyles
        }, _react["default"].createElement("div", {
          style: labelStyles,
          "data-name": name,
          className: "emoji-mart-category-label"
        }, _react["default"].createElement("span", {
          style: labelSpanStyles,
          ref: this.setLabelRef,
          "aria-hidden": true
          /* already labeled by the section aria-label */

        }, label)), _react["default"].createElement("ul", {
          className: "emoji-mart-category-list"
        }, emojis && emojis.map(function (emoji) {
          return _react["default"].createElement("li", {
            key: emoji.short_names && emoji.short_names.join('_') || emoji
          }, (0, _nimbleEmoji["default"])(_objectSpread({
            emoji: emoji,
            data: _this3.data
          }, emojiProps)));
        })), emojis && !emojis.length && _react["default"].createElement(_notFound["default"], {
          i18n: i18n,
          notFound: notFound,
          notFoundEmoji: notFoundEmoji,
          data: this.data,
          emojiProps: emojiProps
        }));
      }
    }]);
    return Category;
  }(_react["default"].Component);

  exports["default"] = Category;
  Category.propTypes
  /* remove-proptypes */
  = {
    emojis: _propTypes["default"].array,
    hasStickyPosition: _propTypes["default"].bool,
    name: _propTypes["default"].string.isRequired,
    "native": _propTypes["default"].bool.isRequired,
    perLine: _propTypes["default"].number.isRequired,
    emojiProps: _propTypes["default"].object.isRequired,
    recent: _propTypes["default"].arrayOf(_propTypes["default"].string),
    notFound: _propTypes["default"].func,
    notFoundEmoji: _propTypes["default"].string.isRequired
  };
  Category.defaultProps = {
    emojis: [],
    hasStickyPosition: true
  };
  });

  var skins = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var Skins =
  /*#__PURE__*/
  function (_React$PureComponent) {
    (0, _inherits2["default"])(Skins, _React$PureComponent);

    function Skins(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, Skins);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Skins).call(this, props));
      _this.state = {
        opened: false
      };
      return _this;
    }

    (0, _createClass2["default"])(Skins, [{
      key: "handleClick",
      value: function handleClick(e) {
        var skin = parseInt(e.currentTarget.getAttribute('data-skin'));
        var onChange = this.props.onChange;

        if (!this.state.opened) {
          this.setState({
            opened: true
          });
        } else {
          this.setState({
            opened: false
          });

          if (skin != this.props.skin) {
            onChange(skin);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Skins;
  }(_react["default"].PureComponent);

  exports["default"] = Skins;
  Skins.propTypes
  /* remove-proptypes */
  = {
    onChange: _propTypes["default"].func,
    skin: _propTypes["default"].number.isRequired
  };
  Skins.defaultProps = {
    onChange: function onChange() {}
  };
  });

  var skinsEmoji = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _assertThisInitialized2 = interopRequireDefault(assertThisInitialized);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var _nimbleEmoji = interopRequireDefault(nimbleEmoji);

  var _skins = interopRequireDefault(skins);

  var SkinsEmoji =
  /*#__PURE__*/
  function (_Skins) {
    (0, _inherits2["default"])(SkinsEmoji, _Skins);

    function SkinsEmoji(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, SkinsEmoji);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SkinsEmoji).call(this, props));
      _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2["default"])(_this));
      return _this;
    }

    (0, _createClass2["default"])(SkinsEmoji, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            skin = _this$props.skin,
            emojiProps = _this$props.emojiProps,
            data = _this$props.data,
            skinEmoji = _this$props.skinEmoji,
            i18n = _this$props.i18n;
        var opened = this.state.opened;
        var skinToneNodes = [];

        for (var skinTone = 1; skinTone <= 6; skinTone++) {
          var selected = skinTone === skin;
          skinToneNodes.push(_react["default"].createElement("span", {
            key: "skin-tone-".concat(skinTone),
            className: "emoji-mart-skin-swatch custom".concat(selected ? ' selected' : '')
          }, _react["default"].createElement("span", {
            onClick: this.handleClick,
            "data-skin": skinTone,
            className: "emoji-mart-skin-tone-".concat(skinTone)
          }, (0, _nimbleEmoji["default"])({
            emoji: skinEmoji,
            data: data,
            skin: skinTone,
            backgroundImageFn: emojiProps.backgroundImageFn,
            "native": emojiProps["native"],
            set: emojiProps.set,
            sheetSize: emojiProps.sheetSize,
            size: 23
          }))));
        }

        return _react["default"].createElement("div", {
          className: "emoji-mart-skin-swatches custom".concat(opened ? ' opened' : '')
        }, _react["default"].createElement("div", {
          className: "emoji-mart-skin-text".concat(opened ? ' opened' : '')
        }, i18n.skintext), skinToneNodes);
      }
    }]);
    return SkinsEmoji;
  }(_skins["default"]);

  exports["default"] = SkinsEmoji;
  SkinsEmoji.propTypes
  /* remove-proptypes */
  = {
    onChange: _propTypes["default"].func,
    skin: _propTypes["default"].number.isRequired,
    emojiProps: _propTypes["default"].object.isRequired,
    skinTone: _propTypes["default"].number,
    skinEmoji: _propTypes["default"].string.isRequired,
    i18n: _propTypes["default"].object
  };
  SkinsEmoji.defaultProps = {
    onChange: function onChange() {},
    skinTone: null
  };
  });

  var skinsDot = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _extends2 = interopRequireDefault(_extends_1);

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _assertThisInitialized2 = interopRequireDefault(assertThisInitialized);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var _skins = interopRequireDefault(skins);

  var SkinsDot =
  /*#__PURE__*/
  function (_Skins) {
    (0, _inherits2["default"])(SkinsDot, _Skins);

    function SkinsDot(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, SkinsDot);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SkinsDot).call(this, props));
      _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleKeyDown = _this.handleKeyDown.bind((0, _assertThisInitialized2["default"])(_this));
      return _this;
    }

    (0, _createClass2["default"])(SkinsDot, [{
      key: "handleKeyDown",
      value: function handleKeyDown(event) {
        // if either enter or space is pressed, then execute
        if (event.keyCode === 13 || event.keyCode === 32) {
          event.preventDefault();
          this.handleClick(event);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            skin = _this$props.skin,
            i18n = _this$props.i18n;
        var opened = this.state.opened;
        var skinToneNodes = [];

        for (var skinTone = 1; skinTone <= 6; skinTone++) {
          var selected = skinTone === skin;
          var visible = opened || selected;
          skinToneNodes.push(_react["default"].createElement("span", (0, _extends2["default"])({
            key: "skin-tone-".concat(skinTone),
            className: "emoji-mart-skin-swatch".concat(selected ? ' selected' : ''),
            "aria-label": i18n.skintones[skinTone],
            "aria-hidden": !visible
          }, opened ? {
            role: 'menuitem'
          } : {}), _react["default"].createElement("span", (0, _extends2["default"])({
            onClick: this.handleClick,
            onKeyDown: this.handleKeyDown,
            role: "button"
          }, selected ? {
            'aria-haspopup': true,
            'aria-expanded': !!opened
          } : {}, opened ? {
            'aria-pressed': !!selected
          } : {}, {
            tabIndex: visible ? '0' : '',
            "aria-label": i18n.skintones[skinTone],
            title: i18n.skintones[skinTone],
            "data-skin": skinTone,
            className: "emoji-mart-skin emoji-mart-skin-tone-".concat(skinTone)
          }))));
        }

        return _react["default"].createElement("section", {
          className: "emoji-mart-skin-swatches".concat(opened ? ' opened' : ''),
          "aria-label": i18n.skintext
        }, _react["default"].createElement("div", opened ? {
          role: 'menubar'
        } : {}, skinToneNodes));
      }
    }]);
    return SkinsDot;
  }(_skins["default"]);

  exports["default"] = SkinsDot;
  SkinsDot.propTypes
  /* remove-proptypes */
  = {
    onChange: _propTypes["default"].func,
    skin: _propTypes["default"].number.isRequired,
    i18n: _propTypes["default"].object
  };
  SkinsDot.defaultProps = {
    onChange: function onChange() {}
  };
  });

  var preview = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _defineProperty2 = interopRequireDefault(defineProperty);

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);



  var _nimbleEmoji = interopRequireDefault(nimbleEmoji);

  var _skinsEmoji = interopRequireDefault(skinsEmoji);

  var _skinsDot = interopRequireDefault(skinsDot);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var Preview =
  /*#__PURE__*/
  function (_React$PureComponent) {
    (0, _inherits2["default"])(Preview, _React$PureComponent);

    function Preview(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, Preview);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Preview).call(this, props));
      _this.data = props.data;
      _this.state = {
        emoji: null
      };
      return _this;
    }

    (0, _createClass2["default"])(Preview, [{
      key: "render",
      value: function render() {
        var emoji = this.state.emoji,
            _this$props = this.props,
            emojiProps = _this$props.emojiProps,
            skinsProps = _this$props.skinsProps,
            showSkinTones = _this$props.showSkinTones,
            title = _this$props.title,
            idleEmoji = _this$props.emoji,
            i18n = _this$props.i18n,
            showPreview = _this$props.showPreview;

        if (emoji && showPreview) {
          var emojiData = (0, utils.getData)(emoji, null, null, this.data),
              _emojiData$emoticons = emojiData.emoticons,
              emoticons = _emojiData$emoticons === void 0 ? [] : _emojiData$emoticons,
              knownEmoticons = [],
              listedEmoticons = [];
          emoticons.forEach(function (emoticon) {
            if (knownEmoticons.indexOf(emoticon.toLowerCase()) >= 0) {
              return;
            }

            knownEmoticons.push(emoticon.toLowerCase());
            listedEmoticons.push(emoticon);
          });
          return _react["default"].createElement("div", {
            className: "emoji-mart-preview"
          }, _react["default"].createElement("div", {
            className: "emoji-mart-preview-emoji",
            "aria-hidden": "true"
          }, (0, _nimbleEmoji["default"])(_objectSpread({
            key: emoji.id,
            emoji: emoji,
            data: this.data
          }, emojiProps))), _react["default"].createElement("div", {
            className: "emoji-mart-preview-data",
            "aria-hidden": "true"
          }, _react["default"].createElement("div", {
            className: "emoji-mart-preview-name"
          }, emoji.name), _react["default"].createElement("div", {
            className: "emoji-mart-preview-shortnames"
          }, emojiData.short_names.map(function (short_name) {
            return _react["default"].createElement("span", {
              key: short_name,
              className: "emoji-mart-preview-shortname"
            }, ":", short_name, ":");
          })), _react["default"].createElement("div", {
            className: "emoji-mart-preview-emoticons"
          }, listedEmoticons.map(function (emoticon) {
            return _react["default"].createElement("span", {
              key: emoticon,
              className: "emoji-mart-preview-emoticon"
            }, emoticon);
          }))));
        } else {
          return _react["default"].createElement("div", {
            className: "emoji-mart-preview"
          }, _react["default"].createElement("div", {
            className: "emoji-mart-preview-emoji",
            "aria-hidden": "true"
          }, idleEmoji && idleEmoji.length && (0, _nimbleEmoji["default"])(_objectSpread({
            emoji: idleEmoji,
            data: this.data
          }, emojiProps))), _react["default"].createElement("div", {
            className: "emoji-mart-preview-data",
            "aria-hidden": "true"
          }, _react["default"].createElement("span", {
            className: "emoji-mart-title-label"
          }, title)), showSkinTones && _react["default"].createElement("div", {
            className: "emoji-mart-preview-skins".concat(skinsProps.skinEmoji ? ' custom' : '')
          }, skinsProps.skinEmoji ? _react["default"].createElement(_skinsEmoji["default"], {
            skin: skinsProps.skin,
            emojiProps: emojiProps,
            data: this.data,
            skinEmoji: skinsProps.skinEmoji,
            i18n: i18n,
            onChange: skinsProps.onChange
          }) : _react["default"].createElement(_skinsDot["default"], {
            skin: skinsProps.skin,
            i18n: i18n,
            onChange: skinsProps.onChange
          })));
        }
      }
    }]);
    return Preview;
  }(_react["default"].PureComponent);

  exports["default"] = Preview;
  Preview.propTypes
  /* remove-proptypes */
  = {
    showSkinTones: _propTypes["default"].bool,
    title: _propTypes["default"].string.isRequired,
    emoji: _propTypes["default"].string.isRequired,
    emojiProps: _propTypes["default"].object.isRequired,
    skinsProps: _propTypes["default"].object.isRequired
  };
  Preview.defaultProps = {
    showSkinTones: true,
    onChange: function onChange() {}
  };
  });

  var search = createCommonjsModule(function (module, exports) {



  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _assertThisInitialized2 = interopRequireDefault(assertThisInitialized);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);



  var _nimbleEmojiIndex = interopRequireDefault(nimbleEmojiIndex);



  var id = 0;

  var Search =
  /*#__PURE__*/
  function (_React$PureComponent) {
    (0, _inherits2["default"])(Search, _React$PureComponent);

    function Search(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, Search);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Search).call(this, props));
      _this.state = {
        icon: svgs.search.search,
        isSearching: false,
        id: ++id
      };
      _this.data = props.data;
      _this.emojiIndex = new _nimbleEmojiIndex["default"](_this.data);
      _this.setRef = _this.setRef.bind((0, _assertThisInitialized2["default"])(_this));
      _this.clear = _this.clear.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleKeyUp = _this.handleKeyUp.bind((0, _assertThisInitialized2["default"])(_this)); // throttle keyboard input so that typing isn't delayed

      _this.handleChange = (0, utils.throttleIdleTask)(_this.handleChange.bind((0, _assertThisInitialized2["default"])(_this)));
      return _this;
    }

    (0, _createClass2["default"])(Search, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        // in some cases (e.g. preact) the input may already be pre-populated
        // this.input is undefined in Jest tests
        if (this.input && this.input.value) {
          this.search(this.input.value);
        }
      }
    }, {
      key: "search",
      value: function search(value) {
        if (value == '') this.setState({
          icon: svgs.search.search,
          isSearching: false
        });else this.setState({
          icon: svgs.search["delete"],
          isSearching: true
        });
        this.props.onSearch(this.emojiIndex.search(value, {
          emojisToShowFilter: this.props.emojisToShowFilter,
          maxResults: this.props.maxResults,
          include: this.props.include,
          exclude: this.props.exclude,
          custom: this.props.custom
        }));
      }
    }, {
      key: "clear",
      value: function clear() {
        if (this.input.value == '') return;
        this.input.value = '';
        this.input.focus();
        this.search('');
      }
    }, {
      key: "handleChange",
      value: function handleChange() {
        if (this.input) {
          this.search(this.input.value);
        }
      }
    }, {
      key: "handleKeyUp",
      value: function handleKeyUp(e) {
        if (e.keyCode === 13) {
          this.clear();
        }
      }
    }, {
      key: "setRef",
      value: function setRef(c) {
        this.input = c;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            i18n = _this$props.i18n,
            autoFocus = _this$props.autoFocus;
        var _this$state = this.state,
            icon = _this$state.icon,
            isSearching = _this$state.isSearching,
            id = _this$state.id;
        var inputId = "emoji-mart-search-".concat(id);
        return _react["default"].createElement("section", {
          className: "emoji-mart-search",
          "aria-label": i18n.search
        }, _react["default"].createElement("input", {
          id: inputId,
          ref: this.setRef,
          type: "search",
          onChange: this.handleChange,
          placeholder: i18n.search,
          autoFocus: autoFocus
        }), _react["default"].createElement("label", {
          className: "emoji-mart-sr-only",
          htmlFor: inputId
        }, i18n.search), _react["default"].createElement("button", {
          className: "emoji-mart-search-icon",
          onClick: this.clear,
          onKeyUp: this.handleKeyUp,
          "aria-label": i18n.clear,
          disabled: !isSearching
        }, icon()));
      }
    }]);
    return Search;
  }(_react["default"].PureComponent);

  exports["default"] = Search;
  Search.propTypes
  /* remove-proptypes */
  = {
    onSearch: _propTypes["default"].func,
    maxResults: _propTypes["default"].number,
    emojisToShowFilter: _propTypes["default"].func,
    autoFocus: _propTypes["default"].bool
  };
  Search.defaultProps = {
    onSearch: function onSearch() {},
    maxResults: 75,
    emojisToShowFilter: null,
    autoFocus: false
  };
  });

  var nimblePicker = createCommonjsModule(function (module, exports) {





  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;

  var _defineProperty2 = interopRequireDefault(defineProperty);

  var _classCallCheck2 = interopRequireDefault(classCallCheck);

  var _createClass2 = interopRequireDefault(createClass);

  var _possibleConstructorReturn2 = interopRequireDefault(possibleConstructorReturn);

  var _getPrototypeOf2 = interopRequireDefault(getPrototypeOf);

  var _assertThisInitialized2 = interopRequireDefault(assertThisInitialized);

  var _inherits2 = interopRequireDefault(inherits);

  var _react = interopRequireDefault(React__default['default']);

  var _propTypes = interopRequireDefault(propTypes);

  var icons = interopRequireWildcard(svgs);

  var _store = interopRequireDefault(store);

  var _frequently = interopRequireDefault(frequently_1);







  var _anchors = interopRequireDefault(anchors);

  var _category = interopRequireDefault(category);

  var _preview = interopRequireDefault(preview);

  var _search = interopRequireDefault(search);



  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var I18N = {
    search: 'Search',
    clear: 'Clear',
    // Accessible label on "clear" button
    notfound: 'No Emoji Found',
    skintext: 'Choose your default skin tone',
    categories: {
      search: 'Search Results',
      recent: 'Frequently Used',
      people: 'Smileys & People',
      nature: 'Animals & Nature',
      foods: 'Food & Drink',
      activity: 'Activity',
      places: 'Travel & Places',
      objects: 'Objects',
      symbols: 'Symbols',
      flags: 'Flags',
      custom: 'Custom'
    },
    categorieslabel: 'Emoji categories',
    // Accessible title for the list of categories
    skintones: {
      1: 'Default Skin Tone',
      2: 'Light Skin Tone',
      3: 'Medium-Light Skin Tone',
      4: 'Medium Skin Tone',
      5: 'Medium-Dark Skin Tone',
      6: 'Dark Skin Tone'
    }
  };

  var NimblePicker =
  /*#__PURE__*/
  function (_React$PureComponent) {
    (0, _inherits2["default"])(NimblePicker, _React$PureComponent);

    function NimblePicker(props) {
      var _this;

      (0, _classCallCheck2["default"])(this, NimblePicker);
      _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(NimblePicker).call(this, props));
      _this.CUSTOM = [];
      _this.RECENT_CATEGORY = {
        id: 'recent',
        name: 'Recent',
        emojis: null
      };
      _this.SEARCH_CATEGORY = {
        id: 'search',
        name: 'Search',
        emojis: null,
        anchor: false
      };

      if (props.data.compressed) {
        (0, data.uncompress)(props.data);
      }

      _this.data = props.data;
      _this.i18n = (0, utils.deepMerge)(I18N, props.i18n);
      _this.icons = (0, utils.deepMerge)(icons, props.icons);
      _this.state = {
        firstRender: true
      };
      _this.categories = [];
      var allCategories = [].concat(_this.data.categories);

      if (props.custom.length > 0) {
        var customCategories = {};
        var customCategoriesCreated = 0;
        props.custom.forEach(function (emoji) {
          if (!customCategories[emoji.customCategory]) {
            customCategories[emoji.customCategory] = {
              id: emoji.customCategory ? "custom-".concat(emoji.customCategory) : 'custom',
              name: emoji.customCategory || 'Custom',
              emojis: [],
              anchor: customCategoriesCreated === 0
            };
            customCategoriesCreated++;
          }

          var category = customCategories[emoji.customCategory];

          var customEmoji = _objectSpread({}, emoji, {
            // `<Category />` expects emoji to have an `id`.
            id: emoji.short_names[0],
            custom: true
          });

          category.emojis.push(customEmoji);

          _this.CUSTOM.push(customEmoji);
        });
        allCategories = allCategories.concat(Object.keys(customCategories).map(function (key) {
          return customCategories[key];
        }));
      }

      _this.hideRecent = true;

      if (props.include != undefined) {
        allCategories.sort(function (a, b) {
          if (props.include.indexOf(a.id) > props.include.indexOf(b.id)) {
            return 1;
          }

          return -1;
        });
      }

      for (var categoryIndex = 0; categoryIndex < allCategories.length; categoryIndex++) {
        var category = allCategories[categoryIndex];
        var isIncluded = props.include && props.include.length ? props.include.indexOf(category.id) > -1 : true;
        var isExcluded = props.exclude && props.exclude.length ? props.exclude.indexOf(category.id) > -1 : false;

        if (!isIncluded || isExcluded) {
          continue;
        }

        if (props.emojisToShowFilter) {
          var newEmojis = [];
          var emojis = category.emojis;

          for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex++) {
            var emoji = emojis[emojiIndex];

            if (props.emojisToShowFilter(_this.data.emojis[emoji] || emoji)) {
              newEmojis.push(emoji);
            }
          }

          if (newEmojis.length) {
            var newCategory = {
              emojis: newEmojis,
              name: category.name,
              id: category.id
            };

            _this.categories.push(newCategory);
          }
        } else {
          _this.categories.push(category);
        }
      }

      var includeRecent = props.include && props.include.length ? props.include.indexOf(_this.RECENT_CATEGORY.id) > -1 : true;
      var excludeRecent = props.exclude && props.exclude.length ? props.exclude.indexOf(_this.RECENT_CATEGORY.id) > -1 : false;

      if (includeRecent && !excludeRecent) {
        _this.hideRecent = false;

        _this.categories.unshift(_this.RECENT_CATEGORY);
      }

      if (_this.categories[0]) {
        _this.categories[0].first = true;
      }

      _this.categories.unshift(_this.SEARCH_CATEGORY);

      _this.setAnchorsRef = _this.setAnchorsRef.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleAnchorClick = _this.handleAnchorClick.bind((0, _assertThisInitialized2["default"])(_this));
      _this.setSearchRef = _this.setSearchRef.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleSearch = _this.handleSearch.bind((0, _assertThisInitialized2["default"])(_this));
      _this.setScrollRef = _this.setScrollRef.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleScroll = _this.handleScroll.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleScrollPaint = _this.handleScrollPaint.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleEmojiOver = _this.handleEmojiOver.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleEmojiLeave = _this.handleEmojiLeave.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleEmojiClick = _this.handleEmojiClick.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleEmojiSelect = _this.handleEmojiSelect.bind((0, _assertThisInitialized2["default"])(_this));
      _this.setPreviewRef = _this.setPreviewRef.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleSkinChange = _this.handleSkinChange.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleKeyDown = _this.handleKeyDown.bind((0, _assertThisInitialized2["default"])(_this));
      _this.handleDarkMatchMediaChange = _this.handleDarkMatchMediaChange.bind((0, _assertThisInitialized2["default"])(_this));
      return _this;
    }

    (0, _createClass2["default"])(NimblePicker, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        if (this.state.firstRender) {
          this.testStickyPosition();
          this.firstRenderTimeout = setTimeout(function () {
            _this2.setState({
              firstRender: false
            });
          }, 60);
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updateCategoriesSize();
        this.handleScroll();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.SEARCH_CATEGORY.emojis = null;
        clearTimeout(this.leaveTimeout);
        clearTimeout(this.firstRenderTimeout);

        if (this.darkMatchMedia) {
          this.darkMatchMedia.removeListener(this.handleDarkMatchMediaChange);
        }
      }
    }, {
      key: "testStickyPosition",
      value: function testStickyPosition() {
        var stickyTestElement = document.createElement('div');
        var prefixes = ['', '-webkit-', '-ms-', '-moz-', '-o-'];
        prefixes.forEach(function (prefix) {
          return stickyTestElement.style.position = "".concat(prefix, "sticky");
        });
        this.hasStickyPosition = !!stickyTestElement.style.position.length;
      }
    }, {
      key: "getPreferredTheme",
      value: function getPreferredTheme() {
        if (this.props.theme != 'auto') return this.props.theme;
        if (this.state.theme) return this.state.theme;
        if (typeof matchMedia !== 'function') return sharedDefaultProps.PickerDefaultProps.theme;

        if (!this.darkMatchMedia) {
          this.darkMatchMedia = matchMedia('(prefers-color-scheme: dark)');
          this.darkMatchMedia.addListener(this.handleDarkMatchMediaChange);
        }

        if (this.darkMatchMedia.media.match(/^not/)) return sharedDefaultProps.PickerDefaultProps.theme;
        return this.darkMatchMedia.matches ? 'dark' : 'light';
      }
    }, {
      key: "handleDarkMatchMediaChange",
      value: function handleDarkMatchMediaChange() {
        this.setState({
          theme: this.darkMatchMedia.matches ? 'dark' : 'light'
        });
      }
    }, {
      key: "handleEmojiOver",
      value: function handleEmojiOver(emoji) {
        var preview = this.preview;

        if (!preview) {
          return;
        } // Use Array.prototype.find() when it is more widely supported.


        var emojiData = this.CUSTOM.filter(function (customEmoji) {
          return customEmoji.id === emoji.id;
        })[0];

        for (var key in emojiData) {
          if (emojiData.hasOwnProperty(key)) {
            emoji[key] = emojiData[key];
          }
        }

        preview.setState({
          emoji: emoji
        });
        clearTimeout(this.leaveTimeout);
      }
    }, {
      key: "handleEmojiLeave",
      value: function handleEmojiLeave(emoji) {
        var preview = this.preview;

        if (!preview) {
          return;
        }

        this.leaveTimeout = setTimeout(function () {
          preview.setState({
            emoji: null
          });
        }, 16);
      }
    }, {
      key: "handleEmojiClick",
      value: function handleEmojiClick(emoji, e) {
        this.props.onClick(emoji, e);
        this.handleEmojiSelect(emoji);
      }
    }, {
      key: "handleEmojiSelect",
      value: function handleEmojiSelect(emoji) {
        var _this3 = this;

        this.props.onSelect(emoji);
        if (!this.hideRecent && !this.props.recent) _frequently["default"].add(emoji);
        var component = this.categoryRefs['category-1'];

        if (component) {
          var maxMargin = component.maxMargin;

          if (this.props.enableFrequentEmojiSort) {
            component.forceUpdate();
          }

          requestAnimationFrame(function () {
            if (!_this3.scroll) return;
            component.memoizeSize();
            if (maxMargin == component.maxMargin) return;

            _this3.updateCategoriesSize();

            _this3.handleScrollPaint();

            if (_this3.SEARCH_CATEGORY.emojis) {
              component.updateDisplay('none');
            }
          });
        }
      }
    }, {
      key: "handleScroll",
      value: function handleScroll() {
        if (!this.waitingForPaint) {
          this.waitingForPaint = true;
          requestAnimationFrame(this.handleScrollPaint);
        }
      }
    }, {
      key: "handleScrollPaint",
      value: function handleScrollPaint() {
        this.waitingForPaint = false;

        if (!this.scroll) {
          return;
        }

        var activeCategory = null;

        if (this.SEARCH_CATEGORY.emojis) {
          activeCategory = this.SEARCH_CATEGORY;
        } else {
          var target = this.scroll,
              scrollTop = target.scrollTop,
              scrollingDown = scrollTop > (this.scrollTop || 0),
              minTop = 0;

          for (var i = 0, l = this.categories.length; i < l; i++) {
            var ii = scrollingDown ? this.categories.length - 1 - i : i,
                category = this.categories[ii],
                component = this.categoryRefs["category-".concat(ii)];

            if (component) {
              var active = component.handleScroll(scrollTop);

              if (!minTop || component.top < minTop) {
                if (component.top > 0) {
                  minTop = component.top;
                }
              }

              if (active && !activeCategory) {
                activeCategory = category;
              }
            }
          }

          if (scrollTop < minTop) {
            activeCategory = this.categories.filter(function (category) {
              return !(category.anchor === false);
            })[0];
          } else if (scrollTop + this.clientHeight >= this.scrollHeight) {
            activeCategory = this.categories[this.categories.length - 1];
          }
        }

        if (activeCategory) {
          var anchors = this.anchors,
              _activeCategory = activeCategory,
              categoryName = _activeCategory.name;

          if (anchors.state.selected != categoryName) {
            anchors.setState({
              selected: categoryName
            });
          }
        }

        this.scrollTop = scrollTop;
      }
    }, {
      key: "handleSearch",
      value: function handleSearch(emojis) {
        this.SEARCH_CATEGORY.emojis = emojis;

        for (var i = 0, l = this.categories.length; i < l; i++) {
          var component = this.categoryRefs["category-".concat(i)];

          if (component && component.props.name != 'Search') {
            var display = emojis ? 'none' : 'inherit';
            component.updateDisplay(display);
          }
        }

        this.forceUpdate();

        if (this.scroll) {
          this.scroll.scrollTop = 0;
        }

        this.handleScroll();
      }
    }, {
      key: "handleAnchorClick",
      value: function handleAnchorClick(category, i) {
        var component = this.categoryRefs["category-".concat(i)],
            scroll = this.scroll;
            this.anchors;
            var scrollToComponent = null;

        scrollToComponent = function scrollToComponent() {
          if (component) {
            var top = component.top;

            if (category.first) {
              top = 0;
            } else {
              top += 1;
            }

            scroll.scrollTop = top;
          }
        };

        if (this.SEARCH_CATEGORY.emojis) {
          this.handleSearch(null);
          this.search.clear();
          requestAnimationFrame(scrollToComponent);
        } else {
          scrollToComponent();
        }
      }
    }, {
      key: "handleSkinChange",
      value: function handleSkinChange(skin) {
        var newState = {
          skin: skin
        },
            onSkinChange = this.props.onSkinChange;
        this.setState(newState);

        _store["default"].update(newState);

        onSkinChange(skin);
      }
    }, {
      key: "handleKeyDown",
      value: function handleKeyDown(e) {
        var handled = false;

        switch (e.keyCode) {
          case 13:
            var emoji;

            if (this.SEARCH_CATEGORY.emojis && this.SEARCH_CATEGORY.emojis.length && (emoji = (0, utils.getSanitizedData)(this.SEARCH_CATEGORY.emojis[0], this.state.skin, this.props.set, this.props.data))) {
              this.handleEmojiSelect(emoji);
              handled = true;
            }

            break;
        }

        if (handled) {
          e.preventDefault();
        }
      }
    }, {
      key: "updateCategoriesSize",
      value: function updateCategoriesSize() {
        for (var i = 0, l = this.categories.length; i < l; i++) {
          var component = this.categoryRefs["category-".concat(i)];
          if (component) component.memoizeSize();
        }

        if (this.scroll) {
          var target = this.scroll;
          this.scrollHeight = target.scrollHeight;
          this.clientHeight = target.clientHeight;
        }
      }
    }, {
      key: "getCategories",
      value: function getCategories() {
        return this.state.firstRender ? this.categories.slice(0, 3) : this.categories;
      }
    }, {
      key: "setAnchorsRef",
      value: function setAnchorsRef(c) {
        this.anchors = c;
      }
    }, {
      key: "setSearchRef",
      value: function setSearchRef(c) {
        this.search = c;
      }
    }, {
      key: "setPreviewRef",
      value: function setPreviewRef(c) {
        this.preview = c;
      }
    }, {
      key: "setScrollRef",
      value: function setScrollRef(c) {
        this.scroll = c;
      }
    }, {
      key: "setCategoryRef",
      value: function setCategoryRef(name, c) {
        if (!this.categoryRefs) {
          this.categoryRefs = {};
        }

        this.categoryRefs[name] = c;
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var _this$props = this.props,
            perLine = _this$props.perLine,
            emojiSize = _this$props.emojiSize,
            set = _this$props.set,
            sheetSize = _this$props.sheetSize,
            sheetColumns = _this$props.sheetColumns,
            sheetRows = _this$props.sheetRows,
            style = _this$props.style,
            title = _this$props.title,
            emoji = _this$props.emoji,
            color = _this$props.color,
            _native = _this$props["native"],
            backgroundImageFn = _this$props.backgroundImageFn,
            emojisToShowFilter = _this$props.emojisToShowFilter,
            showPreview = _this$props.showPreview,
            showSkinTones = _this$props.showSkinTones,
            emojiTooltip = _this$props.emojiTooltip,
            useButton = _this$props.useButton,
            include = _this$props.include,
            exclude = _this$props.exclude,
            recent = _this$props.recent,
            autoFocus = _this$props.autoFocus,
            skinEmoji = _this$props.skinEmoji,
            notFound = _this$props.notFound,
            notFoundEmoji = _this$props.notFoundEmoji;
        var width = perLine * (emojiSize + 12) + 12 + 2 + (0, utils.measureScrollbar)();
        var theme = this.getPreferredTheme();
        var skin = this.props.skin || this.state.skin || _store["default"].get('skin') || this.props.defaultSkin;
        return _react["default"].createElement("section", {
          style: _objectSpread({
            width: width
          }, style),
          className: "emoji-mart emoji-mart-".concat(theme),
          "aria-label": title,
          onKeyDown: this.handleKeyDown
        }, _react["default"].createElement("div", {
          className: "emoji-mart-bar"
        }, _react["default"].createElement(_anchors["default"], {
          ref: this.setAnchorsRef,
          data: this.data,
          i18n: this.i18n,
          color: color,
          categories: this.categories,
          onAnchorClick: this.handleAnchorClick,
          icons: this.icons
        })), _react["default"].createElement(_search["default"], {
          ref: this.setSearchRef,
          onSearch: this.handleSearch,
          data: this.data,
          i18n: this.i18n,
          emojisToShowFilter: emojisToShowFilter,
          include: include,
          exclude: exclude,
          custom: this.CUSTOM,
          autoFocus: autoFocus
        }), _react["default"].createElement("div", {
          ref: this.setScrollRef,
          className: "emoji-mart-scroll",
          onScroll: this.handleScroll
        }, this.getCategories().map(function (category, i) {
          return _react["default"].createElement(_category["default"], {
            ref: _this4.setCategoryRef.bind(_this4, "category-".concat(i)),
            key: category.name,
            id: category.id,
            name: category.name,
            emojis: category.emojis,
            perLine: perLine,
            "native": _native,
            hasStickyPosition: _this4.hasStickyPosition,
            data: _this4.data,
            i18n: _this4.i18n,
            recent: category.id == _this4.RECENT_CATEGORY.id ? recent : undefined,
            custom: category.id == _this4.RECENT_CATEGORY.id ? _this4.CUSTOM : undefined,
            emojiProps: {
              "native": _native,
              skin: skin,
              size: emojiSize,
              set: set,
              sheetSize: sheetSize,
              sheetColumns: sheetColumns,
              sheetRows: sheetRows,
              forceSize: _native,
              tooltip: emojiTooltip,
              backgroundImageFn: backgroundImageFn,
              useButton: useButton,
              onOver: _this4.handleEmojiOver,
              onLeave: _this4.handleEmojiLeave,
              onClick: _this4.handleEmojiClick
            },
            notFound: notFound,
            notFoundEmoji: notFoundEmoji
          });
        })), (showPreview || showSkinTones) && _react["default"].createElement("div", {
          className: "emoji-mart-bar"
        }, _react["default"].createElement(_preview["default"], {
          ref: this.setPreviewRef,
          data: this.data,
          title: title,
          emoji: emoji,
          showSkinTones: showSkinTones,
          showPreview: showPreview,
          emojiProps: {
            "native": _native,
            size: 38,
            skin: skin,
            set: set,
            sheetSize: sheetSize,
            sheetColumns: sheetColumns,
            sheetRows: sheetRows,
            backgroundImageFn: backgroundImageFn
          },
          skinsProps: {
            skin: skin,
            onChange: this.handleSkinChange,
            skinEmoji: skinEmoji
          },
          i18n: this.i18n
        })));
      }
    }]);
    return NimblePicker;
  }(_react["default"].PureComponent);

  exports["default"] = NimblePicker;
  NimblePicker.propTypes
  /* remove-proptypes */
  = _objectSpread({}, sharedProps.PickerPropTypes, {
    data: _propTypes["default"].object.isRequired
  });
  NimblePicker.defaultProps = _objectSpread({}, sharedDefaultProps.PickerDefaultProps);
  });

  var NimbleEmojiPicker = /*@__PURE__*/getDefaultExportFromCjs(nimblePicker);

  var getEmojiPickerFieldsTranslations = function getEmojiPickerFieldsTranslations(t) {
    return {
      search: t('Search'),
      // todo: remove after fixed I18n type definition in emoji-mart package
      // @ts-expect-error
      clear: t('Clear'),
      notfound: t('No emoji found'),
      skintext: t('Choose your default skin tone'),
      categorieslabel: t('Emoji categories'),
      categories: {
        search: t('Search Results'),
        recent: t('Frequently Used'),
        people: t('Smileys & Emotion'),
        nature: t('Animals & Nature'),
        foods: t('Food & Drink'),
        activity: t('Activity'),
        places: t('Travel & Places'),
        objects: t('Objects'),
        symbols: t('Symbols'),
        flags: t('Flags'),
        custom: t('Custom')
      }
    };
  };
  var EmojiPicker = function EmojiPicker(_ref) {
    var _ref$emojiData = _ref.emojiData,
        emojiData = _ref$emojiData === void 0 ? defaultEmojiData : _ref$emojiData,
        i18n = _ref.i18n,
        onSelect = _ref.onSelect,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    var _useState = React.useState(false),
        _useState2 = _slicedToArray$3(_useState, 2),
        open = _useState2[0],
        setOpen = _useState2[1];

    var emojiPicker = React.useRef(null);
    useOnClickOutside(emojiPicker, function () {
      return setOpen(false);
    }, open);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-emoji-picker', className),
      style: style
    }, open && /*#__PURE__*/React__default['default'].createElement("div", {
      "data-testid": "picker-wrapper",
      className: "raf-emoji-picker__container",
      ref: emojiPicker
    }, /*#__PURE__*/React__default['default'].createElement(NimbleEmojiPicker, {
      i18n: i18n !== null && i18n !== void 0 ? i18n : getEmojiPickerFieldsTranslations(t),
      emoji: "point_up",
      title: t('Pick your emoji'),
      data: emojiData,
      onSelect: onSelect
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      role: "button",
      onClick: function onClick() {
        return setOpen(true);
      },
      className: "raf-emoji-picker__button"
    }, /*#__PURE__*/React__default['default'].createElement(EmojiIcon, null)));
  };

  var Title = function Title(_ref) {
    var _ref$size = _ref.size,
        size = _ref$size === void 0 ? 18 : _ref$size,
        children = _ref.children,
        className = _ref.className,
        _ref$style = _ref.style,
        style = _ref$style === void 0 ? {
      fontSize: size
    } : _ref$style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-title', className),
      style: style
    }, children);
  };

  function StatusUpdateForm(_ref) {
    var _ref$feedGroup = _ref.feedGroup,
        feedGroup = _ref$feedGroup === void 0 ? 'user' : _ref$feedGroup,
        _ref$activityVerb = _ref.activityVerb,
        activityVerb = _ref$activityVerb === void 0 ? 'post' : _ref$activityVerb,
        modifyActivityData = _ref.modifyActivityData,
        emojiData = _ref.emojiData,
        emojiI18n = _ref.emojiI18n,
        Header = _ref.Header,
        FooterItem = _ref.FooterItem,
        _ref$Textarea = _ref.Textarea,
        Textarea$1 = _ref$Textarea === void 0 ? Textarea : _ref$Textarea,
        trigger = _ref.trigger,
        doRequest = _ref.doRequest,
        userId = _ref.userId,
        onSuccess = _ref.onSuccess,
        style = _ref.style,
        className = _ref.className;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    var state = useStatusUpdateForm({
      feedGroup: feedGroup,
      activityVerb: activityVerb,
      modifyActivityData: modifyActivityData,
      doRequest: doRequest,
      userId: userId,
      onSuccess: onSuccess
    });
    return /*#__PURE__*/React__default['default'].createElement(Panel, {
      style: style,
      className: className
    }, /*#__PURE__*/React__default['default'].createElement("form", {
      onSubmit: state.onSubmitForm
    }, /*#__PURE__*/React__default['default'].createElement(ImageDropzone, {
      handleFiles: state.uploadNewFiles
    }, /*#__PURE__*/React__default['default'].createElement(PanelHeading, null, Header !== null && Header !== void 0 ? Header : /*#__PURE__*/React__default['default'].createElement(Title, null, t('New Post'))), /*#__PURE__*/React__default['default'].createElement(PanelContent, null, /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        display: 'flex'
      }
    }, state.userData.profileImage && /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        marginRight: '16px'
      }
    }, /*#__PURE__*/React__default['default'].createElement(Avatar, {
      image: state.userData.profileImage,
      size: 50,
      circle: true
    })), smartRender(Textarea$1, {
      emojiData: emojiData,
      innerRef: state.textInputRef,
      onChange: state.onChange,
      onPaste: state.onPaste,
      placeholder: t('Type your post...'),
      trigger: trigger,
      value: state.text
    })), state.isOgScraping && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-status-update-form__og-loading"
    }, /*#__PURE__*/React__default['default'].createElement(LoadingIndicator, null), " ", t('Getting website data...')), state.activeOg && /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        margin: '8px 0'
      }
    }, !state.activeOg.videos && !state.activeOg.audios ? /*#__PURE__*/React__default['default'].createElement(Card, _extends$1({
      nolink: true,
      handleClose: state.dismissOg
    }, state.activeOg)) : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, !!state.activeOg.videos && /*#__PURE__*/React__default['default'].createElement(Video, {
      og: state.activeOg,
      handleClose: state.dismissOg
    }), !!state.activeOg.audios && /*#__PURE__*/React__default['default'].createElement(Audio, {
      og: state.activeOg,
      handleClose: state.dismissOg
    }))), state.availableOg && state.availableOg.length > 1 && /*#__PURE__*/React__default['default'].createElement("ol", {
      className: "raf-status-update-form__url-list"
    }, state.availableOg.map(function (_ref2) {
      var url = _ref2.url,
          title = _ref2.title;
      return /*#__PURE__*/React__default['default'].createElement("li", {
        onClick: function onClick() {
          return state.setActiveOg(url);
        },
        key: url,
        className: "raf-status-update-form__url-list-item".concat(url === state.ogActiveUrl ? ' raf-status-update-form__url-list-item--active' : '')
      }, /*#__PURE__*/React__default['default'].createElement(BookmarkIcon, {
        style: {
          width: '0.75em',
          verticalAlign: '-0.125em'
        }
      }), ' ', title !== undefined ? title : url);
    })), state.images.order.length > 0 && /*#__PURE__*/React__default['default'].createElement(ImagePreviewer, {
      imageUploads: state.images.order.map(function (id) {
        return state.images.data[id];
      }),
      handleRemove: state.removeImage,
      handleRetry: function handleRetry(id) {
        return state.uploadImage(id, state.images.data[id]);
      },
      handleFiles: state.uploadNewFiles
    }), state.files.order.length > 0 && /*#__PURE__*/React__default['default'].createElement(FilePreviewer, {
      uploads: state.files.order.map(function (id) {
        return state.files.data[id];
      }),
      handleRemove: state.removeFile,
      handleRetry: function handleRetry(id) {
        return state.uploadFile(id, state.files.data[id]);
      },
      handleFiles: state.uploadNewFiles
    })), /*#__PURE__*/React__default['default'].createElement(PanelFooter, null, /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        display: 'flex',
        alignItems: 'center'
      }
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        marginRight: '32px',
        display: 'inline-block'
      }
    }, /*#__PURE__*/React__default['default'].createElement(ImageUploadButton, {
      resetOnChange: true,
      handleFiles: state.uploadNewFiles,
      multiple: true
    })), /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        marginRight: '32px',
        display: 'inline-block'
      }
    }, /*#__PURE__*/React__default['default'].createElement(FileUploadButton, {
      handleFiles: state.uploadNewFiles,
      multiple: true
    })), /*#__PURE__*/React__default['default'].createElement(EmojiPicker, {
      onSelect: state.onSelectEmoji,
      emojiData: emojiData,
      i18n: emojiI18n
    }), FooterItem), /*#__PURE__*/React__default['default'].createElement(Button, {
      type: "submit",
      buttonStyle: "primary",
      loading: state.submitting,
      disabled: !state.canSubmit()
    }, t('Post')))))));
  }

  /**
   * `DropdownPanel` is a more advanced component used to create a notification dropdown for instance, it comes with three parts:
   * `Header`, `Content` and `Footer`. The content has a limited height and the `overflow` is set to `scroll`.
   */
  var DropdownPanel = function DropdownPanel(_ref) {
    var _ref$arrow = _ref.arrow,
        arrow = _ref$arrow === void 0 ? false : _ref$arrow,
        _ref$right = _ref.right,
        right = _ref$right === void 0 ? false : _ref$right,
        Header = _ref.Header,
        Footer = _ref.Footer,
        children = _ref.children,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      "data-testid": "dp-wrapper",
      className: className !== null && className !== void 0 ? className : "raf-dropdown-panel".concat(arrow ? ' raf-dropdown-panel--arrow' : '', " ").concat(right ? ' raf-dropdown-panel--right raf-dropdown-panel--arrow-right' : ' raf-dropdown-panel--left raf-dropdown-panel--arrow-left'),
      style: style
    }, !!Header && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-dropdown-panel__header"
    }, smartRender(Header)), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-dropdown-panel__content"
    }, children), !!Footer && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-dropdown-panel__footer"
    }, smartRender(Footer)));
  };

  var IconBadge = function IconBadge(_ref) {
    var children = _ref.children,
        onClick = _ref.onClick,
        hidden = _ref.hidden,
        _ref$unseen = _ref.unseen,
        unseen = _ref$unseen === void 0 ? 0 : _ref$unseen,
        showNumber = _ref.showNumber,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-icon-badge', className),
      role: "button",
      onClick: onClick,
      style: style
    }, children !== null && children !== void 0 ? children : /*#__PURE__*/React__default['default'].createElement(BellIcon, null), unseen > 0 && !hidden && /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-icon-badge__badge",
      "data-testid": "unseen-wrapper"
    }, showNumber && /*#__PURE__*/React__default['default'].createElement("p", {
      "data-testid": "unseen-count"
    }, unseen)));
  };

  function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var NotificationDropdownInner = function NotificationDropdownInner(_ref) {
    var width = _ref.width,
        Footer = _ref.Footer,
        Header = _ref.Header,
        Icon = _ref.Icon,
        right = _ref.right,
        className = _ref.className,
        style = _ref.style,
        feedProps = _objectWithoutProperties(_ref, ["width", "Footer", "Header", "Icon", "right", "className", "style"]);

    var feed = useFeedContext();

    var _useState = React.useState(false),
        _useState2 = _slicedToArray$3(_useState, 2),
        open = _useState2[0],
        setOpen = _useState2[1];

    var dropdownRef = React.useRef(null);
    useOnClickOutside(dropdownRef, function () {
      return setOpen(false);
    }, open);
    React.useEffect(function () {
      feed.refreshUnreadUnseen();
    }, []);
    var onIconBadgeClick = React.useCallback(function () {
      setOpen(function (open) {
        return !open;
      });
    }, []);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-notification-dropdown', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(IconBadge, {
      showNumber: true,
      unseen: feed.unseen,
      hidden: !feedProps.notify,
      onClick: onIconBadgeClick
    }, Icon && smartRender(Icon)), /*#__PURE__*/React__default['default'].createElement("div", {
      ref: dropdownRef,
      style: {
        maxWidth: width
      },
      className: "raf-notification-dropdown__panel".concat(open ? ' raf-notification-dropdown__panel--open' : '').concat(right ? ' raf-notification-dropdown__panel--right' : '')
    }, open && /*#__PURE__*/React__default['default'].createElement(DropdownPanel, {
      arrow: true,
      right: right,
      Header: Header,
      Footer: Footer
    }, /*#__PURE__*/React__default['default'].createElement(NotificationFeed, feedProps))));
  };
  /**
   * IMPORTANT: Changing most of the props below doesn't result in the desired effect.
   * These settings related to feed management should be changed in the `sharedFeeds` prop of the [`StreamApp`](#streamapp) component.
   */


  var NotificationDropdown = function NotificationDropdown(_ref2) {
    var _options$mark_seen;

    var _ref2$width = _ref2.width,
        width = _ref2$width === void 0 ? 475 : _ref2$width,
        Footer = _ref2.Footer,
        Header = _ref2.Header,
        Icon = _ref2.Icon,
        right = _ref2.right,
        _ref2$feedGroup = _ref2.feedGroup,
        feedGroup = _ref2$feedGroup === void 0 ? 'notification' : _ref2$feedGroup,
        options = _ref2.options,
        feedProps = _objectWithoutProperties(_ref2, ["width", "Footer", "Header", "Icon", "right", "feedGroup", "options"]);

    var optionsWithDefaults = _objectSpread$2(_objectSpread$2({}, options), {}, {
      mark_seen: (_options$mark_seen = options === null || options === void 0 ? void 0 : options.mark_seen) !== null && _options$mark_seen !== void 0 ? _options$mark_seen : true
    });

    return /*#__PURE__*/React__default['default'].createElement(Feed, _extends$1({}, feedProps, {
      feedGroup: feedGroup,
      options: optionsWithDefaults
    }), /*#__PURE__*/React__default['default'].createElement(NotificationDropdownInner, _extends$1({
      width: width,
      Footer: Footer,
      Header: Header,
      Icon: Icon,
      right: right
    }, feedProps, {
      feedGroup: feedGroup,
      options: optionsWithDefaults
    })));
  };

  function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  /**
   * Prevents Chrome hangups
   * See: https://stackoverflow.com/questions/47524205/random-high-content-download-time-in-chrome/47684257#47684257
   */

  var mousewheelListener = function mousewheelListener(event) {
    if (event instanceof WheelEvent && event.deltaY === 1) {
      event.preventDefault();
    }
  };

  var calculateTopPosition = function calculateTopPosition(element) {
    if (element instanceof HTMLElement) {
      return element.offsetTop + calculateTopPosition(element.offsetParent);
    }

    return 0;
  };
  /**
   * Computes by recursively summing offsetTop until an element without offsetParent is reached
   */


  var calculateOffset = function calculateOffset(element, scrollTop) {
    if (!element) {
      return 0;
    }

    return calculateTopPosition(element) + (element.offsetHeight - scrollTop - window.innerHeight);
  };

  var InfiniteScroll = /*#__PURE__*/React.forwardRef(function (props, _ref) {
    var children = props.children,
        _props$element = props.element,
        element = _props$element === void 0 ? 'div' : _props$element,
        _props$hasMore = props.hasMore,
        hasMore = _props$hasMore === void 0 ? false : _props$hasMore,
        _props$initialLoad = props.initialLoad,
        initialLoad = _props$initialLoad === void 0 ? true : _props$initialLoad,
        _props$isLoading = props.isLoading,
        isLoading = _props$isLoading === void 0 ? false : _props$isLoading,
        _props$isReverse = props.isReverse,
        isReverse = _props$isReverse === void 0 ? false : _props$isReverse,
        listenToScroll = props.listenToScroll,
        loader = props.loader,
        loadMore = props.loadMore,
        _props$threshold = props.threshold,
        threshold = _props$threshold === void 0 ? 250 : _props$threshold,
        _props$useCapture = props.useCapture,
        useCapture = _props$useCapture === void 0 ? false : _props$useCapture,
        _props$useWindow = props.useWindow,
        useWindow = _props$useWindow === void 0 ? true : _props$useWindow,
        elementProps = _objectWithoutProperties(props, ["children", "element", "hasMore", "initialLoad", "isLoading", "isReverse", "listenToScroll", "loader", "loadMore", "threshold", "useCapture", "useWindow"]);

    var scrollComponent = React.useRef();
    var scrollListener = React.useCallback(function () {
      var element = scrollComponent.current;
      if (!element) return;
      var parentElement = element.parentElement;
      var offset = 0;
      var reverseOffset = 0;

      if (useWindow) {
        var doc = document.documentElement || document.body.parentNode || document.body;
        var scrollTop = window.pageYOffset !== undefined ? window.pageYOffset : doc.scrollTop;
        offset = calculateOffset(element, scrollTop);
        reverseOffset = scrollTop;
      } else if (parentElement) {
        offset = element.scrollHeight - parentElement.scrollTop - parentElement.clientHeight;
        reverseOffset = parentElement.scrollTop;
      }

      if (listenToScroll) {
        listenToScroll(offset, reverseOffset, threshold);
      } // Here we make sure the element is visible as well as checking the offset


      if ((isReverse ? reverseOffset : offset) < Number(threshold) && element.offsetParent !== null && typeof loadMore === 'function' && hasMore) {
        loadMore();
      }
    }, [hasMore, useWindow, isReverse, threshold, listenToScroll, loadMore]);
    React.useEffect(function () {
      var _scrollComponent$curr;

      var scrollElement = useWindow ? window : (_scrollComponent$curr = scrollComponent.current) === null || _scrollComponent$curr === void 0 ? void 0 : _scrollComponent$curr.parentNode;
      if (isLoading || !scrollElement) return;
      scrollElement.addEventListener('scroll', scrollListener, useCapture);
      scrollElement.addEventListener('resize', scrollListener, useCapture);

      if (initialLoad) {
        scrollListener();
      }

      return function () {
        scrollElement.removeEventListener('scroll', scrollListener, useCapture);
        scrollElement.removeEventListener('resize', scrollListener, useCapture);
      };
    }, [initialLoad, isLoading, scrollListener, useCapture, useWindow]);
    React.useEffect(function () {
      var _scrollComponent$curr2;

      var scrollElement = useWindow ? window : (_scrollComponent$curr2 = scrollComponent.current) === null || _scrollComponent$curr2 === void 0 ? void 0 : _scrollComponent$curr2.parentNode;
      scrollElement === null || scrollElement === void 0 ? void 0 : scrollElement.addEventListener('mousewheel', mousewheelListener, useCapture);
      return function () {
        scrollElement === null || scrollElement === void 0 ? void 0 : scrollElement.removeEventListener('mousewheel', mousewheelListener, useCapture);
      };
    }, [useCapture, useWindow]);

    var attributes = _objectSpread$1(_objectSpread$1({}, elementProps), {}, {
      ref: function ref(element) {
        scrollComponent.current = element;
        if (typeof _ref === 'function') _ref(element);
      }
    });

    var childrenArray = [children];
    if (isLoading) childrenArray[isReverse ? 'unshift' : 'push'](loader);
    return /*#__PURE__*/React__default['default'].createElement(element, attributes, childrenArray);
  });
  InfiniteScroll.displayName = 'InfiniteScroll';

  var InfiniteScrollPaginator = function InfiniteScrollPaginator(props) {
    var children = props.children,
        hasNextPage = props.hasNextPage,
        _props$Loader = props.Loader,
        Loader = _props$Loader === void 0 ? LoadingIndicator : _props$Loader,
        loadNextPage = props.loadNextPage,
        refreshing = props.refreshing,
        reverse = props.reverse,
        threshold = props.threshold,
        useWindow = props.useWindow;
    return /*#__PURE__*/React__default['default'].createElement(InfiniteScroll, {
      hasMore: hasNextPage,
      isLoading: refreshing,
      isReverse: reverse,
      loader: /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, {
        key: "loading-indicator"
      }, smartRender(Loader)),
      loadMore: loadNextPage,
      threshold: threshold,
      useWindow: useWindow
    }, children);
  };

  var ReactionIcon = function ReactionIcon(_ref) {
    var _counts;

    var counts = _ref.counts,
        kind = _ref.kind,
        icon = _ref.icon,
        labelPlural = _ref.labelPlural,
        labelSingle = _ref.labelSingle,
        onPress = _ref.onPress,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    var count = (_counts = counts === null || counts === void 0 ? void 0 : counts[kind !== null && kind !== void 0 ? kind : '']) !== null && _counts !== void 0 ? _counts : 0;
    var label = React.useMemo(function () {
      var isPlural = count > 1 || count < 1;
      if (labelSingle && labelPlural) return "".concat(count, " ").concat(isPlural ? labelPlural : labelSingle);
      if (kind !== 'comment' && kind !== 'repost' && kind !== 'like') return; // for future maintainers: this atrocity right here is intentional
      // and it is writen this way to allow i18next-extract evaluate keys
      // for extraction, there's no other reason

      switch (kind) {
        case 'comment':
          return isPlural ? t("{{ countComments }} comments", {
            countComments: count
          }) : t('1 comment');

        case 'like':
          return isPlural ? t("{{ countLikes }} likes", {
            countLikes: count
          }) : t('1 like');

        case 'repost':
          return isPlural ? t("{{ countReposts }} reposts", {
            countReposts: count
          }) : t('1 repost');

        default:
          return;
      }
    }, [count, labelSingle, labelPlural, kind]);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-reaction-icon', className),
      role: "button",
      onClick: onPress,
      style: style
    }, icon && (typeof icon === 'string' ? /*#__PURE__*/React__default['default'].createElement("img", {
      className: "raf-reaction-icon__image",
      src: icon,
      alt: ""
    }) : icon), /*#__PURE__*/React__default['default'].createElement("p", {
      className: "raf-reaction-icon__label"
    }, label));
  };

  var ReactionToggleIcon = function ReactionToggleIcon(_ref) {
    var _ownReactions;

    var inactiveIcon = _ref.inactiveIcon,
        activeIcon = _ref.activeIcon,
        ownReactions = _ref.own_reactions,
        kind = _ref.kind,
        className = _ref.className,
        style = _ref.style,
        restProps = _objectWithoutProperties(_ref, ["inactiveIcon", "activeIcon", "own_reactions", "kind", "className", "style"]);

    var icon = ownReactions !== null && ownReactions !== void 0 && (_ownReactions = ownReactions[kind !== null && kind !== void 0 ? kind : '']) !== null && _ownReactions !== void 0 && _ownReactions.length ? activeIcon : inactiveIcon;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-reaction-toggle-icon', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(ReactionIcon, _extends$1({
      icon: icon,
      kind: kind
    }, restProps)));
  };

  var LikeButton = function LikeButton(_ref) {
    var _reaction$children_co, _reaction$own_childre;

    var activity = _ref.activity,
        reaction = _ref.reaction,
        targetFeeds = _ref.targetFeeds,
        className = _ref.className,
        style = _ref.style;
    var feed = useFeedContext();
    React.useEffect(function () {
      if (!reaction && !activity) console.warn('LikeButton requires an activity or reaction to work properly');
      if (reaction && activity) console.warn('LikeButton requires only one of the activity or reaction to work properly');
    }, []);
    return /*#__PURE__*/React__default['default'].createElement(ReactionToggleIcon, {
      className: className,
      style: style,
      counts: (_reaction$children_co = reaction === null || reaction === void 0 ? void 0 : reaction.children_counts) !== null && _reaction$children_co !== void 0 ? _reaction$children_co : activity === null || activity === void 0 ? void 0 : activity.reaction_counts,
      own_reactions: (_reaction$own_childre = reaction === null || reaction === void 0 ? void 0 : reaction.own_children) !== null && _reaction$own_childre !== void 0 ? _reaction$own_childre : activity === null || activity === void 0 ? void 0 : activity.own_reactions,
      kind: "like",
      onPress: function onPress() {
        if (reaction) return feed.onToggleChildReaction('like', reaction, {}, {
          targetFeeds: targetFeeds
        });
        if (activity) return feed.onToggleReaction('like', activity, {}, {
          targetFeeds: targetFeeds
        });
        return Promise.resolve();
      },
      activeIcon: /*#__PURE__*/React__default['default'].createElement(ThumbsUpIcon, {
        style: {
          color: Color.Active
        }
      }),
      inactiveIcon: /*#__PURE__*/React__default['default'].createElement(ThumbsUpIcon, {
        style: {
          color: Color.Inactive
        }
      }),
      labelSingle: "like",
      labelPlural: "likes"
    });
  };

  /**
   * A repost button ready to be embedded as Activity footer
   */
  var RepostButton = function RepostButton(_ref) {
    var activity = _ref.activity,
        _ref$feedGroup = _ref.feedGroup,
        feedGroup = _ref$feedGroup === void 0 ? 'user' : _ref$feedGroup,
        userId = _ref.userId,
        repostData = _ref.repostData,
        _ref$targetFeeds = _ref.targetFeeds,
        targetFeeds = _ref$targetFeeds === void 0 ? [] : _ref$targetFeeds,
        className = _ref.className,
        style = _ref.style;
    var feed = useFeedContext();
    var app = useStreamContext(); // this to prevent reposting another repost, you can only repost an original activity to avoid nesting

    var originalActivity = activity.verb === 'repost' && _typeof$1(activity.object) === 'object' ? activity.object : activity;
    return /*#__PURE__*/React__default['default'].createElement(ReactionToggleIcon, {
      counts: originalActivity.reaction_counts,
      own_reactions: originalActivity.own_reactions,
      kind: "repost",
      onPress: function onPress() {
        var _app$user;

        return feed.onToggleReaction('repost', originalActivity, repostData, {
          targetFeeds: ["".concat(feedGroup, ":").concat(userId || ((_app$user = app.user) === null || _app$user === void 0 ? void 0 : _app$user.id))].concat(_toConsumableArray$3(targetFeeds))
        });
      },
      activeIcon: /*#__PURE__*/React__default['default'].createElement(RepostIcon, {
        style: {
          color: Color.Active
        }
      }),
      inactiveIcon: /*#__PURE__*/React__default['default'].createElement(RepostIcon, {
        style: {
          color: Color.Inactive
        }
      }),
      className: className,
      style: style
    });
  };

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var Flex = function Flex(_ref) {
    var j = _ref.j,
        a = _ref.a,
        js = _ref.js,
        _ref$d = _ref.d,
        d = _ref$d === void 0 ? 'row' : _ref$d,
        _ref$w = _ref.w,
        w = _ref$w === void 0 ? 'nowrap' : _ref$w,
        style = _ref.style,
        children = _ref.children,
        className = _ref.className;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-flex', className),
      style: _objectSpread({
        justifyContent: j,
        alignItems: a,
        justifySelf: js,
        flexDirection: d,
        flexWrap: w
      }, style)
    }, children);
  };

  var ActivityFooter = function ActivityFooter(_ref) {
    var activity = _ref.activity,
        _ref$feedGroup = _ref.feedGroup,
        feedGroup = _ref$feedGroup === void 0 ? 'user' : _ref$feedGroup,
        userId = _ref.userId,
        targetFeeds = _ref.targetFeeds,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-activity-footer', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-activity-footer__left"
    }), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-activity-footer__right"
    }, /*#__PURE__*/React__default['default'].createElement(Flex, {
      a: "center"
    }, /*#__PURE__*/React__default['default'].createElement(LikeButton, {
      activity: activity,
      targetFeeds: targetFeeds
    }), /*#__PURE__*/React__default['default'].createElement(RepostButton, {
      activity: activity,
      targetFeeds: targetFeeds,
      feedGroup: feedGroup,
      userId: userId
    }))));
  };

  var FollowButton = function FollowButton(_ref) {
    var _ref$followed = _ref.followed,
        followed = _ref$followed === void 0 ? false : _ref$followed,
        onClick = _ref.onClick,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: className !== null && className !== void 0 ? className : "raf-follow-button ".concat(followed ? 'raf-follow-button--active' : ''),
      role: "button",
      onClick: onClick,
      style: style
    }, followed ? 'Following' : 'Follow');
  };

  var ReactionList = function ReactionList(_ref) {
    var activityId = _ref.activityId,
        Reaction = _ref.Reaction,
        reactionKind = _ref.reactionKind,
        defaultActivityPath = _ref.activityPath,
        _ref$oldestToNewest = _ref.oldestToNewest,
        oldestToNewest = _ref$oldestToNewest === void 0 ? false : _ref$oldestToNewest,
        _ref$Paginator = _ref.Paginator,
        Paginator = _ref$Paginator === void 0 ? LoadMorePaginator : _ref$Paginator,
        _ref$reverseOrder = _ref.reverseOrder,
        reverseOrder = _ref$reverseOrder === void 0 ? false : _ref$reverseOrder;
    var feed = useFeedContext();
    var activityPath = defaultActivityPath || feed.getActivityPath(activityId);
    var orderPrefix = oldestToNewest ? 'oldest' : 'latest';
    var reactionsExtra = feed.activities.getIn([].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions_extra']));
    var hasNextPage = reactionsExtra ? !!reactionsExtra.getIn([reactionKind, 'next'], '') : true;
    var reactions = feed.activities.getIn([].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions', reactionKind]), Immutable.List());
    var refreshing = feed.activities.getIn([].concat(_toConsumableArray$3(activityPath), [orderPrefix + '_reactions_extra', reactionKind, 'refreshing']), false);
    if (reverseOrder) reactions = reactions.reverse();

    var loadNextPage = function loadNextPage() {
      feed.loadNextReactions(activityId, reactionKind, activityPath, oldestToNewest);
    };

    React.useEffect(function () {
      if (oldestToNewest && reactionsExtra) {
        loadNextPage();
      }
    }, []);
    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, smartRender(Paginator, {
      loadNextPage: loadNextPage,
      hasNextPage: hasNextPage,
      refreshing: refreshing,
      reverse: reverseOrder,
      children: reactions.map(function (reaction) {
        return smartRender(Reaction, {
          reaction: reaction.toJS(),
          key: reaction.get('id')
        });
      })
    }));
  };

  var CommentItem = function CommentItem(_ref) {
    var _ref$comment = _ref.comment,
        user = _ref$comment.user,
        created_at = _ref$comment.created_at,
        data = _ref$comment.data,
        onClickHashtag = _ref.onClickHashtag,
        onClickMention = _ref.onClickMention,
        onClickUser = _ref.onClickUser,
        className = _ref.className,
        style = _ref.style;

    var _useTranslationContex = useTranslationContext(),
        tDateTimeParser = _useTranslationContex.tDateTimeParser;

    var handleUserClick = useOnClickUser(onClickUser);
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-comment-item', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement(Flex, {
      a: "flex-start",
      style: {
        padding: '8px 0'
      }
    }, (user === null || user === void 0 ? void 0 : user.data.profileImage) && /*#__PURE__*/React__default['default'].createElement(Avatar, {
      onClick: handleUserClick === null || handleUserClick === void 0 ? void 0 : handleUserClick(user),
      image: user.data.profileImage,
      circle: true,
      size: 25
    })), /*#__PURE__*/React__default['default'].createElement(Flex, {
      d: "column",
      style: {
        flex: 1,
        margin: '0 8px'
      }
    }, /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-comment-item__content"
    }, /*#__PURE__*/React__default['default'].createElement("time", {
      dateTime: created_at,
      title: created_at
    }, /*#__PURE__*/React__default['default'].createElement("small", null, humanizeTimestamp(created_at, tDateTimeParser))), /*#__PURE__*/React__default['default'].createElement("p", null, /*#__PURE__*/React__default['default'].createElement("span", {
      onClick: handleUserClick === null || handleUserClick === void 0 ? void 0 : handleUserClick(user),
      className: "raf-comment-item__author"
    }, user === null || user === void 0 ? void 0 : user.data.name), ' ', textRenderer(data.text, 'raf-comment-item', onClickMention, onClickHashtag)))));
  };

  var CommentList = function CommentList(_ref) {
    var _ref$Paginator = _ref.Paginator,
        Paginator = _ref$Paginator === void 0 ? LoadMorePaginator : _ref$Paginator,
        _ref$CommentItem = _ref.CommentItem,
        CommentItem$1 = _ref$CommentItem === void 0 ? CommentItem : _ref$CommentItem,
        activityId = _ref.activityId,
        activityPath = _ref.activityPath,
        _ref$oldestToNewest = _ref.oldestToNewest,
        oldestToNewest = _ref$oldestToNewest === void 0 ? false : _ref$oldestToNewest,
        _ref$reverseOrder = _ref.reverseOrder,
        reverseOrder = _ref$reverseOrder === void 0 ? false : _ref$reverseOrder;
    return /*#__PURE__*/React__default['default'].createElement(ReactionList, {
      Paginator: Paginator,
      activityId: activityId,
      reactionKind: "comment",
      Reaction: function Reaction(_ref2) {
        var comment = _ref2.reaction;
        return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, smartRender(CommentItem$1, {
          comment: comment
        }));
      },
      activityPath: activityPath,
      oldestToNewest: oldestToNewest,
      reverseOrder: reverseOrder
    });
  };

  var CommentField = function CommentField(_ref) {
    var activity = _ref.activity,
        emojiData = _ref.emojiData,
        onSuccess = _ref.onSuccess,
        image = _ref.image,
        placeholder = _ref.placeholder,
        trigger = _ref.trigger,
        targetFeeds = _ref.targetFeeds,
        className = _ref.className,
        style = _ref.style;
    var feed = useFeedContext();

    var _useTranslationContex = useTranslationContext(),
        t = _useTranslationContex.t;

    var textareaReference = React.useRef();

    var _useState = React.useState(),
        _useState2 = _slicedToArray$3(_useState, 2),
        text = _useState2[0],
        setText = _useState2[1];

    var handleFormSubmit = /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regenerator$1.mark(function _callee(event) {
        return regenerator$1.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                event.preventDefault();

                if (text) {
                  _context.next = 3;
                  break;
                }

                return _context.abrupt("return");

              case 3:
                _context.prev = 3;
                _context.next = 6;
                return feed.onAddReaction('comment', activity, {
                  text: text
                }, {
                  targetFeeds: targetFeeds
                });

              case 6:
                _context.next = 11;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](3);
                console.error(_context.t0);

              case 11:
                setText('');
                onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess();

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[3, 8]]);
      }));

      return function handleFormSubmit(_x) {
        return _ref2.apply(this, arguments);
      };
    }();

    React.useEffect(function () {
      if (!textareaReference.current) return;

      var handleFormSubmitKey = function handleFormSubmitKey(event) {
        var textarea = textareaReference.current;

        if (event.key === 'Enter' && (textarea === null || textarea === void 0 ? void 0 : textarea.nextSibling) === null) {
          handleFormSubmit(event);
        }
      };

      textareaReference.current.addEventListener('keydown', handleFormSubmitKey);
      return function () {
        var _textareaReference$cu;

        return (_textareaReference$cu = textareaReference.current) === null || _textareaReference$cu === void 0 ? void 0 : _textareaReference$cu.removeEventListener('keydown', handleFormSubmitKey);
      };
    }, []);
    return /*#__PURE__*/React__default['default'].createElement("form", {
      onSubmit: handleFormSubmit,
      className: classnames('raf-comment-field', className),
      style: style
    }, image && /*#__PURE__*/React__default['default'].createElement(Avatar, {
      image: image,
      circle: true,
      size: 39
    }), /*#__PURE__*/React__default['default'].createElement("div", {
      className: "raf-comment-field__group"
    }, /*#__PURE__*/React__default['default'].createElement(Textarea, {
      rows: 1,
      value: text,
      placeholder: placeholder !== null && placeholder !== void 0 ? placeholder : t('Start Typing...'),
      onChange: function onChange(event) {
        return setText(function (pv) {
          var _inputValueFromEvent;

          return (_inputValueFromEvent = inputValueFromEvent(event, true)) !== null && _inputValueFromEvent !== void 0 ? _inputValueFromEvent : pv;
        });
      },
      emojiData: emojiData,
      trigger: trigger,
      maxLength: 280,
      innerRef: function innerRef(element) {
        return textareaReference.current = element;
      }
    }), /*#__PURE__*/React__default['default'].createElement(Button, {
      buttonStyle: "primary",
      disabled: !text,
      type: "submit"
    }, t('Post'))));
  };

  var DataLabel = function DataLabel(_ref) {
    var _ref$data = _ref.data,
        data = _ref$data === void 0 ? 'data' : _ref$data,
        _ref$label = _ref.label,
        label = _ref$label === void 0 ? 'label' : _ref$label,
        className = _ref.className,
        style = _ref.style;
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: classnames('raf-data-label', className),
      style: style
    }, /*#__PURE__*/React__default['default'].createElement("span", {
      className: "raf-data-label__label"
    }, label), /*#__PURE__*/React__default['default'].createElement("span", {
      className: "raf-data-label__data"
    }, data));
  };

  exports.Activity = Activity;
  exports.ActivityFooter = ActivityFooter;
  exports.ActivityHeader = ActivityHeader;
  exports.AttachedActivity = AttachedActivity;
  exports.Audio = Audio;
  exports.Avatar = Avatar;
  exports.AvatarGroup = AvatarGroup;
  exports.Button = Button;
  exports.Card = Card;
  exports.CommentField = CommentField;
  exports.CommentItem = CommentItem;
  exports.CommentList = CommentList;
  exports.DataLabel = DataLabel;
  exports.Dropdown = Dropdown;
  exports.EmojiPicker = EmojiPicker;
  exports.Feed = Feed;
  exports.FeedContext = FeedContext;
  exports.FeedManager = FeedManager;
  exports.FeedProvider = FeedProvider;
  exports.FlatFeed = FlatFeed;
  exports.FollowButton = FollowButton;
  exports.Gallery = Gallery;
  exports.IconBadge = IconBadge;
  exports.InfiniteScrollPaginator = InfiniteScrollPaginator;
  exports.LikeButton = LikeButton;
  exports.Link = Link;
  exports.LoadMorePaginator = LoadMorePaginator;
  exports.NewActivitiesNotification = NewActivitiesNotification;
  exports.Notification = Notification;
  exports.NotificationDropdown = NotificationDropdown;
  exports.NotificationFeed = NotificationFeed;
  exports.Panel = Panel;
  exports.PanelContent = PanelContent;
  exports.PanelFooter = PanelFooter;
  exports.PanelHeading = PanelHeading;
  exports.ReactionIcon = ReactionIcon;
  exports.ReactionList = ReactionList;
  exports.ReactionToggleIcon = ReactionToggleIcon;
  exports.RepostButton = RepostButton;
  exports.SinglePost = SinglePost;
  exports.StatusUpdateForm = StatusUpdateForm;
  exports.StreamApp = StreamApp;
  exports.StreamAppProvider = StreamAppProvider;
  exports.StreamContext = StreamContext;
  exports.Streami18n = Streami18n;
  exports.Textarea = Textarea;
  exports.Title = Title;
  exports.TranslationContext = TranslationContext;
  exports.TranslationProvider = TranslationProvider;
  exports.UserBar = UserBar;
  exports.Video = Video;
  exports.enTranslations = enTranslations;
  exports.esTranslations = esTranslations;
  exports.frTranslations = frTranslations;
  exports.getEmojiPickerFieldsTranslations = getEmojiPickerFieldsTranslations;
  exports.hiTranslations = hiTranslations;
  exports.itTranslations = itTranslations;
  exports.nlTranslations = nlTranslations;
  exports.ruTranslations = ruTranslations;
  exports.trTranslations = trTranslations;
  exports.useFeedContext = useFeedContext;
  exports.useStreamContext = useStreamContext;
  exports.useTranslationContext = useTranslationContext;
  exports.withTranslationContext = withTranslationContext;

  Object.defineProperty(exports, '__esModule', { value: true });

}(this.window = this.window || {}, React, ReactDOM));
//# sourceMappingURL=browser.full-bundle.js.map
